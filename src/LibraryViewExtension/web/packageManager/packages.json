{
  "success": true,
  "message": "Found packages",
  "content": [
    {
      "_id": "5225e7dde2f476ca05000057",
      "name": "Project XYZ to YZ Plane",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/485b84e1-1334-4cd8-b300-8895f1298b7bgregPkg150.zip",
          "contents": "Project XYZ to YZ Plane - Zeros out the X coordinate of the XYZ.",
          "engine_metadata": "",
          "engine_version": "0.6.0.17659",
          "created": "2013-09-12T14:51:39.446Z",
          "full_dependency_versions": [ "0.0.4" ],
          "full_dependency_ids": [
            {
              "name": "Project XYZ to YZ Plane",
              "_id": "5225e7dde2f476ca05000057"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-12T14:51:39.446Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 133,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Core",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Take an XYZ and project it to the YZ plane.",
      "maintainers": [
        {
          "username": "peetle",
          "_id": "51f8232fe2f476ca05000003"
        }
      ],
      "keywords": [ "xyz", "project", "point" ],
      "white_list": false
    },
    {
      "_id": "522b0a964b31fa536a000003",
      "name": "Meters to Feet",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/796156ca-ba54-442b-b35e-3e194e378b29gregPkg823.zip",
          "contents": "Meters to Feet - Convert Meters to Feet. ",
          "engine_metadata": "",
          "engine_version": "0.6.0.23813",
          "created": "2013-09-07T11:24:31.953Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Meters to Feet",
              "_id": "522b0a964b31fa536a000003"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-07T11:24:31.953Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 3,
      "downloads": 246,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Covert Meters to Feet",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "metric", "conversion", "meters", "feet", "millimeters", "inches", "imperial" ],
      "white_list": false
    },
    {
      "_id": "53c89d1a0e5572016a000153",
      "name": "Create Annotation Tag",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/22f5aff2-80d5-4271-85b1-45e362c4777bgregPkg712.zip",
          "contents": "Create Annotation Tag - Creates an annotation tag of specified Type at the Specified Location and Host Element (it reads that element's information). ",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-07-30T03:21:53.582Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Create Annotation Tag",
              "_id": "53c89d1a0e5572016a000153"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-30T03:21:53.582Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 747,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Will create an Annotation Tag of any specified type and place it in a specific location. Please match element and location lists so that there is one element and one location point for a tag that corresponds to it. ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#tag", "#annotation", "#generic", "model", "tag" ],
      "white_list": false
    },
    {
      "_id": "51fb7202e2f476ca05000017",
      "name": "NormalizedSequence",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/bbe2afdf-49ce-46d7-84ed-3a5e6dade732gregPkg923.zip",
          "contents": "Normalized Sequence - Creates a sequence of N values between 0 and 1",
          "engine_metadata": "",
          "engine_version": "0.7.0.25915",
          "created": "2013-09-21T13:26:52.206Z",
          "full_dependency_versions": [ "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "NormalizedSequence",
              "_id": "51fb7202e2f476ca05000017"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-21T13:26:52.206Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 34,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "NormalizedSequenceByFunction",
          "_id": "51fb7246e2f476ca05000019"
        }
      ],
      "num_dependents": 1,
      "description": "Creates a sequence of N values between 0 and 1.\r\nDEPRECATED - Use package Normalization instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "sequence", "normalized" ],
      "white_list": false
    },
    {
      "_id": "52349ad56b18e47916000005",
      "name": "Scale Normalized Value",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f397cad7-d50b-4676-85cb-58f126e9a835gregPkg158.zip",
          "contents": "Scale Normalized Value - Scales a normalized value according to a given minimum and maximum",
          "engine_metadata": "",
          "engine_version": "0.7.0.25915",
          "created": "2013-09-21T13:29:48.395Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Scale Normalized Value",
              "_id": "52349ad56b18e47916000005"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-21T13:29:48.395Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 8,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Scales a normalized value according to a given minimum and maximum.\r\nDEPRECATED - Use package Normalization instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "scale", "normalized", "minimum", "maximum", "range" ],
      "white_list": false
    },
    {
      "_id": "5245efd930e55dc52b000023",
      "name": "Geometry Box",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/dc84c51d-8981-48c9-8677-1a24d6f01f15gregPkg895.zip",
          "contents": "Geometry Box - Creates a geometric box.  Needs a freeform element node to make a Revit Element",
          "engine_metadata": "",
          "engine_version": "0.7.0.21202",
          "created": "2013-09-27T20:51:37.822Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Geometry Box",
              "_id": "5245efd930e55dc52b000023"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-27T20:51:37.822Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 580,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Box",
          "_id": "52310dd98f1189e274000008"
        }
      ],
      "num_dependents": 1,
      "description": "Creates box geometry.  Needs a Freeform node to create a Revit Element",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "box", "geometry", "cube", "extrusion" ],
      "white_list": false
    },
    {
      "_id": "522cd7854b31fa536a00001a",
      "name": "Build Irregular Sublists",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/557ae393-86c7-4e90-9915-97fe980ad373gregPkg311.zip",
          "contents": "Build Irregular Sublists - Turns a list into a list of lists with sublists of varying lengths.",
          "engine_metadata": "",
          "engine_version": "0.7.0.25040",
          "created": "2013-09-28T14:35:21.514Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Build Irregular Sublists",
              "_id": "522cd7854b31fa536a00001a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-28T14:35:21.514Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 54,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Turns a list into a list of list with sublists of varying lengths.\r\nDEPRECATED - Use package Sublist Helpers instead.",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "list", "sublists", "length", "irregular", "varying" ],
      "white_list": false
    },
    {
      "_id": "522cd22d4b31fa536a000018",
      "name": "Fill Sublists",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/63826336-2d04-4b82-91e6-de685b8db03dgregPkg662.zip",
          "contents": "Fill Sublists - Repeats a list of items into sublists of given lengths",
          "engine_metadata": "",
          "engine_version": "0.7.0.25040",
          "created": "2013-09-28T14:37:22.730Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Fill Sublists",
              "_id": "522cd22d4b31fa536a000018"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-28T14:37:22.73Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 57,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Repeats a list of items into sublists of given lengths.\r\nDEPRECATED - Use package Sublist Helpers instead.",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "list", "sublist", "repeat" ],
      "white_list": false
    },
    {
      "_id": "528558f03f7315936f00005e",
      "name": "End Points",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e0a1a674-179b-4dc3-864f-fc0a79b20b45gregPkg149.zip",
          "contents": "End Points - Gets the end points of a curve.",
          "engine_metadata": "",
          "engine_version": "0.6.2.17011",
          "created": "2013-11-14T23:12:48.078Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "End Points",
              "_id": "528558f03f7315936f00005e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-14T23:12:48.078Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 78,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Get the end points from a curve.",
      "maintainers": [
        {
          "username": "ian.keough@autodesk.com",
          "_id": "528558ee3f7315936f00005d"
        }
      ],
      "keywords": [ "curve", "end", "points" ],
      "white_list": false
    },
    {
      "_id": "528f68d99de41c8235000015",
      "name": "Closest Point (CP) Simple",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/558528b7-06b6-4776-af3e-317c060bad2bgregPkg586.zip",
          "contents": "Min Distance Function - Use with Map to get Closest Point between collections XYZ, Closest Point (CP) Simple - Find closest point in a point collection.\r\nOutput only points (no indexes or distances)",
          "engine_metadata": "",
          "engine_version": "0.6.2.22517",
          "created": "2013-11-22T14:23:21.134Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Closest Point (CP) Simple",
              "_id": "528f68d99de41c8235000015"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-22T14:23:21.134Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 291,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Geometry.Point.Query",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Closest Point (CP)",
          "_id": "528edd709de41c8235000012"
        }
      ],
      "num_dependents": 1,
      "description": "Find closest point in a point collection.\r\nOutput only points (no indexes or distances)",
      "maintainers": [
        {
          "username": "mwaraya",
          "_id": "528ecff39de41c823500000f"
        }
      ],
      "keywords": [ "find", "closest", "point", "collection", "nearest", "distance" ],
      "white_list": false
    },
    {
      "_id": "52bcc4ad9de41c823500007f",
      "name": "Spherical Projection",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/551b3f0f-0874-492d-8129-6345982aeed0gregPkg529.zip",
          "contents": "Spherical Projection - Project flat XYZ coordinates on Sphere",
          "engine_metadata": "",
          "engine_version": "0.6.3.5258",
          "created": "2013-12-27T00:07:09.482Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Spherical Projection",
              "_id": "52bcc4ad9de41c823500007f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-12-27T00:07:09.482Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 110,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Project flat XYZ coordinates on Sphere",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "sphere", "2d", "projection" ],
      "white_list": false
    },
    {
      "_id": "52203afbe2f476ca0500004b",
      "name": "Sum List",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6c2df80d-eaf4-4ccd-8d42-ef738d227185gregPkg196.zip",
          "contents": "Sum List - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.0.39940",
          "created": "2013-08-30T06:26:03.258Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Sum List",
              "_id": "52203afbe2f476ca0500004b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-08-30T06:26:03.258Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 1552,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Steellworks",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Parse Solar Radiation CSV",
          "_id": "521cfcb8e2f476ca05000041"
        },
        {
          "name": "Binary To Decimal",
          "_id": "523499d56b18e47916000003"
        },
        {
          "name": "Angle By Angle Sum",
          "_id": "5251fb063f7315936f000011"
        },
        {
          "name": "Clockwork for Dynamo 0.6.3",
          "_id": "544730fdcc26bfdc5a0000db"
        }
      ],
      "num_dependents": 4,
      "description": "Sums up a list of numbers.",
      "maintainers": [
        {
          "username": "stephen.elliott@autodesk.com",
          "_id": "5218d435e2f476ca0500002e"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "52203d80e2f476ca0500004d",
      "name": "List Contains",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2b433cba-ca32-4f11-aefb-59e6a578ced8gregPkg893.zip",
          "contents": "List Contains - Returns true if the given item is found in the given list, and false otherwise.",
          "engine_metadata": "",
          "engine_version": "0.6.0.2781",
          "created": "2013-08-30T06:36:48.868Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-08-30T06:36:48.868Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 3221,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Steellworks",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Sublist Helpers",
          "_id": "5246e8de30e55dc52b000027"
        },
        {
          "name": "Switch",
          "_id": "52f51549bfe4259536000061"
        },
        {
          "name": "Filter Selection by Family Type",
          "_id": "533dec780e5572016a000004"
        },
        {
          "name": "Clockwork for Dynamo 0.6.3",
          "_id": "544730fdcc26bfdc5a0000db"
        }
      ],
      "num_dependents": 4,
      "description": "Returns true if the given item is found in the given list.",
      "maintainers": [
        {
          "username": "stephen.elliott@autodesk.com",
          "_id": "5218d435e2f476ca0500002e"
        }
      ],
      "keywords": [ "needle", "haystack", "search", "exists" ],
      "white_list": false
    },
    {
      "_id": "5228a5e4e2f476ca05000067",
      "name": "New Sketch Plane",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f9978826-8a23-4adc-8762-fffe0d1eac1bgregPkg254.zip",
          "contents": "New Sketch Plane - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.0.27863",
          "created": "2013-09-05T15:40:20.094Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "New Sketch Plane",
              "_id": "5228a5e4e2f476ca05000067"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-05T15:40:20.094Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 99,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a horizontal sketch plane at 0,0,0",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "new", "sketch", "plane" ],
      "white_list": false
    },
    {
      "_id": "52efc472bfe425953600003b",
      "name": "Last of String",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/48ff1435-2dd2-431f-9dc4-d7c36750f725gregPkg30.zip",
          "contents": "Last of String - Substring after dropping the first \"X\" characters",
          "engine_metadata": "",
          "engine_version": "0.6.3.35252",
          "created": "2014-02-03T16:31:46.826Z",
          "full_dependency_versions": [ "1.0.20140203" ],
          "full_dependency_ids": [
            {
              "name": "Last of String",
              "_id": "52efc472bfe425953600003b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.20140203",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-03T16:31:46.826Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 82,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "DoURevit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Substring after dropping the first \"X\" characters",
      "maintainers": [
        {
          "username": "dourevit",
          "_id": "52efc471bfe425953600003a"
        }
      ],
      "keywords": [ "string" ],
      "white_list": false
    },
    {
      "_id": "5304ea66bfe425953600008b",
      "name": "Grid from Sun",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f83d3357-e946-40af-ace9-71f095904e70gregPkg362.zip",
          "contents": "Grid from Sun - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.25646",
          "created": "2014-02-19T17:31:18.210Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Grid from Sun",
              "_id": "5304ea66bfe425953600008b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-19T17:31:18.21Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 133,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create a square grid of points at the position of a sun vector targeted at the origin. Grid rows are aligned to the global XY plane.",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "grid", "sun", "ray" ],
      "white_list": false
    },
    {
      "_id": "53841c150e5572016a000099",
      "name": "Concatenate File Header String",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e853f939-27ef-4248-a404-83b3f41486d1gregPkg572.zip",
          "contents": "Concatenate File Header String - Concatenates Values into a File Header String",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-05-27T05:01:09.837Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Concatenate File Header String",
              "_id": "53841c150e5572016a000099"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-27T05:01:09.837Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 34,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE220C Assignment 4",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53d15b720e5572016a000175",
      "name": "Profile From Revit",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/988b7589-3fd5-4268-aee7-8331ef4e4857gregPkg467.zip",
          "contents": "Profile From Revit - Make a polycurve from several Revit entities taken via Select Multiple Elements. If only one element is selected it will return the individual curve. It can make several polycurves at once.",
          "engine_metadata": "",
          "engine_version": "0.7.1.40372",
          "created": "2014-07-24T19:16:02.992Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Profile From Revit",
              "_id": "53d15b720e5572016a000175"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-24T19:16:02.992Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 608,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EPR",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Make a polycurve from several Revit entities taken via Select Multiple Elements. If only one element is selected it will return the individual curve. It can make several polycurves at once.",
      "maintainers": [
        {
          "username": "eproca",
          "_id": "538dd48a0e5572016a0000f3"
        }
      ],
      "keywords": [ "curve", "polycurve", "profile", "revit", "model", "elements" ],
      "white_list": false
    },
    {
      "_id": "5225efdfe2f476ca05000059",
      "name": "Project XYZ To XZ Plane",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/bd795e4a-234e-447c-bed5-70b24d1e3229gregPkg405.zip",
          "contents": "Project XYZ To XZ Plane - Projects an XYZ to the XZ plane, zeroing out its Y coordinate.",
          "engine_metadata": "",
          "engine_version": "0.7.0.39474",
          "created": "2013-09-17T02:58:49.803Z",
          "full_dependency_versions": [ "0.0.4" ],
          "full_dependency_ids": [
            {
              "name": "Project XYZ To XZ Plane",
              "_id": "5225efdfe2f476ca05000059"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-17T02:58:49.803Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 140,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "CORE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Takes an XYZ and projects it to the XZ plane.",
      "maintainers": [
        {
          "username": "peetle",
          "_id": "51f8232fe2f476ca05000003"
        }
      ],
      "keywords": [ "point", "xyz", "project" ],
      "white_list": false
    },
    {
      "_id": "51fb7246e2f476ca05000019",
      "name": "NormalizedSequenceByFunction",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/86216f41-ac8c-4d51-ad34-74b6e3d3673egregPkg620.zip",
          "contents": "Normalized Sequence By Function - Creates a sequence of N values between 0 and 1 driven by a function",
          "engine_metadata": "",
          "engine_version": "0.7.0.25915",
          "created": "2013-09-21T13:27:45.249Z",
          "full_dependency_versions": [ "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "NormalizedSequenceByFunction",
              "_id": "51fb7246e2f476ca05000019"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-21T13:27:45.249Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 29,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a sequence of N values between 0 and 1 driven by a function.\r\nDEPRECATED - Use package Normalization instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "sequence", "normalized", "function" ],
      "white_list": false
    },
    {
      "_id": "5278b0d73f7315936f00004e",
      "name": "Get Links And Imports",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a5871c88-425c-4647-9eda-6767e37e1e78gregPkg801.zip",
          "contents": "Get Links And Imports - Gets all linked and imported files in the document",
          "engine_metadata": "",
          "engine_version": "0.6.3.37749",
          "created": "2013-11-21T10:29:13.872Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Get Links And Imports",
              "_id": "5278b0d73f7315936f00004e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-21T10:29:13.872Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 217,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Now included in package Project Stuff",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "linked", "imported", "files", "xrefs" ],
      "white_list": false
    },
    {
      "_id": "528ecff49de41c8235000010",
      "name": "Minimum XYZ Distance between Collection Points",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/99e72919-84f4-4686-8638-6cca4ff25de4gregPkg861.zip",
          "contents": "Minimum Distance between collection points - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.2.22517",
          "created": "2013-11-22T03:31:00.737Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Minimum XYZ Distance between Collection Points",
              "_id": "528ecff49de41c8235000010"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-22T03:31:00.737Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 243,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Geometry.Point.Query",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Find Minimum XYZ Distance for every point in List A to points in List B.\r\nBrute force method with cross product distance (slow)",
      "maintainers": [
        {
          "username": "mwaraya",
          "_id": "528ecff39de41c823500000f"
        }
      ],
      "keywords": [ "minimum", "distances", "measures" ],
      "white_list": false
    },
    {
      "_id": "5200b79ae2f476ca05000027",
      "name": "InList",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/13163842-c684-404d-8499-4d24c425eaf7gregPkg459.zip",
          "contents": "In List - Evaluates a list and returns true if the argument is found in the list",
          "engine_metadata": "",
          "engine_version": "0.6.3.5256",
          "created": "2013-12-04T16:37:35.036Z",
          "full_dependency_versions": [ "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "InList",
              "_id": "5200b79ae2f476ca05000027"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-12-04T16:37:35.036Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 46,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Use package List Contains instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "list", "inlist", "in_list", "needle", "haystack" ],
      "white_list": false
    },
    {
      "_id": "51f82330e2f476ca05000004",
      "name": "XYZ To Reference Point",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7b42c7af-94a4-4707-8621-4798bbc9506fgregPkg558.zip",
          "contents": "XYZ To Reference Point - No description provided",
          "engine_metadata": "",
          "engine_version": "0.5.2.25666",
          "created": "2013-07-31T19:37:05.318Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "XYZ To Reference Point",
              "_id": "51f82330e2f476ca05000004"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-07-31T19:37:05.318Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 176,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Core",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This node takes an three coordinate points and returns a reference point.",
      "maintainers": [
        {
          "username": "peetle",
          "_id": "51f8232fe2f476ca05000003"
        }
      ],
      "keywords": [ "xyz", "euclidean" ],
      "white_list": false
    },
    {
      "_id": "521ce85be2f476ca0500003b",
      "name": "Increment/Decrement by 1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/dec26d0c-e18b-4f98-b811-ed56c2d08cd9gregPkg99.zip",
          "contents": "+1 - Increments a value by 1, -1 - Decrements a value by 1",
          "engine_metadata": "",
          "engine_version": "0.5.2.10107",
          "created": "2013-08-27T17:56:43.195Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Increment/Decrement by 1",
              "_id": "521ce85be2f476ca0500003b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-08-27T17:56:43.195Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 868,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Invert And Mirror Normalized Values",
          "_id": "521d7f5ae2f476ca05000043"
        },
        {
          "name": "Intersects For Divided Surfaces",
          "_id": "52a6db889de41c823500004f"
        },
        {
          "name": "Simple Patterning",
          "_id": "52adf18e9de41c823500005e"
        },
        {
          "name": "Get Directory From File Path",
          "_id": "537080aa0e5572016a000052"
        },
        {
          "name": "Get Current Revit Document Path",
          "_id": "537082900e5572016a000054"
        },
        {
          "name": "CSV To List",
          "_id": "537087380e5572016a000056"
        },
        {
          "name": "Parse Solar Radiation CSV",
          "_id": "521cfcb8e2f476ca05000041"
        }
      ],
      "num_dependents": 7,
      "description": "These nodes increment or decrement a value by 1",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "increment", "decrement", "+1", "-1" ],
      "white_list": false
    },
    {
      "_id": "51fb72dce2f476ca0500001b",
      "name": "InvertNormalizedValue",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/28f541f3-f05b-4e7a-a534-f3c429989251gregPkg133.zip",
          "contents": "Invert Normalized Value - Inverts a value between 0 and 1 or a boolean to its opposite (1-x)",
          "engine_metadata": "",
          "engine_version": "0.7.0.25915",
          "created": "2013-09-21T13:22:08.463Z",
          "full_dependency_versions": [ "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "InvertNormalizedValue",
              "_id": "51fb72dce2f476ca0500001b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-21T13:22:08.463Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 31,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Invert And Mirror Normalized Values",
          "_id": "521d7f5ae2f476ca05000043"
        }
      ],
      "num_dependents": 1,
      "description": "Inverts a normalized value (e.g. 0.2 becomes 0.8) or a boolean.\r\nDEPRECATED - Use package Normalization instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "invert", "normalized", "1-x" ],
      "white_list": false
    },
    {
      "_id": "524fa52d3f7315936f000003",
      "name": "Simple Rotations",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3addf43c-654e-4be8-89f8-c08a91a034dcgregPkg372.zip",
          "contents": "Rotate X Origin - Creates a rotation transform around the x-axis at (0,0,0), Rotate Y Origin - Creates a rotation transform around the y-axis at (0,0,0), Rotate Z Origin - Creates a rotation transform around the z-axis at (0,0,0)",
          "engine_metadata": "",
          "engine_version": "0.7.0.43082",
          "created": "2013-10-05T05:35:41.118Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Simple Rotations",
              "_id": "524fa52d3f7315936f000003"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-10-05T05:35:41.118Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 799,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Steellworks",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Turtle Graphics",
          "_id": "524fa6bc3f7315936f000005"
        },
        {
          "name": "Fractals",
          "_id": "5218d436e2f476ca0500002f"
        }
      ],
      "num_dependents": 2,
      "description": "Contains nodes that perform rotations about the X, Y, and Z axis at origin (0, 0, 0).",
      "maintainers": [
        {
          "username": "stephen.elliott@autodesk.com",
          "_id": "5218d435e2f476ca0500002e"
        }
      ],
      "keywords": [ "transformation", "rotation" ],
      "white_list": false
    },
    {
      "_id": "5224cf87e2f476ca05000054",
      "name": "Parameters from Image",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ee29f9b5-daaf-496c-b912-c859b35a386bgregPkg771.zip",
          "contents": "Parameters from Image - Use a raster image from disk to drive parameter values in family instances",
          "engine_metadata": "",
          "engine_version": "0.6.0.3426",
          "created": "2013-09-02T17:48:55.007Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Parameters from Image",
              "_id": "5224cf87e2f476ca05000054"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-02T17:48:55.007Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 283,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Take brightness values from a raster image on disk and convert into parameter values for loaded families",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "parameter", "image", "addin", "replacement" ],
      "white_list": false
    },
    {
      "_id": "522a25568faf243666000007",
      "name": "TotalList",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f6926cf4-861f-4d5b-9803-b78f76c5580bgregPkg91.zip",
          "contents": "TotalList - Calculate the total of a list of numbers (a single number input does not cause the node to fail)",
          "engine_metadata": "",
          "engine_version": "0.6.0.8618",
          "created": "2013-09-06T18:56:22.215Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "TotalList",
              "_id": "522a25568faf243666000007"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-06T18:56:22.215Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 135,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "DoURevit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Calculate the total of a list of numbers (a single number input does not cause the node to fail)",
      "maintainers": [
        {
          "username": "david.baldacchino@hok.com",
          "_id": "522a25558faf243666000006"
        }
      ],
      "keywords": [ "addition" ],
      "white_list": false
    },
    {
      "_id": "522a29468faf243666000009",
      "name": "Scale XYZ with basepoint",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0d593997-a862-43b2-8f56-bf92cdfc2843gregPkg622.zip",
          "contents": "Scale XYZ with basepoint - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.0.8618",
          "created": "2013-09-06T19:13:10.985Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Scale XYZ with basepoint",
              "_id": "522a29468faf243666000009"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-06T19:13:10.985Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 151,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "DoURevit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This was created before a built-in node was created. Experimental package upload",
      "maintainers": [
        {
          "username": "david.baldacchino@hok.com",
          "_id": "522a25558faf243666000006"
        }
      ],
      "keywords": [ "scale", "xyz" ],
      "white_list": false
    },
    {
      "_id": "522fc8398f1189e274000006",
      "name": "Cylinder",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8b399fdc-ed7f-48c2-bc59-a546c93a6b21gregPkg470.zip",
          "contents": "Cylinder - Makes a Cylinder in the Massing Environment",
          "engine_metadata": "",
          "engine_version": "0.6.0.15108",
          "created": "2013-09-11T01:32:41.348Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Cylinder",
              "_id": "522fc8398f1189e274000006"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-11T01:32:41.348Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 109,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Makes a cylinder in the massing environment",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "cylinder", "loft", "form", "element", "massing" ],
      "white_list": false
    },
    {
      "_id": "5232aa736189d12d7e000004",
      "name": "Sequential Loft",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ffb452c6-73ea-4a43-a40e-158b48d2068egregPkg717.zip",
          "contents": "Sequential Loft - Sequence of lofts generated considering a pair of reference curves at a time. \r\nCould be used when loft geometry isn't automatically generated from a list of reference curves.",
          "engine_metadata": "",
          "engine_version": "0.6.0.21470",
          "created": "2013-09-13T06:02:27.462Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Sequential Loft",
              "_id": "5232aa736189d12d7e000004"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-13T06:02:27.462Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 123,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Loft Form",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "When a loft form in not automatically generated from a list of curves multiple loft forms can be created with a pair of curves at a time.",
      "maintainers": [
        {
          "username": "testingwaters",
          "_id": "5232aa726189d12d7e000003"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5232cbf56189d12d7e000007",
      "name": "Number Range with Count",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5541bd4c-a437-4fb7-9ecf-977f416ccefbgregPkg559.zip",
          "contents": "Number Range with Count - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.0.21470",
          "created": "2013-09-13T08:25:25.666Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Number Range with Count",
              "_id": "5232cbf56189d12d7e000007"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-13T08:25:25.666Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 190,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "http://evo-bim.blogspot.com/",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Gets a list of numbers with a specified count in a specified range",
      "maintainers": [
        {
          "username": "silver_starha",
          "_id": "5232cbf26189d12d7e000006"
        }
      ],
      "keywords": [ "list", "range" ],
      "white_list": false
    },
    {
      "_id": "5236bf2f6b18e47916000014",
      "name": "Max and Min",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/eaf7d8b1-d58f-442b-a832-de0fada18c20gregPkg314.zip",
          "contents": "Min - No description provided, Max - Returns the maximum value from two input numbers",
          "engine_metadata": "",
          "engine_version": "0.6.0.21470",
          "created": "2013-09-16T08:19:59.370Z",
          "full_dependency_versions": [ "0.6.0" ],
          "full_dependency_ids": [
            {
              "name": "Max and Min",
              "_id": "5236bf2f6b18e47916000014"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.6.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-16T08:19:59.37Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 123,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Bimwood.Math",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Max returns the greater of two input numbers. Min returns the lesser.",
      "maintainers": [
        {
          "username": "dwood@chapmantaylor.com",
          "_id": "5236bf2e6b18e47916000013"
        }
      ],
      "keywords": [ "math", "min", "max" ],
      "white_list": false
    },
    {
      "_id": "51ff511de2f476ca05000023",
      "name": "GetHighest",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5d2a8780-719a-42b1-88e3-53ba31801b38gregPkg597.zip",
          "contents": "Get Highest - Gets the highest value from a list\r\nDEPRECATED - Use Get Highest And Lowest From List package instead",
          "engine_metadata": "",
          "engine_version": "0.7.0.36088",
          "created": "2013-09-18T21:45:32.618Z",
          "full_dependency_versions": [ "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "GetHighest",
              "_id": "51ff511de2f476ca05000023"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-18T21:45:32.618Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 27,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Parse Solar Radiation CSV",
          "_id": "521cfcb8e2f476ca05000041"
        }
      ],
      "num_dependents": 1,
      "description": "Gets the highest value from a list\r\nDEPRECATED - Use Get Highest And Lowest From List package instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "highest", "list" ],
      "white_list": false
    },
    {
      "_id": "51ff50abe2f476ca0500001f",
      "name": "NormalizeValue",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7ce0df01-6b88-47ba-8084-0b2a9cfe0a98gregPkg476.zip",
          "contents": "Normalize Value - Converts a value into a normalized value according to a value range",
          "engine_metadata": "",
          "engine_version": "0.7.0.25915",
          "created": "2013-09-21T13:28:45.707Z",
          "full_dependency_versions": [ "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "NormalizeValue",
              "_id": "51ff50abe2f476ca0500001f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-21T13:28:45.707Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 21,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Parse Solar Radiation CSV",
          "_id": "521cfcb8e2f476ca05000041"
        }
      ],
      "num_dependents": 1,
      "description": "Converts a value into a normalized value according to a value range.\r\nDEPRECATED - Use package Normalization instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "normalize", "range" ],
      "white_list": false
    },
    {
      "_id": "5245ec0f30e55dc52b000021",
      "name": "Geometry Sphere",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/19903f9c-ee0d-4fd5-a4ae-c0ef71e4cbbegregPkg266.zip",
          "contents": "Geometry Sphere - geometry sphere",
          "engine_metadata": "",
          "engine_version": "0.7.0.21202",
          "created": "2013-09-27T20:35:27.567Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Geometry Sphere",
              "_id": "5245ec0f30e55dc52b000021"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-27T20:35:27.567Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 222,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a Geometry Sphere from Radius and X,Y, and Z inputs.  Needs a Freeform Element node to make a Revit Element",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "sphere", "geometry" ],
      "white_list": false
    },
    {
      "_id": "5226b141e2f476ca0500005d",
      "name": "Get Sublist Lengths",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ede0f875-ad9e-454c-b35d-ba97b8957423gregPkg979.zip",
          "contents": "Get Sublist Lengths - Gets the lengths of all sublists in a given list of lists.",
          "engine_metadata": "",
          "engine_version": "0.7.0.25040",
          "created": "2013-09-28T14:38:42.035Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Get Sublist Lengths",
              "_id": "5226b141e2f476ca0500005d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-28T14:38:42.035Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 31,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Gets the lengths of all sublists in a given list of lists.\r\nDEPRECATED - Use package Sublist Helpers instead.",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "list", "sublist", "length" ],
      "white_list": false
    },
    {
      "_id": "5247897930e55dc52b000035",
      "name": "toggle",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/83d88d42-4531-4cd0-9d9a-4887c31b6a71gregPkg844.zip",
          "contents": "toggle - turn a function on or off",
          "engine_metadata": "",
          "engine_version": "0.7.0.21202",
          "created": "2013-09-29T01:59:21.729Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "toggle",
              "_id": "5247897930e55dc52b000035"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-29T01:59:21.729Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 182,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "turns a function on or off",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "toggle", "on", "off", "boolean", "switch" ],
      "white_list": false
    },
    {
      "_id": "5218d436e2f476ca0500002f",
      "name": "Fractals",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5519f306-6b57-4673-a1d2-72eafabbc64egregPkg203.zip",
          "contents": "arrowhead curve - internal recursive loop for sierpinski arrowhead, Dragon Curve - No description provided, dragon loop - No description provided, Sierpiński Arrowhead - The Sierpiński arrowhead curve is a fractal curve similar in appearance and identical in limit to the Sierpiński triangle. This node generates XYZs for all endpoints in the curve.",
          "engine_metadata": "",
          "engine_version": "0.7.0.2343",
          "created": "2013-10-05T17:47:03.602Z",
          "full_dependency_versions": [ "1.0.2", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Fractals",
              "_id": "5218d436e2f476ca0500002f"
            },
            {
              "name": "Simple Rotations",
              "_id": "524fa52d3f7315936f000003"
            }
          ],
          "direct_dependency_versions": [ "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Simple Rotations",
              "_id": "524fa52d3f7315936f000003"
            }
          ],
          "change_log": "",
          "version": "1.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-10-05T17:47:03.602Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 387,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Steellworks",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This package contains Dynamo implementations of the Sierpinski Arrowhead and Dragon Curve. More information can be found at http://steellworks.blogspot.com/2013/08/dynamo-fractals.html",
      "maintainers": [
        {
          "username": "stephen.elliott@autodesk.com",
          "_id": "5218d435e2f476ca0500002e"
        }
      ],
      "keywords": [ "recursion" ],
      "white_list": false
    },
    {
      "_id": "52545fca3f7315936f000017",
      "name": "Dictionary Lookup",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6a869d5a-c9eb-4a4b-9172-70ef99546bdcgregPkg815.zip",
          "contents": "Lookup - Locates the first element of the given list whose car is equal to v. If such an element exists, the pair (i.e., an element of the given list) is returned. Otherwise, the result is false.",
          "engine_metadata": "",
          "engine_version": "0.7.0.25111",
          "created": "2013-10-08T19:43:08.904Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Dictionary Lookup",
              "_id": "52545fca3f7315936f000017"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-10-08T19:43:08.904Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 382,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Steellworks",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Turtle Graphics",
          "_id": "524fa6bc3f7315936f000005"
        }
      ],
      "num_dependents": 1,
      "description": "Searches a list of lists, where each inner list is of the form (key, value), for the first pair who's key matches the given key. Returns false if no matching key was found.",
      "maintainers": [
        {
          "username": "stephen.elliott@autodesk.com",
          "_id": "5218d435e2f476ca0500002e"
        }
      ],
      "keywords": [ "dictionary", "hash", "table", "map", "structure" ],
      "white_list": false
    },
    {
      "_id": "5254ad8e3f7315936f00001b",
      "name": "Fillet Square",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/be4f81ae-8c6c-4276-b9eb-f87ee5a2e87dgregPkg356.zip",
          "contents": "Fillet Square - Creates a list of Curves for a Filleted Square ",
          "engine_metadata": "",
          "engine_version": "0.7.0.23082",
          "created": "2013-10-09T02:05:49.542Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "Fillet Square",
              "_id": "5254ad8e3f7315936f00001b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-10-09T02:05:49.542Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 127,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a Filleted Square from radius, origin, and width",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "rounded", "corner", "radius", "square", "rectangle", "fillet" ],
      "white_list": false
    },
    {
      "_id": "52650df13f7315936f000026",
      "name": "remove duplicates",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0a028e4a-4340-4da8-8966-c55749018d3bgregPkg647.zip",
          "contents": "Add Unique - given a list and a item, adds the item to the list if it isn't in there already, Exists - checks if a given item exists in a given list, remove duplicates - removes duplicate data from a list",
          "engine_metadata": "",
          "engine_version": "0.6.1.18684",
          "created": "2013-10-21T11:20:17.451Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "remove duplicates",
              "_id": "52650df13f7315936f000026"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-10-21T11:20:17.451Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1183,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Clockwork for Dynamo 0.6.3",
          "_id": "544730fdcc26bfdc5a0000db"
        }
      ],
      "num_dependents": 1,
      "description": "removes duplicate data from a list",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "duplicate", "cull", "unique", "remove", "clean" ],
      "white_list": false
    },
    {
      "_id": "5267df033f7315936f00002b",
      "name": "Fibonacci Python Code",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c63405c5-ddf4-4784-8a09-ccaa7b18548fgregPkg482.zip",
          "contents": "Fibonacci Python Code - Python to make fibonacci sequence",
          "engine_metadata": "",
          "engine_version": "0.6.1.18684",
          "created": "2013-10-23T14:36:51.539Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Fibonacci Python Code",
              "_id": "5267df033f7315936f00002b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-10-23T14:36:51.539Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 312,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "python code to draw fibonacci sequence",
      "maintainers": [
        {
          "username": "sobotec1",
          "_id": "5267d5173f7315936f000029"
        }
      ],
      "keywords": [ "python", "fibonacci", "sequence" ],
      "white_list": false
    },
    {
      "_id": "527662fe3f7315936f000048",
      "name": "Remap",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/afb0e8fc-685e-4143-af9c-58f702a873b8gregPkg304.zip",
          "contents": "Remap - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.1.18684",
          "created": "2013-11-03T14:51:42.920Z",
          "full_dependency_versions": [ "0.6.1" ],
          "full_dependency_ids": [
            {
              "name": "Remap",
              "_id": "527662fe3f7315936f000048"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.6.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-03T14:51:42.92Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 118,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "KV-Ala",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Remaps a list into a new domain. ",
      "maintainers": [
        {
          "username": "kaveh@huskers.unl.edu",
          "_id": "527662fe3f7315936f000047"
        }
      ],
      "keywords": [ "value", "remap" ],
      "white_list": false
    },
    {
      "_id": "528559af3f7315936f000062",
      "name": "Proto Beam",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/526bc3de-d302-4214-9335-2f0a20ac0711gregPkg797.zip",
          "contents": "Proto Beam - A very simple beam with width and depth.",
          "engine_metadata": "",
          "engine_version": "0.6.2.17011",
          "created": "2013-11-14T23:15:59.362Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Proto Beam",
              "_id": "528559af3f7315936f000062"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-14T23:15:59.362Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 34,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Make a square-section extrude defined by a width and a depth.",
      "maintainers": [
        {
          "username": "ian.keough@autodesk.com",
          "_id": "528558ee3f7315936f00005d"
        }
      ],
      "keywords": [ "beam" ],
      "white_list": false
    },
    {
      "_id": "52793a753f7315936f000055",
      "name": "Type Name",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/91a90f9c-f0a2-4d7d-927c-f47c080b24dbgregPkg540.zip",
          "contents": "Type Name - Gets the type of the given data as a string.",
          "engine_metadata": "",
          "engine_version": "0.6.2.21747",
          "created": "2013-11-05T18:35:33.177Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Type Name",
              "_id": "52793a753f7315936f000055"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-05T18:35:33.177Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 1395,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Steellworks",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Topo Stuff",
          "_id": "5278a56d3f7315936f00004a"
        },
        {
          "name": "Clockwork for Dynamo 0.6.3",
          "_id": "544730fdcc26bfdc5a0000db"
        }
      ],
      "num_dependents": 2,
      "description": "Gets the type of the given data as a string.",
      "maintainers": [
        {
          "username": "stephen.elliott@autodesk.com",
          "_id": "5218d435e2f476ca0500002e"
        }
      ],
      "keywords": [ "type", "typeof" ],
      "white_list": false
    },
    {
      "_id": "528675e33f7315936f000067",
      "name": "Stadium Tools",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f9b86a65-b12a-4682-a697-efa73df82fe3gregPkg120.zip",
          "contents": "Radial Planes - Define a series of planes radially with a sweep angle and a number of planes to create",
          "engine_metadata": "",
          "engine_version": "0.6.2.18392",
          "created": "2013-11-15T19:28:35.327Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Stadium Tools",
              "_id": "528675e33f7315936f000067"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-15T19:28:35.327Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 616,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A set of commonly used tools for creating a stadium.",
      "maintainers": [
        {
          "username": "ian.keough@autodesk.com",
          "_id": "528558ee3f7315936f00005d"
        }
      ],
      "keywords": [ "structure", "stadium", "truss" ],
      "white_list": false
    },
    {
      "_id": "528719983f7315936f00006a",
      "name": "List Utilities",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f20cd3eb-8ae2-4fa7-90b1-8e5eec4c879dgregPkg849.zip",
          "contents": "Replace Item In List - Inserts an item into a list at a specific index, replacing the item that was already at that index., Insert Into List - Inserts an element into a list at a given index.",
          "engine_metadata": "",
          "engine_version": "0.6.2.31398",
          "created": "2013-11-16T07:07:04.273Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "List Utilities",
              "_id": "528719983f7315936f00006a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-16T07:07:04.273Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -4,
      "downloads": 414,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Steellworks",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Collection of generic utilities for lists. What's currently included:\r\n* Insert Into List - Inserts an item into a list at a given index.\r\n* Replace Item In List",
      "maintainers": [
        {
          "username": "stephen.elliott@autodesk.com",
          "_id": "5218d435e2f476ca0500002e"
        }
      ],
      "keywords": [ "list", "insert", "replace", "index", "swap", "change" ],
      "white_list": false
    },
    {
      "_id": "528ae4863f7315936f00006f",
      "name": "Arcs from Curve",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/41495928-552e-48f1-9544-70d090e40376gregPkg526.zip",
          "contents": "Arcs from Curve - Create n number of near tangent arcs from an input curve",
          "engine_metadata": "",
          "engine_version": "0.6.2.18294",
          "created": "2013-11-19T04:09:42.731Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Arcs from Curve",
              "_id": "528ae4863f7315936f00006f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-19T04:09:42.731Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 154,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create n number of arcs from an input curve.",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "528b8a473f7315936f000071",
      "name": "Read Solar Radiation Data",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d429aa85-afa5-4c97-a5c9-7dfee3b5a9a4gregPkg80.zip",
          "contents": "Read Solar Radiation Data - Read solar radiation data from Vasari.",
          "engine_metadata": "",
          "engine_version": "0.6.2.26476",
          "created": "2013-11-19T15:56:55.240Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Read Solar Radiation Data",
              "_id": "528b8a473f7315936f000071"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-19T15:56:55.24Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 171,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Sigradi",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Read Vasari-formatted solar radiation data.",
      "maintainers": [
        {
          "username": "ian.keough@autodesk.com",
          "_id": "528558ee3f7315936f00005d"
        }
      ],
      "keywords": [ "solar", "radiation", "analysis" ],
      "white_list": false
    },
    {
      "_id": "52be249a9de41c8235000084",
      "name": "Get Closest N points",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/dee181f0-8d52-4db6-8b51-1919d9da4af4gregPkg282.zip",
          "contents": "Sort Nearest XYZ - Sort XYZ by proximity to another point, Get Closest N points - Find the closes set of points in 2 lists",
          "engine_metadata": "",
          "engine_version": "0.6.3.5258",
          "created": "2013-12-28T01:08:42.252Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Get Closest N points",
              "_id": "52be249a9de41c8235000084"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-12-28T01:08:42.252Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 243,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Find the closes set of points in 2 lists of points",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "closest", "proximity", "points" ],
      "white_list": false
    },
    {
      "_id": "52adfade9de41c8235000063",
      "name": "Number Range_Equal Divisions",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7670f3a2-1f9d-4a28-87a6-aa870847f048gregPkg58.zip",
          "contents": "Number Range_Equal Divisions - N Divisons between Two Numbers",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2013-12-15T18:54:22.913Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Number Range_Equal Divisions",
              "_id": "52adfade9de41c8235000063"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-12-15T18:54:22.913Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 71,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Core.Lists.Create",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "N Divisions between Two Numbers",
      "maintainers": [
        {
          "username": "GMcDowellJr",
          "_id": "52adfadd9de41c8235000062"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "528a5cb93f7315936f00006d",
      "name": "sigradi_add",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5052ffb4-7c2f-4e47-994d-6b328f5b65e2gregPkg251.zip",
          "contents": "sigradi_add - This adds two numbers together. Sweet!",
          "engine_metadata": "",
          "engine_version": "0.6.2.32011",
          "created": "2013-11-18T18:30:17.258Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "sigradi_add",
              "_id": "528a5cb93f7315936f00006d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-18T18:30:17.258Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 56,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Sigradi",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This is an addition example from SIGradI.",
      "maintainers": [
        {
          "username": "ian.keough@autodesk.com",
          "_id": "528558ee3f7315936f00005d"
        }
      ],
      "keywords": [ "add", "addition", "math" ],
      "white_list": false
    },
    {
      "_id": "52ebeb42bfe4259536000036",
      "name": "RemapVal",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/61e547be-02ab-4b0c-81aa-f8bb6f2943aagregPkg864.zip",
          "contents": "RemapVal - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.26148",
          "created": "2014-01-31T18:28:18.350Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "RemapVal",
              "_id": "52ebeb42bfe4259536000036"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-01-31T18:28:18.35Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 45,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Maps a value from a known range into another range",
      "maintainers": [
        {
          "username": "mjk39",
          "_id": "52d98494bfe4259536000008"
        }
      ],
      "keywords": [ "remap", "map", "value", "range" ],
      "white_list": false
    },
    {
      "_id": "52eda104bfe4259536000038",
      "name": "Union Solids",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/41eb2f91-ea96-4ac8-a8b2-2372816f723bgregPkg774.zip",
          "contents": "Union Solids - union all solids",
          "engine_metadata": "",
          "engine_version": "0.6.3.16650",
          "created": "2014-02-02T01:36:04.403Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Union Solids",
              "_id": "52eda104bfe4259536000038"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-02T01:36:04.403Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 110,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Union a list of solids into a single solid",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "boolean", "union", "solid" ],
      "white_list": false
    },
    {
      "_id": "52f21c72bfe4259536000053",
      "name": "Facet curve intersection",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/325e5447-1bba-4036-9b32-2bd9e580a2b7gregPkg483.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.6.3.19486",
          "created": "2014-02-05T11:11:46.649Z",
          "full_dependency_versions": [ "0.0.1", "0.2.0" ],
          "full_dependency_ids": [
            {
              "name": "Facet curve intersection",
              "_id": "52f21c72bfe4259536000053"
            },
            {
              "name": "Unit Conversion",
              "_id": "5226bfaee2f476ca05000063"
            }
          ],
          "direct_dependency_versions": [ "0.2.0" ],
          "direct_dependency_ids": [
            {
              "name": "Unit Conversion",
              "_id": "5226bfaee2f476ca05000063"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-05T11:11:46.649Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 73,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Facet curve intersection",
      "maintainers": [
        {
          "username": "Vladimir.Ondejcik@bergcfmoller.se",
          "_id": "52f21c72bfe4259536000052"
        }
      ],
      "keywords": [ "facet", "curve", "intersection" ],
      "white_list": false
    },
    {
      "_id": "52f3c635bfe425953600005d",
      "name": "Revit API Tools",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f71d6513-4f10-4044-8175-2f02793c4d27gregPkg332.zip",
          "contents": "Iterable to List - Returns the members of an iterable collection as a list, Select in Revit - Select given Element(s), ElementId(s) or element id(s) as string(s) in Revit, Get API Property - Returns the value of the given property of the given object",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-02-06T17:28:21.729Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Revit API Tools",
              "_id": "52f3c635bfe425953600005d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-06T17:28:21.729Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -6,
      "downloads": 1770,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "DME",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Tools to facilitate Revit API and DB exploration",
      "maintainers": [
        {
          "username": "dmeisinger@bsu.edu",
          "_id": "52f3c635bfe425953600005c"
        }
      ],
      "keywords": [ "api", "property", "iterable", "list", "selection" ],
      "white_list": false
    },
    {
      "_id": "5373d2620e5572016a00005f",
      "name": "Identity",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/790e5574-b202-4899-bba1-a78fc61f17adgregPkg973.zip",
          "contents": "Identity - A test of the package manager",
          "engine_metadata": "",
          "engine_version": "0.7.0.27822",
          "created": "2014-05-14T20:30:26.485Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Identity",
              "_id": "5373d2620e5572016a00005f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-14T20:30:26.485Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 22,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Returns whatever it gets.",
      "maintainers": [
        {
          "username": "peetle",
          "_id": "51f8232fe2f476ca05000003"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "537b84470e5572016a000075",
      "name": "Evaluate Sun Directness",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c4d0e093-8248-4e4f-82d7-1f826bc3b6degregPkg81.zip",
          "contents": "Evaluate Sun Directness - Returns values from 0 to 1 based on orientation relative to sun path",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-20T16:35:19.024Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Evaluate Sun Directness",
              "_id": "537b84470e5572016a000075"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-20T16:35:19.024Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 80,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE120C Custom Node By Glenn",
      "maintainers": [
        {
          "username": "sungho21@stanford.edu",
          "_id": "537b84430e5572016a000074"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53841bce0e5572016a000095",
      "name": "Convert CSV Text to Hierarchical Lists",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/df8bc68e-7737-4843-b748-c59a6afc0d03gregPkg970.zip",
          "contents": "Convert CSV Text to Hierarchical Lists - Converts a CSV Text String into Hierarchical Lists -- a list of rows with sublists for values in each row",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-05-27T04:59:58.223Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Convert CSV Text to Hierarchical Lists",
              "_id": "53841bce0e5572016a000095"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-27T04:59:58.223Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 75,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C Assignment 4",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53841c050e5572016a000097",
      "name": "Compute Ratio between Columns",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/539c6fab-26dd-4983-ab57-eb7453c2fefdgregPkg739.zip",
          "contents": "Compute Ratio between Columns - Computes the ratio between the values in two input columns and adds it as a last column",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-05-27T05:00:53.970Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Compute Ratio between Columns",
              "_id": "53841c050e5572016a000097"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-27T05:00:53.97Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 39,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C Assignment4",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "538699ed0e5572016a0000ab",
      "name": "Write CSV String - Eleven_Values",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ee9db2a0-3e7c-4d23-864c-a37d34da51dagregPkg495.zip",
          "contents": "Write CSV String - Eleven_Values - Write a CSV string for two data values",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-29T02:22:37.380Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Write CSV String - Eleven_Values",
              "_id": "538699ed0e5572016a0000ab"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T02:22:37.38Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 33,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE_220_A4  ",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5386a1740e5572016a0000c6",
      "name": "Get Sun Directness Face 4",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/938bd778-2b89-4fe0-b032-6bd8b76ead1cgregPkg591.zip",
          "contents": "Get Sun Directness Face 4 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-29T02:54:44.307Z",
          "full_dependency_versions": [ "0.1.0", "0.0.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Get Sun Directness Face 4",
              "_id": "5386a1740e5572016a0000c6"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T02:54:44.307Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 11,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - Altered Slightly from Glenn Katz",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5386a8f10e5572016a0000c8",
      "name": "NetStructure",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/be888793-942d-4bb4-b674-13601de18610gregPkg868.zip",
          "contents": "NetStructure - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.0.29646",
          "created": "2014-05-29T03:26:41.349Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "NetStructure",
              "_id": "5386a8f10e5572016a0000c8"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T03:26:41.349Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 97,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This will create Net kind of Structure by taking input for Point in X and Y direction",
      "maintainers": [
        {
          "username": "critesh",
          "_id": "530da612bfe42595360000b0"
        }
      ],
      "keywords": [ "net" ],
      "white_list": false
    },
    {
      "_id": "538778cf0e5572016a0000d6",
      "name": "Evaluate Point Directness",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6c643d2d-c832-4f1b-b4aa-89a2258e3285gregPkg467.zip",
          "contents": "Evaluate Point Directness - Returns values from 0 to 1 based on orientation relative to a specfied point",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-05-29T18:13:35.002Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Evaluate Point Directness",
              "_id": "538778cf0e5572016a0000d6"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T18:13:35.002Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 40,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - By Glenn Katz",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5387975f0e5572016a0000e2",
      "name": "Write CSV String - Five Values",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8e6ec457-60c7-48d5-a322-e430ca27aa1egregPkg672.zip",
          "contents": "Write CSV String - Five Values - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-05-29T20:23:59.861Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Write CSV String - Five Values",
              "_id": "5387975f0e5572016a0000e2"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T20:23:59.861Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 38,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - Altered from Glenn Katz",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53b384710e5572016a000125",
      "name": "GetMidPoint",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b5317be5-72e3-4821-ada0-76c67f3c3160gregPkg613.zip",
          "contents": "GetMidPoint - Input two points and it will return mid point",
          "engine_metadata": "",
          "engine_version": "0.7.0.30451",
          "created": "2014-07-02T04:02:57.894Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "GetMidPoint",
              "_id": "53b384710e5572016a000125"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-02T04:02:57.894Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 255,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "INput array of points or two points and this will return mid point.",
      "maintainers": [
        {
          "username": "critesh",
          "_id": "530da612bfe42595360000b0"
        }
      ],
      "keywords": [ "mid", "point", "point" ],
      "white_list": false
    },
    {
      "_id": "53831d590e5572016a000086",
      "name": "Plane Properties",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d2ad50c1-8ddb-47a8-867e-86094dcadfdfgregPkg683.zip",
          "contents": "Plane Properties - Returns the normal and origin of a given plane as well as its X and Y vectors.",
          "engine_metadata": "",
          "engine_version": "0.7.1.30377",
          "created": "2014-09-04T14:16:44.055Z",
          "full_dependency_versions": [ "0.1.2", "0.71.3", "0.71.2" ],
          "full_dependency_ids": [
            {
              "name": "Plane Properties",
              "_id": "53831d590e5572016a000086"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "direct_dependency_versions": [ "0.71.3", "0.71.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-04T14:16:44.055Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 307,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Mesh Stuff",
          "_id": "5381c3550e5572016a000081"
        },
        {
          "name": "Topo Stuff",
          "_id": "5278a56d3f7315936f00004a"
        }
      ],
      "num_dependents": 2,
      "description": "DEPRECATED - As of Dynamo 0.7 use built-in nodes Plane.Normal, Plane.Origin, Plane.XAxis & Plane.YAxis instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "plane", "origin", "normal", "x", "y", "u", "v", "vector" ],
      "white_list": false
    },
    {
      "_id": "540add3e0e5572016a0001c5",
      "name": "Instance.Parameter.z Justification",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3934774d-aa03-4104-96eb-3560313a5a68gregPkg32.zip",
          "contents": "Instance.Parameter.z Justification - Adjusting the z justification of an element",
          "engine_metadata": "",
          "engine_version": "0.7.1.17276",
          "created": "2014-09-06T10:09:02.801Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Instance.Parameter.z Justification",
              "_id": "540add3e0e5572016a0001c5"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-06T10:09:02.801Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 83,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Change the y Justification parameter of a Structural Frame",
      "maintainers": [
        {
          "username": "lucianungureanuconstantin@yahoo.com",
          "_id": "540adc7d0e5572016a0001c0"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5418b289cc26bfdc5a000014",
      "name": "Get Document Phases by String",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5f44ed0b-bdcf-41fe-8ec9-82785c7ba878gregPkg92.zip",
          "contents": "Get Document Phases by String - Get Document Phases by String",
          "engine_metadata": "",
          "engine_version": "0.7.2.39419",
          "created": "2014-09-16T21:58:33.296Z",
          "full_dependency_versions": [ "0.71.1" ],
          "full_dependency_ids": [
            {
              "name": "Get Document Phases by String",
              "_id": "5418b289cc26bfdc5a000014"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-16T21:58:33.296Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 237,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Returns Phase and Phase's name from string input",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "get", "phase", "document" ],
      "white_list": false
    },
    {
      "_id": "541bedbccc26bfdc5a00001a",
      "name": "Place.Windows.Doors.InWalls",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ff0b22f9-93f0-4ec2-87db-62a6d10d843fgregPkg195.zip",
          "contents": "Place.Windows.Doors.InWalls - Places windows in midpoints of a list of walls, Place.Windows.Doors.InWalls - places a window / door type in a set of walls",
          "engine_metadata": "",
          "engine_version": "0.7.2.1825",
          "created": "2014-09-19T08:47:56.807Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Place.Windows.Doors.InWalls",
              "_id": "541bedbccc26bfdc5a00001a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-19T08:47:56.807Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 442,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "KOP",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "places windows of a type or doors of a type in a list of walls. Insertion point is the middlepoint of a wall.\r\nthe parameters sill height is implemented. for imperial users: decimal inches are converted to meters!",
      "maintainers": [
        {
          "username": "KOPPEVI",
          "_id": "53ce7c620e5572016a000163"
        }
      ],
      "keywords": [ "place", "windows", "in", "walls.", "place", "doors", "in", "walls" ],
      "white_list": false
    },
    {
      "_id": "530838c1bfe42595360000aa",
      "name": "Plane From Planar Face",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/489cf87a-6735-4dd4-8539-cbff595db32bgregPkg487.zip",
          "contents": "Plane From Planar Face - Creates a plane from a planar face",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T17:43:19.483Z",
          "full_dependency_versions": [ "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Plane From Planar Face",
              "_id": "530838c1bfe42595360000aa"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T17:43:19.483Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 72,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "plane", "planar", "face" ],
      "white_list": false
    },
    {
      "_id": "53070a7abfe425953600009c",
      "name": "Vector And Plane Are Parallel",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3f849ded-5818-4e7f-9594-4d555b38d92dgregPkg727.zip",
          "contents": "Vector And Plane Are Parallel - Checks if a given vector is parallel to a given plane",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:19:57.653Z",
          "full_dependency_versions": [ "0.1.2", "0.1.1", "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Vector And Plane Are Parallel",
              "_id": "53070a7abfe425953600009c"
            },
            {
              "name": "Vectors Are Orthogonal",
              "_id": "5306edf2bfe4259536000098"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            }
          ],
          "direct_dependency_versions": [ "0.1.1", "0.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "Vectors Are Orthogonal",
              "_id": "5306edf2bfe4259536000098"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:19:57.653Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 128,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Vector Is In Plane",
          "_id": "53074571bfe425953600009e"
        },
        {
          "name": "Plane-Vector Intersection",
          "_id": "52ca73b49f852b166e000004"
        },
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        },
        {
          "name": "Central Projection On Plane",
          "_id": "5306fa4dbfe425953600009a"
        }
      ],
      "num_dependents": 4,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "vector", "plane", "parallel" ],
      "white_list": false
    },
    {
      "_id": "547c3cc9b77c84600c000064",
      "name": "AU 2014 BIM Workshop Files",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/976217c8-6bb6-4e1f-9725-248d144e3805gregPkg184.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3213",
          "created": "2014-12-01T10:02:49.017Z",
          "full_dependency_versions": [ "0.0.2", "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "AU 2014 BIM Workshop Files",
              "_id": "547c3cc9b77c84600c000064"
            },
            {
              "name": "AU2014 BIM Workshop Files",
              "_id": "547c3b3ab77c84600c000062"
            }
          ],
          "direct_dependency_versions": [ "0.0.1" ],
          "direct_dependency_ids": [
            {
              "name": "AU2014 BIM Workshop Files",
              "_id": "547c3b3ab77c84600c000062"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-01T10:02:49.017Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 380,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Autodesk University",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Sample files for the Autodesk University Dynamo Workshop, Monday, Dec. 1, 2014",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "samples", "examples", "workshop", "help" ],
      "white_list": false
    },
    {
      "_id": "54891323fa779c1c1100003a",
      "name": "Set Element Param By Host Param",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3063450e-54a5-49c4-a679-ee6a2a1d19ebgregPkg844.zip",
          "contents": "ElementParamByHostParam - Sets an elements parameter to the same value as its host element",
          "engine_metadata": "",
          "engine_version": "0.7.5.3370",
          "created": "2014-12-11T03:44:35.760Z",
          "full_dependency_versions": [ "12.10.2014", "0.74.3" ],
          "full_dependency_ids": [
            {
              "name": "Set Element Param By Host Param",
              "_id": "54891323fa779c1c1100003a"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "direct_dependency_versions": [ "0.74.3" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "change_log": "",
          "version": "12.10.2014",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-11T03:44:35.76Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 186,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Sets an elements parameter to the same value as its host",
      "maintainers": [
        {
          "username": "nholland@nbbj.com",
          "_id": "5486713bfa779c1c11000021"
        }
      ],
      "keywords": [ "element", "parameter", "host" ],
      "white_list": false
    },
    {
      "_id": "54891709fa779c1c1100003c",
      "name": "testFromVsari",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3044862a-65db-43e8-9663-00f48f1d2927gregPkg715.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3437",
          "created": "2014-12-11T04:01:13.510Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "testFromVsari",
              "_id": "54891709fa779c1c1100003c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-11T04:01:13.51Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 15,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Vasari testing in progress ",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5572aa80f2ae5a9a0700002b",
      "name": "TBI TEST",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6d680a46-be6b-45df-bbbf-d4483b7a8d01gregPkg384.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.1233",
          "created": "2015-06-06T08:08:32.870Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "TBI TEST",
              "_id": "5572aa80f2ae5a9a0700002b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-06T08:08:32.87Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 26,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Samenvatting van test files TBI",
      "maintainers": [
        {
          "username": "frank.wolbertus@tbikennislab.com",
          "_id": "5572a9fff2ae5a9a0700002a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55792fe9f2ae5a9a0700005d",
      "name": "122",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e5f23252-7b10-41b8-b15d-4da600baef38gregPkg391.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.1592",
          "created": "2015-06-11T06:51:21.095Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "122",
              "_id": "55792fe9f2ae5a9a0700005d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-11T06:51:21.095Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 12,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "12",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "zora@testing12",
      "maintainers": [
        {
          "username": "t_yanz",
          "_id": "55792f5ef2ae5a9a0700005c"
        }
      ],
      "keywords": [ "123" ],
      "white_list": false
    },
    {
      "_id": "56b30f79c3e9ee4a080000a9",
      "name": "testSurfwave",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/90da7486-be8e-41bf-b5d4-c2a178062c37gregPkg160.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-02-04T08:44:41.020Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "testSurfwave",
              "_id": "56b30f79c3e9ee4a080000a9"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-04T08:44:41.02Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing package",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "524fa6bc3f7315936f000005",
      "name": "Turtle Graphics",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c88e1d3a-66c2-4bac-829f-9d4fbbfaafd6gregPkg890.zip",
          "contents": "Dragon - Dragon Curve implemented with Turtle Graphics L-System, Draw Forward - No description provided, Hexagonal Gosper - Hexagonal Gosper implemented with Turtle Graphics L-System, Hilbert 3D - Hilbert 3D Curve implemented with Turtle Graphics L-System, Load Turtle State - No description provided, Move Forward - No description provided, Penrose Tiling - Penrose Tiling implemented with Turtle Graphics L-System, Perform Action - No description provided, Plant - Tree-like geometry generated with Turtle Graphics., Rewrite Production - Rewrites an L-system production by replacing all variables with their production rule., Rewrite - No description provided, rule str -> rule - No description provided, Save Turtle State - No description provided, Sierpiński - Sierpiński Arrowhead implemented with Turtle Graphics L-System, String -> Turtle Rules - Converts a string representation of turtle production rules into the internal associative list representation., Turn - No description provided, Turtle Graphics - A Turtle Graphics L-System interpreter. Takes in a starting string and a production rules string of the form: \r\n  {id1}->{product1}\r\n  {id2}->{product2}\r\n  ...\r\n  {idN}->{productN}\r\n\r\nValid commands are:\r\n  F  :: Move forward and draw a line.\r\n  f  :: Move forward.\r\n  +  :: Turn left.\r\n  -  :: Turn right\r\n  ^  :: Pitch up\r\n  &  :: Pitch down\r\n  \\  :: Roll counter-clockwise\r\n  /  :: Roll clockwise\r\n  |  :: Turn around\r\n  [  :: Save current position and orientation.\r\n  ]  :: Restore last saved position and orientation.",
          "engine_metadata": "",
          "engine_version": "0.7.0.25111",
          "created": "2013-10-08T19:43:26.208Z",
          "full_dependency_versions": [ "0.1.4", "0.1.2", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Turtle Graphics",
              "_id": "524fa6bc3f7315936f000005"
            },
            {
              "name": "Dictionary Lookup",
              "_id": "52545fca3f7315936f000017"
            },
            {
              "name": "Simple Rotations",
              "_id": "524fa52d3f7315936f000003"
            }
          ],
          "direct_dependency_versions": [ "0.1.2", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Dictionary Lookup",
              "_id": "52545fca3f7315936f000017"
            },
            {
              "name": "Simple Rotations",
              "_id": "524fa52d3f7315936f000003"
            }
          ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-10-08T19:43:26.208Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 193,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Steellworks",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Lindenmayer system interpreter based on Turtle Graphics. Includes samples of various plottable L-systems.",
      "maintainers": [
        {
          "username": "stephen.elliott@autodesk.com",
          "_id": "5218d435e2f476ca0500002e"
        }
      ],
      "keywords": [ "lindenmayer", "system", "l-system", "recursive", "rewrite" ],
      "white_list": false
    },
    {
      "_id": "523b9a3330e55dc52b00000b",
      "name": "phi",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1c2ac069-d007-4c66-b3d2-537e4cc3e842gregPkg834.zip",
          "contents": "phi - The golden ratio, also known as the divine proportion, golden mean, or golden section, is a number often encountered when taking the ratios of distances in simple geometric figures such as the pentagon, pentagram, decagon and dodecahedron. It is denoted as phi.\r\n\r\nsource:\r\nWolfram - http://mathworld.wolfram.com/GoldenRatio.html",
          "engine_metadata": "",
          "engine_version": "0.6.2.2709",
          "created": "2013-11-15T00:31:30.244Z",
          "full_dependency_versions": [ "1.0.2" ],
          "full_dependency_ids": [
            {
              "name": "phi",
              "_id": "523b9a3330e55dc52b00000b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-15T00:31:30.244Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 1245,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Logic.Math.Constants",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Buckyball",
          "_id": "53032162bfe4259536000087"
        },
        {
          "name": "Clockwork for Dynamo 0.6.3",
          "_id": "544730fdcc26bfdc5a0000db"
        }
      ],
      "num_dependents": 2,
      "description": "phi: \r\n\r\nThe golden ratio, also known as the divine proportion, golden mean, or golden section, is a number often encountered when taking the ratios of distances in simple geometric figures such as the pentagon, pentagram, decagon and dodecahedron. It is denoted as phi.\r\n\r\nsource:\r\nWolfram - http://mathworld.wolfram.com/GoldenRatio.html",
      "maintainers": [
        {
          "username": "sburke@nbbj.com",
          "_id": "523b9a3230e55dc52b00000a"
        }
      ],
      "keywords": [ "phi" ],
      "white_list": false
    },
    {
      "_id": "522d408b4b31fa536a00001e",
      "name": "Get Family Instances For Family Type",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/fe81379a-62da-445d-a5fd-977ad538ee04gregPkg672.zip",
          "contents": "Get Family Instances For Family Type - Gets all family instances for one or multiple given family types/symbols. ",
          "engine_metadata": "",
          "engine_version": "0.6.3.37749",
          "created": "2013-11-20T17:20:42.513Z",
          "full_dependency_versions": [ "0.1.4", "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "Get Family Instances For Family Type",
              "_id": "522d408b4b31fa536a00001e"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.4" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-20T17:20:42.513Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 392,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Use built-in node 'Get Family Instances by Type' instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "family", "instances", "type", "symbol", "filtered", "element", "collector" ],
      "white_list": false
    },
    {
      "_id": "522cd0794b31fa536a000016",
      "name": "XYZs From Adaptive Component",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0313bbca-3b09-40c2-bf39-27176e380f41gregPkg528.zip",
          "contents": "XYZs from Adaptive Component - Retrieves the XYZ coordinates  of the placement points as well as the family types of adaptive component instances. Also works for pattern-based curtain panel instances that have been placed manually. Does *not* work for curtain panels hosted on a divided surface or for repeated components.",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2013-12-02T11:06:00.825Z",
          "full_dependency_versions": [ "0.1.6", "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "XYZs From Adaptive Component",
              "_id": "522cd0794b31fa536a000016"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.4" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-12-02T11:06:00.825Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 184,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Use the new built-in Get Family Instance Location node instead. If you still need to determine the family type of a given family instance, use package Get And Set Family Type.",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "xyz", "adaptive", "component", "ac", "pattern", "based", "curtain", "panel", "placement", "point" ],
      "white_list": false
    },
    {
      "_id": "521d7f5ae2f476ca05000043",
      "name": "Invert And Mirror Normalized Values",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/645075d8-fd21-4a6e-92e6-35f120de97a8gregPkg826.zip",
          "contents": "Invert And Mirror Normalized Values - Inverts and mirrors (horizontally & vertically) a list of normalized values.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:12:58.470Z",
          "full_dependency_versions": [ "0.1.6", "0.1.1", "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "Invert And Mirror Normalized Values",
              "_id": "521d7f5ae2f476ca05000043"
            },
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            },
            {
              "name": "Normalization",
              "_id": "523a224430e55dc52b000008"
            }
          ],
          "direct_dependency_versions": [ "0.1.1", "0.1.4" ],
          "direct_dependency_ids": [
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            },
            {
              "name": "Normalization",
              "_id": "523a224430e55dc52b000008"
            }
          ],
          "change_log": "",
          "version": "0.1.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:12:58.47Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 89,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "invert", "mirror", "list", "normalized", "image" ],
      "white_list": false
    },
    {
      "_id": "522d416b4b31fa536a000020",
      "name": "If X Equals Y",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6a41dc4f-4e1b-4006-bdb0-9bc986b37164gregPkg555.zip",
          "contents": "If X = Y - If X = Y as a mappable function",
          "engine_metadata": "",
          "engine_version": "0.6.3.5256",
          "created": "2013-12-10T05:01:37.547Z",
          "full_dependency_versions": [ "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "If X Equals Y",
              "_id": "522d416b4b31fa536a000020"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-12-10T05:01:37.547Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 40,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Use package Mappable Conditions instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "if", "x=y", "equal", "condition" ],
      "white_list": false
    },
    {
      "_id": "521d8a8ee2f476ca05000049",
      "name": "If X Greater Than Y",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8f467440-642d-44a2-8a40-a1892f518afegregPkg1.zip",
          "contents": "If X > Y - If X > Y as a mappable function",
          "engine_metadata": "",
          "engine_version": "0.6.3.5256",
          "created": "2013-12-10T05:01:59.733Z",
          "full_dependency_versions": [ "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "If X Greater Than Y",
              "_id": "521d8a8ee2f476ca05000049"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-12-10T05:01:59.733Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 24,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Use package Mappable Conditions instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "if", "greater", "than", "condition" ],
      "white_list": false
    },
    {
      "_id": "529afa5f9de41c823500001e",
      "name": "Roof Stuff",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3e81fb98-ca08-4b3f-bbf0-ede46b577a25gregPkg612.zip",
          "contents": "Filter Roofs By Creation Method - Filters a list of roofs by their method of creation., Get Roof Type - Retrieves the roof type for  a given roof instance",
          "engine_metadata": "",
          "engine_version": "0.6.3.5262",
          "created": "2013-12-19T12:14:42.415Z",
          "full_dependency_versions": [ "0.1.4", "0.1.4", "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Roof Stuff",
              "_id": "529afa5f9de41c823500001e"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "direct_dependency_versions": [ "0.1.4", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-12-19T12:14:42.415Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 48,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Use package Roof And Floor Stuff instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "roof", "type", "filter", "face", "in-place" ],
      "white_list": false
    },
    {
      "_id": "52bbb5bc9de41c823500007b",
      "name": "Spherical Inversion",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/67acdd47-745e-4f8d-86b3-258c4364cef2gregPkg215.zip",
          "contents": "Spherical Inversion - Performs a spherical inversion of  XY Coordinates",
          "engine_metadata": "",
          "engine_version": "0.6.3.5258",
          "created": "2013-12-27T00:05:38.328Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Spherical Inversion",
              "_id": "52bbb5bc9de41c823500007b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-12-27T00:05:38.328Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 94,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a spherical inversion of XYZ coordinates",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "spherical", "inversion", "geometry", "projection" ],
      "white_list": false
    },
    {
      "_id": "51ff50f6e2f476ca05000021",
      "name": "GetLowest",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8a15ce4e-5be5-4934-8be9-ef09dadeed4dgregPkg556.zip",
          "contents": "Get Lowest - Gets the lowest value from a list\r\nDEPRECATED - Use Get Highest And Lowest From List package instead",
          "engine_metadata": "",
          "engine_version": "0.7.0.36088",
          "created": "2013-09-18T21:45:52.612Z",
          "full_dependency_versions": [ "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "GetLowest",
              "_id": "51ff50f6e2f476ca05000021"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-18T21:45:52.612Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 22,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Parse Solar Radiation CSV",
          "_id": "521cfcb8e2f476ca05000041"
        }
      ],
      "num_dependents": 1,
      "description": "Gets the lowest value from a list\r\nDEPRECATED - Use Get Highest And Lowest From List package instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "lowest", "list" ],
      "white_list": false
    },
    {
      "_id": "5245bf8430e55dc52b00001f",
      "name": "Last of List",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0f9ff023-f934-43d8-99c9-e4da10072696gregPkg400.zip",
          "contents": "Last of List - Gets the last element of a list.",
          "engine_metadata": "",
          "engine_version": "0.7.0.26505",
          "created": "2013-09-27T17:25:24.798Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Last of List",
              "_id": "5245bf8430e55dc52b00001f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-27T17:25:24.798Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 114,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Get the last element of a list.",
      "maintainers": [
        {
          "username": "peetle",
          "_id": "51f8232fe2f476ca05000003"
        }
      ],
      "keywords": [ "end", "recursive" ],
      "white_list": false
    },
    {
      "_id": "5251f78e3f7315936f00000c",
      "name": "Angle By Law Of Sines",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2786b85f-21e9-45e8-aa56-3b4bf558fbe6gregPkg157.zip",
          "contents": "Angle By Law Of Sines - Determines the angle of a triangle based on the law of sines. (Alpha is the angle opposite side A and beta is the angle opposite side B...), Side By Law Of Sines - Determines the length of a side based on the law of sines. (Alpha is the angle opposite side A and beta is the angle opposite side B...)",
          "engine_metadata": "",
          "engine_version": "0.7.0.15069",
          "created": "2013-10-06T23:52:57.413Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Angle By Law Of Sines",
              "_id": "5251f78e3f7315936f00000c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-10-06T23:52:57.413Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 38,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Solve triangles by using the law of sines.\r\nDEPRECATED - Use package Law Of Sines instead.",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "law", "sines", "angle", "side", "triangle" ],
      "white_list": false
    },
    {
      "_id": "5228a810e2f476ca05000069",
      "name": "ConnectPoints",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3e004662-159c-4c4e-9ea3-f008ecc852d3gregPkg372.zip",
          "contents": "ConnectPoints - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.0.27863",
          "created": "2013-09-05T16:07:20.655Z",
          "full_dependency_versions": [ ],
          "full_dependency_ids": [ ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-05T16:07:20.655Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 16,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Connect a seletion of Reference Points by straight Reference Spline By Points",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "line", "straight", "reference", "polyline", "chain" ],
      "white_list": false
    },
    {
      "_id": "5232e2176189d12d7e00000a",
      "name": "Adaptive Component on Face By Image",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b8e14e96-9edc-413b-9dd7-025af35a8a15gregPkg64.zip",
          "contents": "Adaptive Component On Face By Image - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.0.21470",
          "created": "2013-09-13T09:59:51.285Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Adaptive Component on Face By Image",
              "_id": "5232e2176189d12d7e00000a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-13T09:59:51.285Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 3,
      "downloads": 630,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "evo-bim",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Given an image, family type and instance parameter, creates adaptive components along the face and assign the image parameters to them. (Note: the image proportions and the UV count must be the same.)",
      "maintainers": [
        {
          "username": "evo-bim.",
          "_id": "5232e2156189d12d7e000009"
        }
      ],
      "keywords": [ "adaptive", "component", "image", "uv", "divided", "surface", "face" ],
      "white_list": false
    },
    {
      "_id": "5234d9ab6b18e47916000008",
      "name": "XYZ Cells by Face",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1b995a0c-b04a-4a1a-a34c-6fe8012ed12cgregPkg923.zip",
          "contents": "XYZ Diamond Grid by Face - Create a Diamond XYZ grid on a face.  The face surface must have an untrimmed UV parameter space., XYZ Quad Grid by Face - Create a quadrangular XYZ grid on a face.  The face surface must have an untrimmed UV parameter space., XYZ Staggered Grid by Face - Create a Staggered XYZ grid on a face.  The face surface must have an untrimmed UV parameter space., XYZ Triangular Grid by Face - Create a Triangular XYZ grid on a face.  The face surface must have an untrimmed UV parameter space.",
          "engine_metadata": "",
          "engine_version": "0.6.0.21470",
          "created": "2013-09-15T18:17:24.736Z",
          "full_dependency_versions": [ "2013.9.15" ],
          "full_dependency_ids": [
            {
              "name": "XYZ Cells by Face",
              "_id": "5234d9ab6b18e47916000008"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2013.9.15",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-15T18:17:24.736Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 481,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "The Proving Ground",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This package contains custom nodes for generating XYZ cell grids on faces.  Grids are based on the untrimmed UV parameter space of the surface face.  The nodes are useful for defining Adaptive Component panel systems on faces.  http://TheProvingGround.org",
      "maintainers": [
        {
          "username": "archinate",
          "_id": "5234d9ab6b18e47916000007"
        }
      ],
      "keywords": [ "panels", "tessellate", "case", "adaptive", "grid" ],
      "white_list": false
    },
    {
      "_id": "521cfa61e2f476ca0500003f",
      "name": "Sum",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ca72c1de-4c1f-46b2-a0cc-1e21dd1ce9c8gregPkg208.zip",
          "contents": "Sum - DEPRECATED - USE Sum List PACKAGE INSTEAD",
          "engine_metadata": "",
          "engine_version": "0.7.0.36088",
          "created": "2013-09-18T15:33:27.280Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Sum",
              "_id": "521cfa61e2f476ca0500003f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-18T15:33:27.28Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 57,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Parse Solar Radiation CSV",
          "_id": "521cfcb8e2f476ca05000041"
        }
      ],
      "num_dependents": 1,
      "description": "Calculates the sum of a list of values\r\nDEPRECATED - Use Sum List package instead.",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "sum" ],
      "white_list": false
    },
    {
      "_id": "51fa7f01e2f476ca05000012",
      "name": "Invert Boolean",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6c7c2a8d-838c-4c1d-a247-f6e601733035gregPkg443.zip",
          "contents": "InvertBoolean - DEPRECATED - USE Invert Normalized Value PACKAGE INSTEAD",
          "engine_metadata": "",
          "engine_version": "0.7.0.25915",
          "created": "2013-09-21T13:25:11.775Z",
          "full_dependency_versions": [ "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "Invert Boolean",
              "_id": "51fa7f01e2f476ca05000012"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-21T13:25:11.775Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 26,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This node inverts a boolean value.\r\nDEPRECATED - Use Invert Normalized Value in package Normalization instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "boolean", "invert" ],
      "white_list": false
    },
    {
      "_id": "52310dd98f1189e274000008",
      "name": "Box",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/22fefc65-8877-4114-8d0d-57caf657b857gregPkg431.zip",
          "contents": "Box - Makes a rectuangular extrusion Form Element in the Massing Environment",
          "engine_metadata": "",
          "engine_version": "0.7.0.21202",
          "created": "2013-09-27T20:52:38.285Z",
          "full_dependency_versions": [ "0.0.3", "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Box",
              "_id": "52310dd98f1189e274000008"
            },
            {
              "name": "Geometry Box",
              "_id": "5245efd930e55dc52b000023"
            }
          ],
          "direct_dependency_versions": [ "0.0.1" ],
          "direct_dependency_ids": [
            {
              "name": "Geometry Box",
              "_id": "5245efd930e55dc52b000023"
            }
          ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-09-27T20:52:38.285Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 3,
      "downloads": 183,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Makes a FreeForm Element Box with origin, length, width, height, and rotation inputs",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "rectangle", "box", "element", "extrusion", "freeform", "cuboid" ],
      "white_list": false
    },
    {
      "_id": "525c18d43f7315936f000020",
      "name": "Dynamo Sample Custom Nodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4210a72d-a05b-4af2-9c36-e6cc238dd9d1gregPkg831.zip",
          "contents": "chomp - No description provided, ConnectPoints - No description provided, CSV to XYZ - No description provided, CurveLoop - No description provided, Dice - No description provided, DynamicRelaxationLoop - No description provided, Family Curve Loop - No description provided, Family Instance Creator - Indexed - No description provided, GraphFunction - No description provided, laceForward - No description provided, laceBackwards - No description provided, New Sketch Plane - No description provided, Parse List of Lists - No description provided, Relaxation Engine - No description provided, Solar Radiation Optimizer - No description provided, solarradopt - No description provided, solarradcomp - No description provided, solarradupdate - No description provided, y=Mx+b - No description provided, Array - No description provided, C*f(dx) - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.1.28349",
          "created": "2013-10-14T16:16:20.793Z",
          "full_dependency_versions": [ "0.6.1" ],
          "full_dependency_ids": [
            {
              "name": "Dynamo Sample Custom Nodes",
              "_id": "525c18d43f7315936f000020"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.6.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-10-14T16:16:20.793Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 329,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Core",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Parse List of Lists. 01dyf",
          "_id": "53b0cf750e5572016a00011d"
        }
      ],
      "num_dependents": 1,
      "description": "This package is bundled with Dynamo by default and includes a number of nodes related to list manipulation, solar radiation optimization, dynamic relaxation, family instance creation, and more...",
      "maintainers": [
        {
          "username": "peetle",
          "_id": "51f8232fe2f476ca05000003"
        }
      ],
      "keywords": [ "solar", "lists", "relaxation", "array", "radiation", "csv", "xyz" ],
      "white_list": false
    },
    {
      "_id": "523507516b18e4791600000b",
      "name": "Inscribed Polygon",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9c49517e-5440-4ec7-95c7-5bb759773181gregPkg211.zip",
          "contents": "Inscribed Polygon - Create polygon geometry inscribed inside a circle in the massing environment.",
          "engine_metadata": "",
          "engine_version": "0.6.0.21470",
          "created": "2013-10-19T23:57:46.970Z",
          "full_dependency_versions": [ "0.0.6" ],
          "full_dependency_ids": [
            {
              "name": "Inscribed Polygon",
              "_id": "523507516b18e4791600000b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-10-19T23:57:46.97Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 120,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Create Geometry. Curve",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates geometric polygon inscribed inside a circle in the massing environment.",
      "maintainers": [
        {
          "username": "cirela20",
          "_id": "523507506b18e4791600000a"
        }
      ],
      "keywords": [ "polygon", "inscribed", "circle" ],
      "white_list": false
    },
    {
      "_id": "5285592d3f7315936f000060",
      "name": "Warren Truss",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/cb7a3a69-d690-438e-ac2a-d9dca07555begregPkg907.zip",
          "contents": "Warren Truss - A warren truss defined by a top chord, a bottom chord, and a number of divisions.",
          "engine_metadata": "",
          "engine_version": "0.6.2.17011",
          "created": "2013-11-14T23:13:49.036Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Warren Truss",
              "_id": "5285592d3f7315936f000060"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-14T23:13:49.036Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 87,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create a Warren truss from two curves.",
      "maintainers": [
        {
          "username": "ian.keough@autodesk.com",
          "_id": "528558ee3f7315936f00005d"
        }
      ],
      "keywords": [ "truss", "warren" ],
      "white_list": false
    },
    {
      "_id": "528edd709de41c8235000012",
      "name": "Closest Point (CP)",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0e3d78d5-f540-4e6e-8f66-9f09e3484917gregPkg22.zip",
          "contents": "Closest Point (CP) - Find closest point between two point collection",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2013-11-29T22:45:44.581Z",
          "full_dependency_versions": [ "0.1.0", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Closest Point (CP)",
              "_id": "528edd709de41c8235000012"
            },
            {
              "name": "Closest Point (CP) Simple",
              "_id": "528f68d99de41c8235000015"
            }
          ],
          "direct_dependency_versions": [ "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Closest Point (CP) Simple",
              "_id": "528f68d99de41c8235000015"
            }
          ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-29T22:45:44.581Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 128,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Geometry.Point.Query",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Find closest point between two point collection. Output point, index and distance. It use the CP simple node and a phyton script.",
      "maintainers": [
        {
          "username": "mwaraya",
          "_id": "528ecff39de41c823500000f"
        }
      ],
      "keywords": [ "find", "closest", "point", "cp", "collection" ],
      "white_list": false
    },
    {
      "_id": "522d42154b31fa536a000024",
      "name": "If X Less Than Y",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3c616634-359f-4332-9676-0b2b03556bacgregPkg511.zip",
          "contents": "If X < Y - If X < Y as a mappable function",
          "engine_metadata": "",
          "engine_version": "0.6.3.5256",
          "created": "2013-12-10T05:02:17.347Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "If X Less Than Y",
              "_id": "522d42154b31fa536a000024"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-12-10T05:02:17.347Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 23,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Use package Mappable Conditions instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "if", "x<y", "less", "smaller", "lower", "condition" ],
      "white_list": false
    },
    {
      "_id": "522c96fc4b31fa536a00000a",
      "name": "XYZ To X, Y, Z",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f648a113-15fe-4e4f-81c2-89986f262c2fgregPkg986.zip",
          "contents": "XYZ -> X, Y, Z - Fetches the X, Y and Z values from a given XYZ",
          "engine_metadata": "",
          "engine_version": "0.6.3.37749",
          "created": "2013-11-23T17:22:52.151Z",
          "full_dependency_versions": [ "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "XYZ To X, Y, Z",
              "_id": "522c96fc4b31fa536a00000a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-23T17:22:52.151Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 136,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "XYZ Dot Product",
          "_id": "522c98804b31fa536a00000c"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Use built-in node XYZ Components instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "xyz", "x", "y", "z" ],
      "white_list": false
    },
    {
      "_id": "521d8938e2f476ca05000047",
      "name": "Drop Last Row & Column From UV Field",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/bdd9ac07-5bfd-41f6-a6b3-2157c2d182c8gregPkg982.zip",
          "contents": "Drop Last Row And Column From UV Field - Drops the last row and column from a UV field",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:07:34.312Z",
          "full_dependency_versions": [ "0.1.7" ],
          "full_dependency_ids": [
            {
              "name": "Drop Last Row & Column From UV Field",
              "_id": "521d8938e2f476ca05000047"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.7",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:07:34.312Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 328,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Simple Patterning",
          "_id": "52adf18e9de41c823500005e"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "list", "drop", "row", "column", "uv" ],
      "white_list": false
    },
    {
      "_id": "522c98804b31fa536a00000c",
      "name": "XYZ Dot Product",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1f8f9d74-e391-4b6c-a24b-af4a61b153b6gregPkg357.zip",
          "contents": "XYZ Dot Product - Calculates the dot product of two XYZs",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2013-12-01T11:50:40.234Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "XYZ Dot Product",
              "_id": "522c98804b31fa536a00000c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-12-01T11:50:40.234Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 24,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Use the new built-in XYZ Dot Product node instead.",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "xyz", "dot", "product", "scalar", "product" ],
      "white_list": false
    },
    {
      "_id": "52be4efa9de41c8235000086",
      "name": "XYZ Z Less Than or Eq N",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1e87ed8f-f600-4fa3-95e7-413906036783gregPkg329.zip",
          "contents": "XYZ Z Less Than or Eq N - Checks if an XYZs Z  coordinate is Less Than or Equal to a number",
          "engine_metadata": "",
          "engine_version": "0.6.3.5258",
          "created": "2013-12-28T04:09:30.349Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "XYZ Z Less Than or Eq N",
              "_id": "52be4efa9de41c8235000086"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-12-28T04:09:30.349Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 75,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Checks if an XYZs Z  coordinate is Less Than or Equal to a number",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "sort", "compare", "xyz", "limit", "z", "coordinate" ],
      "white_list": false
    },
    {
      "_id": "52cc30f79f852b166e000009",
      "name": "Curry",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2fd195b8-83e0-4fec-9302-29653cbb3db1gregPkg4.zip",
          "contents": "Curry - Curries a 2-argument function",
          "engine_metadata": "",
          "engine_version": "0.6.3.19626",
          "created": "2014-01-07T16:53:11.786Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Curry",
              "_id": "52cc30f79f852b166e000009"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-01-07T16:53:11.786Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 79,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Steellworks",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Curries a 2-argument function into a 1-argument function that returns another 1-argument function.",
      "maintainers": [
        {
          "username": "stephen.elliott@autodesk.com",
          "_id": "5218d435e2f476ca0500002e"
        }
      ],
      "keywords": [ "higher", "order", "functional", "haskell" ],
      "white_list": false
    },
    {
      "_id": "5299e0fd9de41c823500001b",
      "name": "Wall Stuff",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b0db1f11-aa52-4d35-ab23-925bac0ed9e9gregPkg315.zip",
          "contents": "Filter Wall Type By Kind - Separates a list of wall types into several lists according to wall kind, Filter Wall Types By Function - Separates a list of wall types into several lists according to wall function, Filter Walls By Creation Method - Filters a list of walls by their method of creation., Get Curtain System Type - Retrieves the family type for a given curtain system instance., Get Wall Orientation - Gets the orientation of a given wall instance (normal of the exterior face of the wall). Will *not* work for walls hosted on mass faces or in-place walls., Get Wall Type - Gets the wall type of a given wall instance. ",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:48:34.066Z",
          "full_dependency_versions": [ "0.2.1", "0.1.5", "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Wall Stuff",
              "_id": "5299e0fd9de41c823500001b"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:48:34.066Z",
      "num_versions": 11,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 481,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Get Wall",
          "_id": "53340537bfe42595360000ee"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "wall", "type", "function", "basic", "curtain", "system", "stacked", "interior", "exterior", "foundation", "retaining", "soffit", "shaft", "creation", "method", "face", "in-place" ],
      "white_list": false
    },
    {
      "_id": "52d97f88bfe4259536000006",
      "name": "Named Collection",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b04a6f77-cfa2-4c58-adb8-c84d6effa83fgregPkg25.zip",
          "contents": "Create Collection - Creates a named dictionary object, Add To Collection - Sets a key equal to a value inside collection, Get Collection Name - Gets the name of a collection, Get Item From Collection At Key - Gets an item from a collection at key, Get Collection Keys - Gets all keys from a collection",
          "engine_metadata": "",
          "engine_version": "0.6.3.25815",
          "created": "2014-01-17T19:07:52.629Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Named Collection",
              "_id": "52d97f88bfe4259536000006"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-01-17T19:07:52.629Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 32,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Collections",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Set of nodes to store data in named dictionary objects implemented with python nodes",
      "maintainers": [
        {
          "username": "jin.shang@autodesk.com",
          "_id": "52d97f87bfe4259536000005"
        }
      ],
      "keywords": [ "list", "dictionary", "key", "value", "pair", "named" ],
      "white_list": false
    },
    {
      "_id": "52dda20bbfe425953600000d",
      "name": "pySetActiveFamilyParameter",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/517a72af-393e-4cfb-92bf-e7178350fb8fgregPkg864.zip",
          "contents": "pySetActiveFamilyParameter - Use python to Set Active Family Parameter Value",
          "engine_metadata": "",
          "engine_version": "0.6.3.5280",
          "created": "2014-01-20T22:24:11.706Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "pySetActiveFamilyParameter",
              "_id": "52dda20bbfe425953600000d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-01-20T22:24:11.706Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 95,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Revit.Familes",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Set Active Family Parameter from Python",
      "maintainers": [
        {
          "username": "dspeckhard@bcj.com",
          "_id": "52dda20abfe425953600000c"
        }
      ],
      "keywords": [ "active", "family" ],
      "white_list": false
    },
    {
      "_id": "52dda498bfe425953600000f",
      "name": "Set Family Parameter of Active Family",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/42234b2e-6ef7-446f-84ca-2b4b4763226fgregPkg962.zip",
          "contents": "Set Family Parameter of Active Family - Set Family Parameter of Active Family using Python",
          "engine_metadata": "",
          "engine_version": "0.6.3.5280",
          "created": "2014-01-20T22:37:12.559Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Set Family Parameter of Active Family",
              "_id": "52dda498bfe425953600000f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-01-20T22:37:12.559Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 130,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Revit.Families",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Set Family Parameter of Active Family using Python",
      "maintainers": [
        {
          "username": "dspeckhard@bcj.com",
          "_id": "52dda20abfe425953600000c"
        }
      ],
      "keywords": [ "set", "family", "parameter", "of", "active", "family", "using", "python" ],
      "white_list": false
    },
    {
      "_id": "52ded695bfe4259536000012",
      "name": "Set Active Family Parameter",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5ec52469-4f00-4043-8eb2-e32a330019fcgregPkg797.zip",
          "contents": "Set Active Family Parameter - Use a python script to Set Active Family Parameter",
          "engine_metadata": "",
          "engine_version": "0.6.3.5280",
          "created": "2014-01-21T20:20:37.462Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Set Active Family Parameter",
              "_id": "52ded695bfe4259536000012"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-01-21T20:20:37.462Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 413,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Revit.Families",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Use Python to Set a Parameter Value of the Active Family",
      "maintainers": [
        {
          "username": "dspeckhard@bcj.com",
          "_id": "52dda20abfe425953600000c"
        }
      ],
      "keywords": [ "set", "parameter" ],
      "white_list": false
    },
    {
      "_id": "52ded812bfe4259536000014",
      "name": "Get Active Family Parameter",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0be1cbf3-e603-4ec0-be3f-930f8aa3259fgregPkg904.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.6.3.5280",
          "created": "2014-01-21T20:26:58.951Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Get Active Family Parameter",
              "_id": "52ded812bfe4259536000014"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-01-21T20:26:58.951Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 425,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Revit.Families",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Use Python to Get a Paramete Value from an Active Family",
      "maintainers": [
        {
          "username": "dspeckhard@bcj.com",
          "_id": "52dda20abfe425953600000c"
        }
      ],
      "keywords": [ "get", "parameter", "active", "family", "python" ],
      "white_list": false
    },
    {
      "_id": "52e2736bbfe4259536000020",
      "name": "Quad Deflection",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7566f213-2c9f-4df9-9017-93f02ff1ac61gregPkg905.zip",
          "contents": "Quad Deflection - Measures the centerpoint deflection in a quadrilateral",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-01-24T14:06:35.575Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Quad Deflection",
              "_id": "52e2736bbfe4259536000020"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-01-24T14:06:35.575Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 215,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Measures the centerpoint deflection for each group of quads ",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "deflection", "analysis", "paneling" ],
      "white_list": false
    },
    {
      "_id": "52e42195bfe4259536000022",
      "name": "List Range Converter",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f9c895ae-c1f8-40f2-be57-0b4bc6afc907gregPkg613.zip",
          "contents": "List Range Converter - Takes a List lenth and allows a slider indexing",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-01-25T20:41:57.481Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "List Range Converter",
              "_id": "52e42195bfe4259536000022"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-01-25T20:41:57.481Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 108,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Convert a slider into the range of an input list",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "list", "convert", "ranges" ],
      "white_list": false
    },
    {
      "_id": "52e4f1bcbfe4259536000024",
      "name": "Approximate Ellipse with Arcs",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c76a3359-ffd3-465d-90be-694046a9c3c5gregPkg165.zip",
          "contents": "Approximate Ellipse with Arcs - Approximate and Ellipse with Arcs",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-01-26T11:30:04.359Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Approximate Ellipse with Arcs",
              "_id": "52e4f1bcbfe4259536000024"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-01-26T11:30:04.359Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 185,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Takes an Ellipse or series of Ellipses and outputs n number of arcs",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "ellipse", "rationalize", "arc", "shatter", "bound", "approximate" ],
      "white_list": false
    },
    {
      "_id": "52adf3419de41c8235000060",
      "name": "Get Group Instances",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7b4ae6c6-dd3c-43e6-a306-2f0f563fa86cgregPkg438.zip",
          "contents": "Get Group Instances - Retrieves all placed instances of groups in the project.",
          "engine_metadata": "",
          "engine_version": "0.6.3.5244",
          "created": "2014-01-27T21:04:45.130Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Get Group Instances",
              "_id": "52adf3419de41c8235000060"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-01-27T21:04:45.13Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 109,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Use built-in nodes Element types & All Elements Of Type instead.",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "groups", "instances" ],
      "white_list": false
    },
    {
      "_id": "52efca66bfe425953600003d",
      "name": "Insert Char in String",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/70e0f533-82a1-4271-b5a5-69d01b61fafbgregPkg305.zip",
          "contents": "Insert Char in String - Insert characters in a string by specifying a numeric position from the string start",
          "engine_metadata": "",
          "engine_version": "0.6.3.35252",
          "created": "2014-02-03T17:07:44.569Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Insert Char in String",
              "_id": "52efca66bfe425953600003d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-03T17:07:44.569Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 165,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "DoURevit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Insert Char(s) in List of Strings",
          "_id": "52efd735bfe4259536000042"
        }
      ],
      "num_dependents": 1,
      "description": "Insert characters in a string by specifying a numeric position from the string start",
      "maintainers": [
        {
          "username": "dourevit",
          "_id": "52efc471bfe425953600003a"
        }
      ],
      "keywords": [ "string" ],
      "white_list": false
    },
    {
      "_id": "52efd735bfe4259536000042",
      "name": "Insert Char(s) in List of Strings",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9cb3aec9-b052-4b69-aacf-0fc4cebbbe86gregPkg240.zip",
          "contents": "Insert Char(s) in List of Strings - Insert character(s) in a list of strings by specifying a numeric position from the string start",
          "engine_metadata": "",
          "engine_version": "0.6.3.35252",
          "created": "2014-02-03T17:51:49.704Z",
          "full_dependency_versions": [ "1.0.1", "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Insert Char(s) in List of Strings",
              "_id": "52efd735bfe4259536000042"
            },
            {
              "name": "Insert Char in String",
              "_id": "52efca66bfe425953600003d"
            }
          ],
          "direct_dependency_versions": [ "1.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "Insert Char in String",
              "_id": "52efca66bfe425953600003d"
            }
          ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-03T17:51:49.704Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 73,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "DoURevit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Insert character(s) in a list of strings by specifying a numeric position from the string start",
      "maintainers": [
        {
          "username": "dourevit",
          "_id": "52efc471bfe425953600003a"
        }
      ],
      "keywords": [ "string", "lists" ],
      "white_list": false
    },
    {
      "_id": "52f000e5bfe4259536000046",
      "name": "Set List Instance Parameters",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8c4bea37-d9fd-4878-9918-489e7d909668gregPkg364.zip",
          "contents": "Set List Instance Parameters - Set the instance parameters of elements in a list",
          "engine_metadata": "",
          "engine_version": "0.6.3.35252",
          "created": "2014-02-03T20:49:41.002Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Set List Instance Parameters",
              "_id": "52f000e5bfe4259536000046"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-03T20:49:41.002Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 639,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "DoURevit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Set the instance parameters of elements in a list",
      "maintainers": [
        {
          "username": "dourevit",
          "_id": "52efc471bfe425953600003a"
        }
      ],
      "keywords": [ "set", "instance", "parameter;", "list" ],
      "white_list": false
    },
    {
      "_id": "5226bb10e2f476ca0500005f",
      "name": "Law Of Cosines",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0c62542d-3475-48fe-96d2-fc1ac4704dc8gregPkg512.zip",
          "contents": "Angle By Law Of Cosines - Computes an angle of a triangle using the law of cosines. A is the opposite side of the triangle while B and C are the sides forming the angle., Opposite Side By Law Of Cosines - Computes the length of the missing side of a triangle using the law of cosines. Gamma is the angle between sides A and B.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:19:40.071Z",
          "full_dependency_versions": [ "0.1.7" ],
          "full_dependency_ids": [
            {
              "name": "Law Of Cosines",
              "_id": "5226bb10e2f476ca0500005f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.7",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:19:40.071Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 261,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Move XYZ From Plane To Plane",
          "_id": "522ca5244b31fa536a000012"
        },
        {
          "name": "Get Plane U And V Vectors",
          "_id": "523e879030e55dc52b00001a"
        },
        {
          "name": "Solve Triangle By XYZs",
          "_id": "52f098e2bfe425953600004d"
        },
        {
          "name": "Altitude And Azimuth From Vector",
          "_id": "532af328bfe42595360000e1"
        }
      ],
      "num_dependents": 4,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "law", "cosines", "angle", "side" ],
      "white_list": false
    },
    {
      "_id": "522ce04c4b31fa536a00001c",
      "name": "Filter List By Booleans",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2a37341e-5011-4ee1-afc3-efba4f993cd2gregPkg353.zip",
          "contents": "Filter List By Booleans - Filters a list by a list of booleans and filters out those elements that correspond to a boolean False.",
          "engine_metadata": "",
          "engine_version": "0.6.3.31052",
          "created": "2014-02-06T08:20:34.552Z",
          "full_dependency_versions": [ "0.2.1", "0.1.1", "0.1.7", "0.1.6", "0.1.2", "0.1.5", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Filter List By Booleans",
              "_id": "522ce04c4b31fa536a00001c"
            },
            {
              "name": "Equal List Lengths",
              "_id": "52a943ec9de41c8235000054"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "Get Highest And Lowest From List",
              "_id": "523a1d7830e55dc52b000003"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            }
          ],
          "direct_dependency_versions": [ "0.1.1", "0.1.2", "0.1.7", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Equal List Lengths",
              "_id": "52a943ec9de41c8235000054"
            },
            {
              "name": "Get Highest And Lowest From List",
              "_id": "523a1d7830e55dc52b000003"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-06T08:20:34.552Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 312,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Regular Expressions",
          "_id": "528cf98a3f7315936f000074"
        },
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        },
        {
          "name": "Count True And False",
          "_id": "52ad7ab39de41c8235000059"
        },
        {
          "name": "Revit API Helpers",
          "_id": "52d3f1219f852b166e000015"
        },
        {
          "name": "Phasing Stuff",
          "_id": "52e21705bfe425953600001a"
        }
      ],
      "num_dependents": 5,
      "description": "DEPRECATED - Use built-in node Filter By Boolean Mask instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "filter", "out", "list", "boolean" ],
      "white_list": false
    },
    {
      "_id": "52f3cdd7bfe425953600005f",
      "name": "If Null Replace With New Value",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/86a3276c-27c1-495c-8994-938ecbe62f3dgregPkg707.zip",
          "contents": "If Null Replace With New Value - replaces a null with a specified value.  Use with Map for lists",
          "engine_metadata": "",
          "engine_version": "0.6.3.31052",
          "created": "2014-02-06T18:00:55.397Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "If Null Replace With New Value",
              "_id": "52f3cdd7bfe425953600005f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-06T18:00:55.397Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1525,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Room Stuff",
          "_id": "52e217e8bfe425953600001c"
        },
        {
          "name": "Clockwork for Dynamo 0.6.3",
          "_id": "544730fdcc26bfdc5a0000db"
        },
        {
          "name": "Hollandaise",
          "_id": "54affe45dcee4dfd26000035"
        }
      ],
      "num_dependents": 3,
      "description": "replaces a null with a specified value.  Use with Map for lists",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "if", "null", "replace" ],
      "white_list": false
    },
    {
      "_id": "52f8801abfe4259536000067",
      "name": "Diagrid",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f4b2a321-4c4d-4c2d-aa0b-165a9ffed881gregPkg260.zip",
          "contents": "Diagrid - Creates a diagrid from a surface. Outputs UV, XYZ, facet points, and facets",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-02-10T21:03:49.946Z",
          "full_dependency_versions": [ "1.0.5" ],
          "full_dependency_ids": [
            {
              "name": "Diagrid",
              "_id": "52f8801abfe4259536000067"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-10T21:03:49.946Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 314,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a diagrid from a surface. Accepts: a face, a U-Count (integer), a V-Count (integer), Rotated flag (Boolean). It outputs UV (list), XYZ (list), facets points (list), line points (list), and lines (list).",
      "maintainers": [
        {
          "username": "jabi",
          "_id": "52f7ca85bfe4259536000064"
        }
      ],
      "keywords": [ "diagrid" ],
      "white_list": false
    },
    {
      "_id": "52fa1ad5bfe4259536000070",
      "name": "Alternating List",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f9bd3172-a00a-4179-9dac-19ebf9cfd040gregPkg16.zip",
          "contents": "Alternating List - Creates a list of positive and negative numbers.",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-02-11T12:43:01.799Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Alternating List",
              "_id": "52fa1ad5bfe4259536000070"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-11T12:43:01.799Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 53,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a list that alternates between a positive and a negative number. You can specify the length of the list (count), the number to alternate, and whether to start with the positive or negative version of the number (boolean). Example: Count = 5, Number = 20, start positive is TRUE creates [20, -20, 20, -20, 20]",
      "maintainers": [
        {
          "username": "jabi",
          "_id": "52f7ca85bfe4259536000064"
        }
      ],
      "keywords": [ "alternate", "positive", "negative" ],
      "white_list": false
    },
    {
      "_id": "52fd93b3bfe4259536000074",
      "name": "Valentine",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f893ae07-d199-4e07-be57-874f0d42353cgregPkg761.zip",
          "contents": "Valentine - Be Minez!",
          "engine_metadata": "",
          "engine_version": "0.6.3.22045",
          "created": "2014-02-14T03:55:31.231Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Valentine",
              "_id": "52fd93b3bfe4259536000074"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-14T03:55:31.231Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 71,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Be Minez! XOXO",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "valentine", "heart" ],
      "white_list": false
    },
    {
      "_id": "52fd75dbbfe4259536000072",
      "name": "Weave",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3e551a1a-6358-4363-ac44-6148e257cb13gregPkg101.zip",
          "contents": "Weave - Creates a Weave from a surface",
          "engine_metadata": "",
          "engine_version": "0.6.3.22045",
          "created": "2014-02-15T05:50:14.005Z",
          "full_dependency_versions": [ "1.0.1", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Weave",
              "_id": "52fd75dbbfe4259536000072"
            },
            {
              "name": "XYZ Grid From Face",
              "_id": "51fb8588e2f476ca0500001d"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "XYZ Grid From Face",
              "_id": "51fb8588e2f476ca0500001d"
            }
          ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-15T05:50:14.005Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 44,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Places a weaved set of points on a host surface. You can use NURBS splines to draw the lines and sweep etc to make solid pipes.",
      "maintainers": [
        {
          "username": "jabi",
          "_id": "52f7ca85bfe4259536000064"
        }
      ],
      "keywords": [ "weave", "weaving" ],
      "white_list": false
    },
    {
      "_id": "52ff017abfe4259536000077",
      "name": "Weave by Surface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/96ffc9c9-a1d8-4e83-be80-8d8cfbed1728gregPkg202.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.6.3.22045",
          "created": "2014-02-15T05:56:10.438Z",
          "full_dependency_versions": [ "1.0.0", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Weave by Surface",
              "_id": "52ff017abfe4259536000077"
            },
            {
              "name": "XYZ Grid From Face",
              "_id": "51fb8588e2f476ca0500001d"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "XYZ Grid From Face",
              "_id": "51fb8588e2f476ca0500001d"
            }
          ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-15T05:56:10.438Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 33,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a weave based on a surface. Specify the U-count, V-count, amplitude, and the isRotated boolean flag. It outputs a set of XYZs that you can feed to a NURBS Spline.  You can then apply sweep to make 3D solid weaved pipes.",
      "maintainers": [
        {
          "username": "jabi",
          "_id": "52f7ca85bfe4259536000064"
        }
      ],
      "keywords": [ "weave", "weaving" ],
      "white_list": false
    },
    {
      "_id": "52ff03fcbfe4259536000079",
      "name": "Weave By Surface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/94b6079a-e88a-4a0a-af07-a520d7ec7e26gregPkg231.zip",
          "contents": "Weave By Surface - Creates a Weave from a surface",
          "engine_metadata": "",
          "engine_version": "0.6.3.22045",
          "created": "2014-02-15T06:31:15.665Z",
          "full_dependency_versions": [ "1.0.3", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Weave By Surface",
              "_id": "52ff03fcbfe4259536000079"
            },
            {
              "name": "XYZ Grid From Face",
              "_id": "51fb8588e2f476ca0500001d"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "XYZ Grid From Face",
              "_id": "51fb8588e2f476ca0500001d"
            }
          ],
          "change_log": "",
          "version": "1.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-15T06:31:15.665Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 119,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a weave from a surface. It takes as input: a surface, U-count, V-count, amplitude, and the isRotated boolean flag. It outpus XYZs that you can feed to NURBS spline to create the weaved splines. You can then add a sweep to make solid weaved pipes.",
      "maintainers": [
        {
          "username": "jabi",
          "_id": "52f7ca85bfe4259536000064"
        }
      ],
      "keywords": [ "weave", "weaving" ],
      "white_list": false
    },
    {
      "_id": "52ff92c4bfe425953600007c",
      "name": "Curve Loop By Circle",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8d8211b0-fffc-4ae6-b222-1231b6c5c90fgregPkg830.zip",
          "contents": "Curve Loop By Circle - Creates a curve loop from a circle so that it can be used with other nodes (e.g. sweep)",
          "engine_metadata": "",
          "engine_version": "0.6.3.22045",
          "created": "2014-02-15T17:54:53.793Z",
          "full_dependency_versions": [ "1.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Curve Loop By Circle",
              "_id": "52ff92c4bfe425953600007c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-15T17:54:53.793Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 111,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a curve loop from a center (XYZ) and a radius (Number). It outputs a Curve loop (useful for sweep).",
      "maintainers": [
        {
          "username": "jabi",
          "_id": "52f7ca85bfe4259536000064"
        }
      ],
      "keywords": [ "curve", "loop", "circle", "sweep" ],
      "white_list": false
    },
    {
      "_id": "53001b42bfe4259536000082",
      "name": "Weather File Location",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e8f5cf4e-e653-4493-95cf-808b529bb1d9gregPkg688.zip",
          "contents": "Weather File Location - Gets the path to an EnergyPlus weather file (EPW) and returns location.",
          "engine_metadata": "",
          "engine_version": "0.6.3.22045",
          "created": "2014-02-16T01:58:26.121Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Weather File Location",
              "_id": "53001b42bfe4259536000082"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-16T01:58:26.121Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 244,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "m-asl",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Gets the path to an EnergyPlus weather file (EPW) and returns location.",
      "maintainers": [
        {
          "username": "mra1242@neo.tamu.edu",
          "_id": "53001b41bfe4259536000081"
        }
      ],
      "keywords": [ "weather", "energy" ],
      "white_list": false
    },
    {
      "_id": "52a08e5d9de41c8235000042",
      "name": "Get Normal By U And V Vectors",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4ba7e67b-7ad7-4218-8055-95dea92fa083gregPkg766.zip",
          "contents": "Get Normal By U And V Vectors - Derives a plane's normal based on its U and V vectors",
          "engine_metadata": "",
          "engine_version": "0.6.3.22045",
          "created": "2014-02-20T20:27:10.348Z",
          "full_dependency_versions": [ "0.1.3", "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "Get Normal By U And V Vectors",
              "_id": "52a08e5d9de41c8235000042"
            },
            {
              "name": "Standard Normals",
              "_id": "5201e0a8e2f476ca05000029"
            }
          ],
          "direct_dependency_versions": [ "0.1.3" ],
          "direct_dependency_ids": [
            {
              "name": "Standard Normals",
              "_id": "5201e0a8e2f476ca05000029"
            }
          ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-20T20:27:10.348Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 37,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Intersects For Divided Surfaces",
          "_id": "52a6db889de41c823500004f"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Use built-in node XYZ Cross Product instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "plane", "normal", "uv" ],
      "white_list": false
    },
    {
      "_id": "523e86b030e55dc52b000018",
      "name": "Correct Normal Orientation",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/13b1b6fd-5e8f-4e17-95e0-23ca5d64740cgregPkg939.zip",
          "contents": "Correct Normal Orientation - Inverts normal A if its inversion is closer to normal B",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T12:56:25.307Z",
          "full_dependency_versions": [ "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Correct Normal Orientation",
              "_id": "523e86b030e55dc52b000018"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T12:56:25.307Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 91,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "normal", "orientation", "correction", "invert", "inversion" ],
      "white_list": false
    },
    {
      "_id": "530da613bfe42595360000b1",
      "name": "TriangularShape2D",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/11eb848e-32df-4441-a103-c6f611ff1a17gregPkg682.zip",
          "contents": "TriangularShape2D - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.33276",
          "created": "2014-02-26T08:30:11.408Z",
          "full_dependency_versions": [ "0.6.3" ],
          "full_dependency_ids": [
            {
              "name": "TriangularShape2D",
              "_id": "530da613bfe42595360000b1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.6.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-26T08:30:11.408Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 70,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Input you Coordinate System and this custom node will create Traingular shape with given width and height.",
      "maintainers": [
        {
          "username": "critesh",
          "_id": "530da612bfe42595360000b0"
        }
      ],
      "keywords": [ "shape" ],
      "white_list": false
    },
    {
      "_id": "530f6318bfe42595360000b4",
      "name": "Get Host ID for Analytical member",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9c0d9fe1-db8a-4e7f-b0af-0e7d8a7ded5cgregPkg727.zip",
          "contents": "Get Host ID for Analytical member - Get ID of analytical model host",
          "engine_metadata": "",
          "engine_version": "0.6.3.20252",
          "created": "2014-02-27T16:08:56.925Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Get Host ID for Analytical member",
              "_id": "530f6318bfe42595360000b4"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-02-27T16:08:56.925Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 170,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Provides structural host ID for analytical members",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "analytical", "model", "host", "id" ],
      "white_list": false
    },
    {
      "_id": "5315cdefbfe42595360000b6",
      "name": "Get Linked Documents",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c888f592-9ee9-4f13-ace4-8a201601d331gregPkg236.zip",
          "contents": "Get Linked Documents - Gives Revit Links, file names and position information",
          "engine_metadata": "",
          "engine_version": "0.6.3.38253",
          "created": "2014-03-04T12:58:23.945Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Get Linked Documents",
              "_id": "5315cdefbfe42595360000b6"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-03-04T12:58:23.945Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1168,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Get the linked documents, names and links instances in the project",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "link", "document", "linked", "files" ],
      "white_list": false
    },
    {
      "_id": "5315ce42bfe42595360000b8",
      "name": "Get Family Instances from Revit link",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/18287725-801a-438e-9967-a6d785467a7fgregPkg286.zip",
          "contents": "Get Family Instances from Revit link - Selects in a linked file the instances of a given category",
          "engine_metadata": "",
          "engine_version": "0.6.3.38253",
          "created": "2014-03-04T12:59:46.851Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Get Family Instances from Revit link",
              "_id": "5315ce42bfe42595360000b8"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-03-04T12:59:46.851Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 1176,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "From Category and linked document, returns list of family instances and position offset",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "select", "family", "linked", "file" ],
      "white_list": false
    },
    {
      "_id": "531d601fbfe42595360000c8",
      "name": "Vector by altitude and azimuth",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a3a4abd3-57e6-4c7a-923f-7689b970b1begregPkg862.zip",
          "contents": "Vector by altitude and azimuth - XYZ unit vector by altitude (-90° - 90°) and azimuth (0° - 360°) with positive Y-axis as North, positive Z-axis as up.",
          "engine_metadata": "",
          "engine_version": "0.6.3.37653",
          "created": "2014-03-10T06:47:59.194Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Vector by altitude and azimuth",
              "_id": "531d601fbfe42595360000c8"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-03-10T06:47:59.194Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 63,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Unit vector by altitude (-90° to +90°) and azimuth (0° to 360°) with +Y as north and +Z as up.",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "unit", "vector", "azimuth", "altitude" ],
      "white_list": false
    },
    {
      "_id": "531c3a74bfe42595360000c3",
      "name": "Cull List - Binary String",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8113f98f-2f12-41d1-8729-d05b1a7d5bb5gregPkg224.zip",
          "contents": "Cull-Pattern-Binary-String - Cull a list with a string of 0s & 1s (NO SPACES)",
          "engine_metadata": "",
          "engine_version": "0.6.3.38253",
          "created": "2014-03-10T14:43:09.669Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Cull List - Binary String",
              "_id": "531c3a74bfe42595360000c3"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-03-10T14:43:09.669Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 94,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "CASE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Remove Items from a List using a Binary String Pattern (no spaces) (e.g., \"0110\")",
      "maintainers": [
        {
          "username": "s.edwards",
          "_id": "5315dbcabfe42595360000bb"
        }
      ],
      "keywords": [ "cull", "list", "pattern" ],
      "white_list": false
    },
    {
      "_id": "531c550dbfe42595360000c5",
      "name": "Cull Every Nth Item",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9cc283e9-997f-43fe-b5e7-df6913cf7be7gregPkg107.zip",
          "contents": "Cull Every Nth Item - Remove Every Nth Item in a List",
          "engine_metadata": "",
          "engine_version": "0.6.3.38253",
          "created": "2014-03-10T14:43:27.682Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Cull Every Nth Item",
              "_id": "531c550dbfe42595360000c5"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-03-10T14:43:27.682Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 72,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "CASE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Removes Every Nth Item from a List",
      "maintainers": [
        {
          "username": "s.edwards",
          "_id": "5315dbcabfe42595360000bb"
        }
      ],
      "keywords": [ "cull", "list", "modify" ],
      "white_list": false
    },
    {
      "_id": "531e0ac3bfe42595360000ce",
      "name": "Sub Modular Increment",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f9d61c5e-f4cb-4d56-b20f-8b6c0b9164f6gregPkg272.zip",
          "contents": "cxd - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-03-10T18:56:03.050Z",
          "full_dependency_versions": [ "0.6.2" ],
          "full_dependency_ids": [
            {
              "name": "Sub Modular Increment",
              "_id": "531e0ac3bfe42595360000ce"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.6.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-03-10T18:56:03.05Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 41,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Submodular Increment",
      "maintainers": [
        {
          "username": "manav.mahan.singh@live.in",
          "_id": "531e0ac2bfe42595360000cd"
        }
      ],
      "keywords": [ "modular", "coordination" ],
      "white_list": false
    },
    {
      "_id": "531e8348bfe42595360000d1",
      "name": "Arc Radius",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7781c205-5155-4e1b-a743-2d8153457c96gregPkg617.zip",
          "contents": "Arc Radius - Returns Arc Radius",
          "engine_metadata": "",
          "engine_version": "0.6.3.5244",
          "created": "2014-03-11T19:41:05.780Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Arc Radius",
              "_id": "531e8348bfe42595360000d1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-03-11T19:41:05.78Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 64,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Gets radius of an arc or multiple if passed a list of arcs.",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "arc", "radius" ],
      "white_list": false
    },
    {
      "_id": "531f67afbfe42595360000d5",
      "name": "Arc Length",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/aa9d8cd2-26b4-42bd-935b-715101f80a2egregPkg197.zip",
          "contents": "Arc Length - Returns Arc Radius",
          "engine_metadata": "",
          "engine_version": "0.6.3.5244",
          "created": "2014-03-11T19:44:47.177Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Arc Length",
              "_id": "531f67afbfe42595360000d5"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-03-11T19:44:47.177Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 82,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "outputs arc length or a list of arc lengths if passed a list",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "arc", "length" ],
      "white_list": false
    },
    {
      "_id": "53316917bfe42595360000e7",
      "name": "Concat List of Strings",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/be5c79bd-5c7a-41ad-aad7-97e7badfe792gregPkg264.zip",
          "contents": "Concat List of Strings - Concatenate Two or More List of Strings",
          "engine_metadata": "",
          "engine_version": "0.6.3.38253",
          "created": "2014-03-25T11:31:35.468Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Concat List of Strings",
              "_id": "53316917bfe42595360000e7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-03-25T11:31:35.468Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 124,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "CASE Inc.",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Concatenate a Nested List of Strings",
      "maintainers": [
        {
          "username": "s.edwards",
          "_id": "5315dbcabfe42595360000bb"
        }
      ],
      "keywords": [ "concat", "concatenate", "string", "strings", "join" ],
      "white_list": false
    },
    {
      "_id": "5331b87cbfe42595360000ea",
      "name": "07. Scale tower",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/40a5c364-aa3e-4285-ab82-cb9e91d2a83dgregPkg300.zip",
          "contents": "07. Scale tower - Custom",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-03-25T17:23:24.909Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "07. Scale tower",
              "_id": "5331b87cbfe42595360000ea"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-03-25T17:23:24.909Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 78,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Custom node",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing for creating package",
      "maintainers": [
        {
          "username": "illya.glukhanuk@autodesk.com",
          "_id": "5331b87bbfe42595360000e9"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53340537bfe42595360000ee",
      "name": "Get Wall",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/71326f2b-88d8-4fad-b0ea-3b4aa8a926aagregPkg207.zip",
          "contents": "Get Wall - Get all elements of Type Wall, Concatenate Walltype and Type_Lib  - concenates Walltype and Type_lib in Kommentar",
          "engine_metadata": "",
          "engine_version": "0.6.3.43068",
          "created": "2014-03-27T11:02:15.217Z",
          "full_dependency_versions": [ "0.0.1", "0.2.0", "0.1.5", "0.1.2", "0.1.5", "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "Get Wall",
              "_id": "53340537bfe42595360000ee"
            },
            {
              "name": "Wall Stuff",
              "_id": "5299e0fd9de41c823500001b"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.2.0", "0.1.5", "0.1.2", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Wall Stuff",
              "_id": "5299e0fd9de41c823500001b"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-03-27T11:02:15.217Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 228,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "KOP",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Selects Walls in Active Document",
      "maintainers": [
        {
          "username": "office@kompolschek.at",
          "_id": "53340534bfe42595360000ed"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53391848bfe42595360000f5",
      "name": "Create Unplaced Room at Phase",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/89286dfd-ea32-4617-891c-771e41959ff7gregPkg835.zip",
          "contents": "Create Unplaced Room at Phase - Create unplaced rooms at given phase(s)",
          "engine_metadata": "",
          "engine_version": "0.6.3.21482",
          "created": "2014-03-31T07:24:56.228Z",
          "full_dependency_versions": [ "0.0.1", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Create Unplaced Room at Phase",
              "_id": "53391848bfe42595360000f5"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-03-31T07:24:56.228Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 146,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create unplaced room(s) at the given phase(s)",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "room", "unplaced", "phase" ],
      "white_list": false
    },
    {
      "_id": "533dec780e5572016a000004",
      "name": "Filter Selection by Family Type",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a1ba1b05-b7bc-47c0-b525-87db56b7c451gregPkg683.zip",
          "contents": "Filter Selection by Family Type - Filters a selection set (Select Elements) by Family Type (Select Family Type). Output \"In\" contains a list of all Instances of the Family Type. Output \"Out\" contains a list of all Instances that are not of the Family Type.",
          "engine_metadata": "",
          "engine_version": "0.6.3.13068",
          "created": "2014-04-03T23:19:20.534Z",
          "full_dependency_versions": [ "1.0.0", "0.1.4", "0.1.5", "0.1.5", "0.1.0", "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Filter Selection by Family Type",
              "_id": "533dec780e5572016a000004"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.4", "0.1.2", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            }
          ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-03T23:19:20.534Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 384,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Revit.Families",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Filters a selection set (Select Elements) by Family Type (Select Family Type).\r\n\r\nOutput \"In\" contains a list of all Instances of the Family Type. Output \"Out\" contains a list of all Instances that are not of the Family Type.\r\n\r\nMy thanks to andydandy (author of the Get Name node) for making this possible.",
      "maintainers": [
        {
          "username": "GMcDowellJr",
          "_id": "52adfadd9de41c8235000062"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53315d5ebfe42595360000e5",
      "name": "Duplicate Data",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2c7f012d-235b-43af-9f38-3493030ac8efgregPkg173.zip",
          "contents": "Duplicate Data - Duplicate data a predefined number of times. ",
          "engine_metadata": "",
          "engine_version": "0.6.3.38253",
          "created": "2014-04-04T11:52:14.750Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Duplicate Data",
              "_id": "53315d5ebfe42595360000e5"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-04T11:52:14.75Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 150,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "CASE Inc.",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Duplicate data (object OR list) a defined number of times",
      "maintainers": [
        {
          "username": "s.edwards",
          "_id": "5315dbcabfe42595360000bb"
        }
      ],
      "keywords": [ "duplicate", "list", "data", "repeat" ],
      "white_list": false
    },
    {
      "_id": "53420f950e5572016a00000a",
      "name": "Family Transform",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ec307ff3-d0cb-45be-b745-4534bf8be4f3gregPkg424.zip",
          "contents": "Family Transform - Extracts transformation matrix from family instance. ",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-04-07T02:38:13.827Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Family Transform",
              "_id": "53420f950e5572016a00000a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-07T02:38:13.827Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 272,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Exctracts instance family transformation matrix. Useful with determining family instance orientation. ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#transform", "#family", "#instance" ],
      "white_list": false
    },
    {
      "_id": "534369d20e5572016a00000e",
      "name": "Combine by Pattern",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c7a486cb-db19-48e5-9b98-83551801f0c2gregPkg381.zip",
          "contents": "Combine by Pattern - Combines lists by pattern of True and False where False (0) adds item from list 0 to the resultant list while True (1) adds item from list 1 to the resultant list. ",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-04-08T03:22:09.865Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Combine by Pattern",
              "_id": "534369d20e5572016a00000e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-08T03:22:09.865Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 105,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Combines lists by pattern of True and False where False (0) adds item from list 0 to the resultant list while True (1) adds item from list 1 to the resultant list. ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#combine", "#pattern", "#list" ],
      "white_list": false
    },
    {
      "_id": "53438e300e5572016a000011",
      "name": "Angles to XYZs about a point",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2da18d29-a4af-477e-89fc-c50cba84d444gregPkg147.zip",
          "contents": "Angles to XYZs about a point - Find the angle to an XYZ (0 - 2pi, with x-axis = 0) about a center point in a plane parallel to the XY plane",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-04-08T05:50:40.997Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Angles to XYZs about a point",
              "_id": "53438e300e5572016a000011"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-08T05:50:40.997Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 115,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Misc",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Find the angles to points in the XY plane about a center point.  Reported 0 - 2pi with angle = 0 at positive x-axis",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53438e660e5572016a000013",
      "name": "Sort list by a key list",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e34d22c6-abb9-4811-bbe3-e78204a0bfc2gregPkg459.zip",
          "contents": "Sort list by a key list - Sort a list in the same manner as the key list",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-04-08T05:51:34.547Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Sort list by a key list",
              "_id": "53438e660e5572016a000013"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-08T05:51:34.547Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 213,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Misc",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Sort a list in the same order as a key list would be sorted.",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "sort", "key" ],
      "white_list": false
    },
    {
      "_id": "5346c32a0e5572016a000015",
      "name": "Replace List Item",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7e27ba1b-bccf-4147-bdf9-81f1db08fe1cgregPkg388.zip",
          "contents": "Replace List Item - Replace an item in a list with a new value",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-04-10T16:13:30.201Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Replace List Item",
              "_id": "5346c32a0e5572016a000015"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-10T16:13:30.201Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 197,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Replace the element in a list with a new value",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "replace" ],
      "white_list": false
    },
    {
      "_id": "534fdb040e5572016a00001b",
      "name": "GetWorksets",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b5d62b46-502a-4ae9-a1b5-68eb46d661ecgregPkg890.zip",
          "contents": "GetWorksets - Query an active project for all User Worksets and their ID's. ",
          "engine_metadata": "",
          "engine_version": "0.6.3.5244",
          "created": "2014-04-17T13:45:40.926Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "GetWorksets",
              "_id": "534fdb040e5572016a00001b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-17T13:45:40.926Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 715,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Query an active document for all User Worksets and their IDs. ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#workset", "#worksetid" ],
      "white_list": false
    },
    {
      "_id": "534fde580e5572016a00001d",
      "name": "Workset ID from Element",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8ce4aa86-dd20-4dcb-ae09-5d2403ab28d7gregPkg100.zip",
          "contents": "Workset ID from Element - Returns a Workset ID of an Element.  ",
          "engine_metadata": "",
          "engine_version": "0.6.3.5244",
          "created": "2014-04-17T13:59:52.995Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Workset ID from Element",
              "_id": "534fde580e5572016a00001d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-17T13:59:52.995Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 280,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Returns a Workset ID that owns a given Element. ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#workset", "#worksetid", "#element" ],
      "white_list": false
    },
    {
      "_id": "535408ca0e5572016a000020",
      "name": "Create Lists from Comma-Delimited Strings",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/30f69862-7b97-4548-a83a-a3a5e6d52317gregPkg244.zip",
          "contents": "List of Numbers from Comma-Delimited String - Converts a string of comma-delimited numbers into a list of numbers, List of Strings from Comma-Delimited String - Create a list of strings from a single comma-delimited string",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-04-20T17:50:02.318Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Create Lists from Comma-Delimited Strings",
              "_id": "535408ca0e5572016a000020"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-20T17:50:02.318Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 117,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Package contains two nodes to create lists from a text string:\r\n\r\n1) \"List of Numbers from Comma-Delimited String\" - creates list of numbers from string of numbers separated by commas\r\nExample:  inputting the string \"1,1,2,3,5,8\" creates the following list of six numbers: [1,1,2,3,5,8]\r\n\r\n2) \"List of Strings from Comma-Delimited String\" - creates list of text strings from string of text separated by commas\r\nExample:  inputting the string \"length,width,height\" creates the following list of three strings: [\"length\",\"width\",\"height\"]\r\n",
      "maintainers": [
        {
          "username": "J12design",
          "_id": "535408c90e5572016a00001f"
        }
      ],
      "keywords": [ "list", "create", "numbers", "strings" ],
      "white_list": false
    },
    {
      "_id": "535410fb0e5572016a000022",
      "name": "Set Multiple Family Instance Parameters",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1051bf27-45a9-4cf2-9ddb-357038190542gregPkg79.zip",
          "contents": "Set Multiple Family Instance Parameters - Set multiple family instance parameters by inputting a list of parameter names and a corresponding list of parameter values.",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-04-20T18:24:59.695Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Set Multiple Family Instance Parameters",
              "_id": "535410fb0e5572016a000022"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-20T18:24:59.695Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 735,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Set multiple Family Instance parameters in one step by inputting a list of parameter names and a list of corresponding parameter values.\r\n\r\nExample:\r\ninput 1:  a Family Instance\r\ninput 2:  [\"Length\",\"Width\",\"Height\"]\r\ninput 3:  [2.5,5.25,3]\r\noutput:  the Family Instance is modified so that it has a length of 2.5, a width of 5.25, and a height of 3.\r\n\r\nNotes:\r\n- this version does not check to see if the inputs are valid\r\n- the node uses a recursive loop to set the parameters\r\n- parameters are set in the order of the input lists, so the node will not work if conflicting parameters are set out of order\r\n",
      "maintainers": [
        {
          "username": "J12design",
          "_id": "535408c90e5572016a00001f"
        }
      ],
      "keywords": [ "set", "multiple", "family", "instance", "parameters" ],
      "white_list": false
    },
    {
      "_id": "53574ab60e5572016a000026",
      "name": "JBE sheet views",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b57394f9-0d5a-471d-96e1-025819e54f17gregPkg916.zip",
          "contents": "JBE sheet views - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-04-23T05:08:06.205Z",
          "full_dependency_versions": [ "0.0.1", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "JBE sheet views",
              "_id": "53574ab60e5572016a000026"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-23T05:08:06.205Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 774,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "create multiple sheets from lists input",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "sheet", "view", "creation" ],
      "white_list": false
    },
    {
      "_id": "53597c620e5572016a000028",
      "name": "List-Sublist Length",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f943bd19-1833-469d-aad2-a5d32f74b6c1gregPkg47.zip",
          "contents": "List is Null - No description provided, List-Sublist Length - Returns the length of a single list or the lengths of multiple sublists.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-04-24T21:04:34.599Z",
          "full_dependency_versions": [ "1.0.0", "0.1.1", "0.1.6", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "List-Sublist Length",
              "_id": "53597c620e5572016a000028"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            }
          ],
          "direct_dependency_versions": [ "0.1.6", "0.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            }
          ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-24T21:04:34.599Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 138,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Core.Lists.Evaluate",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Ensure List is Sublist",
          "_id": "53597cf60e5572016a00002c"
        },
        {
          "name": "Flatten if Sublist",
          "_id": "535a9c7d0e5572016a000030"
        }
      ],
      "num_dependents": 2,
      "description": "Returns the length of a single list or the lengths of multiple sublists.",
      "maintainers": [
        {
          "username": "GMcDowellJr",
          "_id": "52adfadd9de41c8235000062"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53597cb60e5572016a00002a",
      "name": "Build Irregular Sublists w Error Checking",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7bd29fec-5222-4bb7-91ee-8db6845d7930gregPkg237.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-04-24T21:05:58.464Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Build Irregular Sublists w Error Checking",
              "_id": "53597cb60e5572016a00002a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-24T21:05:58.464Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 28,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Turns a list into a list of lists with sublists of varying lengths.\r\n\r\nChecks \"lengths\" input for single or multiple numbers. If  single number it returns a sublist with the original list as the only entry. If multiple numbers it returns as above.",
      "maintainers": [
        {
          "username": "GMcDowellJr",
          "_id": "52adfadd9de41c8235000062"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53597cf60e5572016a00002c",
      "name": "Ensure List is Sublist",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/51b294d4-984e-4da0-9798-8a28397e0537gregPkg278.zip",
          "contents": "Ensure List is Sublist - Ensures a list is in the form of a sublist. If not it converts the input list into a one level sublist.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-04-24T21:07:02.683Z",
          "full_dependency_versions": [ "1.0.0", "0.1.1", "1.0.0", "0.1.6", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Ensure List is Sublist",
              "_id": "53597cf60e5572016a00002c"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "List-Sublist Length",
              "_id": "53597c620e5572016a000028"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            }
          ],
          "direct_dependency_versions": [ "0.1.6", "1.0.0", "0.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "List-Sublist Length",
              "_id": "53597c620e5572016a000028"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            }
          ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-24T21:07:02.683Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 14,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Core.Lists.Evaluate",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Ensures a list is in the form of a sublist. If not it converts the input list into a one level sublist.",
      "maintainers": [
        {
          "username": "GMcDowellJr",
          "_id": "52adfadd9de41c8235000062"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5359e3c60e5572016a00002e",
      "name": "GH Point to DY Point",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/cdb46b53-e3e2-42f5-af40-4ead8e109162gregPkg353.zip",
          "contents": "GH Point to DY Point - Input a text file's contents which contain an output list of points from grasshopper. This function will take that single block of text, break it up per linebreak, remove the {}, and extract the xyz values and create a new matching Dynamo point.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-04-25T04:25:42.432Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "GH Point to DY Point",
              "_id": "5359e3c60e5572016a00002e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-25T04:25:42.432Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 129,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Grasshopper",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Input a text file's contents which contain an output list of points from grasshopper. This function will take that single block of text, break it up per linebreak, remove the {}, and extract the xyz values and create a new matching Dynamo point.",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#grasshopper", "#point" ],
      "white_list": false
    },
    {
      "_id": "535a9c7d0e5572016a000030",
      "name": "Flatten if Sublist",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7ee74af0-356f-417c-ba7e-da138f0af9f5gregPkg49.zip",
          "contents": "Flatten if Sublist - Checks a list to see if it is a sublist. If it is it flattens the list one level. If not it returns the original list.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-04-25T23:32:41.256Z",
          "full_dependency_versions": [ "1.0.1", "1.0.0", "0.1.1", "0.1.6", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Flatten if Sublist",
              "_id": "535a9c7d0e5572016a000030"
            },
            {
              "name": "List-Sublist Length",
              "_id": "53597c620e5572016a000028"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            }
          ],
          "direct_dependency_versions": [ "1.0.0", "0.1.6", "0.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "List-Sublist Length",
              "_id": "53597c620e5572016a000028"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            }
          ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-25T23:32:41.256Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 74,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Core.Lists.Modify",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Turn into List seems to do the same thing...\r\n\r\nChecks a list to see if it is a sublist. If it is it flattens the list \r\none level. If not it returns the original list.",
      "maintainers": [
        {
          "username": "GMcDowellJr",
          "_id": "52adfadd9de41c8235000062"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "535e302e0e5572016a000035",
      "name": "Purge Line Pattern",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/425e6a3f-b560-4a72-8cf6-2a08940e9598gregPkg97.zip",
          "contents": "Purge Line Pattern - purge line patterns from document by a string key",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-04-28T10:40:46.857Z",
          "full_dependency_versions": [ "0.0.1", "0.1.4", "0.1.5", "0.2.0", "0.1.5", "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Purge Line Pattern",
              "_id": "535e302e0e5572016a000035"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "direct_dependency_versions": [ "0.2.0", "0.1.4", "0.1.2", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-28T10:40:46.857Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 158,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "purge line patterns in the document from a regular expression match",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "python", "purge", "line", "pattern", "jbe" ],
      "white_list": false
    },
    {
      "_id": "535eb4340e5572016a000037",
      "name": "FAR Color Overrides",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/334c6f8e-0b6f-48b1-87ae-7639c63a4b67gregPkg794.zip",
          "contents": "FAR - Floor Area Ratio calculator, FAR Color Overrides - Calculates the Floor Area Ratio of a Mass (building) to a Surface (site)",
          "engine_metadata": "",
          "engine_version": "0.6.3.21482",
          "created": "2014-04-28T20:04:04.330Z",
          "full_dependency_versions": [ "1.0.0", "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "FAR Color Overrides",
              "_id": "535eb4340e5572016a000037"
            },
            {
              "name": "Standard Colours",
              "_id": "52b162fb9de41c823500006c"
            }
          ],
          "direct_dependency_versions": [ "0.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "Standard Colours",
              "_id": "52b162fb9de41c823500006c"
            }
          ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-28T20:04:04.33Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 129,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "sdb Tools",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Calculates the Floor Area Ratio of a Mass (building) to a Surface (site)",
      "maintainers": [
        {
          "username": "sburke@nbbj.com",
          "_id": "523b9a3230e55dc52b00000a"
        }
      ],
      "keywords": [ "floor", "area", "ratio" ],
      "white_list": false
    },
    {
      "_id": "5342111d0e5572016a00000c",
      "name": "Rotate Family",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c36f7ec0-8ffd-4160-a379-e29a7e5cc2cegregPkg25.zip",
          "contents": "Rotate Family - Rotates Family in a Project around Z axis from its origin point and specified angle",
          "engine_metadata": "",
          "engine_version": "0.6.3.5244",
          "created": "2014-04-30T13:51:00.421Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Rotate Family",
              "_id": "5342111d0e5572016a00000c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-04-30T13:51:00.421Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 391,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Rotates family instance by given angle around given axis. Note that family will be rotated every time you hit run. ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#rotate", "#family" ],
      "white_list": false
    },
    {
      "_id": "5364cf7b0e5572016a00003f",
      "name": "Structural Framing from lists of curves",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7c633897-75a4-47e2-8876-776c6709784agregPkg935.zip",
          "contents": "Structural Framing from lists of curves - Creates Structural Framing elements in Revit from lists of curves with up-vector vertical.",
          "engine_metadata": "",
          "engine_version": "0.6.3.21482",
          "created": "2014-05-03T11:14:03.495Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Structural Framing from lists of curves",
              "_id": "5364cf7b0e5572016a00003f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-03T11:14:03.495Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 411,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates Structural Framing elements in Revit from lists of curves with up-vector vertical.",
      "maintainers": [
        {
          "username": "vasshaug",
          "_id": "53182dc0bfe42595360000c1"
        }
      ],
      "keywords": [ "structural", "framing", "productivity" ],
      "white_list": false
    },
    {
      "_id": "536530030e5572016a000042",
      "name": "Flip Image Vertically",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1ffbbfca-9e5a-4207-9ccf-24a063ee675egregPkg858.zip",
          "contents": "Flip Image Vertically - Takes Image, flips vertically. ",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-03T18:05:55.797Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Flip Image Vertically",
              "_id": "536530030e5572016a000042"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-03T18:05:55.797Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 43,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Takes an Image, already mirrored, flips it across the X - Axis",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "536530940e5572016a000044",
      "name": "Mirror Image to Wall Correctly",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9bec626f-adc9-4586-8695-47bfbcab1b75gregPkg743.zip",
          "contents": "Mirror Image to Wall Correctly - Takes an image, Mirrors it properly on a wall ",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-03T18:08:20.175Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Mirror Image to Wall Correctly",
              "_id": "536530940e5572016a000044"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-03T18:08:20.175Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 48,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Takes an image and mirrors on to wall going left to right",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "536530b90e5572016a000046",
      "name": "Flips Image Horizontally",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/16f1fe27-291a-4aa4-bfd4-2a858bddc7degregPkg120.zip",
          "contents": "Flips Image Horizontally - Flips along the Y-Axis ",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-03T18:08:57.454Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Flips Image Horizontally",
              "_id": "536530b90e5572016a000046"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-03T18:08:57.454Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 38,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Takes an image, already mirrored correctly, and flips it about the Y-Axis",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "536d3fe30e5572016a00004c",
      "name": "Unplace Redundant Rooms",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/40c6af32-a1dd-43dd-ae3e-da32d33c60b0gregPkg485.zip",
          "contents": "Unplace Redundant Rooms - Unplaces rooms that area is equal to 0 (thus redundant)",
          "engine_metadata": "",
          "engine_version": "0.6.3.5244",
          "created": "2014-05-09T20:51:47.260Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Unplace Redundant Rooms",
              "_id": "536d3fe30e5572016a00004c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-09T20:51:47.26Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 116,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Unplaces Redundant Rooms. It does not actually delete them from the project, so they will still be available from the dropdown when creating a new room. ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#room", "#unplace", "#redundant" ],
      "white_list": false
    },
    {
      "_id": "536e51150e5572016a00004e",
      "name": "Eraser by Name",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e437fae9-51ac-4305-abf8-52c3acab98bfgregPkg523.zip",
          "contents": "Eraser by Name - Erase things matching a Regular expression",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-10T16:17:25.535Z",
          "full_dependency_versions": [ "0.0.1", "0.2.0", "0.1.5", "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Eraser by Name",
              "_id": "536e51150e5572016a00004e"
            },
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.2.0", "0.1.5", "0.1.2", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-10T16:17:25.535Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 131,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Delete things matching a regular expression",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "delete", "purge", "erase", "regular", "expression" ],
      "white_list": false
    },
    {
      "_id": "52b2d8659de41c823500006f",
      "name": "Get And Set Name",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2d4e9e3c-655c-4e24-9634-6f2f06398e01gregPkg847.zip",
          "contents": "Get Name - Gets the name of a given Revit element (if possible), Set Name - Gets the name of a given Revit element",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:45:37.282Z",
          "full_dependency_versions": [ "0.1.6", "0.1.5", "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.1.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:45:37.282Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2385,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Phasing Stuff",
          "_id": "52e21705bfe425953600001a"
        },
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        },
        {
          "name": "Room Stuff",
          "_id": "52e217e8bfe425953600001c"
        },
        {
          "name": "Get Wall",
          "_id": "53340537bfe42595360000ee"
        },
        {
          "name": "Filter Selection by Family Type",
          "_id": "533dec780e5572016a000004"
        },
        {
          "name": "Purge Line Pattern",
          "_id": "535e302e0e5572016a000035"
        },
        {
          "name": "Eraser by Name",
          "_id": "536e51150e5572016a00004e"
        },
        {
          "name": "Override Element in View",
          "_id": "536fda510e5572016a000050"
        },
        {
          "name": "Place Groups at XYZ",
          "_id": "537749570e5572016a000062"
        },
        {
          "name": "Hot Gear",
          "_id": "55e90085662bf0e908000142"
        }
      ],
      "num_dependents": 10,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "get", "set", "name" ],
      "white_list": false
    },
    {
      "_id": "5377a6a00e5572016a000065",
      "name": "Get Items At Indicies",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/49e9a32a-f0f9-4605-94c9-3e5fa4d43469gregPkg869.zip",
          "contents": "Get Items At Indicies - Get Multiple From List",
          "engine_metadata": "",
          "engine_version": "0.6.3.38003",
          "created": "2014-05-17T18:12:48.461Z",
          "full_dependency_versions": [ "0.0.1", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Get Items At Indicies",
              "_id": "5377a6a00e5572016a000065"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-17T18:12:48.461Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 95,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Core.Lists",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Gets multiple items from list of indicies from a list",
      "maintainers": [
        {
          "username": "holyjewsus",
          "_id": "5377a69f0e5572016a000064"
        }
      ],
      "keywords": [ "items", "multiple", "get", "from", "list" ],
      "white_list": false
    },
    {
      "_id": "53783a280e5572016a000067",
      "name": "UV Quads on Surface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5ea4f2a5-b3e5-4b10-b6da-e93c80b4ad4cgregPkg456.zip",
          "contents": "UV Quads on Surface - Create groups of 4 points from a grid on a surface",
          "engine_metadata": "",
          "engine_version": "0.7.0.16660",
          "created": "2014-05-18T04:42:16.034Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "UV Quads on Surface",
              "_id": "53783a280e5572016a000067"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-18T04:42:16.034Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -19,
      "downloads": 1949,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Find groups of 4 points describing cells in a rectangular grid on a surface.   Orders quads by row",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "quads", "grid", "uv", "adaptive", "facade" ],
      "white_list": false
    },
    {
      "_id": "5378dd960e5572016a00006a",
      "name": "Element by Boolean Parameter Value",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b5b8de5c-5001-483e-a844-e1259eec7b93gregPkg58.zip",
          "contents": "Element by Boolean Parameter Value - Filter Revit elements by a Yes/No parameter and get two lists of elements",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-18T16:19:34.795Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Element by Boolean Parameter Value",
              "_id": "5378dd960e5572016a00006a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-18T16:19:34.795Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 218,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Filter Revit Elements by a Yes/No parameter and get two lists",
      "maintainers": [
        {
          "username": "anderj24",
          "_id": "5378dd950e5572016a000069"
        }
      ],
      "keywords": [ "filter", "elements", "parameter", "value" ],
      "white_list": false
    },
    {
      "_id": "537b204c0e5572016a00006f",
      "name": "List ParameterType",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ba5f9ce3-0dc8-4a73-ac43-676a83193e15gregPkg471.zip",
          "contents": "List ParameterType - List all the BuiltInCategories available",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-20T09:28:44.223Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "List ParameterType",
              "_id": "537b204c0e5572016a00006f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-20T09:28:44.223Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 708,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "List all ParameterType available to be assigned to Shared Parameter",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "parametertype", "shared", "parameter", "api", "python" ],
      "white_list": false
    },
    {
      "_id": "537b217d0e5572016a000071",
      "name": "List BuiltInParameterGroup",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0f099111-00fc-4d84-a9c3-ce2aa0f0bdabgregPkg86.zip",
          "contents": "List BuiltInParameterGroup - List BuiltInParameterGroup for ex: PG_AREA",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-20T09:33:49.963Z",
          "full_dependency_versions": [ "0.0.1", "0.1.5", "0.2.0", "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "List BuiltInParameterGroup",
              "_id": "537b217d0e5572016a000071"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "direct_dependency_versions": [ "0.2.0", "0.1.5", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-20T09:33:49.963Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 333,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "List BuiltInParameterGroup available to organize project parameters",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "builtinparametergroup", "api", "python", "parameter" ],
      "white_list": false
    },
    {
      "_id": "537b85f00e5572016a000077",
      "name": "Map Values to Colors Blue to Red",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c4d5234c-124f-4153-8994-f5772a67ad9bgregPkg996.zip",
          "contents": "Map Values to Colors Blue to Red - Maps values to colors ranging from blue to red",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-20T16:42:24.457Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Map Values to Colors Blue to Red",
              "_id": "537b85f00e5572016a000077"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-20T16:42:24.457Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 47,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE120C Custom Node By Glenn",
      "maintainers": [
        {
          "username": "sungho21@stanford.edu",
          "_id": "537b84430e5572016a000074"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "537c96580e5572016a00007a",
      "name": "Convert strings to XYZs",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/aae18d58-322f-4aa5-a057-b768972312cegregPkg153.zip",
          "contents": "Convert strings to XYZs - Convert strings to a list of XYZs given a string deliminator",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-21T12:04:40.432Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Convert strings to XYZs",
              "_id": "537c96580e5572016a00007a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-21T12:04:40.432Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 98,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Misc",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Convert strings to a list of XYZs given a string deliminator",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "string", "xyzs", "deliminator", "convert" ],
      "white_list": false
    },
    {
      "_id": "538086010e5572016a00007e",
      "name": "Compute Centroid",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2998dc28-b57f-46d3-8e1b-81f5e78f68bfgregPkg149.zip",
          "contents": "Compute Centroid - Compute the centroid of an element - alpha version for single material element",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-24T11:44:01.793Z",
          "full_dependency_versions": [ "0.0.1", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Compute Centroid",
              "_id": "538086010e5572016a00007e"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-24T11:44:01.793Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 167,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "compute centroid of elements - Alpha release for single material/solid element",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "centroid", "gravity", "center", "mass", "solid" ],
      "white_list": false
    },
    {
      "_id": "523e879030e55dc52b00001a",
      "name": "Get Plane U And V Vectors",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/79f20ccc-6848-462a-9f06-faf2270427a4gregPkg926.zip",
          "contents": "Get Plane U And V Vectors - Derives U and V vectors for a plane based on the plane's normal",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-05-26T10:55:07.851Z",
          "full_dependency_versions": [ "0.2.2", "0.1.6" ],
          "full_dependency_ids": [
            {
              "name": "Get Plane U And V Vectors",
              "_id": "523e879030e55dc52b00001a"
            },
            {
              "name": "Law Of Cosines",
              "_id": "5226bb10e2f476ca0500005f"
            }
          ],
          "direct_dependency_versions": [ "0.1.6" ],
          "direct_dependency_ids": [
            {
              "name": "Law Of Cosines",
              "_id": "5226bb10e2f476ca0500005f"
            }
          ],
          "change_log": "",
          "version": "0.2.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-26T10:55:07.851Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 53,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Use package Plane Properties instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "plane", "normal", "uv", "vectors" ],
      "white_list": false
    },
    {
      "_id": "5384113e0e5572016a00008f",
      "name": "Write CSV String - Seven_Values",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5121601c-8448-42dd-b59e-db5f2b539c26gregPkg587.zip",
          "contents": "Write CSV String - Seven_Values - Write a CSV string for two data values",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-27T04:14:54.814Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Write CSV String - Seven_Values",
              "_id": "5384113e0e5572016a00008f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-27T04:14:54.814Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 38,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Takes in Values and converts to strings, up to 7 inputs",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53841b980e5572016a000093",
      "name": "Scale Results for Parameter Type",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c6980120-6dac-451b-b0c4-ee44f9787510gregPkg982.zip",
          "contents": "Scale Results for Parameter Type - Scale the results returned to match the values reported in Revit (fixes a unit reporting error)",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-05-27T04:59:04.509Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Scale Results for Parameter Type",
              "_id": "53841b980e5572016a000093"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-27T04:59:04.509Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 185,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Get Revit Model Parameter Values Non Recursive - Two Parameters",
          "_id": "538790000e5572016a0000e0"
        }
      ],
      "num_dependents": 1,
      "description": "CEE220C Assignment 4",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53841f410e5572016a00009b",
      "name": "Get Sun Directness for Face",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/57434032-8cfa-40a7-a824-a8dee4e730aegregPkg386.zip",
          "contents": "Get Sun Directness for Face - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-05-27T05:14:41.863Z",
          "full_dependency_versions": [ "0.1.0", "0.0.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Get Sun Directness for Face",
              "_id": "53841f410e5572016a00009b"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-27T05:14:41.863Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 29,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5384b9990e5572016a00009e",
      "name": "Write CSV String - Three Values",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c2cb1393-1588-459c-9916-7106406bbf3bgregPkg120.zip",
          "contents": "Write CSV String - Three Values - Write a CSV string for two data values",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-27T16:13:13.786Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Write CSV String - Three Values",
              "_id": "5384b9990e5572016a00009e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-27T16:13:13.786Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 191,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Get Revit Model Parameter Values Non Recursive - Two Parameters",
          "_id": "538790000e5572016a0000e0"
        }
      ],
      "num_dependents": 1,
      "description": "CEE 220C A4",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5384c3f30e5572016a0000a0",
      "name": "Write CSV String - Four Values",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8b66c0ea-f796-4fa5-9989-bfe5a0f2c19agregPkg657.zip",
          "contents": "Write CSV String - Four Values - Write a CSV string for four data values",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-27T16:57:23.436Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Write CSV String - Four Values",
              "_id": "5384c3f30e5572016a0000a0"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-27T16:57:23.436Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 34,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5382aad60e5572016a000084",
      "name": "Isolate in View",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/35d255c4-e6c8-47c0-9e7f-29e0facaad2dgregPkg269.zip",
          "contents": "Isolate in View - Temporarily isolates specified elements in a current view. ",
          "engine_metadata": "",
          "engine_version": "0.6.3.5244",
          "created": "2014-05-27T17:18:11.144Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Isolate in View",
              "_id": "5382aad60e5572016a000084"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-27T17:18:11.144Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 220,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Temporarily isolates elements in a view by specified elements IDs. It accepts ID input both as a string or Revit ElementId. ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#isolate", "#view" ],
      "white_list": false
    },
    {
      "_id": "5384cc930e5572016a0000a3",
      "name": "Get Result List Column Values",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/41a10b2b-be92-4583-9502-f7abff686fdegregPkg608.zip",
          "contents": "Get Result List Column Values - Gets the list of result values in a column of a hierarchical list",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-27T17:34:11.600Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Get Result List Column Values",
              "_id": "5384cc930e5572016a0000a3"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-27T17:34:11.6Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 48,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5384ccc20e5572016a0000a5",
      "name": "Get Extremes of Computed Values",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/18b6b7a8-bf15-42c6-8a69-a7f0027b5ae6gregPkg352.zip",
          "contents": "Get Extremes of Computed Values - Gets the extreme values in a column",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-27T17:34:58.654Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Get Extremes of Computed Values",
              "_id": "5384ccc20e5572016a0000a5"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-27T17:34:58.654Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 29,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "538553900e5572016a0000a9",
      "name": "Interference Report Parser",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c1eaca06-cf1b-4e92-acad-c2f9c456c560gregPkg238.zip",
          "contents": "Interference Report Parser - Parses an HTML report from Interference check. It outputs a list of IDs of elements that created clashes. Uses BeautifulSoup and re (regular expression) to parse the html file so please verify that those modules are installed and proper paths are appended.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-28T03:10:08.569Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Interference Report Parser",
              "_id": "538553900e5572016a0000a9"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-28T03:10:08.569Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 218,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Parses Interference Report HTML file for Element IDs. Use with Isolate in View node to isolate elements that generated those clashes. Make sure that \"BeautifulSoup\" and \"re\" modules are properly referenced for it to work. It will output a list of ID's as well as total number of clashes. ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#interference", "#parsing", "#isolate", "#warnings", "#clashes" ],
      "white_list": false
    },
    {
      "_id": "53869d490e5572016a0000b1",
      "name": "Evaluate Sun Directness Face 3",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d0cbadcb-79e7-4237-a934-9f8ee80d9055gregPkg595.zip",
          "contents": "Evaluate Sun Directness Face 3 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-29T02:36:57.223Z",
          "full_dependency_versions": [ "0.1.1", "0.0.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Evaluate Sun Directness Face 3",
              "_id": "53869d490e5572016a0000b1"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T02:36:57.223Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 12,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - Altered Slightly from Glenn Katz",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53869d770e5572016a0000b3",
      "name": "Evaluate Sun Directness Face 2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/db66927c-fe08-49a8-bc65-7042a6df80degregPkg808.zip",
          "contents": "Evaluate Sun Directness Face 2 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-29T02:37:43.716Z",
          "full_dependency_versions": [ "0.1.1", "0.0.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Evaluate Sun Directness Face 2",
              "_id": "53869d770e5572016a0000b3"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T02:37:43.716Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 7,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - ALtered Slightly from Glenn Katz ",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53869da40e5572016a0000b5",
      "name": "Evaluate Sun Directness Face 1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b79bb5c6-da4b-4ffe-961f-1f1ff52634e3gregPkg974.zip",
          "contents": "Evaluate Sun Directness Face 1 - Gets the raw solar directness average value for selected face",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-29T02:38:28.689Z",
          "full_dependency_versions": [ "0.1.1", "0.0.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Evaluate Sun Directness Face 1",
              "_id": "53869da40e5572016a0000b5"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T02:38:28.689Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 13,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - Altered Slightly from Glenn Katz",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53869e670e5572016a0000b7",
      "name": "Evaluate Attractiveness Face 1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9deedd75-a1a0-48b1-b1ba-aa1763bfa538gregPkg553.zip",
          "contents": "Evaluate Attractiveness Face 1 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-29T02:44:39.181Z",
          "full_dependency_versions": [ "0.1.2", "0.0.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Evaluate Attractiveness Face 1",
              "_id": "53869e670e5572016a0000b7"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Attractiveness - Raw Distances",
              "_id": "53869b010e5572016a0000ad"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Attractiveness - Raw Distances",
              "_id": "53869b010e5572016a0000ad"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T02:44:39.181Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 20,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - Altered to fit point of Object from Glenn Katz",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53869f640e5572016a0000ba",
      "name": "Evaluate Attractiveness Face 2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e2ab95b7-3be5-4ff4-a8cd-90031e3b1021gregPkg986.zip",
          "contents": "Evaluate Attractiveness Face 2 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-29T02:45:56.680Z",
          "full_dependency_versions": [ "0.1.1", "0.0.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Evaluate Attractiveness Face 2",
              "_id": "53869f640e5572016a0000ba"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Attractiveness - Raw Distances",
              "_id": "53869b010e5572016a0000ad"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Attractiveness - Raw Distances",
              "_id": "53869b010e5572016a0000ad"
            }
          ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T02:45:56.68Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 8,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - Altered from Glenn Katz's Sun Directness Node",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53869fa00e5572016a0000bc",
      "name": "Evaluate Attractiveness Face 3",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/286acdaa-3495-4ba0-8b24-fe36d5c1dd6cgregPkg953.zip",
          "contents": "Evaluate Attractiveness Face 3 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-29T02:46:56.655Z",
          "full_dependency_versions": [ "0.1.1", "0.0.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Evaluate Attractiveness Face 3",
              "_id": "53869fa00e5572016a0000bc"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Attractiveness - Raw Distances",
              "_id": "53869b010e5572016a0000ad"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Attractiveness - Raw Distances",
              "_id": "53869b010e5572016a0000ad"
            }
          ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T02:46:56.655Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 14,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE220C A4 - Altered from Glenn Katz's Sun Directness Node",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53869b010e5572016a0000ad",
      "name": "Evaluate Attractiveness - Raw Distances",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6c51f060-ffce-4c6a-8a4f-4170f68ae2b6gregPkg818.zip",
          "contents": "Evaluate Attractiveness - Raw Distances - Returns values from 0 to 1 based on orientation relative to sun path",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-29T02:27:13.567Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Evaluate Attractiveness - Raw Distances",
              "_id": "53869b010e5572016a0000ad"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T02:27:13.567Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 90,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Evaluate Attractiveness Face 1",
          "_id": "53869e670e5572016a0000b7"
        },
        {
          "name": "Evaluate Attractiveness Face 2",
          "_id": "53869f640e5572016a0000ba"
        },
        {
          "name": "Evaluate Attractiveness Face 3",
          "_id": "53869fa00e5572016a0000bc"
        },
        {
          "name": "Evaluate Attractivness Face 4",
          "_id": "53869fd20e5572016a0000be"
        }
      ],
      "num_dependents": 4,
      "description": "CEE 220C A4  ",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53869fd20e5572016a0000be",
      "name": "Evaluate Attractivness Face 4",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/828b09ca-8cc8-4a43-9549-9b5d0e6c0744gregPkg380.zip",
          "contents": "Evaluate Attractivness Face 4 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-29T02:47:46.008Z",
          "full_dependency_versions": [ "0.1.1", "0.1.0", "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Evaluate Attractivness Face 4",
              "_id": "53869fd20e5572016a0000be"
            },
            {
              "name": "Evaluate Attractiveness - Raw Distances",
              "_id": "53869b010e5572016a0000ad"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Attractiveness - Raw Distances",
              "_id": "53869b010e5572016a0000ad"
            }
          ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T02:47:46.008Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 14,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - Altered from Glenn Katz's Sun DIrectness Node ",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5386a0a00e5572016a0000c0",
      "name": "Get Sun Directness Face 2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/15bba1fb-8e6f-4830-8b81-656816d1a974gregPkg432.zip",
          "contents": "Get Sun Directness Face 2 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-29T02:51:12.298Z",
          "full_dependency_versions": [ "0.1.0", "0.0.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Get Sun Directness Face 2",
              "_id": "5386a0a00e5572016a0000c0"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T02:51:12.298Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 8,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - Altered Slightly from Glenn Katz",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5386a0ea0e5572016a0000c2",
      "name": "Get Sun Directness Face 3",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/81a4fc19-6072-47ca-9a5b-4c6adedef0a6gregPkg247.zip",
          "contents": "Get Sun Directness Face 3 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-29T02:52:26.043Z",
          "full_dependency_versions": [ "0.1.0", "0.1.0", "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Get Sun Directness Face 3",
              "_id": "5386a0ea0e5572016a0000c2"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T02:52:26.043Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 8,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - ALtered Slightly from Glenn Katz",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5386a1380e5572016a0000c4",
      "name": "Get Sun Directness Face 1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/afaec694-0c68-41f6-98c9-2f49a3dba41bgregPkg897.zip",
          "contents": "Get Sun Directness Face 1 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-29T02:53:44.581Z",
          "full_dependency_versions": [ "0.1.1", "0.0.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Get Sun Directness Face 1",
              "_id": "5386a1380e5572016a0000c4"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T02:53:44.581Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 25,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - ALtered Slightly from Glenn Katz",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53841b380e5572016a000091",
      "name": "Evaluate Sun Directness - Raw Distances",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c25229f5-4acc-4036-bbfa-d96b51854697gregPkg543.zip",
          "contents": "Evaluate Sun Directness - Raw Distances - Returns values from 0 to 1 based on orientation relative to sun path",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-05-27T04:57:28.091Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-27T04:57:28.091Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 318,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Get Sun Directness for Face",
          "_id": "53841f410e5572016a00009b"
        },
        {
          "name": "Evaluate Sun Directness Face 4",
          "_id": "53869d270e5572016a0000af"
        },
        {
          "name": "Evaluate Sun Directness Face 3",
          "_id": "53869d490e5572016a0000b1"
        },
        {
          "name": "Evaluate Sun Directness Face 2",
          "_id": "53869d770e5572016a0000b3"
        },
        {
          "name": "Evaluate Sun Directness Face 1",
          "_id": "53869da40e5572016a0000b5"
        },
        {
          "name": "Get Sun Directness Face 2",
          "_id": "5386a0a00e5572016a0000c0"
        },
        {
          "name": "Get Sun Directness Face 3",
          "_id": "5386a0ea0e5572016a0000c2"
        },
        {
          "name": "Get Sun Directness Face 1",
          "_id": "5386a1380e5572016a0000c4"
        },
        {
          "name": "Get Sun Directness Face 4",
          "_id": "5386a1740e5572016a0000c6"
        },
        {
          "name": "Get Sun Directness for Face 1",
          "_id": "538786bf0e5572016a0000d8"
        },
        {
          "name": "Get Sun Directness for Face 2",
          "_id": "538786e80e5572016a0000da"
        },
        {
          "name": "Get Sun Directness for Face 3",
          "_id": "538787100e5572016a0000dc"
        },
        {
          "name": "Get Sun Directness for Face 4",
          "_id": "538787520e5572016a0000de"
        }
      ],
      "num_dependents": 13,
      "description": "CEE220C Assignment 4",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "538786bf0e5572016a0000d8",
      "name": "Get Sun Directness for Face 1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ae5da266-9d53-49c0-b0c3-ae901d298724gregPkg777.zip",
          "contents": "Get Sun Directness for Face 1 - Gets the raw solar directness average value for selected face",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-30T00:11:55.161Z",
          "full_dependency_versions": [ "0.1.2", "0.0.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Get Sun Directness for Face 1",
              "_id": "538786bf0e5572016a0000d8"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-30T00:11:55.161Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 9,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - Altered from Glenn Katz",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "538787100e5572016a0000dc",
      "name": "Get Sun Directness for Face 3",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c579a321-d9ca-498b-9289-b6cd5c827634gregPkg352.zip",
          "contents": "Get Sun Directness for Face 3 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-30T00:13:37.723Z",
          "full_dependency_versions": [ "1.1.2", "0.0.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Get Sun Directness for Face 3",
              "_id": "538787100e5572016a0000dc"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "change_log": "",
          "version": "1.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-30T00:13:37.723Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 8,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "dsfsdfdsfdfdfd  ",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "538787520e5572016a0000de",
      "name": "Get Sun Directness for Face 4",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0c0405a8-2f2e-4fb3-b869-049cefe50e89gregPkg53.zip",
          "contents": "Get Sun Directness for Face 4 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-30T00:14:29.733Z",
          "full_dependency_versions": [ "0.1.2", "0.1.0", "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Get Sun Directness for Face 4",
              "_id": "538787520e5572016a0000de"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-30T00:14:29.733Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 23,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - Altered from Glenn Katz",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "538dd48b0e5572016a0000f4",
      "name": "QuadsBySurface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/45789025-2492-4e61-b1f0-3ea6150e3bb4gregPkg523.zip",
          "contents": "QuadsBySurface - Get group of 4 points following parametric network of points of the surface",
          "engine_metadata": "",
          "engine_version": "0.7.0.22156",
          "created": "2014-06-03T13:58:35.202Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "QuadsBySurface",
              "_id": "538dd48b0e5572016a0000f4"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-03T13:58:35.202Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 432,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EPR",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Get the groups of 4 points following a parametric U V division of the surface. Additionally you can get the net of points",
      "maintainers": [
        {
          "username": "eproca",
          "_id": "538dd48a0e5572016a0000f3"
        }
      ],
      "keywords": [ "quad", "point", "surface", "parameter", "division" ],
      "white_list": false
    },
    {
      "_id": "538e2c920e5572016a0000f6",
      "name": "Physical Beam to Analytical",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a2175039-2b0c-4f93-b3f7-cd853260c433gregPkg618.zip",
          "contents": "Physical Beam to Analytical - Moves a beam instance to his analytical model location",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-06-03T20:14:10.632Z",
          "full_dependency_versions": [ "0.0.1", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Physical Beam to Analytical",
              "_id": "538e2c920e5572016a0000f6"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-03T20:14:10.632Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 91,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Moves a physical beam instance to his analytical location",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "beam", "physical", "analytical" ],
      "white_list": false
    },
    {
      "_id": "538f2a440e5572016a0000fc",
      "name": "List A - B",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d455d5b3-71fd-4508-9fbb-f65fddfee05bgregPkg292.zip",
          "contents": "List A - B - returns elements that are in both lists",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-06-04T14:16:36.023Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "List A - B",
              "_id": "538f2a440e5572016a0000fc"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-04T14:16:36.023Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 154,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "returns the difference in terms of elements between A and B, as a logic A minus B, so order matters.",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "list", "order", "difference" ],
      "white_list": false
    },
    {
      "_id": "536fda510e5572016a000050",
      "name": "Override Element in View",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2a3ba611-37f6-407b-b950-84f0693f538egregPkg119.zip",
          "contents": "Override Element SurfacePattern_Transparency_Halftone - Overrides surface pattern of elements, with color, transparency and halftone settings",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-06-04T14:34:27.830Z",
          "full_dependency_versions": [ "0.0.2", "0.1.2", "0.1.4", "0.2.0", "0.1.5", "0.1.4", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Override Element in View",
              "_id": "536fda510e5572016a000050"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            },
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            }
          ],
          "direct_dependency_versions": [ "0.1.4", "0.1.5", "0.1.2", "0.2.0", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-04T14:34:27.83Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 305,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Override Pattern Color Transparency Halftone of selected elements",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "override", "color", "pattern", "tansparency", "halftone" ],
      "white_list": false
    },
    {
      "_id": "5393b9400e5572016a000101",
      "name": "Numbering Sequence with Skip",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/99e2479a-0884-4d3c-b468-bf75012c974dgregPkg990.zip",
          "contents": "Numbering Sequence with Skip - Creates a numbering sequence of given length, starting at a given number and skipping a given number. If sequence starting at single digits it will force two leading zeros and convert number to string.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-06-08T01:15:44.647Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Numbering Sequence with Skip",
              "_id": "5393b9400e5572016a000101"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-08T01:15:44.647Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 142,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Archi-lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This node will crate a sequence of numbers based on three inputs: length, start and skip. If start input is less than three digits it will be padded with leading zeros. Skip number will be omitted from the sequence as well as its multiples of 10 (ex. 2, 12, 22, 32 etc)",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#sequence", "#numbering", "#room", "#skip" ],
      "white_list": false
    },
    {
      "_id": "537749570e5572016a000062",
      "name": "Place Groups at XYZ",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/19724b4b-2581-4339-b38a-a3ea774c16b8gregPkg774.zip",
          "contents": "Place Group at XYZ - place a given group at a XYZ location",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-06-12T21:33:56.886Z",
          "full_dependency_versions": [ "0.0.2", "0.1.4", "0.1.5", "0.2.0", "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Place Groups at XYZ",
              "_id": "537749570e5572016a000062"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            }
          ],
          "direct_dependency_versions": [ "0.2.0", "0.1.4", "0.1.2", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-12T21:33:56.886Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 135,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Place a group at given XYZ. select the group by Name.",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "place", "group", "xyz" ],
      "white_list": false
    },
    {
      "_id": "533914c8bfe42595360000f3",
      "name": "Create Room Level_UV",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/266264a4-96da-4587-8849-6de9f2db317fgregPkg488.zip",
          "contents": "Create Room Level_UV - Create a new room at Level and UV(XY) in the active view",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-06-13T11:37:04.042Z",
          "full_dependency_versions": [ "0.0.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Create Room Level_UV",
              "_id": "533914c8bfe42595360000f3"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-13T11:37:04.042Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 170,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create new room at Level & UVs",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "room", "create", "level", "uv" ],
      "white_list": false
    },
    {
      "_id": "539b140a0e5572016a000107",
      "name": "Create N views from Active view type",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4f9f6219-46c9-43bd-8a89-c466ab0940d3gregPkg986.zip",
          "contents": "Create N views from Active view type - Create N views from Active view type",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-06-13T15:08:58.617Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Create N views from Active view type",
              "_id": "539b140a0e5572016a000107"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-13T15:08:58.617Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 284,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "batch create N new views from the same type as the active view",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "create", "view", "batch", "creation" ],
      "white_list": false
    },
    {
      "_id": "539b18360e5572016a000109",
      "name": "Select by Bounding Box",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/da720de1-8706-4d02-b329-d2d48e5a2fcdgregPkg425.zip",
          "contents": "Select by Bounding Box - select elements that intersect or are inside an element bounding box",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-06-13T15:26:46.362Z",
          "full_dependency_versions": [ "0.0.1", "0.1.5", "0.1.4", "0.0.1", "0.1.2", "0.1.4", "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Select by Bounding Box",
              "_id": "539b18360e5572016a000109"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Remove List Intersection",
              "_id": "538ed1e50e5572016a0000f8"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            },
            {
              "name": "Get Bounding Box",
              "_id": "53083642bfe42595360000a6"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.1", "0.1.4", "0.1.2", "0.0.1" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Get Bounding Box",
              "_id": "53083642bfe42595360000a6"
            },
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Remove List Intersection",
              "_id": "538ed1e50e5572016a0000f8"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-13T15:26:46.362Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 148,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "select element of category from  element BB - is inside or intersect",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "bounding", "box", "selection", "select", "intersect", "inside" ],
      "white_list": false
    },
    {
      "_id": "53a582060e5572016a00010c",
      "name": "Highlight Elements in view",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/81463cf0-ef12-473a-bd29-1587ef157e15gregPkg200.zip",
          "contents": "Highlight Elements in view - Highlight the choosen elements in view",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-06-21T13:00:54.721Z",
          "full_dependency_versions": [ "0.1.0", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Highlight Elements in view",
              "_id": "53a582060e5572016a00010c"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-21T13:00:54.721Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 168,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Highlight elements in the view and returns IDs list",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "selection", "elements", "highlight" ],
      "white_list": false
    },
    {
      "_id": "53aef4020e5572016a00011a",
      "name": "RailsIntersection",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a340b810-3aec-46d3-bebc-8074977f4859gregPkg17.zip",
          "contents": "RailsIntersection - Get the points resulting of intersecting rails with an array of planes",
          "engine_metadata": "",
          "engine_version": "0.7.0.3446",
          "created": "2014-06-28T16:57:38.664Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "RailsIntersection",
              "_id": "53aef4020e5572016a00011a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-28T16:57:38.664Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 218,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EPR",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Get the intersection points of an array of planes with a \"rail\" formed by a group of curves and/or polycurves. The curves of the rail can have gaps and overlaps, it is no needed that they form a continuous element. When used with several rails, it returns organized sets of points. N points controls the expected minimum number of points  of the resulting sets of points. For having a result for every plane, even with no intersection, set N points=0. The result in the case of a plane with no intersection  is an empty list. The custom node expects that every rail is a list of objects. If you will use for rails that are just a single object (one curve or one polycurve), that single object must be inside of a list.",
      "maintainers": [
        {
          "username": "eproca",
          "_id": "538dd48a0e5572016a0000f3"
        }
      ],
      "keywords": [ "point", "curve", "polycurve", "intersection", "rail", "plane" ],
      "white_list": false
    },
    {
      "_id": "53b0cf750e5572016a00011d",
      "name": "Parse List of Lists. 01dyf",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e6dcdd57-a329-47aa-81a7-b7d013291e7cgregPkg263.zip",
          "contents": "Parse List of Lists. 01dyf - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-06-30T02:46:13.064Z",
          "full_dependency_versions": [ "0.1.1", "0.6.1" ],
          "full_dependency_ids": [
            {
              "name": "Parse List of Lists. 01dyf",
              "_id": "53b0cf750e5572016a00011d"
            },
            {
              "name": "Dynamo Sample Custom Nodes",
              "_id": "525c18d43f7315936f000020"
            }
          ],
          "direct_dependency_versions": [ "0.6.1" ],
          "direct_dependency_ids": [
            {
              "name": "Dynamo Sample Custom Nodes",
              "_id": "525c18d43f7315936f000020"
            }
          ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-30T02:46:13.064Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 57,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "1",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "phrase of list man",
      "maintainers": [
        {
          "username": "jaunderss",
          "_id": "53b0cf740e5572016a00011c"
        }
      ],
      "keywords": [ "1" ],
      "white_list": false
    },
    {
      "_id": "53b2bc930e5572016a000120",
      "name": "Get Tagged Element Id",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a1ed1c74-b1e9-41b1-9b90-69d327ae181dgregPkg60.zip",
          "contents": "Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids.",
          "engine_metadata": "",
          "engine_version": "0.6.3.5244",
          "created": "2014-07-01T13:50:11.594Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Get Tagged Element Id",
              "_id": "53b2bc930e5572016a000120"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-01T13:50:11.594Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 266,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This node displays a host Element Id from an imput of Annotation instances. It will also filter out all InvalidElementIds (-1) which would be returned for all hosts that are in linked files. ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#taggedelementid", "#tags" ],
      "white_list": false
    },
    {
      "_id": "53b2bd110e5572016a000122",
      "name": "Change Family Type",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/fa68c582-b7ee-45ef-a97f-8af20347565fgregPkg761.zip",
          "contents": "Change Family Type - Takes an input of family instances and desired type Ids (important that list length match) to change them to. ",
          "engine_metadata": "",
          "engine_version": "0.6.3.5244",
          "created": "2014-07-01T13:52:17.181Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Change Family Type",
              "_id": "53b2bd110e5572016a000122"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-01T13:52:17.181Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 444,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This node will change/set family type. It requires an input of families and matching list of TypeIds of types that you want them to be set to. ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#changetype", "#type", "#familytype" ],
      "white_list": false
    },
    {
      "_id": "52d9854cbfe4259536000009",
      "name": "Named Collections",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1c7465c8-814b-42d1-a610-627acc39ce95gregPkg111.zip",
          "contents": "Add To Collection - Sets a key equal to a value inside collection, Collection From Python Dictionary - Converts a python dictionary to a named collection, Create Collection - Creates a named dictionary object, Get Collection Keys - Gets all keys from a collection, Get Collection Name - Gets the name of a collection, Get Item From Collection At Key - Gets an item from a collection at key, Get Values From Collection - Gets all values from collection and returns as one list, Remove Key From Collection - Removes a key from a collection",
          "engine_metadata": "",
          "engine_version": "0.7.0.6742",
          "created": "2014-07-02T01:35:00.010Z",
          "full_dependency_versions": [ "0.0.6" ],
          "full_dependency_ids": [
            {
              "name": "Named Collections",
              "_id": "52d9854cbfe4259536000009"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-02T01:35:00.01Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 150,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Collections",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Set of nodes creating named dictionaries using python",
      "maintainers": [
        {
          "username": "mjk39",
          "_id": "52d98494bfe4259536000008"
        }
      ],
      "keywords": [ "collections", "dictionary", "dict", "key", "value", "pair", "search", "named" ],
      "white_list": false
    },
    {
      "_id": "53ba19330e5572016a000129",
      "name": "Center_line_of_Revit_MEP_Pipe",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/472c4552-bf0f-4597-8cbb-cf12752993a3gregPkg639.zip",
          "contents": "Center_line_of_Revit_MEP_Pipe - CREATE_CENTERLINE_OF_PIPE_WITH_END_POINTS",
          "engine_metadata": "",
          "engine_version": "0.7.1.34612",
          "created": "2014-07-07T03:51:15.514Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Center_line_of_Revit_MEP_Pipe",
              "_id": "53ba19330e5572016a000129"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-07T03:51:15.514Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 374,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "PDXRUG",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Gets Centerline of single mep Pipe and points at end",
      "maintainers": [
        {
          "username": "DYNAMOGRADS",
          "_id": "53ba19320e5572016a000128"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53bef99b0e5572016a00012e",
      "name": "Quads From Points Lists",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f924cdc6-618e-48d1-9b81-d08268091245gregPkg404.zip",
          "contents": "Quads From Points Lists - Get groups of 4 points from a list of lists of points. The sublist must have the same number of points",
          "engine_metadata": "",
          "engine_version": "0.7.1.2103",
          "created": "2014-07-10T20:37:47.203Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Quads From Points Lists",
              "_id": "53bef99b0e5572016a00012e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-10T20:37:47.203Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 258,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EPR",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Get groups of 4 points from a list of lists of points. The sublist must have the same number of points",
      "maintainers": [
        {
          "username": "eproca",
          "_id": "538dd48a0e5572016a0000f3"
        }
      ],
      "keywords": [ "quad", "quads", "point", "points", "list", "lists" ],
      "white_list": false
    },
    {
      "_id": "53c62c000e5572016a000134",
      "name": "Element-IDs",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d4f4ce3b-9cf2-42b5-9686-a7590e4acb45gregPkg646.zip",
          "contents": "ID2double - converts an elements Id into a double, Keep.Element.in.ID.List - Drops elements from a list of Ids where these Ids are mapped to doubles , Drop.Element.from.ID.List - Drops elements from a list of Ids where these Ids are mapped to doubles ",
          "engine_metadata": "",
          "engine_version": "0.7.1.25189",
          "created": "2014-07-16T07:38:40.194Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Element-IDs",
              "_id": "53c62c000e5572016a000134"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-16T07:38:40.194Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 756,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "ID-Tools",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "converts IDs to double; drops elements from a list of elements; keeps a subset of elements in a list of elements.",
      "maintainers": [
        {
          "username": "office@kompolschek.at",
          "_id": "53340534bfe42595360000ed"
        }
      ],
      "keywords": [ "id" ],
      "white_list": false
    },
    {
      "_id": "53c7783b0e5572016a000138",
      "name": "Square-Recursive",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/000154ef-f25f-4e23-8bef-0e8fc3b80c22gregPkg170.zip",
          "contents": "Square-Recursive - Creates a series of Squares embedded each rectangle inside another.",
          "engine_metadata": "",
          "engine_version": "0.7.1.25189",
          "created": "2014-07-17T07:16:11.295Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Square-Recursive",
              "_id": "53c7783b0e5572016a000138"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-17T07:16:11.295Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 33,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a Square by taking 4 points and return Square and 4 new points on Square.",
      "maintainers": [
        {
          "username": "critesh",
          "_id": "530da612bfe42595360000b0"
        }
      ],
      "keywords": [ "square-recursive" ],
      "white_list": false
    },
    {
      "_id": "52ad7ab39de41c8235000059",
      "name": "Count True And False",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e40b0537-757f-41c3-8667-f17fbaff61begregPkg585.zip",
          "contents": "Count True And False - Counts the occurences of True and False in a list of booleans",
          "engine_metadata": "",
          "engine_version": "0.7.1.29946",
          "created": "2014-07-17T16:21:49.665Z",
          "full_dependency_versions": [ "0.71.1" ],
          "full_dependency_ids": [
            {
              "name": "Count True And False",
              "_id": "52ad7ab39de41c8235000059"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-17T16:21:49.665Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 55,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Use built-in nodes CountTrue & CountFalse instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "count", "list", "booleans", "true", "false" ],
      "white_list": false
    },
    {
      "_id": "53cd41070e5572016a00015a",
      "name": "Slice String",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/570bd68b-d3eb-4220-a2df-8b4918d19a06gregPkg687.zip",
          "contents": "Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right)",
          "engine_metadata": "",
          "engine_version": "0.6.3.5244",
          "created": "2014-07-21T16:34:15.411Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Slice String",
              "_id": "53cd41070e5572016a00015a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-21T16:34:15.411Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 82,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Slice characters off the string either from left or right (boolean 1/0). ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#slice", "#string" ],
      "white_list": false
    },
    {
      "_id": "53ce16ea0e5572016a000160",
      "name": "StadiumProfileCurve",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7dd6a90c-0744-4010-ae70-ab5718063c6bgregPkg257.zip",
          "contents": "StadiumProfileCurve - Draw and orient a closed polycurve for the stadium profile",
          "engine_metadata": "",
          "engine_version": "0.7.1.19773",
          "created": "2014-07-22T07:46:50.497Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "StadiumProfileCurve",
              "_id": "53ce16ea0e5572016a000160"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-22T07:46:50.497Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 185,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Stadium",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Draw a closed polycurve for the cross section of stadium risers at the location and orientation specified.",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "profile", "stadium", "risers" ],
      "white_list": false
    },
    {
      "_id": "53d15a240e5572016a000173",
      "name": "Sweep By Surface Orientation",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ed85a3d1-dd35-4147-9ff5-6dfdb986d435gregPkg74.zip",
          "contents": "Sweep By Surface Orientation - Make a solid by sweep with automatic reposition of the profile perpendicular to every path. The profile must be in the default plane XY. The origin will be used as reference point. The profile will be aligned using the normal direction of the auxiliary surface. It can take several profiles at once. It accepts open and closed profiles. The surfaces resulting of using open profiles will be listed as solids and they will accept boolean solid operations.  ",
          "engine_metadata": "",
          "engine_version": "0.7.1.40372",
          "created": "2014-07-24T19:10:28.823Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Sweep By Surface Orientation",
              "_id": "53d15a240e5572016a000173"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-24T19:10:28.823Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 202,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EPR",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Make a solid by sweep with automatic reposition of the profile perpendicular to every path. The profile must be in the default plane XY. The origin will be used as reference point. The profile will be aligned using the normal direction of the auxiliary surface. It can take several profiles at once. It accepts open and closed profiles. The surfaces resulting of using open profiles will be listed as solids and they will accept boolean solid operations.  ",
      "maintainers": [
        {
          "username": "eproca",
          "_id": "538dd48a0e5572016a0000f3"
        }
      ],
      "keywords": [ "sweep", "solid", "profile", "automatic", "position", "normal", "surface", "alignment", "path" ],
      "white_list": false
    },
    {
      "_id": "53d2cbd90e5572016a000177",
      "name": "Place Family Type by Distance",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/57749054-f543-4a3f-9148-da91f5d5d6a8gregPkg201.zip",
          "contents": "Place Family Type by Distance - Selects & Places a Revit Family Type by Distance to a Point",
          "engine_metadata": "",
          "engine_version": "0.7.1.10698",
          "created": "2014-07-25T21:27:53.445Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Place Family Type by Distance",
              "_id": "53d2cbd90e5572016a000177"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-25T21:27:53.445Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 190,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Mode Lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Placce a single point family by distance to a point",
      "maintainers": [
        {
          "username": "rpmodelabnyc",
          "_id": "53ba8a2d0e5572016a00012b"
        }
      ],
      "keywords": [ "attractor", "mass" ],
      "white_list": false
    },
    {
      "_id": "53d84bb20e5572016a00017c",
      "name": "GBS Single Run",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9e4b6439-8ad7-4770-9f83-d1f43fb72a0agregPkg28.zip",
          "contents": "GBS Single Run - Runs energy analysis for revit model on GBS website.",
          "engine_metadata": "",
          "engine_version": "0.6.3.14437",
          "created": "2014-07-30T01:34:42.545Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "GBS Single Run",
              "_id": "53d84bb20e5572016a00017c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-30T01:34:42.545Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 187,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "GBS Energy Analysis",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Runs single energy simulation for revit model.",
      "maintainers": [
        {
          "username": "mohammad.asl@autodesk.com",
          "_id": "53d84bb10e5572016a00017b"
        }
      ],
      "keywords": [ "green", "building", "studio", "gbs", "energy", "analysis" ],
      "white_list": false
    },
    {
      "_id": "53cd419f0e5572016a00015e",
      "name": "Apply View Template",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8fc612dc-cc33-4519-bf36-017c252c8589gregPkg576.zip",
          "contents": "Apply View Template - Applies a view template to any given view(s). Supply a string with a view template name.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-07-30T03:24:01.386Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Apply View Template",
              "_id": "53cd419f0e5572016a00015e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-30T03:24:01.386Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 661,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Applies a View Template to any view(s) by template name.",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#view", "#template" ],
      "white_list": false
    },
    {
      "_id": "53cd417b0e5572016a00015c",
      "name": "Duplicate Item Indices",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1818a19b-95bf-469d-b8d6-9d41f22ac797gregPkg600.zip",
          "contents": "Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-07-30T03:25:36.324Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "Duplicate Item Indices",
              "_id": "53cd417b0e5572016a00015c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-30T03:25:36.324Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 227,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Lists duplicate item indicies for any given list",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#duplicate" ],
      "white_list": false
    },
    {
      "_id": "53dfed5c0e5572016a000185",
      "name": "Get Type Name",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/537f7904-7ba7-4e2d-9286-8f2cf9807cb5gregPkg984.zip",
          "contents": "0.7 Type Name - Get Type Name as string",
          "engine_metadata": "",
          "engine_version": "0.7.1.5330",
          "created": "2014-08-04T20:30:20.555Z",
          "full_dependency_versions": [ "0.71.0" ],
          "full_dependency_ids": [
            {
              "name": "Get Type Name",
              "_id": "53dfed5c0e5572016a000185"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-08-04T20:30:20.555Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 333,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "returns Element type name as string",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "type", "name" ],
      "white_list": false
    },
    {
      "_id": "53edcf730e5572016a000190",
      "name": "ImportCSVFromWeb",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f8bbee93-d254-47c9-a02e-1f12fcd87621gregPkg478.zip",
          "contents": "ImportCSVFromWeb - This node request a csv file from an url string. Written for seperating rows  . Output = list\r\n\r\nCredits to Maciej Wypych for helping out with python.",
          "engine_metadata": "",
          "engine_version": "0.7.1.17276",
          "created": "2014-08-15T09:14:27.226Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "ImportCSVFromWeb",
              "_id": "53edcf730e5572016a000190"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-08-15T09:14:27.226Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 87,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This node request a csv file from an url string. Written for seperating rows  . Output = list\r\n\r\nCredits to Maciej Wypych for helping out with python.",
      "maintainers": [
        {
          "username": "josteinolsen7513",
          "_id": "53edcf720e5572016a00018f"
        }
      ],
      "keywords": [ "csv", "url", "web" ],
      "white_list": false
    },
    {
      "_id": "53edd23e0e5572016a000192",
      "name": "GetElementsContaining",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/18b51298-a943-4442-9208-d651831b1963gregPkg463.zip",
          "contents": "GetElementsContaining - This node search the selected element type for a inputvalue(string) and returns a list of the elements containing the given input.",
          "engine_metadata": "",
          "engine_version": "0.7.1.17276",
          "created": "2014-08-15T09:26:22.884Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "GetElementsContaining",
              "_id": "53edd23e0e5572016a000192"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-08-15T09:26:22.884Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 338,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "SWECO_JBO",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This node search the selected element type for a inputvalue(string) and returns a list of the elements containing the given input.",
      "maintainers": [
        {
          "username": "josteinolsen7513",
          "_id": "53edcf720e5572016a00018f"
        }
      ],
      "keywords": [ "search", "element", "list" ],
      "white_list": false
    },
    {
      "_id": "54066eef0e5572016a0001b6",
      "name": "Vector.ByAltitudeAzimuth",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f1faac01-76ce-40af-a2c4-06dd1d926427gregPkg262.zip",
          "contents": "Vector.ByAltitudeAzimuth - Create a unit vector by altitude and azimuth.  The positive Y axis is taken as north and the positive Z axis is taken as up.  Azimuthal convention is N = 0°, E = 90°, S = 180°, W = 270°.",
          "engine_metadata": "",
          "engine_version": "0.7.1.10854",
          "created": "2014-09-03T01:29:19.815Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Vector.ByAltitudeAzimuth",
              "_id": "54066eef0e5572016a0001b6"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-03T01:29:19.815Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 59,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create a unit vector by altitude and azimuth.  The positive Y axis is taken as north and the positive Z axis is taken as up.  Azimuthal convention is N = 0°, E = 90°, S = 180°, W = 270°.",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "altitude", "azimuth", "astronomy" ],
      "white_list": false
    },
    {
      "_id": "52a143f89de41c8235000044",
      "name": "Accumulate List",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a5670d4b-2258-4070-b1d3-7d0a609e5e11gregPkg946.zip",
          "contents": "Accumulate List - Accumulates the values of a given list and returns a list of the accumulated values",
          "engine_metadata": "",
          "engine_version": "0.7.1.34626",
          "created": "2014-09-03T04:24:53.882Z",
          "full_dependency_versions": [ "0.71.3", "0.71.3" ],
          "full_dependency_ids": [
            {
              "name": "Accumulate List",
              "_id": "52a143f89de41c8235000044"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.71.3" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.71.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-03T04:24:53.882Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 197,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Use LunchBox Mass Addition instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "list", "accumulate", "sum", "subtotal" ],
      "white_list": false
    },
    {
      "_id": "540add0e0e5572016a0001c3",
      "name": "Instance.Parameter.y Justification",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/64fd1c44-85db-4d89-bb20-9ea3dac48831gregPkg306.zip",
          "contents": "Instance.Parameter.y Justification - Change the y Justification of a structural frame",
          "engine_metadata": "",
          "engine_version": "0.7.1.17276",
          "created": "2014-09-06T10:08:14.315Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Instance.Parameter.y Justification",
              "_id": "540add0e0e5572016a0001c3"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-06T10:08:14.315Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 83,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Change the y Justification parameter of a Structural Frame",
      "maintainers": [
        {
          "username": "lucianungureanuconstantin@yahoo.com",
          "_id": "540adc7d0e5572016a0001c0"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "540c1c5c0e5572016a0001c8",
      "name": "Reference Coordinates",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/81018b6c-2c63-4ecc-b3f4-0f3b609cd0ffgregPkg634.zip",
          "contents": "reference coordinates - Curve-ReferencePoint-coordinates",
          "engine_metadata": "",
          "engine_version": "0.7.1.17276",
          "created": "2014-09-07T08:50:36.438Z",
          "full_dependency_versions": [ "2014.9.7" ],
          "full_dependency_ids": [
            {
              "name": "Reference Coordinates",
              "_id": "540c1c5c0e5572016a0001c8"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2014.9.7",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-07T08:50:36.438Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 210,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Migration",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "ReferencePoint Coordinate",
      "maintainers": [
        {
          "username": "dannisha",
          "_id": "540c1c5b0e5572016a0001c7"
        }
      ],
      "keywords": [ "curve-reference-point-coordinate" ],
      "white_list": false
    },
    {
      "_id": "54133539cc26bfdc5a00000a",
      "name": "Centered Range",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6babc874-89b8-4ac5-b0b8-9743d393675dgregPkg408.zip",
          "contents": "Centered Range - Create a range that is centered on the mid point between two input values",
          "engine_metadata": "",
          "engine_version": "0.7.1.17276",
          "created": "2014-09-12T18:02:33.933Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Centered Range",
              "_id": "54133539cc26bfdc5a00000a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-12T18:02:33.933Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 33,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Core>Math>Actions",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a range of numbers with variable spacing who's middle value is centered on the median between two input numbers.",
      "maintainers": [
        {
          "username": "TLane1",
          "_id": "54133539cc26bfdc5a000009"
        }
      ],
      "keywords": [ "center", "range", "median" ],
      "white_list": false
    },
    {
      "_id": "54189febcc26bfdc5a000012",
      "name": "Create Room(s) at Points and Level",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/302b4d38-ddd7-4f62-a2c2-ff3494c4ca01gregPkg923.zip",
          "contents": "Create Room(s) at Points and Level - create rooms from center points at Level",
          "engine_metadata": "",
          "engine_version": "0.7.2.39419",
          "created": "2014-09-16T20:39:07.394Z",
          "full_dependency_versions": [ "0.71.1" ],
          "full_dependency_ids": [
            {
              "name": "Create Room(s) at Points and Level",
              "_id": "54189febcc26bfdc5a000012"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-16T20:39:07.394Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 350,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create and place Room(s) at Points for the selected Level",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "room", "point", "create", "place" ],
      "white_list": false
    },
    {
      "_id": "54202e07cc26bfdc5a00001e",
      "name": "Diamond Panels (3pt)",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/70d8da39-6344-41ef-ae67-7d9655c303d3gregPkg943.zip",
          "contents": "Diamond Panels (3pt) - Based on Nathan Miller's LuncBox",
          "engine_metadata": "",
          "engine_version": "0.7.1.17276",
          "created": "2014-09-22T14:11:19.440Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Diamond Panels (3pt)",
              "_id": "54202e07cc26bfdc5a00001e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-22T14:11:19.44Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 489,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "vasshaug",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Based on Nathan Miller's LunchBox nodes, this node creates the 3-point edge panels of a diamond grid from surface and uv parameters.",
      "maintainers": [
        {
          "username": "vasshaug",
          "_id": "53182dc0bfe42595360000c1"
        }
      ],
      "keywords": [ "diamond", "lunchbox", "surface", "uv" ],
      "white_list": false
    },
    {
      "_id": "542563b3cc26bfdc5a00002e",
      "name": "Split list of lists by String",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/19e49681-8a8f-462b-9ca1-330a553460d6gregPkg460.zip",
          "contents": "GS Split list of lists by : - No description provided, Split list of lists by String - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-09-26T13:01:39.688Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Split list of lists by String",
              "_id": "542563b3cc26bfdc5a00002e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-26T13:01:39.688Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 163,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "UltraBIM",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Split sublists by a string",
      "maintainers": [
        {
          "username": "Glenn.Sinclair",
          "_id": "542563b2cc26bfdc5a00002d"
        }
      ],
      "keywords": [ "lists" ],
      "white_list": false
    },
    {
      "_id": "5428bfc6cc26bfdc5a000030",
      "name": "4FSzthyp",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5c57576d-648a-497c-9610-95648a2ef23fgregPkg54.zip",
          "contents": "Noise - generate random numbers using a zero touch library",
          "engine_metadata": "",
          "engine_version": "0.7.2.20919",
          "created": "2014-09-29T02:11:18.618Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "4FSzthyp",
              "_id": "5428bfc6cc26bfdc5a000030"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-29T02:11:18.618Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 36,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "4FSzthyp, asdf",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "542b4dd5cc26bfdc5a000038",
      "name": "DesCompForum tutorial",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/47c88d40-d494-4ac4-ba3f-7dd40cc525dcgregPkg739.zip",
          "contents": "TrussFrom4Points - Creates a truss from 4 points, points must be ordered 1,2,3,4. right left top down, sweepCircleAlignedToLineStart - Sweeps a circle along the path defined by a curve, and aligns the circle to the zx plane of the start point of the curve",
          "engine_metadata": "",
          "engine_version": "0.7.2.26219",
          "created": "2014-10-01T00:41:57.601Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "DesCompForum tutorial",
              "_id": "542b4dd5cc26bfdc5a000038"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-01T00:41:57.601Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 41,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "custom nodes for geometry and illustrating map",
      "maintainers": [
        {
          "username": "mjk39",
          "_id": "52d98494bfe4259536000008"
        }
      ],
      "keywords": [ "mit", "forum", "4point", "truss", "computation", "descomp" ],
      "white_list": false
    },
    {
      "_id": "54345252cc26bfdc5a00004a",
      "name": "Grid",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e57bce8e-0cf2-4baf-b5d3-3671cf1fe3c4gregPkg77.zip",
          "contents": "Grid - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.2.30504",
          "created": "2014-10-07T20:51:30.967Z",
          "full_dependency_versions": [ "0.6.3" ],
          "full_dependency_ids": [
            {
              "name": "Grid",
              "_id": "54345252cc26bfdc5a00004a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.6.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-07T20:51:30.967Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 278,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Grid",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Modular Grid",
      "maintainers": [
        {
          "username": "manav.mahan.singh@live.in",
          "_id": "531e0ac2bfe42595360000cd"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53cfc6e00e5572016a000167",
      "name": "Count Sequences Of True Or False",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f1ea448a-8e94-4701-b532-f7aafec27657gregPkg471.zip",
          "contents": "Count Sequences Of True Or False - Retrieves the lengths of uninterrupted sequences of booleans (true or false) in a given list.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T12:57:02.732Z",
          "full_dependency_versions": [ "0.1.2", "0.1.5", "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "Count Sequences Of True Or False",
              "_id": "53cfc6e00e5572016a000167"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Normalization",
              "_id": "523a224430e55dc52b000008"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.4" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Normalization",
              "_id": "523a224430e55dc52b000008"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T12:57:02.732Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 19,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "boolean", "list", "length", "sequence", "true", "false" ],
      "white_list": false
    },
    {
      "_id": "5335aecfbfe42595360000f0",
      "name": "Curve Array",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7e2c5617-f5d4-404e-b5d3-cc3608be0634gregPkg387.zip",
          "contents": "Curve Array - Creates a curve array from a list of curves",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:02:08.658Z",
          "full_dependency_versions": [ "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Curve Array",
              "_id": "5335aecfbfe42595360000f0"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:02:08.658Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 473,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Room Stuff",
          "_id": "52e217e8bfe425953600001c"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "curve", "array" ],
      "white_list": false
    },
    {
      "_id": "5251fb9a3f7315936f000013",
      "name": "Exterior Angle",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3541d903-46c0-434c-9d31-59493d120b66gregPkg958.zip",
          "contents": "Exterior Angle - Computes the exterior angle of a given angle.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:42:01.425Z",
          "full_dependency_versions": [ "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "Exterior Angle",
              "_id": "5251fb9a3f7315936f000013"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:42:01.425Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 71,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "exterior", "angle", "180-x", "360-x" ],
      "white_list": false
    },
    {
      "_id": "533e47150e5572016a000006",
      "name": "Family To Type And Back",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7d0462e9-7589-4aff-8ec7-8bd47c1d4255gregPkg876.zip",
          "contents": "Get Family From Family Type - Retrieves the family of a given family type, Get Family Symbols From Family - Gets all family symbols of a given category in the model  (does *not *work for system families)",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:42:52.437Z",
          "full_dependency_versions": [ "0.1.2", "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Family To Type And Back",
              "_id": "533e47150e5572016a000006"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.2", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:42:52.437Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 732,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "get", "family", "symbols", "types" ],
      "white_list": false
    },
    {
      "_id": "529c8bc29de41c8235000036",
      "name": "Foundation Stuff",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/fb1a2e4b-42fc-4051-9d86-68b1b9e46e6agregPkg474.zip",
          "contents": "Filter Structural Foundations By Kind - Filters a list of structural foundations by their kind (isolated, wall, slab)., Footing Type Breaks At Inserts - Determines whether a list of wall footing types break at inserts in their attached walls, Get Footing Type - Retrieves the footing type for a given wall footing instance",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:43:28.979Z",
          "full_dependency_versions": [ "0.1.3", "0.1.5", "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Foundation Stuff",
              "_id": "529c8bc29de41c8235000036"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:43:28.979Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 83,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "structural", "foundation", "get", "type", "filter", "kind", "isolated", "wall", "footing", "slab", "breaks", "inserts" ],
      "white_list": false
    },
    {
      "_id": "529c69119de41c823500002c",
      "name": "Get And Set Family Type",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1e10d881-5522-4a82-8bcc-cf0a3c2a8706gregPkg209.zip",
          "contents": "Get Family Type - Returns the familyt type of a given family instance, Set Family Type - Changes the family type of a given famiyl instance to the specified type",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:44:50.562Z",
          "full_dependency_versions": [ "0.1.3", "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Get And Set Family Type",
              "_id": "529c69119de41c823500002c"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.2", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:44:50.562Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 293,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "get", "set", "family", "type", "symbol" ],
      "white_list": false
    },
    {
      "_id": "53083642bfe42595360000a6",
      "name": "Get Bounding Box",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/da43d5e5-f749-4455-9e75-c652b2c9dc6bgregPkg656.zip",
          "contents": "Get Bounding Box - Gets the bounding box of a Revit element",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:46:20.145Z",
          "full_dependency_versions": [ "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Get Bounding Box",
              "_id": "53083642bfe42595360000a6"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:46:20.145Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 310,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        },
        {
          "name": "Select by Bounding Box",
          "_id": "539b18360e5572016a000109"
        }
      ],
      "num_dependents": 2,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "get", "bounding", "box" ],
      "white_list": false
    },
    {
      "_id": "537082900e5572016a000054",
      "name": "Get Current Revit Document Path",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7071a4e8-5a03-44c9-bced-a755c8de9f1agregPkg450.zip",
          "contents": "Get Current Revit Document Path - Gets the path and directory of the current Revit document",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:46:46.796Z",
          "full_dependency_versions": [ "0.1.2", "0.1.1", "0.1.1", "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Get Current Revit Document Path",
              "_id": "537082900e5572016a000054"
            },
            {
              "name": "Get Directory From File Path",
              "_id": "537080aa0e5572016a000052"
            },
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            },
            {
              "name": "Increment/Decrement by 1",
              "_id": "521ce85be2f476ca0500003b"
            }
          ],
          "direct_dependency_versions": [ "0.1.1", "0.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "Get Directory From File Path",
              "_id": "537080aa0e5572016a000052"
            },
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:46:46.796Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 247,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Gets the path and directory of the current Revit document",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "get", "document", "file", "path", "directory" ],
      "white_list": false
    },
    {
      "_id": "537080aa0e5572016a000052",
      "name": "Get Directory From File Path",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6644335e-c6e8-43e7-9a65-1181dc6c3880gregPkg154.zip",
          "contents": "Get Directory From File Path - Gets the directory from a given file path",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:54:57.737Z",
          "full_dependency_versions": [ "0.1.2", "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Get Directory From File Path",
              "_id": "537080aa0e5572016a000052"
            },
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            }
          ],
          "direct_dependency_versions": [ "0.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:54:57.737Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 295,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Get Current Revit Document Path",
          "_id": "537082900e5572016a000054"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "get", "directory", "file", "path" ],
      "white_list": false
    },
    {
      "_id": "53083536bfe42595360000a4",
      "name": "Get Element By Face",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/03ca4e44-812b-4d9c-8636-8448d81e5dd7gregPkg392.zip",
          "contents": "Get Element By Face - Returns the underlying Revit element of a given face",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:56:46.502Z",
          "full_dependency_versions": [ "0.1.2", "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Get Element By Face",
              "_id": "53083536bfe42595360000a4"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.2", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:56:46.502Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 101,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "get", "element", "face" ],
      "white_list": false
    },
    {
      "_id": "5300622abfe4259536000084",
      "name": "Get Element Location",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b2c1d01f-88fb-4d16-a517-d19efdde66a2gregPkg241.zip",
          "contents": "Get Element Location - Returns the location of an element as an XYZ (or if it's line-based the start and end point of the line), along with some booleans to help filtering the results. Use this for some element types (e.g. walls or lines) that do not work with the built-in Get Family Instance Location node. ",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:57:34.633Z",
          "full_dependency_versions": [ "0.2.1", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Get Element Location",
              "_id": "5300622abfe4259536000084"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:57:34.633Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 677,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "element", "location", "xyz", "curve" ],
      "white_list": false
    },
    {
      "_id": "53873b790e5572016a0000ce",
      "name": "Get Third XYZ Axis",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/47d96beb-3801-4a2f-9d69-02fc6f885740gregPkg104.zip",
          "contents": "Get Third XYZ Axis - Given two main XYZ axes (or vectors pointing more or less in thei general direction), this node will find the third axis.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:59:06.648Z",
          "full_dependency_versions": [ "0.1.2", "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Get Third XYZ Axis",
              "_id": "53873b790e5572016a0000ce"
            },
            {
              "name": "XYZ Axis From Vector",
              "_id": "5386fa8e0e5572016a0000ca"
            }
          ],
          "direct_dependency_versions": [ "0.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "XYZ Axis From Vector",
              "_id": "5386fa8e0e5572016a0000ca"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:59:06.648Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 336,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Mesh Stuff",
          "_id": "5381c3550e5572016a000081"
        },
        {
          "name": "Topo Stuff",
          "_id": "5278a56d3f7315936f00004a"
        }
      ],
      "num_dependents": 2,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "xyz", "axis" ],
      "white_list": false
    },
    {
      "_id": "53aa4eed0e5572016a000113",
      "name": "Is Empty",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2bf7a6e8-c86f-4e51-98ac-7faf464464c0gregPkg425.zip",
          "contents": "Is Empty - Checks if the input items are <empty>",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:13:57.906Z",
          "full_dependency_versions": [ "0.1.4", "0.1.5", "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Is Empty",
              "_id": "53aa4eed0e5572016a000113"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:13:57.906Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 14,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "empty" ],
      "white_list": false
    },
    {
      "_id": "537df4fb0e5572016a00007c",
      "name": "Is Point Inside Polygon",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2d05002f-9098-488b-8a98-b7bbc40a7629gregPkg903.zip",
          "contents": "Is Point Inside Polygon - Determines if a point is inside the space enclosed by a polygon",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:18:17.476Z",
          "full_dependency_versions": [ "0.1.2", "0.1.2", "0.1.5", "0.2.0" ],
          "full_dependency_ids": [
            {
              "name": "Is Point Inside Polygon",
              "_id": "537df4fb0e5572016a00007c"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "UV Components",
              "_id": "534763b40e5572016a000017"
            }
          ],
          "direct_dependency_versions": [ "0.1.2", "0.2.0", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "UV Components",
              "_id": "534763b40e5572016a000017"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:18:17.476Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 25,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "point", "inside", "polygon" ],
      "white_list": false
    },
    {
      "_id": "52f06eb7bfe4259536000049",
      "name": "Is Related To Mass",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/cdfd0a1e-b481-4600-a6dd-a6438c505871gregPkg128.zip",
          "contents": "Is Related To Mass - Returns true if an object (wall, roof, floor or curtain system) has been modelled by face and the underlying mass still exists in the project.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:19:02.617Z",
          "full_dependency_versions": [ "0.1.2", "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Is Related To Mass",
              "_id": "52f06eb7bfe4259536000049"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:19:02.617Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 19,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "mass", "related", "face" ],
      "white_list": false
    },
    {
      "_id": "528df0219de41c8235000009",
      "name": "List Not Empty",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a74cbde9-7832-4a6d-b52e-0dca6bb34cf9gregPkg434.zip",
          "contents": "List Not Empty - Just the inversion of the built-in Is Empty List node.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:24:09.848Z",
          "full_dependency_versions": [ "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "List Not Empty",
              "_id": "528df0219de41c8235000009"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:24:09.848Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 861,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        },
        {
          "name": "Rain Area",
          "_id": "570a4088287283f905000006"
        }
      ],
      "num_dependents": 2,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "list", "not", "empty" ],
      "white_list": false
    },
    {
      "_id": "5322abdabfe42595360000d9",
      "name": "Material Stuff",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e10d1e79-c940-4423-9a32-b679ef719d94gregPkg445.zip",
          "contents": "Get Material Properties - Retrieves a number of properties froma given material, Get Materials From Element - Retrieves all materials froma given element",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:27:09.225Z",
          "full_dependency_versions": [ "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Material Stuff",
              "_id": "5322abdabfe42595360000d9"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:27:09.225Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 122,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "material", "element", "properties" ],
      "white_list": false
    },
    {
      "_id": "52b327389de41c8235000078",
      "name": "Parameter Exists",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f531abac-a077-4033-8e35-c8f15703b40cgregPkg735.zip",
          "contents": "Parameter Exists - Checks if an element contains a parameter of a given name",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:35:48.363Z",
          "full_dependency_versions": [ "0.1.4", "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Parameter Exists",
              "_id": "52b327389de41c8235000078"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.2", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:35:48.363Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 76,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "parameter", "exists" ],
      "white_list": false
    },
    {
      "_id": "52e21705bfe425953600001a",
      "name": "Phasing Stuff",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1faaae9d-0da2-44ca-aaee-6707566d210agregPkg488.zip",
          "contents": "Get Phase by Name - Returns the phase of a given name (if it exists), Get Phases - Gets the created and demolished phases of an element, List Phases - Lists all phases in the active document",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:39:04.036Z",
          "full_dependency_versions": [ "0.1.5", "0.1.5", "0.1.2", "0.1.6" ],
          "full_dependency_ids": [
            {
              "name": "Phasing Stuff",
              "_id": "52e21705bfe425953600001a"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.6", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.1.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:39:04.036Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 201,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Room Stuff",
          "_id": "52e217e8bfe425953600001c"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "phases", "created", "demolished" ],
      "white_list": false
    },
    {
      "_id": "53873af40e5572016a0000cc",
      "name": "Plane By Reference Or Sketch Plane",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3a3dd67c-7ec0-4b63-8f2c-0749dab557c1gregPkg35.zip",
          "contents": "Plane By Reference Or Sketch Plane - Retrieves the plane of a reference or sketch plane.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T17:39:38.344Z",
          "full_dependency_versions": [ "0.1.3", "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Plane By Reference Or Sketch Plane",
              "_id": "53873af40e5572016a0000cc"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.2", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T17:39:38.344Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 15,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "reference", "sketch", "plane" ],
      "white_list": false
    },
    {
      "_id": "522c99264b31fa536a00000e",
      "name": "Plane From First 3 XYZs",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a2bf34d6-3ba2-4dac-90d3-c077ace663f2gregPkg752.zip",
          "contents": "Plane From First 3 XYZs - Returns a plane, its origin and its normal based on the first three XYZs in a given list",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T17:41:40.742Z",
          "full_dependency_versions": [ "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "Plane From First 3 XYZs",
              "_id": "522c99264b31fa536a00000e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T17:41:40.742Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 58,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "plane", "normal", "origin", "xyz", "list" ],
      "white_list": false
    },
    {
      "_id": "52ca73b49f852b166e000004",
      "name": "Plane-Vector Intersection",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7f4e3d3e-bd4a-44f5-8f72-ad08960009ddgregPkg17.zip",
          "contents": "Plane-Vector Intersection - Finds the intersection point between a plane and a vector",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T17:45:46.221Z",
          "full_dependency_versions": [ "0.2.1", "0.1.1", "0.1.4", "0.1.3", "0.1.1", "0.1.1", "0.1.1", "0.1.5", "0.1.4", "0.2.0", "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Plane-Vector Intersection",
              "_id": "52ca73b49f852b166e000004"
            },
            {
              "name": "Vector Is In Plane",
              "_id": "53074571bfe425953600009e"
            },
            {
              "name": "Has Out-Of-Plane XYZs",
              "_id": "522c99e44b31fa536a000010"
            },
            {
              "name": "Has Out-Of-Plane XYZs",
              "_id": "522c99e44b31fa536a000010"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Vectors Are Orthogonal",
              "_id": "5306edf2bfe4259536000098"
            },
            {
              "name": "Vector And Plane Are Parallel",
              "_id": "53070a7abfe425953600009c"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            }
          ],
          "direct_dependency_versions": [ "0.1.1", "0.1.1", "0.1.1", "0.1.1", "0.1.4", "0.2.0", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Vector Is In Plane",
              "_id": "53074571bfe425953600009e"
            },
            {
              "name": "Vector And Plane Are Parallel",
              "_id": "53070a7abfe425953600009c"
            },
            {
              "name": "Vectors Are Orthogonal",
              "_id": "5306edf2bfe4259536000098"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Has Out-Of-Plane XYZs",
              "_id": "522c99e44b31fa536a000010"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T17:45:46.221Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 125,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Central Projection On Plane",
          "_id": "5306fa4dbfe425953600009a"
        },
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        }
      ],
      "num_dependents": 2,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "plane", "vector", "intersection" ],
      "white_list": false
    },
    {
      "_id": "5246f1d430e55dc52b000031",
      "name": "Remove Duplicates From List",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d231106b-10cb-44f7-85be-ab60b1992803gregPkg707.zip",
          "contents": "Remove Duplicate Revit Elements From List - Removes all duplicates of Revit elements from a given list. (Will also remove any other duplicates from a list...), Remove Duplicates From List - Removes duplicate items from a given list. Will *not* work for Revit elements!, Remove Duplicates UVs Or XYZs From List - Removes duplicate UVs or XYZs from a given list. May work for Revit Elements as well.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T17:49:00.504Z",
          "full_dependency_versions": [ "0.2.1", "0.1.5", "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Remove Duplicates From List",
              "_id": "5246f1d430e55dc52b000031"
            },
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.5", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T17:49:00.504Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1089,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Room Stuff",
          "_id": "52e217e8bfe425953600001c"
        },
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        }
      ],
      "num_dependents": 2,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "list", "duplicate", "remove", "distinct", "unique", "xyz", "uv" ],
      "white_list": false
    },
    {
      "_id": "52d3f1219f852b166e000015",
      "name": "Revit API Helpers",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5679991a-0b94-4466-a4c8-527a5905de33gregPkg776.zip",
          "contents": "Get Members - Gets a list of all members (properties and methods) of a selected element, List BuiltInCategories - List all the BuiltInCategories available, List BuiltInParameters - List all the BuiltInCategories available, Search In BuiltInCategories - Lets you search in Revit's built-in categories. Search is case-sensitive. Use * as a wildcard., Search In BuiltInParameters - Lets you search in Revit's built-in parameters. Search is case-sensitive. Use * as a wildcard., Search In Members - Lets you search in an element's members. Search is case-sensitive. Use * as a wildcard.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T17:55:02.292Z",
          "full_dependency_versions": [ "0.1.3", "0.1.2", "0.1.2", "0.71.2", "0.1.5", "0.71.3", "0.2.2" ],
          "full_dependency_ids": [
            {
              "name": "Revit API Helpers",
              "_id": "52d3f1219f852b166e000015"
            },
            {
              "name": "Replace Substring",
              "_id": "52d26e2b9f852b166e000012"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            }
          ],
          "direct_dependency_versions": [ "0.1.2", "0.1.5", "0.2.2", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            },
            {
              "name": "Replace Substring",
              "_id": "52d26e2b9f852b166e000012"
            }
          ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T17:55:02.292Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 194,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "52c8cbb604db8f736100000b",
      "name": "Sort List Of Lists",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/20986e19-5b24-4b30-a6c2-b59ed4bb494fgregPkg672.zip",
          "contents": "Sort List Of Lists - Sorts a list of lists by one of its sublists",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:06:13.487Z",
          "full_dependency_versions": [ "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "Sort List Of Lists",
              "_id": "52c8cbb604db8f736100000b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:06:13.487Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 317,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Buckyball",
          "_id": "53032162bfe4259536000087"
        },
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        },
        {
          "name": "Hosted Object Stuff",
          "_id": "52ade6049de41c823500005c"
        }
      ],
      "num_dependents": 3,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "sort", "list", "sublists" ],
      "white_list": false
    },
    {
      "_id": "53aa75550e5572016a000116",
      "name": "Swap UV",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ad136283-4655-41fe-94ee-99ccd78b7b1dgregPkg524.zip",
          "contents": "Swap UV - Swaps U and V coordinates",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:11:09.443Z",
          "full_dependency_versions": [ "0.1.2", "0.1.5", "0.2.0", "2014.6.5" ],
          "full_dependency_ids": [
            {
              "name": "Swap UV",
              "_id": "53aa75550e5572016a000116"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "UV Components",
              "_id": "534763b40e5572016a000017"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "2014.6.5", "0.2.0", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "UV Components",
              "_id": "534763b40e5572016a000017"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:11:09.443Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 89,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Simple Patterning",
          "_id": "52adf18e9de41c823500005e"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "swap", "uv" ],
      "white_list": false
    },
    {
      "_id": "52f51549bfe4259536000061",
      "name": "Switch",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e4f266d0-96b6-41c0-aa7b-094d64a7c0bcgregPkg943.zip",
          "contents": "Switch - Emulates the Switch/Case statement that is  available in multiple programming languages.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:13:04.988Z",
          "full_dependency_versions": [ "0.1.2", "0.1.0", "0.1.4", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Switch",
              "_id": "52f51549bfe4259536000061"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            },
            {
              "name": "Match List With Keys And Values",
              "_id": "523e85a730e55dc52b000016"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.0", "0.1.5", "0.1.4" ],
          "direct_dependency_ids": [
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Match List With Keys And Values",
              "_id": "523e85a730e55dc52b000016"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:13:04.988Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 24,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "swicth", "case", "conditional" ],
      "white_list": false
    },
    {
      "_id": "529b0b779de41c8235000023",
      "name": "True And False For Any And All (Boolean)",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/69f5c0de-df4d-441b-9571-6118372301edgregPkg618.zip",
          "contents": "False For All (Boolean) - Returns true if all items in a list of booleans are false., False For Any (Boolean) - Returns true if any item in a list of booleans is false., True For All (Boolean) - Returns true if all items in a list of booleans are true., True For Any (Boolean) - Returns true if any item in a list of booleans is true.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:16:36.888Z",
          "full_dependency_versions": [ "0.2.1", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:16:36.888Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1166,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        },
        {
          "name": "Has Out-Of-Plane XYZs",
          "_id": "522c99e44b31fa536a000010"
        },
        {
          "name": "Vector Is In Plane",
          "_id": "53074571bfe425953600009e"
        },
        {
          "name": "Plane-Vector Intersection",
          "_id": "52ca73b49f852b166e000004"
        },
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        },
        {
          "name": "List-Sublist Length",
          "_id": "53597c620e5572016a000028"
        },
        {
          "name": "Ensure List is Sublist",
          "_id": "53597cf60e5572016a00002c"
        },
        {
          "name": "Flatten if Sublist",
          "_id": "535a9c7d0e5572016a000030"
        },
        {
          "name": "Central Projection On Plane",
          "_id": "5306fa4dbfe425953600009a"
        }
      ],
      "num_dependents": 9,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "true", "false", "booleans", "any", "all" ],
      "white_list": false
    },
    {
      "_id": "5226bfaee2f476ca05000063",
      "name": "Unit Conversion",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/fc98bfda-d1d9-4c56-a1b7-ffa9856b6aeagregPkg317.zip",
          "contents": "Centimeters To Feet - Converts centimeters into feet, Cubic Feet To Cubic Meters - Converts cubic feet into cubic meters, Cubic Meters To Cubic Feet - Converts cubic meters into cubic feet, Degrees To Radians - Converts degrees into radians, Feet To Centimeters - Converts feet into centimeters, Feet To Meters - Converts feet into meters, Feet To Millimeters - Converts feet into millimeters, Meters To Feet - Converts meters into feet, Millimeters To Feet - Converts millimeters into feet, Radians To Degrees - Converts radians into degrees, Square Feet To Square Meters - Converts square feet into square meters, Square Meters To Square Feet - Converts square meters into square feet",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:18:46.954Z",
          "full_dependency_versions": [ "0.2.1" ],
          "full_dependency_ids": [
            {
              "name": "Unit Conversion",
              "_id": "5226bfaee2f476ca05000063"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:18:46.954Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 555,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Facet curve intersection",
          "_id": "52f21c72bfe4259536000053"
        },
        {
          "name": "Altitude And Azimuth From Vector",
          "_id": "532af328bfe42595360000e1"
        }
      ],
      "num_dependents": 2,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "unit", "conversion", "convert", "feet", "ft", "meter", "m", "centimeter", "cm", "millimeter", "mm", "radian", "degree", "angle", "length", "area", "volume", "square", "cubic", "metric", "imperial" ],
      "white_list": false
    },
    {
      "_id": "53074571bfe425953600009e",
      "name": "Vector Is In Plane",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/760f7b15-3251-48ec-8cc4-951589f63f68gregPkg877.zip",
          "contents": "Vector Is In Plane - Checks if a given vector is located on a given plane",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:20:57.750Z",
          "full_dependency_versions": [ "0.1.2", "0.1.2", "0.2.1", "0.2.0", "0.1.4", "0.1.1", "0.1.1", "0.1.5", "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "Vector Is In Plane",
              "_id": "53074571bfe425953600009e"
            },
            {
              "name": "Vector And Plane Are Parallel",
              "_id": "53070a7abfe425953600009c"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "Has Out-Of-Plane XYZs",
              "_id": "522c99e44b31fa536a000010"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Vectors Are Orthogonal",
              "_id": "5306edf2bfe4259536000098"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.2", "0.1.1", "0.1.1", "0.1.4", "0.2.1", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Vector And Plane Are Parallel",
              "_id": "53070a7abfe425953600009c"
            },
            {
              "name": "Vectors Are Orthogonal",
              "_id": "5306edf2bfe4259536000098"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Has Out-Of-Plane XYZs",
              "_id": "522c99e44b31fa536a000010"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:20:57.75Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 121,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Plane-Vector Intersection",
          "_id": "52ca73b49f852b166e000004"
        },
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        },
        {
          "name": "Central Projection On Plane",
          "_id": "5306fa4dbfe425953600009a"
        }
      ],
      "num_dependents": 3,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "vector", "plane" ],
      "white_list": false
    },
    {
      "_id": "52efe7cbbfe4259536000044",
      "name": "Vector-Vector Intersection",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4d07aed9-10b1-49ae-9ae7-30553843a716gregPkg970.zip",
          "contents": "Vector-Vector Intersection - Determines if two vectors intersect and returns the closest points of intersection on both vectors.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:33:15.009Z",
          "full_dependency_versions": [ "0.2.1", "0.1.1", "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Vector-Vector Intersection",
              "_id": "52efe7cbbfe4259536000044"
            },
            {
              "name": "Vectors Are Parallel",
              "_id": "5306e80fbfe4259536000095"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            }
          ],
          "direct_dependency_versions": [ "0.1.1", "0.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Vectors Are Parallel",
              "_id": "5306e80fbfe4259536000095"
            }
          ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:33:15.009Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 126,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Solve Triangle By XYZs",
          "_id": "52f098e2bfe425953600004d"
        },
        {
          "name": "Altitude And Azimuth From Vector",
          "_id": "532af328bfe42595360000e1"
        }
      ],
      "num_dependents": 2,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "vector", "intersection" ],
      "white_list": false
    },
    {
      "_id": "5306edf2bfe4259536000098",
      "name": "Vectors Are Orthogonal",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/aa6c8584-7f68-49a8-9dba-fc172018b3b4gregPkg646.zip",
          "contents": "Vectors Are Orthogonal - Checks if two vectors are orthogonal to each other",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:37:39.785Z",
          "full_dependency_versions": [ "0.1.2", "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Vectors Are Orthogonal",
              "_id": "5306edf2bfe4259536000098"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            }
          ],
          "direct_dependency_versions": [ "0.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:37:39.785Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 136,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Vector And Plane Are Parallel",
          "_id": "53070a7abfe425953600009c"
        },
        {
          "name": "Vector Is In Plane",
          "_id": "53074571bfe425953600009e"
        },
        {
          "name": "Plane-Vector Intersection",
          "_id": "52ca73b49f852b166e000004"
        },
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        },
        {
          "name": "Central Projection On Plane",
          "_id": "5306fa4dbfe425953600009a"
        }
      ],
      "num_dependents": 5,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "vector", "orthogonal" ],
      "white_list": false
    },
    {
      "_id": "5386fa8e0e5572016a0000ca",
      "name": "XYZ Axis From Vector",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/95d52c73-8db5-4ef8-ba93-563a84546dcdgregPkg851.zip",
          "contents": "XYZ Axis From Vector - Returns whichever main axis (X, Y or Z) is closest to a given vector",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:49:20.880Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "XYZ Axis From Vector",
              "_id": "5386fa8e0e5572016a0000ca"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:49:20.88Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 375,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Get Third XYZ Axis",
          "_id": "53873b790e5572016a0000ce"
        },
        {
          "name": "Mesh Stuff",
          "_id": "5381c3550e5572016a000081"
        },
        {
          "name": "Topo Stuff",
          "_id": "5278a56d3f7315936f00004a"
        }
      ],
      "num_dependents": 3,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "xyz", "axis", "vector" ],
      "white_list": false
    },
    {
      "_id": "523499d56b18e47916000003",
      "name": "Binary To Decimal",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/125a4c26-976c-4ff6-96d9-8f7809cfa6ccgregPkg399.zip",
          "contents": "Binary.ToDecimal - Converts a list of binary (boolean) values into a decimal value",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-21T18:58:43.597Z",
          "full_dependency_versions": [ "0.71.2" ],
          "full_dependency_ids": [
            {
              "name": "Binary To Decimal",
              "_id": "523499d56b18e47916000003"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:58:43.597Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 3,
      "downloads": 79,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "convert", "list", "binary", "boolean", "decimal" ],
      "white_list": false
    },
    {
      "_id": "535b301a0e5572016a000033",
      "name": "Convex Hull 2D",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3f2eec9d-18bc-49c7-9500-e304534d4001gregPkg846.zip",
          "contents": "Convex Hull 2D - Computes the convex hull of a given set of UV coordinates based on the monotone chain algorithm",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-21T19:00:18.870Z",
          "full_dependency_versions": [ "0.71.5", "0.71.3" ],
          "full_dependency_ids": [
            {
              "name": "Convex Hull 2D",
              "_id": "535b301a0e5572016a000033"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.71.3" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.71.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T19:00:18.87Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 53,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "convex", "hull", "2d", "uv", "monotone", "chain" ],
      "white_list": false
    },
    {
      "_id": "52f098e2bfe425953600004d",
      "name": "Solve Triangle By XYZs",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e342c25f-de12-4b42-ba49-329af24ce459gregPkg221.zip",
          "contents": "Solve Triangle By XYZs - Solves a triangle based on the XYZ coordinates of its vertices.",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-21T19:11:48.292Z",
          "full_dependency_versions": [ "0.72.0", "0.71.1", "0.1.6", "0.2.1", "0.1.1", "0.1.1", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Solve Triangle By XYZs",
              "_id": "52f098e2bfe425953600004d"
            },
            {
              "name": "Angle Bisector",
              "_id": "522f6e358f1189e274000004"
            },
            {
              "name": "Law Of Cosines",
              "_id": "5226bb10e2f476ca0500005f"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Vector-Vector Intersection",
              "_id": "52efe7cbbfe4259536000044"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.6", "0.71.1", "0.1.1", "0.2.1" ],
          "direct_dependency_ids": [
            {
              "name": "Law Of Cosines",
              "_id": "5226bb10e2f476ca0500005f"
            },
            {
              "name": "Angle Bisector",
              "_id": "522f6e358f1189e274000004"
            },
            {
              "name": "Vector-Vector Intersection",
              "_id": "52efe7cbbfe4259536000044"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            }
          ],
          "change_log": "",
          "version": "0.72.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T19:11:48.292Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 84,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Altitude And Azimuth From Vector",
          "_id": "532af328bfe42595360000e1"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "solve", "triangle", "sides", "angles", "heights", "area", "plane", "normal", "centroid", "incircle" ],
      "white_list": false
    },
    {
      "_id": "53f802a30e5572016a00019b",
      "name": "Pumpkin01",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d4d2b50a-308f-4058-bbda-3ee29158232egregPkg717.zip",
          "contents": "Pumpkin01 - Makes a pumpkin",
          "engine_metadata": "",
          "engine_version": "0.7.3.2933",
          "created": "2014-10-23T02:03:58.189Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "Pumpkin01",
              "_id": "53f802a30e5572016a00019b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-23T02:03:58.189Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 121,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Makes a pumpkin, with sample implementations, and a sample Revit file that makes Structural Framing and Floors",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "pumpkin", "halloween" ],
      "white_list": false
    },
    {
      "_id": "54534be78b802a9427000012",
      "name": "Create Line Boundary Condition",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6ad38b4c-28dd-4ee4-b469-4d2763727db8gregPkg505.zip",
          "contents": "Create Line Boundary Condition - Create Line Boundary Condition|ContainsPythonScripts(58B25C0B-CBBE-4DDC-AC39-ECBEB8B55B10)",
          "engine_metadata": "",
          "engine_version": "0.7.2.13394",
          "created": "2014-10-31T08:44:23.016Z",
          "full_dependency_versions": [ "0.72.0" ],
          "full_dependency_ids": [
            {
              "name": "Create Line Boundary Condition",
              "_id": "54534be78b802a9427000012"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.72.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-31T08:44:23.016Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 102,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create Line Boundary Condition from Analitycal member",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "boundary", "condition" ],
      "white_list": false
    },
    {
      "_id": "51f82454e2f476ca05000008",
      "name": "y=Mx+b",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/68049e7e-b12c-43b2-9d50-336376794b14gregPkg721.zip",
          "contents": "y=Mx+b - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.2.2921",
          "created": "2014-11-03T21:22:25.441Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "y=Mx+b",
              "_id": "51f82454e2f476ca05000008"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-03T21:22:25.441Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 177,
      "repository_url": "",
      "site_url": "http://www.dynamobim.org",
      "banned": false,
      "deprecated": false,
      "group": "Core",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Form the result of Mx+b",
      "maintainers": [
        {
          "username": "peetle",
          "_id": "51f8232fe2f476ca05000003"
        }
      ],
      "keywords": [ "math", "sample" ],
      "white_list": false
    },
    {
      "_id": "54593feb893c653357000004",
      "name": "Is in Range",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ac9ff8e2-49a4-485c-a5a8-a72dba227bcagregPkg895.zip",
          "contents": "Is In Range - Check if a number is in a range",
          "engine_metadata": "",
          "engine_version": "0.7.3.3034",
          "created": "2014-11-04T21:06:51.402Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Is in Range",
              "_id": "54593feb893c653357000004"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-04T21:06:51.402Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 93,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Checks if a number is within a range.  Sample file in Extra folder",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "range", "boolean", "check" ],
      "white_list": false
    },
    {
      "_id": "546c6a80b77c84600c00001a",
      "name": "wavesurface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9ec0fd9e-0c7f-4a07-aef6-1be5d60d9b02gregPkg293.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.4.3221",
          "created": "2014-11-19T10:01:36.234Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "wavesurface",
              "_id": "546c6a80b77c84600c00001a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-19T10:01:36.234Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 89,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "creates a surface ",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "546cec3eb77c84600c000020",
      "name": "test.dll",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8415484f-cfd5-4c35-8b5e-7822114d08dagregPkg534.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.4.3216",
          "created": "2014-11-19T19:15:10.349Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "test.dll",
              "_id": "546cec3eb77c84600c000020"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-19T19:15:10.349Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 6,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "QA testing101",
      "maintainers": [
        {
          "username": "jnealb",
          "_id": "546ceba1b77c84600c00001d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "546f0f5bb77c84600c000029",
      "name": "Points.FormCurves (Dynamo 0.63)",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/edb0b468-2741-48d8-b0be-efa2101d7b74gregPkg436.zip",
          "contents": "Points.FormCurves - Sorts a collection of points using atan2 and connects them with curves",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-11-21T10:09:31.097Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Points.FormCurves (Dynamo 0.63)",
              "_id": "546f0f5bb77c84600c000029"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-21T10:09:31.097Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 52,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "DEV",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Sorts a collection of points using an atan2 method and connects them with curves.",
      "maintainers": [
        {
          "username": "dimiter_v@mail.bg",
          "_id": "532baed2bfe42595360000e3"
        }
      ],
      "keywords": [ "points", "atan2", "connect" ],
      "white_list": false
    },
    {
      "_id": "5471aa94b77c84600c000034",
      "name": "False Ellipse",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e6a496fd-f1fa-4d13-8d1b-a130849dfc86gregPkg952.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.3.3005",
          "created": "2014-11-23T09:36:20.744Z",
          "full_dependency_versions": [ "0.7.3" ],
          "full_dependency_ids": [
            {
              "name": "False Ellipse",
              "_id": "5471aa94b77c84600c000034"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-23T09:36:20.744Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 41,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creating Ellipse",
      "maintainers": [
        {
          "username": "saputri.liliani@gmail.com",
          "_id": "5471aa92b77c84600c000033"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54295f1acc26bfdc5a000032",
      "name": "LoadMultipleImagesFromDirectory",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8df9e999-2280-42cb-b831-631641c08830gregPkg823.zip",
          "contents": "LoadMultipleImagesFromDirectory - This node gets multiple images from a specified Directory Path. Files must have some sort of serial numbering method.",
          "engine_metadata": "",
          "engine_version": "0.7.5.3213",
          "created": "2014-11-25T14:51:33.227Z",
          "full_dependency_versions": [ "2.7.4" ],
          "full_dependency_ids": [
            {
              "name": "LoadMultipleImagesFromDirectory",
              "_id": "54295f1acc26bfdc5a000032"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2.7.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-25T14:51:33.227Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 100,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This node gets multiple images from a specified Directory Path. Files must have some sort of serial numbering method.\r\n*Update 0.7.4 edited the node to facilitate new file readers in 0.7.4 version.",
      "maintainers": [
        {
          "username": "josteinolsen7513",
          "_id": "53edcf720e5572016a00018f"
        }
      ],
      "keywords": [ "image", "file", "input", "multiple" ],
      "white_list": false
    },
    {
      "_id": "5474bb56b77c84600c000048",
      "name": "Catalyst.GAnerator",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/58662279-55cd-48d0-89f2-3bfdb660bfc7gregPkg654.zip",
          "contents": "RandomPoints2d - Creates a random number of points in a given Range, RandomPoints3d - Creates a random number of points in a given Range",
          "engine_metadata": "",
          "engine_version": "0.7.4.3245",
          "created": "2014-11-25T17:43:37.825Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Catalyst.GAnerator",
              "_id": "5474bb56b77c84600c000048"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-25T17:43:37.825Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 94,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A small test of an genetic algorithm finding the shortest path between points (2D and 3D). \r\nThe imported library has to be the \"Catalyst.dll\"!\r\n\r\n*uses the GAF library by John Newcombe*",
      "maintainers": [
        {
          "username": "fabian.ritter@tum.de",
          "_id": "5474bb55b77c84600c000047"
        }
      ],
      "keywords": [ "genetic", "algorithm", "optimization" ],
      "white_list": false
    },
    {
      "_id": "547c3b3ab77c84600c000062",
      "name": "AU2014 BIM Workshop Files",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7eea72c9-cb00-456b-9c41-88fe83832828gregPkg309.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3213",
          "created": "2014-12-01T09:56:10.964Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "AU2014 BIM Workshop Files",
              "_id": "547c3b3ab77c84600c000062"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-01T09:56:10.964Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 403,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Autodesk University",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "AU 2014 BIM Workshop Files",
          "_id": "547c3cc9b77c84600c000064"
        }
      ],
      "num_dependents": 1,
      "description": "Sample files for the Autodesk University Dynamo Workshop, Monday, Dec. 1, 2014",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "sample", "example", "workshop", "help" ],
      "white_list": false
    },
    {
      "_id": "547dcacafa779c1c11000006",
      "name": "Topography.Surface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/faeae87b-668d-4873-97d9-efd5fa74dd02gregPkg965.zip",
          "contents": "Topography.Surface - This node extracts a surface from a Revit topography. ",
          "engine_metadata": "",
          "engine_version": "0.7.5.3213",
          "created": "2014-12-02T14:20:58.650Z",
          "full_dependency_versions": [ "0.7.5", "0.74.1" ],
          "full_dependency_ids": [
            {
              "name": "Topography.Surface",
              "_id": "547dcacafa779c1c11000006"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "direct_dependency_versions": [ "0.74.1" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "change_log": "",
          "version": "0.7.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-02T14:20:58.65Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 853,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This node extracts a surface from a Revit topography. ",
      "maintainers": [
        {
          "username": "josteinolsen7513",
          "_id": "53edcf720e5572016a00018f"
        }
      ],
      "keywords": [ "topography" ],
      "white_list": false
    },
    {
      "_id": "5482b5a8fa779c1c11000014",
      "name": "AhDada",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/339eacad-00cc-4b3d-8ba3-eb719af4353fgregPkg29.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.4.3245",
          "created": "2014-12-06T07:52:08.256Z",
          "full_dependency_versions": [ "0.7.4" ],
          "full_dependency_ids": [
            {
              "name": "AhDada",
              "_id": "5482b5a8fa779c1c11000014"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-06T07:52:08.256Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 35,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Seats for Stadium",
      "maintainers": [
        {
          "username": "moomooairline@hotmail.com",
          "_id": "5482b5a6fa779c1c11000013"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5486a94dfa779c1c11000023",
      "name": "Geometry Sprials",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/189bb637-8952-4370-9a47-bbb0e90e915fgregPkg938.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.6.3387",
          "created": "2014-12-09T07:48:29.503Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Geometry Sprials",
              "_id": "5486a94dfa779c1c11000023"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-09T07:48:29.503Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 125,
      "repository_url": "https://github.com/elayabharath/Dynamo-Addons/tree/master/GeometrySpirals",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Quickly create and customize standard spirals \r\n  - Golden\r\n  - Fermat\r\n  - Archimedean\r\n  - Hyperbolic\r\n  - Logarithmic\r\n  - Lituus\r\n  - Theodorus\r\n\r\nPlease write to elayabharath@gmail.com for any feedback / more requests.",
      "maintainers": [
        {
          "username": "elayabharath.elango@autodesk.com",
          "_id": "5461d4c5895fdbc25e000014"
        }
      ],
      "keywords": [ "spirals", "golden", "fermat", "archimedes", "log" ],
      "white_list": false
    },
    {
      "_id": "54882f58fa779c1c1100002b",
      "name": "test",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/cc5015fb-9122-4fb8-9a45-94a20f07ca46gregPkg577.zip",
          "contents": "mobius - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.6.3382",
          "created": "2014-12-10T11:32:40.159Z",
          "full_dependency_versions": [ "3.0.0" ],
          "full_dependency_ids": [
            {
              "name": "test",
              "_id": "54882f58fa779c1c1100002b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "3.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-10T11:32:40.159Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 4,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing 2014 ",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5488304bfa779c1c1100002d",
      "name": "testin2014",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/43b567c7-1fe7-4a00-a45d-0e22970b088dgregPkg969.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.6.3382",
          "created": "2014-12-10T11:36:43.578Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "testin2014",
              "_id": "5488304bfa779c1c1100002d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-10T11:36:43.578Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing 2015",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "548830abfa779c1c1100002f",
      "name": "testing2014",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/74a9e3f1-f302-4bba-b9e8-a4f97eccc7b4gregPkg920.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.6.3382",
          "created": "2014-12-10T11:38:19.702Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "testing2014",
              "_id": "548830abfa779c1c1100002f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-10T11:38:19.702Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 3,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing 2014",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5488746efa779c1c11000034",
      "name": "jnb2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/642d33d5-a704-46d6-b267-04ac43a08b35gregPkg496.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3414",
          "created": "2014-12-10T16:27:26.008Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "jnb2",
              "_id": "5488746efa779c1c11000034"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-10T16:27:26.008Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 0,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "jnb publish for Monika",
      "maintainers": [
        {
          "username": "jnealb",
          "_id": "546ceba1b77c84600c00001d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "548912e5fa779c1c11000038",
      "name": "mytest",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/913f9b53-918e-49dd-9b7c-26b6454f9d37gregPkg967.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3437",
          "created": "2014-12-11T03:43:33.481Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "mytest",
              "_id": "548912e5fa779c1c11000038"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-11T03:43:33.481Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 13,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "revit 2014 test publich package",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54893779fa779c1c11000040",
      "name": "sun",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d4c2cf8c-cac9-455c-af76-afa698a34cedgregPkg168.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.6.3382",
          "created": "2014-12-11T06:19:37.050Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "sun",
              "_id": "54893779fa779c1c11000040"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-11T06:19:37.05Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 39,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing sundial",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54895b15fa779c1c11000042",
      "name": "GPS Viewer",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d4535dc8-b27d-44f1-be6d-5c4b5334db85gregPkg68.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3377",
          "created": "2014-12-11T08:51:33.312Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "GPS Viewer",
              "_id": "54895b15fa779c1c11000042"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-11T08:51:33.312Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 97,
      "repository_url": "https://github.com/elayabharath/Dynamo-Addons/tree/master/GPS",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "View the track in a GPX file on top of Google maps. \r\nLimitations: 1. Only the first track will be plotted \r\n                   2. All the track segments will be joined as one.\r\n                  3. The track will be approximated to suit the http request requiements\r\n\r\nWARNNG: The google maps allows only 25000 requests per day per application, please be considerate in number of requests you use.",
      "maintainers": [
        {
          "username": "elayabharath.elango@autodesk.com",
          "_id": "5461d4c5895fdbc25e000014"
        }
      ],
      "keywords": [ "gps", "google", "gpx", "gps", "viewer", "viewer", "track" ],
      "white_list": false
    },
    {
      "_id": "548b434ffa779c1c1100004e",
      "name": "All Family Type Instance Placer",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/12bf5ac9-3f66-4d39-9120-593691313868gregPkg336.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.4.3245",
          "created": "2014-12-12T19:34:39.011Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "All Family Type Instance Placer",
              "_id": "548b434ffa779c1c1100004e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-12T19:34:39.011Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 215,
      "repository_url": "",
      "site_url": "http://case-inc.com/",
      "banned": false,
      "deprecated": true,
      "group": "Geometry",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Places one instance of each type within a specified family, spaced out evenly based on number range.",
      "maintainers": [
        {
          "username": "kylemorin",
          "_id": "548b434efa779c1c1100004d"
        }
      ],
      "keywords": [ "family", "instance", "placement" ],
      "white_list": false
    },
    {
      "_id": "548ff41afa779c1c1100005a",
      "name": "Boolean Switch",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1d0efa19-ea04-465d-998a-e8db9824f6b0gregPkg999.zip",
          "contents": "Boolean Switch - This node pass values through if boolean is set to \"true\" and gives null value if \"false\".",
          "engine_metadata": "",
          "engine_version": "0.7.5.3355",
          "created": "2014-12-16T08:58:02.592Z",
          "full_dependency_versions": [ "0.7.5" ],
          "full_dependency_ids": [
            {
              "name": "Boolean Switch",
              "_id": "548ff41afa779c1c1100005a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-16T08:58:02.592Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 218,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Berger",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This node pass data through if boolean is set to \"true\" and gives null value if \"false\"",
      "maintainers": [
        {
          "username": "josteinolsen7513",
          "_id": "53edcf720e5572016a00018f"
        }
      ],
      "keywords": [ "boolean", "switch" ],
      "white_list": false
    },
    {
      "_id": "54907c7dfa779c1c11000061",
      "name": "Room Equipment",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/655d7ca7-dcfb-4353-bc66-5a9260170015gregPkg711.zip",
          "contents": "Fill List - Create of list of size 'x' takes list and repeats last value until it becomes the right size., Find Midpoint at height - Returns a point that is the midpoint of the x and y bounding box with an optional z offset, GetBottomCurve - Gets the curve of a geometry object from the bottom most plane, Place Room Duplicate - Given 3 adaptive point families it will place the smallest usable one along a room outline. The first point placed will be in the room center.",
          "engine_metadata": "",
          "engine_version": "0.7.4.3245",
          "created": "2014-12-16T19:07:57.298Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Room Equipment",
              "_id": "54907c7dfa779c1c11000061"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-16T19:07:57.298Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 337,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Takes an input of adaptive components and places it at room boundaries for export to BIM 360 Field",
      "maintainers": [
        {
          "username": "MarcKinsman",
          "_id": "54907c7cfa779c1c11000060"
        }
      ],
      "keywords": [ "element", "geometry", "room", "revit" ],
      "white_list": false
    },
    {
      "_id": "549d8cbd3bdbc3ea4a00000c",
      "name": "Alex Volt",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/cf1fc6cb-49d5-4f51-88bf-b2feb662e60dgregPkg937.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.4.3143",
          "created": "2014-12-26T16:28:45.506Z",
          "full_dependency_versions": [ "26.12.2014" ],
          "full_dependency_ids": [
            {
              "name": "Alex Volt",
              "_id": "549d8cbd3bdbc3ea4a00000c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "26.12.2014",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-26T16:28:45.506Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 24,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "stadio",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Gradonate elittiche (larghezza 80 cm. / altezza cm.50)",
      "maintainers": [
        {
          "username": "al.volt@virgilio.it",
          "_id": "5476f960b77c84600c000054"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54a57a5edcee4dfd26000010",
      "name": "Structural Framing at a Level",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b01501ff-157e-4863-89fc-355d31946ee0gregPkg414.zip",
          "contents": "Structural Framing at a Level - Gets structural framing at or above a level but below another level",
          "engine_metadata": "",
          "engine_version": "0.7.4.3245",
          "created": "2015-01-01T16:48:30.396Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Structural Framing at a Level",
              "_id": "54a57a5edcee4dfd26000010"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-01T16:48:30.396Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 349,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Revit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Gets Structural Framing elements at or above a selected level but below another selected level",
      "maintainers": [
        {
          "username": "mikeyforrest",
          "_id": "54a57a5cdcee4dfd2600000f"
        }
      ],
      "keywords": [ "revit", "framing", "level", "by", "level" ],
      "white_list": false
    },
    {
      "_id": "54aafd2edcee4dfd2600001e",
      "name": "Element.IsHidden",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/af1df106-d8d6-4463-951b-50680d90559egregPkg751.zip",
          "contents": "Element.IsHidden - This node checks whether the input elements are hidden in the active view or not. Returns two lists: Hidden or Not hidden.",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-01-05T21:07:58.177Z",
          "full_dependency_versions": [ "0.7.5" ],
          "full_dependency_ids": [
            {
              "name": "Element.IsHidden",
              "_id": "54aafd2edcee4dfd2600001e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-05T21:07:58.177Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 160,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Berger",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This node checks whether the input elements are hidden in the active view or not. Returns two lists: Hidden or Not hidden.",
      "maintainers": [
        {
          "username": "josteinolsen7513",
          "_id": "53edcf720e5572016a00018f"
        }
      ],
      "keywords": [ "hidden" ],
      "white_list": false
    },
    {
      "_id": "540668980e5572016a0001b4",
      "name": "List.SortByKeyList",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ff2d5c1a-5a69-46ce-837f-f497ae07a76bgregPkg692.zip",
          "contents": "List.SortByKeyList - Reorder a list according to the sorted order of a second key list.",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-01-12T19:20:25.691Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "List.SortByKeyList",
              "_id": "540668980e5572016a0001b4"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-12T19:20:25.691Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 455,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "TangentsFromCurveToPoint",
          "_id": "543367d7cc26bfdc5a000047"
        },
        {
          "name": "Point.SortByAngle",
          "_id": "54b41c31dcee4dfd26000049"
        }
      ],
      "num_dependents": 2,
      "description": "Reorder items in a list by the sorted order of a key list.",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "sort", "list", "key", "keylist" ],
      "white_list": false
    },
    {
      "_id": "54c20071dcee4dfd26000081",
      "name": "List.Breakdown",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b03afefd-023b-4d1d-9bc6-74ba1e5f3ec6gregPkg482.zip",
          "contents": "List.Breakdown - Breaks lists or nested lists in FirstItems, LastItems and RestItems",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-01-23T08:04:01.560Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "List.Breakdown",
              "_id": "54c20071dcee4dfd26000081"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-23T08:04:01.56Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 154,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "BIM4Struc.List",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Breakdown lists to FirstItem(s), LastItem(s) and RestItem(s)",
      "maintainers": [
        {
          "username": "dieter.vermeulen@autodesk.com",
          "_id": "54902569fa779c1c1100005c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "542a75a2cc26bfdc5a000036",
      "name": "GetTypeParameter.FrmFamilyInstance",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/75ee7eaa-5df9-402f-be0b-8d26b7b69fc0gregPkg296.zip",
          "contents": "GetTypeParameter.FrmFamilyInstance - Get a Type Parameter from an Instance of a Family",
          "engine_metadata": "",
          "engine_version": "0.7.6.3876",
          "created": "2015-01-24T11:23:06.660Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "GetTypeParameter.FrmFamilyInstance",
              "_id": "542a75a2cc26bfdc5a000036"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-24T11:23:06.66Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 1162,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "KOP",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Get a Type Parameter from a Family Instance",
      "maintainers": [
        {
          "username": "KOPPEVI",
          "_id": "53ce7c620e5572016a000163"
        }
      ],
      "keywords": [ "get", "type", "parameters", "from", "family", "instances" ],
      "white_list": false
    },
    {
      "_id": "54d320c1dcee4dfd260000be",
      "name": "Groups.Select",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/28bc8b9a-f0d7-4358-a354-076b578dfe72gregPkg415.zip",
          "contents": "Groups.Select - selects all groups in project",
          "engine_metadata": "",
          "engine_version": "0.7.6.3982",
          "created": "2015-02-05T07:50:25.516Z",
          "full_dependency_versions": [ "2015.2.5" ],
          "full_dependency_ids": [
            {
              "name": "Groups.Select",
              "_id": "54d320c1dcee4dfd260000be"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2015.2.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-02-05T07:50:25.516Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 203,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "KOP.UTILITIES",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Selects all groups in project",
      "maintainers": [
        {
          "username": "KOPPEVI",
          "_id": "53ce7c620e5572016a000163"
        }
      ],
      "keywords": [ "select", "groups" ],
      "white_list": false
    },
    {
      "_id": "54e05d51dcee4dfd260000ec",
      "name": "Acustamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e397742f-aef3-4248-ba18-9b8e89d9bc67gregPkg109.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-02-15T08:48:17.982Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Acustamo",
              "_id": "54e05d51dcee4dfd260000ec"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-02-15T08:48:17.982Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 252,
      "repository_url": "",
      "site_url": "http://andreaarch.wordpress.com/2015/02/15/acoustamo-released/",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Raytrace for Dynamo - Conceptual Acoustic Analysis",
      "maintainers": [
        {
          "username": "AndreaVannini",
          "_id": "54e05d50dcee4dfd260000eb"
        }
      ],
      "keywords": [ "raytrace", "acoustics" ],
      "white_list": false
    },
    {
      "_id": "54e3d82bdcee4dfd260000f5",
      "name": "Remove Items that Also Appear in Other List",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/edb0f049-f23b-453e-ab5c-3a08331bac61gregPkg961.zip",
          "contents": "List.RemoveItemsFromOtherList - This will take long list A, remove entries that appear in short list B, and give you list C. (JBE List Operations are probably more robust).",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-02-18T00:09:15.241Z",
          "full_dependency_versions": [ "0.0.1", "0.75.16" ],
          "full_dependency_ids": [
            {
              "name": "Remove Items that Also Appear in Other List",
              "_id": "54e3d82bdcee4dfd260000f5"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "direct_dependency_versions": [ "0.75.16" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-02-18T00:09:15.241Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 75,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "LSJ",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This will take long list A, remove entries that appear in short list B, and give you list C. Unique entries in List B are ignored. (Note: JBE List Operations are much more powerful / robust).",
      "maintainers": [
        {
          "username": "luke.johnson",
          "_id": "54e3d829dcee4dfd260000f4"
        }
      ],
      "keywords": [ "list" ],
      "white_list": false
    },
    {
      "_id": "54eaf33fdcee4dfd26000108",
      "name": "LoftWithHole",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6da0e17f-c6a0-4103-85cd-79e82ccedc95gregPkg391.zip",
          "contents": "LoftWithHole - This will loft between two curve Top and Bottom which will have inner curves for creating a hole in lofted solids.",
          "engine_metadata": "",
          "engine_version": "0.7.6.4180",
          "created": "2015-02-23T09:30:39.581Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "LoftWithHole",
              "_id": "54eaf33fdcee4dfd26000108"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-02-23T09:30:39.581Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 110,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "SpecialGeometryNodes",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This will loft between Top and Bottom Curves, which will have their inner curves to create Loft with Hole.",
      "maintainers": [
        {
          "username": "critesh",
          "_id": "530da612bfe42595360000b0"
        }
      ],
      "keywords": [ "solid", "difference", "loft", "curves" ],
      "white_list": false
    },
    {
      "_id": "551c52315899bb3705000038",
      "name": "Level Mover",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2597a2c2-aa9c-4e98-896a-bb4d7a2bfeadgregPkg487.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-04-01T20:16:49.893Z",
          "full_dependency_versions": [ "100.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Level Mover",
              "_id": "551c52315899bb3705000038"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "100.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-01T20:16:49.893Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 130,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Moves Levels",
      "maintainers": [
        {
          "username": "DarylGregoire3375",
          "_id": "551c52305899bb3705000037"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "551cc39f5899bb370500003a",
      "name": "Rotate Family Instances Around Origin Axis by Angle",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1205792a-5172-4e44-951a-af41d167cbe9gregPkg762.zip",
          "contents": "Rotate Families Around Origin by Angle - this will take Family Instance and angles as list inputs, and rotate Families around their origin. Outputs provide feedback on information used.",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-04-02T04:20:47.419Z",
          "full_dependency_versions": [ "0.0.1", "2015.3.12" ],
          "full_dependency_ids": [
            {
              "name": "Rotate Family Instances Around Origin Axis by Angle",
              "_id": "551cc39f5899bb370500003a"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "2015.3.12" ],
          "direct_dependency_ids": [
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-02T04:20:47.419Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 145,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "LSJ",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This will take Family Instance and angles as list inputs, and rotate Families around their origin. Outputs provide feedback on information used.",
      "maintainers": [
        {
          "username": "luke.johnson",
          "_id": "54e3d829dcee4dfd260000f4"
        }
      ],
      "keywords": [ "family", "rotate" ],
      "white_list": false
    },
    {
      "_id": "554e5c96a8367b9861000087",
      "name": "PointOverlap_AdaptiveComponents",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/98b1e046-5425-414a-8164-f0ae4f49b3aegregPkg153.zip",
          "contents": "Point.Overlap.AdaptiveComponents - Takes an aray of points, subdivides them into specified chuncks with specified offset with chuncks of 3 [i.e. offset 2, {a,b,c,d,e,f...} yields {a,b,c},{c,d,e},{e,f,g}...Works for adaptive components such as railings or lines that need to be joined. ",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-05-09T19:14:30.552Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "PointOverlap_AdaptiveComponents",
              "_id": "554e5c96a8367b9861000087"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-05-09T19:14:30.552Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 121,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Takes an aray of points, subdivides them into specified chuncks with specified offset with chuncks of 3 [i.e. offset 2, {a,b,c,d,e,f...} yields {a,b,c},{c,d,e},{e,f,g}...Works for adaptive components such as railings or lines that need to be joined. ",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": [ "point" ],
      "white_list": false
    },
    {
      "_id": "555011d5a8367b986100008b",
      "name": "Set One Parameter to Many Elements",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/65876f0b-33d7-4e3d-9b45-8733dc9f6a99gregPkg641.zip",
          "contents": "Set One Parameter to Many Elements - elements as a list, single value and single parameter name",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-05-11T02:20:05.708Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Set One Parameter to Many Elements",
              "_id": "555011d5a8367b986100008b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-05-11T02:20:05.708Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 217,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "LSJ",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "uses inbuilt SetParameter node, with some simple list creation.",
      "maintainers": [
        {
          "username": "luke.johnson",
          "_id": "54e3d829dcee4dfd260000f4"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5297a3ff9de41c8235000018",
      "name": "If Equal Return Index",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4a6b8d7e-ec3e-49af-b184-03033d06e041gregPkg79.zip",
          "contents": "If Equal Return Index - If element in list A is equal to an element in list B then return index from list B.",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2013-11-28T20:13:51.099Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "If Equal Return Index",
              "_id": "5297a3ff9de41c8235000018"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2013-11-28T20:13:51.099Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2350,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Core.Lists.Query",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "Zebra",
          "_id": "55842cbaf2ae5a9a070000c2"
        },
        {
          "name": "Ayuda",
          "_id": "55f84b9e662bf0e908000188"
        },
        {
          "name": "Landform",
          "_id": "564dc5a3662bf0e90800035b"
        }
      ],
      "num_dependents": 4,
      "description": "If element in list A equal to element in list B then return index from list B. Tested with numbers, strings and xyz points.",
      "maintainers": [
        {
          "username": "mwaraya",
          "_id": "528ecff39de41c823500000f"
        }
      ],
      "keywords": [ "if", "equal", "return", "index", "compare" ],
      "white_list": false
    },
    {
      "_id": "55e8bbf0662bf0e908000140",
      "name": "List.RemoveFirstLast",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f6ff6521-f499-44d2-af4c-319403b7e94bgregPkg300.zip",
          "contents": "List.RemoveFirstLast - Removes the first and last items from a list",
          "engine_metadata": "",
          "engine_version": "0.8.1.1823",
          "created": "2015-09-03T21:30:24.823Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "List.RemoveFirstLast",
              "_id": "55e8bbf0662bf0e908000140"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-03T21:30:24.823Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 150,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Level.CreateWithSelctionSet",
          "_id": "56c5e687c3e9ee4a08000119"
        }
      ],
      "num_dependents": 1,
      "description": "Removes first and last item from a list",
      "maintainers": [
        {
          "username": "jsando",
          "_id": "55e8bb77662bf0e90800013f"
        }
      ],
      "keywords": [ "list", "remove", "first", "last" ],
      "white_list": false
    },
    {
      "_id": "56b07fc6c3e9ee4a08000086",
      "name": "surf",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/219adf04-88ff-4320-85cf-34a197675346gregPkg303.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3965",
          "created": "2016-02-02T10:07:02.067Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "surf",
              "_id": "56b07fc6c3e9ee4a08000086"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-02T10:07:02.067Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 4,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "create waved surface ( test publish)",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "582b5b795af9f3713d00007f",
      "name": "Tom Test",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/38b73d45-ec3c-45f5-8f1e-dfada28dcc08gregPkg832.zip",
          "contents": "LC_Test - No description provided",
          "engine_metadata": "",
          "engine_version": "1.1.0.2093",
          "created": "2016-11-15T19:01:13.401Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Tom Test",
              "_id": "582b5b795af9f3713d00007f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-15T19:01:13.401Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 22,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Lower curve",
      "maintainers": [
        {
          "username": "tom_denby@hotmail.com",
          "_id": "582b1d4a5af9f3713d00007a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "528d025a3f7315936f000076",
      "name": "Select By Category",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7e97b575-3bb6-44db-b686-73e429013a16gregPkg235.zip",
          "contents": "Filter List By Category - Filters out all elements that are not of a specified category, Get Families By Category - Gets all famiies of a given category in the model  (does *not *work for system families), Get Family Instances By Category And Name - Gets all family instances in the model for a given list of categories and a specified name. Use '*' as a wildcard., Get Family Instances By Category - Gets all family instances in the model for a given list of categories, Get Family Symbols By Category - Gets all family symbols of a given category in the model  (does *not *work for system families), Get View-Dependent Family Instances By Category - Gets all view-dependent family instances in a given view for a given list of categories - useful for finding annotation elements, Has Instances of Categories - Checks if family instances of specified categories are present in the model., Is Of Category - Checks whether an element is of a specified category, Reference Intersector By Category - Finds all elements of a specified category that intersect with a list of vectors",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:00:30.401Z",
          "full_dependency_versions": [ "0.5.1", "0.1.5", "0.2.1", "0.1.6", "0.1.2", "0.71.2", "0.2.2", "0.1.5", "0.71.3", "0.1.4", "0.1.2", "0.1.2", "0.2.0", "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "Select By Category",
              "_id": "528d025a3f7315936f000076"
            },
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            },
            {
              "name": "Remove Duplicates From List",
              "_id": "5246f1d430e55dc52b000031"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Replace Substring",
              "_id": "52d26e2b9f852b166e000012"
            },
            {
              "name": "Family To Type And Back",
              "_id": "533e47150e5572016a000006"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "List Not Empty",
              "_id": "528df0219de41c8235000009"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.2", "0.2.1", "0.1.5", "0.1.2", "0.1.2", "0.2.2", "0.1.6", "0.1.3", "0.2.0" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Remove Duplicates From List",
              "_id": "5246f1d430e55dc52b000031"
            },
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            },
            {
              "name": "Family To Type And Back",
              "_id": "533e47150e5572016a000006"
            },
            {
              "name": "Replace Substring",
              "_id": "52d26e2b9f852b166e000012"
            },
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            },
            {
              "name": "Get And Set Name",
              "_id": "52b2d8659de41c823500006f"
            },
            {
              "name": "List Not Empty",
              "_id": "528df0219de41c8235000009"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            }
          ],
          "change_log": "",
          "version": "0.5.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:00:30.401Z",
      "num_versions": 25,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 796,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "category", "categories", "builtincategory", "filtered", "element", "collector" ],
      "white_list": false
    },
    {
      "_id": "53869d270e5572016a0000af",
      "name": "Evaluate Sun Directness Face 4",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f690929a-1cdb-475b-a208-42d5bb2dee05gregPkg246.zip",
          "contents": "Evaluate Sun Directness Face 4 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-29T02:36:23.074Z",
          "full_dependency_versions": [ "0.1.1", "0.0.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Evaluate Sun Directness Face 4",
              "_id": "53869d270e5572016a0000af"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T02:36:23.074Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 16,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C - Altered Slightly from Glenn Katz",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "538790000e5572016a0000e0",
      "name": "Get Revit Model Parameter Values Non Recursive - Two Parameters",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/389b7405-b53c-40b6-8c97-1a9d85ae5224gregPkg474.zip",
          "contents": "Get Revit Model Parameter Values Non Recursive - Two Parameters - Get two parameter values from Revit model element",
          "engine_metadata": "",
          "engine_version": "0.6.2.29585",
          "created": "2014-05-29T19:52:32.747Z",
          "full_dependency_versions": [ "0.1.1", "0.1.0", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Get Revit Model Parameter Values Non Recursive - Two Parameters",
              "_id": "538790000e5572016a0000e0"
            },
            {
              "name": "Scale Results for Parameter Type",
              "_id": "53841b980e5572016a000093"
            },
            {
              "name": "Write CSV String - Three Values",
              "_id": "5384b9990e5572016a00009e"
            }
          ],
          "direct_dependency_versions": [ "0.1.0", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Scale Results for Parameter Type",
              "_id": "53841b980e5572016a000093"
            },
            {
              "name": "Write CSV String - Three Values",
              "_id": "5384b9990e5572016a00009e"
            }
          ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-29T19:52:32.747Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 136,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - From Glenn Katz",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "538786e80e5572016a0000da",
      "name": "Get Sun Directness for Face 2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/16497199-8a01-4478-bda2-566f52a4ef75gregPkg5.zip",
          "contents": "Get Sun Directness for Face 2 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-30T00:13:00.342Z",
          "full_dependency_versions": [ "0.1.2", "0.0.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Get Sun Directness for Face 2",
              "_id": "538786e80e5572016a0000da"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            },
            {
              "name": "Evaluate Sun Directness - Raw Distances",
              "_id": "53841b380e5572016a000091"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-30T00:13:00.342Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 7,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CEE 220C A4 - Altered from Glenn Katz",
      "maintainers": [
        {
          "username": "cpickard@stanford.edu",
          "_id": "536530020e5572016a000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "538818d80e5572016a0000e8",
      "name": "Get Extreme Column Values",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/11bb1dd2-59b7-4ac4-a25b-a0f47257fa70gregPkg699.zip",
          "contents": "Get Extreme Column Values - Gets the extreme values in a column",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-05-30T05:36:24.092Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Get Extreme Column Values",
              "_id": "538818d80e5572016a0000e8"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-05-30T05:36:24.092Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 45,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "CEE120",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Get Extreme Column Values",
      "maintainers": [
        {
          "username": "sungho21@stanford.edu",
          "_id": "537b84430e5572016a000074"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "538ed1e50e5572016a0000f8",
      "name": "Remove List Intersection",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d051de11-4fdb-49c8-a4ad-edb8e3f7bec9gregPkg305.zip",
          "contents": "Remove List Intersection - returns a list of elements that are not in both lists",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-06-04T07:59:33.465Z",
          "full_dependency_versions": [ "0.0.1", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Remove List Intersection",
              "_id": "538ed1e50e5572016a0000f8"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-04T07:59:33.465Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 247,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Select by Bounding Box",
          "_id": "539b18360e5572016a000109"
        }
      ],
      "num_dependents": 1,
      "description": "returns a list of elements that are NOT in both lists",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "list", "intersection" ],
      "white_list": false
    },
    {
      "_id": "538ed2270e5572016a0000fa",
      "name": "List Intersection",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a8106923-0c0c-402d-a055-945670f242c5gregPkg442.zip",
          "contents": "List Intersection - returns elements that are in both lists",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-06-04T08:00:39.583Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "List Intersection",
              "_id": "538ed2270e5572016a0000fa"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-04T08:00:39.583Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 169,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "returns a list of elements that are in both lists",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "list", "intersection" ],
      "white_list": false
    },
    {
      "_id": "539807290e5572016a000103",
      "name": "MaxMinPointsByDirection",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/dfb597b4-5e23-4618-abd6-9b63cfa7ab23gregPkg624.zip",
          "contents": "MaxMinPointsByDirection - Get the max and min point of a curve following a direction pointed by a straight line.",
          "engine_metadata": "",
          "engine_version": "0.7.0.26247",
          "created": "2014-06-11T07:37:13.266Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "MaxMinPointsByDirection",
              "_id": "539807290e5572016a000103"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-11T07:37:13.266Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 75,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EPR",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Get the max and min point of a curve following a direction pointed by a straight line. The min point is the closest to the start point of the aux. line. The max point is the closest to the end point of the aux line. The aux line has to be long enough to cover the curve ",
      "maintainers": [
        {
          "username": "eproca",
          "_id": "538dd48a0e5572016a0000f3"
        }
      ],
      "keywords": [ "max", "min", "points", "direction", "curve" ],
      "white_list": false
    },
    {
      "_id": "536d2b4b0e5572016a00004a",
      "name": "Get Rooms by Level",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3ff66160-dc20-445c-a45a-8e16c73de019gregPkg471.zip",
          "contents": "Get Rooms by Level - Filters Rooms by level.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-06-22T00:28:57.622Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Get Rooms by Level",
              "_id": "536d2b4b0e5572016a00004a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-06-22T00:28:57.622Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 821,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Filters for rooms by specified level. Provide Boolean Toggle where if set to YES will exclude Unplaced and Redundant Rooms or if set to NO will list all rooms on Level. ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "#room", "#level", "#filter" ],
      "white_list": false
    },
    {
      "_id": "529c54699de41c8235000027",
      "name": "Return List Or Single Value",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ebf3f86d-762c-4318-a9ab-35dc23a78803gregPkg744.zip",
          "contents": "Return List Or Single Value - If the list in input #1 only contains one item, only the first item of the list in input #2 will be returned.",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-21T19:08:42.905Z",
          "full_dependency_versions": [ "0.71.3" ],
          "full_dependency_ids": [
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T19:08:42.905Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 7440,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Elements From & To IDs",
          "_id": "5246f07f30e55dc52b00002f"
        },
        {
          "name": "Get And Set Family Type",
          "_id": "529c69119de41c823500002c"
        },
        {
          "name": "Roof Stuff",
          "_id": "529afa5f9de41c823500001e"
        },
        {
          "name": "Topo Stuff",
          "_id": "5278a56d3f7315936f00004a"
        },
        {
          "name": "Regular Expressions",
          "_id": "528cf98a3f7315936f000074"
        },
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        },
        {
          "name": "Foundation Stuff",
          "_id": "529c8bc29de41c8235000036"
        },
        {
          "name": "Hosted Object Stuff",
          "_id": "52ade6049de41c823500005c"
        },
        {
          "name": "Get And Set Name",
          "_id": "52b2d8659de41c823500006f"
        },
        {
          "name": "Roof And Floor Stuff",
          "_id": "52b2e59a9de41c8235000072"
        },
        {
          "name": "Wall Stuff",
          "_id": "5299e0fd9de41c823500001b"
        },
        {
          "name": "Parameter Exists",
          "_id": "52b327389de41c8235000078"
        },
        {
          "name": "View Stuff",
          "_id": "52c65b7d04db8f7361000004"
        },
        {
          "name": "Replace Substring",
          "_id": "52d26e2b9f852b166e000012"
        },
        {
          "name": "Revit API Helpers",
          "_id": "52d3f1219f852b166e000015"
        },
        {
          "name": "Remove Duplicates From List",
          "_id": "5246f1d430e55dc52b000031"
        },
        {
          "name": "Phasing Stuff",
          "_id": "52e21705bfe425953600001a"
        },
        {
          "name": "Room Stuff",
          "_id": "52e217e8bfe425953600001c"
        },
        {
          "name": "Is Related To Mass",
          "_id": "52f06eb7bfe4259536000049"
        },
        {
          "name": "Get Element By Face",
          "_id": "53083536bfe42595360000a4"
        },
        {
          "name": "Get Faces From Solid",
          "_id": "530837c1bfe42595360000a8"
        },
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        },
        {
          "name": "Get Wall",
          "_id": "53340537bfe42595360000ee"
        },
        {
          "name": "Parse Solar Radiation CSV",
          "_id": "521cfcb8e2f476ca05000041"
        },
        {
          "name": "Filter Selection by Family Type",
          "_id": "533dec780e5572016a000004"
        },
        {
          "name": "Family To Type And Back",
          "_id": "533e47150e5572016a000006"
        },
        {
          "name": "UV Components",
          "_id": "534763b40e5572016a000017"
        },
        {
          "name": "Purge Line Pattern",
          "_id": "535e302e0e5572016a000035"
        },
        {
          "name": "Create Placeholder Sheets",
          "_id": "536074a70e5572016a000039"
        },
        {
          "name": "Eraser by Name",
          "_id": "536e51150e5572016a00004e"
        },
        {
          "name": "Override Element in View",
          "_id": "536fda510e5572016a000050"
        },
        {
          "name": "Place Groups at XYZ",
          "_id": "537749570e5572016a000062"
        },
        {
          "name": "List BuiltInParameterGroup",
          "_id": "537b217d0e5572016a000071"
        },
        {
          "name": "Is Point Inside Polygon",
          "_id": "537df4fb0e5572016a00007c"
        },
        {
          "name": "Mesh Stuff",
          "_id": "5381c3550e5572016a000081"
        },
        {
          "name": "Plane Properties",
          "_id": "53831d590e5572016a000086"
        },
        {
          "name": "Plane By Reference Or Sketch Plane",
          "_id": "53873af40e5572016a0000cc"
        },
        {
          "name": "Select by Bounding Box",
          "_id": "539b18360e5572016a000109"
        },
        {
          "name": "Is Empty",
          "_id": "53aa4eed0e5572016a000113"
        },
        {
          "name": "Mirror Element Using Origin and Normal Vector",
          "_id": "554b3a30a8367b9861000077"
        },
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "JTHWAX",
          "_id": "56cd500bc3e9ee4a0800013e"
        }
      ],
      "num_dependents": 42,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "return", "list", "single", "value", "item" ],
      "white_list": false
    },
    {
      "_id": "534763b40e5572016a000017",
      "name": "UV Components",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a67cade3-a112-4466-8022-ae1b58232a52gregPkg221.zip",
          "contents": "UV Components - Get the components of a UV",
          "engine_metadata": "",
          "engine_version": "0.7.1.29946",
          "created": "2014-07-18T17:04:21.065Z",
          "full_dependency_versions": [ "0.71.0", "0.71.3" ],
          "full_dependency_ids": [
            {
              "name": "UV Components",
              "_id": "534763b40e5572016a000017"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.71.3" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.71.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-18T17:04:21.065Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 180,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Convex Hull 2D",
          "_id": "535b301a0e5572016a000033"
        },
        {
          "name": "Is Point Inside Polygon",
          "_id": "537df4fb0e5572016a00007c"
        },
        {
          "name": "Swap UV",
          "_id": "53aa75550e5572016a000116"
        },
        {
          "name": "Simple Patterning",
          "_id": "52adf18e9de41c823500005e"
        }
      ],
      "num_dependents": 4,
      "description": "DEPRECATED - As of Dynamo 0.7 you can use the built-in nodes UV.U & UV.V",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "uv", "u", "v", "components" ],
      "white_list": false
    },
    {
      "_id": "53ce7c630e5572016a000164",
      "name": "guid tools",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/bdcb54db-1162-4a4a-ac77-87d29d704e2dgregPkg471.zip",
          "contents": "Element.Id.Guid.String - retrieves elements guid + Id + String, Get_guId - retrieves guid of set of elements, Get_Id - retrieves guid of set of elements",
          "engine_metadata": "",
          "engine_version": "0.7.1.39873",
          "created": "2014-07-23T09:16:05.997Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "guid tools",
              "_id": "53ce7c630e5572016a000164"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-23T09:16:05.997Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 312,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "KOP",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "extract Guid Id and Element string from an element",
      "maintainers": [
        {
          "username": "KOPPEVI",
          "_id": "53ce7c620e5572016a000163"
        }
      ],
      "keywords": [ "guid", "id" ],
      "white_list": false
    },
    {
      "_id": "53d1590c0e5572016a00016f",
      "name": "Sweep By Vertical Orientation",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2c71adf7-75ad-4ac5-bb45-432da5d85e43gregPkg514.zip",
          "contents": "Sweep By Vertical Orientation - Make a solid by sweep with automatic reposition of the profile perpendicular to every path. The profile must be in the default plane XY. The origin will be used as reference point. The profile will be aligned forcing the vertical orientation. It can take several profiles at once. It accepts open and closed profiles. The surfaces resulting of using open profiles will be listed as solids and they will accept boolean solid operations.  ",
          "engine_metadata": "",
          "engine_version": "0.7.1.40372",
          "created": "2014-07-24T19:05:48.404Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Sweep By Vertical Orientation",
              "_id": "53d1590c0e5572016a00016f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-07-24T19:05:48.404Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 211,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EPR",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Make a solid by sweep with automatic reposition of the profile perpendicular to every path. The profile must be in the default plane XY. The origin will be used as reference point. The profile will be aligned forcing the vertical orientation. It can take several profiles at once. It accepts open and closed profiles. The surfaces resulting of using open profiles will be listed as solids and they will accept boolean solid operations.  ",
      "maintainers": [
        {
          "username": "eproca",
          "_id": "538dd48a0e5572016a0000f3"
        }
      ],
      "keywords": [ "sweep", "solid", "profile", "automatic", "position", "vertical", "alignment" ],
      "white_list": false
    },
    {
      "_id": "53df82c20e5572016a000183",
      "name": "Parts.Get parent",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/72d5f828-0e07-4813-8fc4-dd20b46a6d4agregPkg8.zip",
          "contents": "Parts.Get parent - Returns parents of selected Parts",
          "engine_metadata": "",
          "engine_version": "0.7.1.5330",
          "created": "2014-08-04T12:55:30.825Z",
          "full_dependency_versions": [ "0.71.0" ],
          "full_dependency_ids": [
            {
              "name": "Parts.Get parent",
              "_id": "53df82c20e5572016a000183"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-08-04T12:55:30.825Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 134,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Returns parents for the selected Parts",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "parts", "parent" ],
      "white_list": false
    },
    {
      "_id": "53d1599a0e5572016a000171",
      "name": "Sweep By Planar Orientation",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ef88db30-f753-40da-ba20-d03a58ac7f4egregPkg573.zip",
          "contents": "Sweep By Planar Orientation - Make a solid by sweep with automatic reposition of the profile perpendicular to every path. The profile must be in the default plane XY. The origin will be used as reference point. The profile will be aligned with the plane that contains the path. It can take several profiles at once. It accepts open and closed profiles. The surfaces resulting of using open profiles will be listed as solids and they will accept boolean solid operations.  ",
          "engine_metadata": "",
          "engine_version": "0.7.1.39296",
          "created": "2014-08-08T09:36:29.760Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Sweep By Planar Orientation",
              "_id": "53d1599a0e5572016a000171"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-08-08T09:36:29.76Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 209,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EPR",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Make a solid by sweep with automatic reposition of the profile perpendicular to every path. The profile must be in the default plane XY. The origin will be used as reference point. The profile will be aligned with the plane that contains the path. It can take several profiles at once. It accepts open and closed profiles. The surfaces resulting of using open profiles will be listed as solids and they will accept boolean solid operations.  ",
      "maintainers": [
        {
          "username": "eproca",
          "_id": "538dd48a0e5572016a0000f3"
        }
      ],
      "keywords": [ "sweep", "solid", "profile", "automatic", "position", "planar", "plane", "path", "alignment" ],
      "white_list": false
    },
    {
      "_id": "53ea26650e5572016a00018d",
      "name": "List.DropLastItem",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ba78a482-bebf-44f5-8d46-401b6d2bae61gregPkg142.zip",
          "contents": "List.DropLastItem - Removes the last item from the list",
          "engine_metadata": "",
          "engine_version": "0.7.1.39789",
          "created": "2014-08-12T14:36:21.865Z",
          "full_dependency_versions": [ "0.7.1" ],
          "full_dependency_ids": [
            {
              "name": "List.DropLastItem",
              "_id": "53ea26650e5572016a00018d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-08-12T14:36:21.865Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 116,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Drop the last item from a list",
      "maintainers": [
        {
          "username": "MarkDT",
          "_id": "53ea26640e5572016a00018c"
        }
      ],
      "keywords": [ "list", "drop", "items", "index", "last", "final", "end" ],
      "white_list": false
    },
    {
      "_id": "53edd6c10e5572016a000194",
      "name": "Curve.DivideByPointArray",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d3591a66-84a2-4685-949e-a08fc80ea937gregPkg807.zip",
          "contents": "Curve.DivideByPointArray - Create a desired number of points on a curve",
          "engine_metadata": "",
          "engine_version": "0.7.1.39789",
          "created": "2014-08-15T09:45:37.336Z",
          "full_dependency_versions": [ "0.7.1" ],
          "full_dependency_ids": [
            {
              "name": "Curve.DivideByPointArray",
              "_id": "53edd6c10e5572016a000194"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-08-15T09:45:37.336Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 526,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Point",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Place a desired number if of XYZ points along a curve",
      "maintainers": [
        {
          "username": "MarkDT",
          "_id": "53ea26640e5572016a00018c"
        }
      ],
      "keywords": [ "point", "curve", "array", "number", "xyz" ],
      "white_list": false
    },
    {
      "_id": "53f3008d0e5572016a000197",
      "name": "Divide Number Range",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/84970344-1092-4e93-a1e9-c7b2eda6f4c4gregPkg835.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.1.17091",
          "created": "2014-08-19T07:45:17.878Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Divide Number Range",
              "_id": "53f3008d0e5572016a000197"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-08-19T07:45:17.878Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 151,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Core.List.Create",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a list of N+1 numbers, equally spaced between start and end, inclusive. (Bugfix to existing Number Range_Equal Divisions package)",
      "maintainers": [
        {
          "username": "adlai",
          "_id": "53f300200e5572016a000196"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53faaec60e5572016a0001a1",
      "name": "Design Options Layout",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/115f6340-95d9-4bf9-99d7-6cf2d6cf2088gregPkg714.zip",
          "contents": "Design Options Layout - Distribute up to 3 parameter space design options",
          "engine_metadata": "",
          "engine_version": "0.7.1.18102",
          "created": "2014-08-25T03:34:30.941Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Design Options Layout",
              "_id": "53faaec60e5572016a0001a1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-08-25T03:34:30.941Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 274,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Lays out a grid of design options when passed a nested list of geomtry",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "design", "options", "variation", "layout" ],
      "white_list": false
    },
    {
      "_id": "54042b470e5572016a0001a6",
      "name": "Place Group at Points",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d7712bfa-8b1d-420d-9424-f331ae80d1f8gregPkg91.zip",
          "contents": "Place Group at Point - place a given group at given points",
          "engine_metadata": "",
          "engine_version": "0.7.1.1790",
          "created": "2014-09-01T08:16:07.587Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Place Group at Points",
              "_id": "54042b470e5572016a0001a6"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-01T08:16:07.587Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 141,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Place a group at the given points, select the group by his name",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "place", "group", "point" ],
      "white_list": false
    },
    {
      "_id": "54053f960e5572016a0001a8",
      "name": "cuboctahedron",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a8812876-262e-4be1-88e8-2529271b48fegregPkg210.zip",
          "contents": "cuboctahedron - cuboctahedron haiku:\r\nquasiregular\r\n(Archimedean Solid)\r\npolyhedron, Bitch, Sort By Distance To - Sort a list of elements by their distance to another element",
          "engine_metadata": "",
          "engine_version": "0.7.1.10762",
          "created": "2014-09-02T03:58:28.726Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "cuboctahedron",
              "_id": "54053f960e5572016a0001a8"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-02T03:58:28.726Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 71,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "cuboctahedron haiku:\r\nquasiregular\r\n(Archimedean Solid)\r\npolyhedron, Bitch\r\n",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5405bce30e5572016a0001ab",
      "name": "Select Element in view",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ba9b5f7e-0165-490f-86bb-f5dd8d7e60aagregPkg695.zip",
          "contents": "Select Element in view - select the input elements in active view",
          "engine_metadata": "",
          "engine_version": "0.7.1.1790",
          "created": "2014-09-02T12:49:39.908Z",
          "full_dependency_versions": [ "0.7.1" ],
          "full_dependency_ids": [
            {
              "name": "Select Element in view",
              "_id": "5405bce30e5572016a0001ab"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-02T12:49:39.908Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 419,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "select in the active view the element",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "select", "active", "view", "element" ],
      "white_list": false
    },
    {
      "_id": "540621dc0e5572016a0001ae",
      "name": "List Operations",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/35408b85-e483-4b93-8f8a-2e651beca609gregPkg990.zip",
          "contents": "List Operations - List A-B / List Intersection / List symmetric difference",
          "engine_metadata": "",
          "engine_version": "0.7.1.1790",
          "created": "2014-09-02T20:00:28.184Z",
          "full_dependency_versions": [ "0.7.1" ],
          "full_dependency_ids": [
            {
              "name": "List Operations",
              "_id": "540621dc0e5572016a0001ae"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-02T20:00:28.184Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 212,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Returns List difference / List intersection / List symmetric difference",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "list", "difference", "intersection", "symmetricdifference" ],
      "white_list": false
    },
    {
      "_id": "540623ce0e5572016a0001b0",
      "name": "Make Parts",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d09a07ef-ca0b-4322-ab21-6658931eed98gregPkg190.zip",
          "contents": "Make Parts - create parts from elements",
          "engine_metadata": "",
          "engine_version": "0.7.1.1790",
          "created": "2014-09-02T20:08:46.230Z",
          "full_dependency_versions": [ "0.7.1" ],
          "full_dependency_ids": [
            {
              "name": "Make Parts",
              "_id": "540623ce0e5572016a0001b0"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-02T20:08:46.23Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 164,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "create parts for the given elements, if they are valid",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "create", "part" ],
      "white_list": false
    },
    {
      "_id": "5306e80fbfe4259536000095",
      "name": "Vectors Are Parallel",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b7c034a5-ca6c-48f9-9da9-0e6c2d3bd8efgregPkg818.zip",
          "contents": "Vectors Are Parallel - Checks if two vectors are parallel to each other",
          "engine_metadata": "",
          "engine_version": "0.7.1.30377",
          "created": "2014-09-03T06:50:23.275Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Vectors Are Parallel",
              "_id": "5306e80fbfe4259536000095"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-03T06:50:23.275Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 64,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Vector-Vector Intersection",
          "_id": "52efe7cbbfe4259536000044"
        },
        {
          "name": "Altitude And Azimuth From Vector",
          "_id": "532af328bfe42595360000e1"
        }
      ],
      "num_dependents": 2,
      "description": "DEPRECATED - As of Dynamo 0.7, use built-in node Vector.IsParallel",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "vector", "parallel" ],
      "white_list": false
    },
    {
      "_id": "52d26e2b9f852b166e000012",
      "name": "Replace Substring",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/32a8e374-5b1c-433a-9d60-736facd909e2gregPkg471.zip",
          "contents": "Replace Substring - Replaces a specified part (substring) of a string by another string",
          "engine_metadata": "",
          "engine_version": "0.7.1.30377",
          "created": "2014-09-03T08:39:16.777Z",
          "full_dependency_versions": [ "0.1.2", "0.71.2", "0.71.3" ],
          "full_dependency_ids": [
            {
              "name": "Replace Substring",
              "_id": "52d26e2b9f852b166e000012"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.71.2", "0.71.3" ],
          "direct_dependency_ids": [
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-03T08:39:16.777Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 890,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Revit API Helpers",
          "_id": "52d3f1219f852b166e000015"
        },
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        },
        {
          "name": "Parse Solar Radiation CSV",
          "_id": "521cfcb8e2f476ca05000041"
        }
      ],
      "num_dependents": 3,
      "description": "DEPRECATED - As of Dynamo 0.7, use built-in node String.Replace instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "string", "substring", "replace" ],
      "white_list": false
    },
    {
      "_id": "530837c1bfe42595360000a8",
      "name": "Get Faces From Solid",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/507af7a0-7d3a-445b-8e60-d4e95c75ea72gregPkg400.zip",
          "contents": "Get Faces From Solid - Retrieves a list of faces from a given solid",
          "engine_metadata": "",
          "engine_version": "0.7.1.30377",
          "created": "2014-09-03T14:35:46.589Z",
          "full_dependency_versions": [ "0.1.2", "0.71.2", "0.71.3" ],
          "full_dependency_ids": [
            {
              "name": "Get Faces From Solid",
              "_id": "530837c1bfe42595360000a8"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.71.2", "0.71.3" ],
          "direct_dependency_ids": [
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-03T14:35:46.589Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 132,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Use built-in node Geometry.Explode instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "get", "faces", "solid" ],
      "white_list": false
    },
    {
      "_id": "53074e6fbfe42595360000a1",
      "name": "Angle Between Vectors",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4911159f-fc62-4dc3-9d73-4add3b0a7185gregPkg723.zip",
          "contents": "Angle Between Vectors - Computes the angle between two vectors",
          "engine_metadata": "",
          "engine_version": "0.7.1.30377",
          "created": "2014-09-03T14:44:16.832Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Angle Between Vectors",
              "_id": "53074e6fbfe42595360000a1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-03T14:44:16.832Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 271,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Use LunchBox Vector Angle instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "angle", "vectors" ],
      "white_list": false
    },
    {
      "_id": "523a1d7830e55dc52b000003",
      "name": "Get Highest And Lowest From List",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/844d5900-998a-4500-9c95-e64b0313be8dgregPkg834.zip",
          "contents": "Get Highest And Lowest From List - Gets the highest and lowest value from a given list",
          "engine_metadata": "",
          "engine_version": "0.7.1.30377",
          "created": "2014-09-03T17:09:25.442Z",
          "full_dependency_versions": [ "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "Get Highest And Lowest From List",
              "_id": "523a1d7830e55dc52b000003"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-03T17:09:25.442Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 678,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Parse Solar Radiation CSV",
          "_id": "521cfcb8e2f476ca05000041"
        },
        {
          "name": "Equal List Lengths",
          "_id": "52a943ec9de41c8235000054"
        },
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        },
        {
          "name": "Count True And False",
          "_id": "52ad7ab39de41c8235000059"
        },
        {
          "name": "Filter List By Booleans",
          "_id": "522ce04c4b31fa536a00001c"
        },
        {
          "name": "Regular Expressions",
          "_id": "528cf98a3f7315936f000074"
        },
        {
          "name": "Revit API Helpers",
          "_id": "52d3f1219f852b166e000015"
        },
        {
          "name": "Phasing Stuff",
          "_id": "52e21705bfe425953600001a"
        },
        {
          "name": "Create Placeholder Sheets",
          "_id": "536074a70e5572016a000039"
        }
      ],
      "num_dependents": 9,
      "description": "DEPRECATED - As of Dynamo 0.7, use built-in nodes List.MaximumItem & List.MinimumItem",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "list", "highest", "lowest", "value" ],
      "white_list": false
    },
    {
      "_id": "5360a5210e5572016a00003c",
      "name": "LibG Vector Components",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/aeefd40a-f48e-4139-9707-29c3b7a0258bgregPkg130.zip",
          "contents": "LibG Vector Components - Gets the X, Y and Z of a LibG vector",
          "engine_metadata": "",
          "engine_version": "0.7.1.30377",
          "created": "2014-09-04T14:46:53.720Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "LibG Vector Components",
              "_id": "5360a5210e5572016a00003c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-04T14:46:53.72Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 21,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - As of Dynamo 0.7 use Vector.X, Vector.Y & Vector.Z instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "libg", "vector", "x", "y", "z", "xyz" ],
      "white_list": false
    },
    {
      "_id": "540adc7d0e5572016a0001c1",
      "name": "Instance.Parameter.Cross-Section Rotation",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f7501839-d139-4d19-aa51-7d4ce111396egregPkg703.zip",
          "contents": "Instance.Parameter.Cross-Section Rotation - Changing the Cross Section Rotation angle of an instance parameter of a Structural framing Revit element",
          "engine_metadata": "",
          "engine_version": "0.7.1.17276",
          "created": "2014-09-06T10:05:49.826Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Instance.Parameter.Cross-Section Rotation",
              "_id": "540adc7d0e5572016a0001c1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-06T10:05:49.826Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 158,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Changing the Cross-Section Rotation angle parameter of a Structural Framing Revit Element",
      "maintainers": [
        {
          "username": "lucianungureanuconstantin@yahoo.com",
          "_id": "540adc7d0e5572016a0001c0"
        }
      ],
      "keywords": [ "instance", "parameter" ],
      "white_list": false
    },
    {
      "_id": "540d47380e5572016a0001ca",
      "name": "Filter by string",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0098676f-9473-40ba-b918-09ed65d9876fgregPkg752.zip",
          "contents": "Filter by string - Filter a list by a string match",
          "engine_metadata": "",
          "engine_version": "0.7.2.10961",
          "created": "2014-09-08T21:24:16.476Z",
          "full_dependency_versions": [ "0.71.2" ],
          "full_dependency_ids": [
            {
              "name": "Filter by string",
              "_id": "540d47380e5572016a0001ca"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-08T21:24:16.476Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 491,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Filter a list by finding a string in element name",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "list", "filter", "string", "name" ],
      "white_list": false
    },
    {
      "_id": "540f108f0e5572016a0001cd",
      "name": "Get Revit Selection",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/07aef994-1f19-48e7-b9a7-b62481f8bc7cgregPkg377.zip",
          "contents": "Get Revit Selection - get the selection from the revit UI, works for views",
          "engine_metadata": "",
          "engine_version": "0.7.2.10961",
          "created": "2014-09-09T20:14:18.403Z",
          "full_dependency_versions": [ "0.71.2" ],
          "full_dependency_ids": [
            {
              "name": "Get Revit Selection",
              "_id": "540f108f0e5572016a0001cd"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-09T20:14:18.403Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -8,
      "downloads": 1799,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Get in Dynamo the elements selected in Revit UI, including views. returns Internal and Element",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "get", "selection", "element", "internal" ],
      "white_list": false
    },
    {
      "_id": "51f823d4e2f476ca05000006",
      "name": "Project To XY Plane",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9c7191ec-4026-405a-b2c1-e03b62aa0afdgregPkg707.zip",
          "contents": "Project To XY Plane - Given an XYZ, make the Z value 0 - effectively projecting the XYZ to the XY plane.",
          "engine_metadata": "",
          "engine_version": "0.7.2.25493",
          "created": "2014-09-10T19:16:21.114Z",
          "full_dependency_versions": [ "0.0.12" ],
          "full_dependency_ids": [
            {
              "name": "Project To XY Plane",
              "_id": "51f823d4e2f476ca05000006"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.12",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-10T19:16:21.114Z",
      "num_versions": 12,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 1443,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Core",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Intersects For Divided Surfaces",
          "_id": "52a6db889de41c823500004f"
        },
        {
          "name": "Altitude And Azimuth From Vector",
          "_id": "532af328bfe42595360000e1"
        },
        {
          "name": "Clockwork for Dynamo 0.6.3",
          "_id": "544730fdcc26bfdc5a0000db"
        }
      ],
      "num_dependents": 3,
      "description": "Take a Point and project it to the XY plane - giving it a Z coordinate of 0.",
      "maintainers": [
        {
          "username": "peetle",
          "_id": "51f8232fe2f476ca05000003"
        }
      ],
      "keywords": [ "point", "xyz", "project" ],
      "white_list": false
    },
    {
      "_id": "5384fd030e5572016a0000a7",
      "name": "SurfFrame",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a82cfae5-a6ad-4c20-8e59-677d42c31d68gregPkg922.zip",
          "contents": "SurfFrame - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.2.24744",
          "created": "2014-09-11T18:48:48.468Z",
          "full_dependency_versions": [ "0.0.4" ],
          "full_dependency_ids": [
            {
              "name": "SurfFrame",
              "_id": "5384fd030e5572016a0000a7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-11T18:48:48.468Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 126,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Discrete",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Discretize a NURBS surface",
      "maintainers": [
        {
          "username": "peetle",
          "_id": "51f8232fe2f476ca05000003"
        }
      ],
      "keywords": [ "nurbs", "surface", "curve" ],
      "white_list": false
    },
    {
      "_id": "53cfc7920e5572016a000169",
      "name": "Recursive Boolean Difference",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a13f1848-6b50-4ef4-b515-4621cc9d59d5gregPkg304.zip",
          "contents": "Recursive Boolean Difference - This node recursively applies the boolean difference node to a solid for each item in a given list of solids.",
          "engine_metadata": "",
          "engine_version": "0.7.2.3911",
          "created": "2014-09-15T01:29:45.627Z",
          "full_dependency_versions": [ "0.1.1", "0.71.3" ],
          "full_dependency_ids": [
            {
              "name": "Recursive Boolean Difference",
              "_id": "53cfc7920e5572016a000169"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.71.3" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-15T01:29:45.627Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 9,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - As of Dynamo 0.7, use built-in node Solid.DifferenceAll instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "recursive", "boolean", "difference", "solid", "recursion" ],
      "white_list": false
    },
    {
      "_id": "52a943ec9de41c8235000054",
      "name": "Equal List Lengths",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/33a7ed80-3fb2-448e-a8fe-0fa18386cff4gregPkg626.zip",
          "contents": "Equal List Lengths - Trims all given lists to the length of the shortest list",
          "engine_metadata": "",
          "engine_version": "0.7.2.3911",
          "created": "2014-09-15T01:31:54.933Z",
          "full_dependency_versions": [ "0.1.2", "0.1.8", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Equal List Lengths",
              "_id": "52a943ec9de41c8235000054"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            }
          ],
          "direct_dependency_versions": [ "0.1.8" ],
          "direct_dependency_ids": [
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-15T01:31:54.933Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 521,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        },
        {
          "name": "Count True And False",
          "_id": "52ad7ab39de41c8235000059"
        },
        {
          "name": "Filter List By Booleans",
          "_id": "522ce04c4b31fa536a00001c"
        },
        {
          "name": "Regular Expressions",
          "_id": "528cf98a3f7315936f000074"
        },
        {
          "name": "Revit API Helpers",
          "_id": "52d3f1219f852b166e000015"
        },
        {
          "name": "Phasing Stuff",
          "_id": "52e21705bfe425953600001a"
        },
        {
          "name": "Create Placeholder Sheets",
          "_id": "536074a70e5572016a000039"
        }
      ],
      "num_dependents": 7,
      "description": "DEPRECATED - As of Dynamo 0.7, use built-in node List.LaceShortest instead",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "equal", "list", "length", "trim" ],
      "white_list": false
    },
    {
      "_id": "52a6b0089de41c823500004d",
      "name": "Mappable Conditions",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/293c3688-815b-4c64-a77b-835d140a5edcgregPkg950.zip",
          "contents": "If X Equal - If X = Y as a mappable function, If X Greater Than Or Equal - If X >= Y as a mappable function, If X Greater Than - If X > Y as a mappable function, If X Less Than Or Equal - If X <= Y as a mappable function, If X Less Than - If X < Y as a mappable function",
          "engine_metadata": "",
          "engine_version": "0.7.2.3911",
          "created": "2014-09-15T01:34:02.677Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Mappable Conditions",
              "_id": "52a6b0089de41c823500004d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-15T01:34:02.677Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 53,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - In Dynamo 0.7 use code block nodes instead (condition ? val_if_true : val_if_false)...",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "if", "equal", "greater", "less", "condition" ],
      "white_list": false
    },
    {
      "_id": "525169933f7315936f000009",
      "name": "fibonacci_Recursion Lesson",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f1bbea7a-3e8b-474e-9579-f5df38a8b11agregPkg782.zip",
          "contents": "fibonacci_fer Realz - This is a partially complete node.  It can be used to teach creation of recursive functionality, fibonacci_Recursion Lesson - This is a partially complete node.  It can be used to teach creation of recursive functionality",
          "engine_metadata": "",
          "engine_version": "0.7.2.41343",
          "created": "2014-09-15T20:01:39.462Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "fibonacci_Recursion Lesson",
              "_id": "525169933f7315936f000009"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-15T20:01:39.462Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 3,
      "downloads": 468,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A partially completed node.  Use this to teach recursive functions  ",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "recursion", "education", "custom", "nodes", "fibonacci", "tutorials" ],
      "white_list": false
    },
    {
      "_id": "541a46c9cc26bfdc5a000016",
      "name": "XyzGrid",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9375e8bc-ba77-43a2-a531-106b5c6a2748gregPkg660.zip",
          "contents": "XyzGrid - This node represents an upgrade of the 0.6.3 XyzGrid node to 0.7.x",
          "engine_metadata": "",
          "engine_version": "0.7.2.12350",
          "created": "2014-09-18T02:43:21.421Z",
          "full_dependency_versions": [ "2.0.0" ],
          "full_dependency_ids": [
            {
              "name": "XyzGrid",
              "_id": "541a46c9cc26bfdc5a000016"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-18T02:43:21.421Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 552,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Testing Update Version",
      "maintainers": [
        {
          "username": "critesh",
          "_id": "530da612bfe42595360000b0"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "541bf582cc26bfdc5a00001c",
      "name": "Place.Elements.InWalls",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0ea0f7fd-8a3f-478d-ad64-8a5d53e2011agregPkg18.zip",
          "contents": "Place.Elements.InWalls - places one element of any family type in a list of walls",
          "engine_metadata": "",
          "engine_version": "0.7.2.1825",
          "created": "2014-09-19T09:21:06.642Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Place.Elements.InWalls",
              "_id": "541bf582cc26bfdc5a00001c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-19T09:21:06.642Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 436,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "KOP",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Places an element in a list of walls. element could be a family of any type. insertion point is the middle point of a wall",
      "maintainers": [
        {
          "username": "KOPPEVI",
          "_id": "53ce7c620e5572016a000163"
        }
      ],
      "keywords": [ "place", "elements", "in", "walls" ],
      "white_list": false
    },
    {
      "_id": "54202e37cc26bfdc5a000020",
      "name": "Diamond Panels (4pt)",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0c8b2fce-95f5-4eeb-b681-8debe96c412cgregPkg2.zip",
          "contents": "Diamond Panels (4pt) - Based on Nathan Miller's LuncBox",
          "engine_metadata": "",
          "engine_version": "0.7.1.17276",
          "created": "2014-09-22T14:12:07.519Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Diamond Panels (4pt)",
              "_id": "54202e37cc26bfdc5a000020"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-22T14:12:07.519Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 3,
      "downloads": 481,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "vasshaug",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Based on Nathan Miller's LunchBox nodes, this node creates the 4-point interior panels of a diamond grid from surface and uv parameters.",
      "maintainers": [
        {
          "username": "vasshaug",
          "_id": "53182dc0bfe42595360000c1"
        }
      ],
      "keywords": [ "diamond", "lunchbox", "surface", "uv" ],
      "white_list": false
    },
    {
      "_id": "5424526bcc26bfdc5a00002b",
      "name": "DynamoMathematica",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5cc30eab-10de-4541-8769-621f35f56af8gregPkg592.zip",
          "contents": "|ContainsBinaries(5C698212-A139-4DDD-8657-1BF892C79821)",
          "engine_metadata": "",
          "engine_version": "0.7.2.4777",
          "created": "2014-09-25T17:35:39.537Z",
          "full_dependency_versions": [ "0.5.0" ],
          "full_dependency_ids": [
            {
              "name": "DynamoMathematica",
              "_id": "5424526bcc26bfdc5a00002b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.5.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-25T17:35:39.537Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 226,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Math",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DynamoMathematica allows Dynamo to connect with the headless math kernel inside Wolfram Mathematica and perform calculations. \r\nIt is a Dynamo 'zero-touch' wrapper around the Wolfram.NETLink.dll (also included) and is based on the Wolfram MathKernelApp sample project. \r\nIn order to use this package you need Mathematica installed locally on your machine. \r\nProper usage entails passing in a string that is evaluated by Mathmatica, for example \"2+2\" returns 4",
      "maintainers": [
        {
          "username": "mattjezyk",
          "_id": "5424526acc26bfdc5a00002a"
        }
      ],
      "keywords": [ "math", "mathematica", "wolfram" ],
      "white_list": false
    },
    {
      "_id": "5421aff2cc26bfdc5a000024",
      "name": "Loop While",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f91b55ca-bddb-486c-b0ba-99e00eb4aa61gregPkg77.zip",
          "contents": "Loop While - Loops until a condition for a state is met, updating the state on each iteration.\r\n\r\nTakes an initital value, a function to produce a new value, and a function that determines whether to keep looping.\r\n\r\nIn effect, produces the following while loop:\r\n\r\nwhile(continueWhile(init))\r\n    init = body(init);\r\nreturn init;",
          "engine_metadata": "",
          "engine_version": "0.7.2.19521",
          "created": "2014-09-29T15:57:37.996Z",
          "full_dependency_versions": [ "0.0.5" ],
          "full_dependency_ids": [
            {
              "name": "Loop While",
              "_id": "5421aff2cc26bfdc5a000024"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-09-29T15:57:37.996Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 421,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Steellworks",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "While loop, as seen in many popular programming languages.\r\n\r\nTakes an initital value, a function to produce a new value, and a function that determines whether to keep looping.\r\n\r\nIn effect, produces the following while loop:\r\n\r\nwhile(continueWhile(init))\r\n    init = body(init);\r\nreturn init;",
      "maintainers": [
        {
          "username": "stephen.elliott@autodesk.com",
          "_id": "5218d435e2f476ca0500002e"
        }
      ],
      "keywords": [ "loop", "while", "for", "do", "recursion", "imperative" ],
      "white_list": false
    },
    {
      "_id": "542b58d8cc26bfdc5a00003a",
      "name": "Zip Lists",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c5a06f02-bb6c-40fa-8673-8e3cb3116a54gregPkg374.zip",
          "contents": "Zip Lists - Zip together two lists in an every other fashion: {A,B,C,D} + {1,2,3,4} --> {A,2,C,4}|ContainsPythonScripts(58B25C0B-CBBE-4DDC-AC39-ECBEB8B55B10)",
          "engine_metadata": "",
          "engine_version": "0.7.2.10014",
          "created": "2014-10-01T01:28:56.308Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Zip Lists",
              "_id": "542b58d8cc26bfdc5a00003a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-01T01:28:56.308Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 193,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Zip together two lists in an every other fashion: {A,B,C,D} + {1,2,3,4} --> {A,2,C,4}",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "weave", "zip" ],
      "white_list": false
    },
    {
      "_id": "54330a1dcc26bfdc5a000045",
      "name": "Surface.TrimAll",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f14e1d57-325e-4620-a311-0936d61bd36egregPkg745.zip",
          "contents": "Surface.TrimAll - No description provided|ContainsPythonScripts(58B25C0B-CBBE-4DDC-AC39-ECBEB8B55B10)",
          "engine_metadata": "",
          "engine_version": "0.7.2.23480",
          "created": "2014-10-06T21:31:09.310Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Surface.TrimAll",
              "_id": "54330a1dcc26bfdc5a000045"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-06T21:31:09.31Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 152,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Trim a surface with multiple closed curves and pick points",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "trim", "trimall", "surface" ],
      "white_list": false
    },
    {
      "_id": "543780f2cc26bfdc5a00004c",
      "name": "MyTestDLL",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/fdf12df6-c4ed-4bec-ab0f-50909ce12b7agregPkg371.zip",
          "contents": "|ContainsBinaries(5C698212-A139-4DDD-8657-1BF892C79821)",
          "engine_metadata": "",
          "engine_version": "0.7.2.33127",
          "created": "2014-10-10T06:47:14.874Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "MyTestDLL",
              "_id": "543780f2cc26bfdc5a00004c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-10T06:47:14.874Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 31,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "MyTestDLL",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This is for Testing whether, I can upload DLL or not.",
      "maintainers": [
        {
          "username": "critesh",
          "_id": "530da612bfe42595360000b0"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "543b686ecc26bfdc5a00004e",
      "name": "QuadsOnSurface_UsingFunction",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/209cf286-887c-48a5-bf2f-289acf48680cgregPkg676.zip",
          "contents": "QuadsOnSurface_UsingFunction - Pass your Surface and it will create rectangular Quads on Surface, which can be used for Panel or Adaptive Component placement.",
          "engine_metadata": "",
          "engine_version": "0.7.2.11311",
          "created": "2014-10-13T05:51:42.931Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "QuadsOnSurface_UsingFunction",
              "_id": "543b686ecc26bfdc5a00004e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-13T05:51:42.931Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 117,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "MyCustomNode",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Pass your surface with number of U, V parameters and this Function will return you Quads with four points which you can use for Placing Panel or Adaptive Component.",
      "maintainers": [
        {
          "username": "critesh",
          "_id": "530da612bfe42595360000b0"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "543f7e3acc26bfdc5a000051",
      "name": "ConcatParameter",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/bd1cced0-13a0-4bc9-bf31-1e37dcbdd64cgregPkg76.zip",
          "contents": "ConcatParameter - Concatenates 2 Strings|ContainsPythonScripts(58B25C0B-CBBE-4DDC-AC39-ECBEB8B55B10)",
          "engine_metadata": "",
          "engine_version": "0.7.2.37186",
          "created": "2014-10-16T08:13:46.003Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "ConcatParameter",
              "_id": "543f7e3acc26bfdc5a000051"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-16T08:13:46.003Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 148,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "KOP",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "concatenates 2 parameters to 1 string",
      "maintainers": [
        {
          "username": "KOPPEVI",
          "_id": "53ce7c620e5572016a000163"
        }
      ],
      "keywords": [ "concat", "parameters" ],
      "white_list": false
    },
    {
      "_id": "54062c540e5572016a0001b2",
      "name": "Eraser by name",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e2c64e1a-e8f2-43ae-a377-96c4bd98093cgregPkg612.zip",
          "contents": "Eraser by name - erase things in a list, selected by the name|ContainsPythonScripts(58B25C0B-CBBE-4DDC-AC39-ECBEB8B55B10)",
          "engine_metadata": "",
          "engine_version": "0.7.2.3704",
          "created": "2014-10-16T13:23:23.428Z",
          "full_dependency_versions": [ "0.7.2", "0.71.3" ],
          "full_dependency_ids": [
            {
              "name": "Eraser by name",
              "_id": "54062c540e5572016a0001b2"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.71.3" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.7.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-16T13:23:23.428Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 226,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "erase things from a list, select by a string",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "erase", "delete", "element" ],
      "white_list": false
    },
    {
      "_id": "543fcf90cc26bfdc5a000054",
      "name": "Get LineStyle by Name",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/44584bbd-6bed-4a33-8ef9-4137a086c869gregPkg898.zip",
          "contents": "Get LineStyle by Name - Collects LineStyle from string.contains|ContainsPythonScripts(58B25C0B-CBBE-4DDC-AC39-ECBEB8B55B10)",
          "engine_metadata": "",
          "engine_version": "0.7.2.3704",
          "created": "2014-10-16T14:00:48.550Z",
          "full_dependency_versions": [ "0.7.2" ],
          "full_dependency_ids": [
            {
              "name": "Get LineStyle by Name",
              "_id": "543fcf90cc26bfdc5a000054"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-16T14:00:48.55Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 319,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "get Linestyle according to String.Contains method",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "linestyle" ],
      "white_list": false
    },
    {
      "_id": "543fd01dcc26bfdc5a000056",
      "name": "Eraser",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/27636d49-32a2-40ab-b553-cc02680638bcgregPkg576.zip",
          "contents": "Eraser - Try to delete element from project by his ID|ContainsPythonScripts(58B25C0B-CBBE-4DDC-AC39-ECBEB8B55B10)",
          "engine_metadata": "",
          "engine_version": "0.7.2.3704",
          "created": "2014-10-16T14:03:09.188Z",
          "full_dependency_versions": [ "0.7.2" ],
          "full_dependency_ids": [
            {
              "name": "Eraser",
              "_id": "543fd01dcc26bfdc5a000056"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-16T14:03:09.188Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 621,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "JBE",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        }
      ],
      "num_dependents": 1,
      "description": "Erase element from project, be careful!",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "delete", "erase", "purge" ],
      "white_list": false
    },
    {
      "_id": "54412f51cc26bfdc5a000059",
      "name": "Loft Surfaces from List of Curves",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8dc6d0db-3061-4735-84cf-edd68194616cgregPkg531.zip",
          "contents": "Loft Surfaces from List of Curves - With a list of ordered curves, loft invidividual surfaces using List.ShiftIndices.",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-17T15:01:37.824Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Loft Surfaces from List of Curves",
              "_id": "54412f51cc26bfdc5a000059"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-17T15:01:37.824Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 239,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Mode Lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Input an order list of curves, export lofted surfaces using List.ShiftIndices",
      "maintainers": [
        {
          "username": "ekatzensteinMode",
          "_id": "54412f51cc26bfdc5a000058"
        }
      ],
      "keywords": [ "mode", "surfaces", "shift" ],
      "white_list": false
    },
    {
      "_id": "5441358dcc26bfdc5a00005c",
      "name": "StringIntConcatenate",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2fec4fdd-bf96-4e6b-afef-abaa59b367f8gregPkg144.zip",
          "contents": "|ContainsBinaries(5C698212-A139-4DDD-8657-1BF892C79821)",
          "engine_metadata": "",
          "engine_version": "0.7.2.16692",
          "created": "2014-10-17T16:08:52.323Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "StringIntConcatenate",
              "_id": "5441358dcc26bfdc5a00005c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-17T16:08:52.323Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 77,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Contains a single node that concatenates a string with an int.  This is a test of the new binary capabilities of the package manager - it contains a Zero-Touch DLL, an xml documentation file for the library, and a Dynamo_Customization file.\r\n\r\nRelease 0.1.2 - added sample file.  Will this end up in the extra folder?",
      "maintainers": [
        {
          "username": "bhowes@pratt.edu",
          "_id": "5441358dcc26bfdc5a00005b"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54417319cc26bfdc5a000063",
      "name": "EA4D",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a7631fc9-2e43-472d-afd1-c5bdc32e5616gregPkg484.zip",
          "contents": "|ContainsBinaries(5C698212-A139-4DDD-8657-1BF892C79821)",
          "engine_metadata": "",
          "engine_version": "0.7.2.7096",
          "created": "2014-10-17T19:50:49.211Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "EA4D",
              "_id": "54417319cc26bfdc5a000063"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-17T19:50:49.211Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 104,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "EnergyAnalysisforDynamo",
      "maintainers": [
        {
          "username": "eertugru@stevens.edu",
          "_id": "54417318cc26bfdc5a000062"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "544439f8cc26bfdc5a00006d",
      "name": "tangentfromexternalpointtoellipse",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ded4b471-bdbc-44c7-8493-d3718e89de64gregPkg88.zip",
          "contents": "tangentfromexternalpointtoellipse - tangent curve of ellipse going through a specific point outside the ellipse",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-19T22:23:52.474Z",
          "full_dependency_versions": [ "0.7.2" ],
          "full_dependency_ids": [
            {
              "name": "tangentfromexternalpointtoellipse",
              "_id": "544439f8cc26bfdc5a00006d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-19T22:23:52.474Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 28,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Jinhui",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "tangency line of ellipse from external points",
      "maintainers": [
        {
          "username": "Krystalhjh",
          "_id": "54443976cc26bfdc5a00006a"
        }
      ],
      "keywords": [ "tangencyellipse" ],
      "white_list": false
    },
    {
      "_id": "54443d13cc26bfdc5a00006f",
      "name": "tangentfromexternalpointwhenxzero",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/380122e5-f71e-44f2-9e22-7c64f734263dgregPkg554.zip",
          "contents": "tangentfromexternalpointwhenxzero - tangent line on ellipse going through an external point in the case when x is zero",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-19T22:37:07.927Z",
          "full_dependency_versions": [ "0.7.2" ],
          "full_dependency_ids": [
            {
              "name": "tangentfromexternalpointwhenxzero",
              "_id": "54443d13cc26bfdc5a00006f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-19T22:37:07.927Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 25,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "tangency line of ellipse from externalpoint with x0",
      "maintainers": [
        {
          "username": "Krystalhjh",
          "_id": "54443976cc26bfdc5a00006a"
        }
      ],
      "keywords": [ "tangency", "ellipse" ],
      "white_list": false
    },
    {
      "_id": "544445a7cc26bfdc5a000071",
      "name": "tangentfromexternalpointtoellipse_update",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/dd9fa396-aba5-4993-a1ce-b8c8c0395e12gregPkg449.zip",
          "contents": "tangentfromexternalpointtoellipseresolvingxzerosituation - tangent curve of ellipse going through a specific point outside the ellipse",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-19T23:13:43.825Z",
          "full_dependency_versions": [ "0.7.2" ],
          "full_dependency_ids": [
            {
              "name": "tangentfromexternalpointtoellipse_update",
              "_id": "544445a7cc26bfdc5a000071"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-19T23:13:43.825Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 31,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Jinhui",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "tangency of ellipse from external points updated",
      "maintainers": [
        {
          "username": "Krystalhjh",
          "_id": "54443976cc26bfdc5a00006a"
        }
      ],
      "keywords": [ "tangency", "ellipse" ],
      "white_list": false
    },
    {
      "_id": "54444922cc26bfdc5a000073",
      "name": "fromellipsetotangency",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/fb887d8d-3138-47a0-8cc8-ed9bf30840e4gregPkg655.zip",
          "contents": "fromellipsetotangency - a transitional custom nodes",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-19T23:28:34.820Z",
          "full_dependency_versions": [ "0.7.2" ],
          "full_dependency_ids": [
            {
              "name": "fromellipsetotangency",
              "_id": "54444922cc26bfdc5a000073"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-19T23:28:34.82Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 29,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "it is a transitional custom nodes from ellipse to tangency",
      "maintainers": [
        {
          "username": "Krystalhjh",
          "_id": "54443976cc26bfdc5a00006a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54443977cc26bfdc5a00006b",
      "name": "20141011 Ellipse Foundation Custom Node",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6d77fec9-6579-4edf-abf1-5580a07596dbgregPkg941.zip",
          "contents": "20141011 Ellipse Foundation Custom Node - Generate interrelated ellipses",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-20T07:12:27.481Z",
          "full_dependency_versions": [ "0.7.3" ],
          "full_dependency_ids": [
            {
              "name": "20141011 Ellipse Foundation Custom Node",
              "_id": "54443977cc26bfdc5a00006b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-20T07:12:27.481Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 43,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "KennyJinhui",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "ellipse foundation",
      "maintainers": [
        {
          "username": "Krystalhjh",
          "_id": "54443976cc26bfdc5a00006a"
        }
      ],
      "keywords": [ "eliipsefoundation" ],
      "white_list": false
    },
    {
      "_id": "5444bed0cc26bfdc5a000076",
      "name": "ringtruss",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d533e1db-1e28-4771-a78c-b12881e8fef5gregPkg807.zip",
          "contents": "ringtruss - enclosed ring truss",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-20T08:28:57.236Z",
          "full_dependency_versions": [ "0.7.3" ],
          "full_dependency_ids": [
            {
              "name": "ringtruss",
              "_id": "5444bed0cc26bfdc5a000076"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-20T08:28:57.236Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 90,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Jinhui",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "simple truss with even division",
      "maintainers": [
        {
          "username": "Krystalhjh",
          "_id": "54443976cc26bfdc5a00006a"
        }
      ],
      "keywords": [ "simple", "truss", "with", "even", "division" ],
      "white_list": false
    },
    {
      "_id": "5444e87ecc26bfdc5a000079",
      "name": "20141020 Elliptical Seating System2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/39dbe533-2724-4fae-bf1e-8f9522ac35fbgregPkg34.zip",
          "contents": "20141020 Elliptical Seating System2 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-20T11:01:52.837Z",
          "full_dependency_versions": [ "0.7.3" ],
          "full_dependency_ids": [
            {
              "name": "20141020 Elliptical Seating System2",
              "_id": "5444e87ecc26bfdc5a000079"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-20T11:01:52.837Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 55,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "jh",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "creating seating rows",
      "maintainers": [
        {
          "username": "Krystalhjh",
          "_id": "54443976cc26bfdc5a00006a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "52c7ff3004db8f7361000007",
      "name": "Almost Zero",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/75d72e62-e759-4685-b363-54cf316a902dgregPkg300.zip",
          "contents": "Almost Zero - Returns a feasable computational tolerance to zero (1.0e-9 or a billionth of 1) for use in calculations. More background info: https://github.com/ikeough/Dynamo/issues/879, XYZs Almost Equal - Checks if any XYzs in a given list are almost equal (within a reasonable computational tolerance) to a specified XYZ.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T10:16:59.411Z",
          "full_dependency_versions": [ "0.2.2", "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.4" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.2.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T10:16:59.411Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 504,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Vector-Vector Intersection",
          "_id": "52efe7cbbfe4259536000044"
        },
        {
          "name": "Solve Triangle By XYZs",
          "_id": "52f098e2bfe425953600004d"
        },
        {
          "name": "Vectors Are Orthogonal",
          "_id": "5306edf2bfe4259536000098"
        },
        {
          "name": "Vector And Plane Are Parallel",
          "_id": "53070a7abfe425953600009c"
        },
        {
          "name": "Vector Is In Plane",
          "_id": "53074571bfe425953600009e"
        },
        {
          "name": "Plane-Vector Intersection",
          "_id": "52ca73b49f852b166e000004"
        },
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        },
        {
          "name": "Altitude And Azimuth From Vector",
          "_id": "532af328bfe42595360000e1"
        },
        {
          "name": "Central Projection On Plane",
          "_id": "5306fa4dbfe425953600009a"
        }
      ],
      "num_dependents": 9,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "almost", "zero", "equal", "tolerance", "nano", "billionth" ],
      "white_list": false
    },
    {
      "_id": "52f1199dbfe425953600004f",
      "name": "Alphabetical Sequence",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a1969907-dcee-46f1-93dc-9bcdbfb9a2edgregPkg452.zip",
          "contents": "Alphabetical Sequence - Creates a list of the first N letters of the alphabet  (where 1 = A, 2 = B, ... , 27 = AA, 28 = AB etc.)., Number To Character - Converts a number into a character (where 1 = A, 2 = B, ... , 27 = AA, 28 = AB etc.).",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T10:21:34.549Z",
          "full_dependency_versions": [ "0.2.2" ],
          "full_dependency_ids": [
            {
              "name": "Alphabetical Sequence",
              "_id": "52f1199dbfe425953600004f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T10:21:34.549Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 127,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "abc", "alphabetical", "list", "sequence" ],
      "white_list": false
    },
    {
      "_id": "532af328bfe42595360000e1",
      "name": "Altitude And Azimuth From Vector",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/842177b4-c237-40d6-b717-c6484926c999gregPkg495.zip",
          "contents": "Altitude And Azimuth From Vector - Computes the altitude and azimuth of a given vector",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T10:31:10.822Z",
          "full_dependency_versions": [ "0.1.2", "0.1.4", "0.1.1", "0.2.0", "0.1.6", "0.0.9", "0.1.2", "0.1.4", "0.2.2", "0.1.1", "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Altitude And Azimuth From Vector",
              "_id": "532af328bfe42595360000e1"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Solve Triangle By XYZs",
              "_id": "52f098e2bfe425953600004d"
            },
            {
              "name": "Unit Conversion",
              "_id": "5226bfaee2f476ca05000063"
            },
            {
              "name": "Law Of Cosines",
              "_id": "5226bb10e2f476ca0500005f"
            },
            {
              "name": "Project To XY Plane",
              "_id": "51f823d4e2f476ca05000006"
            },
            {
              "name": "Angle Bisector",
              "_id": "522f6e358f1189e274000004"
            },
            {
              "name": "Standard Normals",
              "_id": "5201e0a8e2f476ca05000029"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Vector-Vector Intersection",
              "_id": "52efe7cbbfe4259536000044"
            }
          ],
          "direct_dependency_versions": [ "0.0.9", "0.1.4", "0.1.4", "0.1.1", "0.1.6", "0.1.2", "0.1.1", "0.2.2", "0.2.0" ],
          "direct_dependency_ids": [
            {
              "name": "Project To XY Plane",
              "_id": "51f823d4e2f476ca05000006"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Standard Normals",
              "_id": "5201e0a8e2f476ca05000029"
            },
            {
              "name": "Solve Triangle By XYZs",
              "_id": "52f098e2bfe425953600004d"
            },
            {
              "name": "Law Of Cosines",
              "_id": "5226bb10e2f476ca0500005f"
            },
            {
              "name": "Angle Bisector",
              "_id": "522f6e358f1189e274000004"
            },
            {
              "name": "Vector-Vector Intersection",
              "_id": "52efe7cbbfe4259536000044"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Unit Conversion",
              "_id": "5226bfaee2f476ca05000063"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T10:31:10.822Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 57,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "altitude", "azimuth" ],
      "white_list": false
    },
    {
      "_id": "5251fb063f7315936f000011",
      "name": "Angle By Angle Sum",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b89d86bf-a803-44c3-bf73-be5b91e91246gregPkg251.zip",
          "contents": "Angle By Angle Sum - Computes the missing interior angle of a *planar* polygon based on a given list of all other interior angles. ",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T10:35:49.370Z",
          "full_dependency_versions": [ "0.1.4", "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Angle By Angle Sum",
              "_id": "5251fb063f7315936f000011"
            },
            {
              "name": "Sum List",
              "_id": "52203afbe2f476ca0500004b"
            }
          ],
          "direct_dependency_versions": [ "1.0.0" ],
          "direct_dependency_ids": [
            {
              "name": "Sum List",
              "_id": "52203afbe2f476ca0500004b"
            }
          ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T10:35:49.37Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 82,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "interior", "angle", "sum", "planar", "polygon" ],
      "white_list": false
    },
    {
      "_id": "53032162bfe4259536000087",
      "name": "Buckyball",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f03ce84f-fd81-489f-9824-6da6938de9b6gregPkg776.zip",
          "contents": "Buckyball Coordinates - Returns the coordinates of all the vertices of an (unscaled) truncated icosahedron., Buckyball - Returns all the data necessary for modeling a truncated icosahedron (vertices and struts) as well as the surface area and volume. Radius and origin of the object can be specified., Get Buckyball Struts - Parses the vertices of an (unscaled) truncated icosahedron and returns a pair of XYZs for each strut.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T10:38:30.009Z",
          "full_dependency_versions": [ "0.2.2", "1.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Buckyball",
              "_id": "53032162bfe4259536000087"
            },
            {
              "name": "phi",
              "_id": "523b9a3330e55dc52b00000b"
            }
          ],
          "direct_dependency_versions": [ "1.0.2" ],
          "direct_dependency_ids": [
            {
              "name": "phi",
              "_id": "523b9a3330e55dc52b00000b"
            }
          ],
          "change_log": "",
          "version": "0.2.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T10:38:30.009Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 95,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "buckyball", "buckminster", "fuller", "truncated", "icosahedron", "football", "fullerene" ],
      "white_list": false
    },
    {
      "_id": "53083bd6bfe42595360000ac",
      "name": "Central Projection On Face",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/eb0d501c-f418-41bd-9b40-d60f7d9af1dfgregPkg157.zip",
          "contents": "Central Projection On Face - Projects a list of points onto a given face",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T10:44:03.472Z",
          "full_dependency_versions": [ "0.2.2", "0.1.4", "0.1.5", "0.2.2", "0.1.1", "0.2.1", "0.1.1", "0.1.1", "0.1.1", "0.1.2", "0.1.2", "0.1.1", "0.1.2", "0.1.1", "0.1.1", "0.1.3", "0.1.1", "0.2.0", "0.2.0", "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Central Projection On Face",
              "_id": "53083bd6bfe42595360000ac"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Plane From Planar Face",
              "_id": "530838c1bfe42595360000aa"
            },
            {
              "name": "Get Element By Face",
              "_id": "53083536bfe42595360000a4"
            },
            {
              "name": "Vectors Are Orthogonal",
              "_id": "5306edf2bfe4259536000098"
            },
            {
              "name": "Sort List Of Lists",
              "_id": "52c8cbb604db8f736100000b"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Vector Is In Plane",
              "_id": "53074571bfe425953600009e"
            },
            {
              "name": "Angle Between Vectors",
              "_id": "53074e6fbfe42595360000a1"
            },
            {
              "name": "Get Bounding Box",
              "_id": "53083642bfe42595360000a6"
            },
            {
              "name": "Vector And Plane Are Parallel",
              "_id": "53070a7abfe425953600009c"
            },
            {
              "name": "Has Out-Of-Plane XYZs",
              "_id": "522c99e44b31fa536a000010"
            },
            {
              "name": "Get Faces From Solid",
              "_id": "530837c1bfe42595360000a8"
            },
            {
              "name": "Plane-Vector Intersection",
              "_id": "52ca73b49f852b166e000004"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            }
          ],
          "direct_dependency_versions": [ "0.1.2", "0.1.2", "0.1.1", "0.1.4", "0.1.1", "0.1.2", "0.1.1", "0.1.1", "0.2.2", "0.2.0", "0.1.1", "0.1.1", "0.1.1", "0.1.3", "0.2.0" ],
          "direct_dependency_ids": [
            {
              "name": "Sort List Of Lists",
              "_id": "52c8cbb604db8f736100000b"
            },
            {
              "name": "Angle Between Vectors",
              "_id": "53074e6fbfe42595360000a1"
            },
            {
              "name": "Plane From Planar Face",
              "_id": "530838c1bfe42595360000aa"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Get Faces From Solid",
              "_id": "530837c1bfe42595360000a8"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Get Bounding Box",
              "_id": "53083642bfe42595360000a6"
            },
            {
              "name": "Get Element By Face",
              "_id": "53083536bfe42595360000a4"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Plane-Vector Intersection",
              "_id": "52ca73b49f852b166e000004"
            },
            {
              "name": "Vector Is In Plane",
              "_id": "53074571bfe425953600009e"
            },
            {
              "name": "Vector And Plane Are Parallel",
              "_id": "53070a7abfe425953600009c"
            },
            {
              "name": "Vectors Are Orthogonal",
              "_id": "5306edf2bfe4259536000098"
            },
            {
              "name": "Has Out-Of-Plane XYZs",
              "_id": "522c99e44b31fa536a000010"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            }
          ],
          "change_log": "",
          "version": "0.2.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T10:44:03.472Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 45,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "central", "projection", "face" ],
      "white_list": false
    },
    {
      "_id": "5306fa4dbfe425953600009a",
      "name": "Central Projection On Plane",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8a733429-f7b3-4eae-bb0b-48308189c8e2gregPkg541.zip",
          "contents": "Central Projection On Plane - Projects a list of points onto a given plane",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T10:48:44.834Z",
          "full_dependency_versions": [ "0.2.1", "0.1.1", "0.1.1", "0.2.0", "0.1.1", "0.2.0", "0.1.3", "0.1.1", "0.2.2", "0.1.1", "0.2.1", "0.1.5", "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "Central Projection On Plane",
              "_id": "5306fa4dbfe425953600009a"
            },
            {
              "name": "Vector And Plane Are Parallel",
              "_id": "53070a7abfe425953600009c"
            },
            {
              "name": "Vector Is In Plane",
              "_id": "53074571bfe425953600009e"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "Plane-Vector Intersection",
              "_id": "52ca73b49f852b166e000004"
            },
            {
              "name": "Has Out-Of-Plane XYZs",
              "_id": "522c99e44b31fa536a000010"
            },
            {
              "name": "Vectors Are Orthogonal",
              "_id": "5306edf2bfe4259536000098"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.2.0", "0.1.1", "0.1.1", "0.1.1", "0.2.2", "0.1.3", "0.2.0", "0.1.4" ],
          "direct_dependency_ids": [
            {
              "name": "Plane-Vector Intersection",
              "_id": "52ca73b49f852b166e000004"
            },
            {
              "name": "Vector Is In Plane",
              "_id": "53074571bfe425953600009e"
            },
            {
              "name": "Vector And Plane Are Parallel",
              "_id": "53070a7abfe425953600009c"
            },
            {
              "name": "Vectors Are Orthogonal",
              "_id": "5306edf2bfe4259536000098"
            },
            {
              "name": "Almost Zero",
              "_id": "52c7ff3004db8f7361000007"
            },
            {
              "name": "Has Out-Of-Plane XYZs",
              "_id": "522c99e44b31fa536a000010"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T10:48:44.834Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 46,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "central", "projection", "plane", "point", "xyz" ],
      "white_list": false
    },
    {
      "_id": "536074a70e5572016a000039",
      "name": "Create Placeholder Sheets",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/771da933-b1b2-4809-a4d4-965d58332d8dgregPkg838.zip",
          "contents": "Create Placeholder Sheets - Creates placeholder sheets",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T12:59:22.298Z",
          "full_dependency_versions": [ "0.1.3", "0.1.1", "0.1.5", "0.1.2", "0.1.8", "0.1.6", "0.1.2", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Create Placeholder Sheets",
              "_id": "536074a70e5572016a000039"
            },
            {
              "name": "Equal List Lengths",
              "_id": "52a943ec9de41c8235000054"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "Get Highest And Lowest From List",
              "_id": "523a1d7830e55dc52b000003"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.1", "0.1.2", "0.1.8", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Equal List Lengths",
              "_id": "52a943ec9de41c8235000054"
            },
            {
              "name": "Get Highest And Lowest From List",
              "_id": "523a1d7830e55dc52b000003"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T12:59:22.298Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 228,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "create", "placeholder", "sheets" ],
      "white_list": false
    },
    {
      "_id": "537087380e5572016a000056",
      "name": "CSV To List",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/aa0f4a30-a8bf-4de6-8090-0f288f45405fgregPkg435.zip",
          "contents": "CSV To List - Converts the content of a given CSV file to a list",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:01:34.840Z",
          "full_dependency_versions": [ "0.3.1", "0.1.8", "0.1.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "CSV To List",
              "_id": "537087380e5572016a000056"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            }
          ],
          "direct_dependency_versions": [ "0.1.8", "0.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            }
          ],
          "change_log": "",
          "version": "0.3.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:01:34.84Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 149,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Parse Solar Radiation CSV",
          "_id": "521cfcb8e2f476ca05000041"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "csv", "list" ],
      "white_list": false
    },
    {
      "_id": "5246f07f30e55dc52b00002f",
      "name": "Elements From & To IDs",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b9fdeb58-b151-4f87-9851-e5ad16554d7cgregPkg496.zip",
          "contents": "Elements to IDs - Gets the ID(s) for a list of Revit elements (or a single element), IDs to Elements - Gets the Revit element(s) for a list of IDs (or a single ID)",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:37:24.087Z",
          "full_dependency_versions": [ "0.1.5", "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.1.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:37:24.087Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2720,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Remove Duplicates From List",
          "_id": "5246f1d430e55dc52b000031"
        },
        {
          "name": "Room Stuff",
          "_id": "52e217e8bfe425953600001c"
        },
        {
          "name": "Hosted Object Stuff",
          "_id": "52ade6049de41c823500005c"
        },
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        },
        {
          "name": "Override Element in View",
          "_id": "536fda510e5572016a000050"
        },
        {
          "name": "View Stuff",
          "_id": "52c65b7d04db8f7361000004"
        },
        {
          "name": "Select by Bounding Box",
          "_id": "539b18360e5572016a000109"
        },
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        }
      ],
      "num_dependents": 8,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "element", "ids", "get" ],
      "white_list": false
    },
    {
      "_id": "52efd0cfbfe4259536000040",
      "name": "Evaluate Divided Surface Grid Nodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f459cb8c-495c-4e11-9313-89d27c536521gregPkg109.zip",
          "contents": "Evaluate Divided Surface Grid Nodes - Returns UV and XYZ coordinates as well as surface normals for all grid nodes of a given divided surface. Also returns the underlying face and the UV count. PLEASE NOTE: Does not run in Revit version prior to 2014.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:39:16.635Z",
          "full_dependency_versions": [ "0.2.1" ],
          "full_dependency_ids": [
            {
              "name": "Evaluate Divided Surface Grid Nodes",
              "_id": "52efd0cfbfe4259536000040"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:39:16.635Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 178,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "divided", "surfaces", "grid", "nodes", "coordinates", "xyz", "uv", "normals", "evaluate" ],
      "white_list": false
    },
    {
      "_id": "52ccca179f852b166e00000c",
      "name": "Group List of Lists By Key",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4db01f86-0806-4895-a2a7-d8ee6b7065e5gregPkg737.zip",
          "contents": "Group List of Lists By Key - Groups a list of lists by one of its keys",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T13:59:32.100Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Group List of Lists By Key",
              "_id": "52ccca179f852b166e00000c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T13:59:32.1Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 156,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Hosted Object Stuff",
          "_id": "52ade6049de41c823500005c"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "group", "list", "sublist", "key" ],
      "white_list": false
    },
    {
      "_id": "522c99e44b31fa536a000010",
      "name": "Has Out-Of-Plane XYZs",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/90adc13f-6277-417b-9a27-f915eb9e9604gregPkg321.zip",
          "contents": "Has Out-Of-Plane XYZs - Checks a list for XYZs that are not located on a given plane, XYZ Is Out-Of-Plane - Checks a list for XYZs that are not located on a given plane",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:00:20.822Z",
          "full_dependency_versions": [ "0.1.4", "0.2.0", "0.1.5", "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "Has Out-Of-Plane XYZs",
              "_id": "522c99e44b31fa536a000010"
            },
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.2.0", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "True And False For Any And All (Boolean)",
              "_id": "529b0b779de41c8235000023"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:00:20.822Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 168,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Vector Is In Plane",
          "_id": "53074571bfe425953600009e"
        },
        {
          "name": "Plane-Vector Intersection",
          "_id": "52ca73b49f852b166e000004"
        },
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        },
        {
          "name": "Central Projection On Plane",
          "_id": "5306fa4dbfe425953600009a"
        }
      ],
      "num_dependents": 4,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "out", "of", "plane", "xyz", "planar" ],
      "white_list": false
    },
    {
      "_id": "52ade6049de41c823500005c",
      "name": "Hosted Object Stuff",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/435a0c97-0f86-4192-be6e-778482182f49gregPkg91.zip",
          "contents": "Get Host - Gets an element's host, Get Hosted Object Orientation - Gets the orientation of a hosted object (e.g. a window or a door - orientation always facing towards exterior), Get Inserts - Gets all the objects inserted into a given element., Group Elements By Host - Groups a list of Revit elements by their respective hosts (if they have any)",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:00:53.607Z",
          "full_dependency_versions": [ "0.2.3", "0.1.5", "0.1.2", "0.1.2", "0.1.5", "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Hosted Object Stuff",
              "_id": "52ade6049de41c823500005c"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Sort List Of Lists",
              "_id": "52c8cbb604db8f736100000b"
            },
            {
              "name": "Group List of Lists By Key",
              "_id": "52ccca179f852b166e00000c"
            },
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.2", "0.1.5", "0.1.2", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            },
            {
              "name": "Group List of Lists By Key",
              "_id": "52ccca179f852b166e00000c"
            },
            {
              "name": "Sort List Of Lists",
              "_id": "52c8cbb604db8f736100000b"
            }
          ],
          "change_log": "",
          "version": "0.2.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:00:53.607Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 88,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "get", "host", "hosted", "object", "facing", "orientation", "inserts", "group" ],
      "white_list": false
    },
    {
      "_id": "52a6db889de41c823500004f",
      "name": "Intersects For Divided Surfaces",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/338d5f9f-5df0-472a-a3d0-207ff335974cgregPkg106.zip",
          "contents": "Add Intersect To Divided Surface - Adds an intersect to a divided surface, Horizontal Intersects For Divided Surface by Endpoints and Function - Creates a number of horizontal intersects (levels)for a divided surface based on the path between two points. The spacing of the intersects can be controlled by a function., Horizontal Intersects For Divided Surface by Endpoints - Creates a number of equally spaced horizontal intersects for a divided surface based on the path between between two points. PLEASE NOTE: This node will currently (v 0.6.3) only work correctly if Dynamo project units are set to metric feet., Vertical Intersects for Divided Surface by Endpoints and Function - Creates a number of vertical intersects (reference planes) for a divided surface based on the path between between two points. The spacing can be controlled by a function., Vertical Intersects for Divided Surface by Endpoints - Creates a number of equally spaced vertical intersects for a divided surface based on the path between between two points",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:12:21.068Z",
          "full_dependency_versions": [ "0.2.3", "0.1.5", "0.0.9", "0.1.1", "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "Intersects For Divided Surfaces",
              "_id": "52a6db889de41c823500004f"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Project To XY Plane",
              "_id": "51f823d4e2f476ca05000006"
            },
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            },
            {
              "name": "Normalization",
              "_id": "523a224430e55dc52b000008"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.4", "0.1.1", "0.0.9" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Normalization",
              "_id": "523a224430e55dc52b000008"
            },
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            },
            {
              "name": "Project To XY Plane",
              "_id": "51f823d4e2f476ca05000006"
            }
          ],
          "change_log": "",
          "version": "0.2.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:12:21.068Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 69,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "divided", "surfaces", "intersects", "reference", "planes", "levels" ],
      "white_list": false
    },
    {
      "_id": "5248643f30e55dc52b000037",
      "name": "Is Multiple",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c306d265-5b38-4255-8e85-07bf1d29e873gregPkg976.zip",
          "contents": "Is Multiple - Checks if A is a multiple of B.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:14:39.529Z",
          "full_dependency_versions": [ "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "Is Multiple",
              "_id": "5248643f30e55dc52b000037"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:14:39.529Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 45,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "multiple" ],
      "white_list": false
    },
    {
      "_id": "5246ff8a30e55dc52b000033",
      "name": "Is Odd Number",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8738c658-b95e-465a-82c6-c89bb20cffbbgregPkg568.zip",
          "contents": "Is Even Number - Checks if a number is even., Is Odd Number - Checks if a number is odd.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:15:09.033Z",
          "full_dependency_versions": [ "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "Is Odd Number",
              "_id": "5246ff8a30e55dc52b000033"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:15:09.033Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 158,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Simple Patterning",
          "_id": "52adf18e9de41c823500005e"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "number", "value", "odd", "even" ],
      "white_list": false
    },
    {
      "_id": "5251f8623f7315936f00000f",
      "name": "Law Of Sines",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ab0613b8-caa5-421d-be09-b2985b4fb292gregPkg584.zip",
          "contents": "Angle By Law Of Sines - Determines the angle of a triangle based on the law of sines. (Alpha is the angle opposite side A and beta is the angle opposite side B...), Side By Law Of Sines - Determines the length of a side based on the law of sines. (Alpha is the angle opposite side A and beta is the angle opposite side B...)",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:21:26.155Z",
          "full_dependency_versions": [ "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "Law Of Sines",
              "_id": "5251f8623f7315936f00000f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:21:26.155Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 53,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "law", "sines", "angle", "side", "triangle" ],
      "white_list": false
    },
    {
      "_id": "52c4403c9de41c823500008e",
      "name": "Lines Through Points (Closed Loop)",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e4453e17-9f93-4e1d-88a2-8353c760fc61gregPkg466.zip",
          "contents": "Lines Through Points (Closed Loop) - Works just like the built-in node Lines Through Points (creates a series of lines through a list of points) - except that it creates a *closed* loop of lines.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:23:26.947Z",
          "full_dependency_versions": [ "0.2.1" ],
          "full_dependency_ids": [
            {
              "name": "Lines Through Points (Closed Loop)",
              "_id": "52c4403c9de41c823500008e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:23:26.947Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 383,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Mesh Stuff",
          "_id": "5381c3550e5572016a000081"
        },
        {
          "name": "Topo Stuff",
          "_id": "5278a56d3f7315936f00004a"
        }
      ],
      "num_dependents": 2,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "geometric", "lines", "points", "closed", "loop" ],
      "white_list": false
    },
    {
      "_id": "523e85a730e55dc52b000016",
      "name": "Match List With Keys And Values",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c84e7442-b29d-479e-923f-32b3984b83bdgregPkg667.zip",
          "contents": "Match List With Key Values - Matches a list with a given set of keys and returns the values corresponding to the keys",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:25:45.239Z",
          "full_dependency_versions": [ "0.1.4" ],
          "full_dependency_ids": [
            {
              "name": "Match List With Keys And Values",
              "_id": "523e85a730e55dc52b000016"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:25:45.239Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 148,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Switch",
          "_id": "52f51549bfe4259536000061"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "match", "list", "keys", "values" ],
      "white_list": false
    },
    {
      "_id": "5381c3550e5572016a000081",
      "name": "Mesh Stuff",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3d08510e-ff68-4f9c-892a-b7339be1be07gregPkg249.zip",
          "contents": "Mesh From Face - Triangulates a given face into a mesh, Mesh-Plane Intersection - Calculates the intersection of a mesh and a plane, Triangles From Mesh - Retrieves all triangles from a mesh, XYZs From MeshTriangle - Retrieves XYZs from MeshTriangles",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:27:49.821Z",
          "full_dependency_versions": [ "0.2.1", "0.1.2", "0.2.1", "0.1.1", "0.1.5", "0.1.1", "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Mesh Stuff",
              "_id": "5381c3550e5572016a000081"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Lines Through Points (Closed Loop)",
              "_id": "52c4403c9de41c823500008e"
            },
            {
              "name": "Plane Properties",
              "_id": "53831d590e5572016a000086"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "XYZ Axis From Vector",
              "_id": "5386fa8e0e5572016a0000ca"
            },
            {
              "name": "Get Third XYZ Axis",
              "_id": "53873b790e5572016a0000ce"
            }
          ],
          "direct_dependency_versions": [ "0.1.2", "0.1.5", "0.1.2", "0.1.1", "0.1.1", "0.2.1" ],
          "direct_dependency_ids": [
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Get Third XYZ Axis",
              "_id": "53873b790e5572016a0000ce"
            },
            {
              "name": "XYZ Axis From Vector",
              "_id": "5386fa8e0e5572016a0000ca"
            },
            {
              "name": "Plane Properties",
              "_id": "53831d590e5572016a000086"
            },
            {
              "name": "Lines Through Points (Closed Loop)",
              "_id": "52c4403c9de41c823500008e"
            }
          ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:27:49.821Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 298,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Topo Stuff",
          "_id": "5278a56d3f7315936f00004a"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "mesh", "face", "triangulate", "triangles", "xyzs" ],
      "white_list": false
    },
    {
      "_id": "522ca5244b31fa536a000012",
      "name": "Move XYZ From Plane To Plane",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/71c0a1f3-4338-40da-8c3c-7dda39282ed5gregPkg547.zip",
          "contents": "Move XYZ From Plane To Plane - Moves an XYZ from one plane to another",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:34:16.286Z",
          "full_dependency_versions": [ "0.1.6", "0.1.7" ],
          "full_dependency_ids": [
            {
              "name": "Move XYZ From Plane To Plane",
              "_id": "522ca5244b31fa536a000012"
            },
            {
              "name": "Law Of Cosines",
              "_id": "5226bb10e2f476ca0500005f"
            }
          ],
          "direct_dependency_versions": [ "0.1.7" ],
          "direct_dependency_ids": [
            {
              "name": "Law Of Cosines",
              "_id": "5226bb10e2f476ca0500005f"
            }
          ],
          "change_log": "",
          "version": "0.1.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:34:16.286Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 65,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "move", "transform", "xyz", "plane" ],
      "white_list": false
    },
    {
      "_id": "521cfcb8e2f476ca05000041",
      "name": "Parse Solar Radiation CSV",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/96e79655-cff9-46ec-a3d0-0e800647927bgregPkg600.zip",
          "contents": "Parse Solar Radiation CSV - Parses a Vasari solar radiation analysis CSV file and returns lists of absolute and normalized radiation values, their XYZ coordinates and their normals as well as the highest and lowest radiation value and a the total of all radiation samples",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T14:38:45.279Z",
          "full_dependency_versions": [ "0.3.2", "1.0.0", "0.1.2", "0.1.4", "0.1.1", "0.1.8", "0.3.1", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Parse Solar Radiation CSV",
              "_id": "521cfcb8e2f476ca05000041"
            },
            {
              "name": "Sum List",
              "_id": "52203afbe2f476ca0500004b"
            },
            {
              "name": "Get Highest And Lowest From List",
              "_id": "523a1d7830e55dc52b000003"
            },
            {
              "name": "Normalization",
              "_id": "523a224430e55dc52b000008"
            },
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "CSV To List",
              "_id": "537087380e5572016a000056"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            }
          ],
          "direct_dependency_versions": [ "0.1.4", "0.1.2", "1.0.0", "0.3.1", "0.1.8", "0.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "Normalization",
              "_id": "523a224430e55dc52b000008"
            },
            {
              "name": "Get Highest And Lowest From List",
              "_id": "523a1d7830e55dc52b000003"
            },
            {
              "name": "Sum List",
              "_id": "52203afbe2f476ca0500004b"
            },
            {
              "name": "CSV To List",
              "_id": "537087380e5572016a000056"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            }
          ],
          "change_log": "",
          "version": "0.3.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T14:38:45.279Z",
      "num_versions": 9,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 121,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "parse", "solar", "radiation", "csv" ],
      "white_list": false
    },
    {
      "_id": "5278aff83f7315936f00004c",
      "name": "Project Stuff",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d50bdea9-af4c-4a99-92b4-f6c41520b044gregPkg83.zip",
          "contents": "Get Links And Imports - Gets all linked and imported files in the document, Get Project Info - Gets the project information., Get Project Position - Gets the project's position data relative to XYZ.Zero. , Project Is Workshared - Returns true if the current project is workshared",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T17:46:20.924Z",
          "full_dependency_versions": [ "0.2.3" ],
          "full_dependency_ids": [
            {
              "name": "Project Stuff",
              "_id": "5278aff83f7315936f00004c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T17:46:20.924Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 201,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "project", "information", "geographic", "position", "location", "latitude", "longitude", "north", "east", "south", "west", "worksharing", "workshared", "linked", "imported", "files", "xrefs" ],
      "white_list": false
    },
    {
      "_id": "528cf98a3f7315936f000074",
      "name": "Regular Expressions",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/21d5249e-c348-4de6-b6da-66365b95fa1bgregPkg63.zip",
          "contents": "Filter List by Regular Expression Matches - Filters out all items from a list of strings that don't begin with the regular expression.  The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, Match Regular Expression - Determines if a regular expression matches a string (or a list of strings) and returns a boolean value (or a list, depending on the input). The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T17:48:13.989Z",
          "full_dependency_versions": [ "0.2.2", "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Regular Expressions",
              "_id": "528cf98a3f7315936f000074"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.2.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T17:48:13.989Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2048,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        },
        {
          "name": "Revit API Helpers",
          "_id": "52d3f1219f852b166e000015"
        },
        {
          "name": "Purge Line Pattern",
          "_id": "535e302e0e5572016a000035"
        },
        {
          "name": "Eraser by Name",
          "_id": "536e51150e5572016a00004e"
        },
        {
          "name": "Override Element in View",
          "_id": "536fda510e5572016a000050"
        },
        {
          "name": "Place Groups at XYZ",
          "_id": "537749570e5572016a000062"
        },
        {
          "name": "List BuiltInParameterGroup",
          "_id": "537b217d0e5572016a000071"
        }
      ],
      "num_dependents": 7,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "regular", "expression", "regexp", "match", "filter", "string", "list" ],
      "white_list": false
    },
    {
      "_id": "538380ed0e5572016a00008a",
      "name": "Revit App Version Info",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/bd17f40c-a870-4ba5-bda0-55c76632bceagregPkg383.zip",
          "contents": "Revit App Version Info - Retrieves the name, version and build of the current Revit application.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T17:55:34.436Z",
          "full_dependency_versions": [ "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "Revit App Version Info",
              "_id": "538380ed0e5572016a00008a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T17:55:34.436Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 89,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Evaluate Divided Surface Grid Nodes",
          "_id": "52efd0cfbfe4259536000040"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "revit", "app", "application", "version", "build" ],
      "white_list": false
    },
    {
      "_id": "52b2e59a9de41c8235000072",
      "name": "Roof And Floor Stuff",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/34b464c9-2c91-47cd-8eda-20079daa3939gregPkg708.zip",
          "contents": "Compound Structure Has Variable Layer - Checks if the compound structure of a given floor or roof instance contains a variable layer., Filter Roofs By Creation Method - Filters a list of roofs by their method of creation., Filter Roofs By Kind - Filters a list of roofs by their kind (basic or glazed)., Get Floor Type - Retrieves the floor type for a given floor instance, Get Roof Type - Retrieves the roof type for  a given roof instance, Slab Shape By XYZs - Transform a slab shape based on a list of XYZs. PLEASE NOTE: Will reset any previous edits on the slab shape. May likely need to be used in conjunction with a Transaction node., Slab Shape Has Been Modified - Checks if the shape of a roof or floor slab has been modified with the shape editing tools",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T17:56:32.697Z",
          "full_dependency_versions": [ "0.2.1", "0.1.5", "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Roof And Floor Stuff",
              "_id": "52b2e59a9de41c8235000072"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T17:56:32.697Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 162,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "roof", "floor", "slab", "shape", "compound", "structure", "layer", "footprint", "extrusion", "face", "in-place", "glazed", "xyzs" ],
      "white_list": false
    },
    {
      "_id": "52e217e8bfe425953600001c",
      "name": "Room Stuff",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a85b2c6c-75e9-478a-b353-e5820029515bgregPkg372.zip",
          "contents": "Get Area - Returns the area property of a given element (if that element has such a property), Get Room Boundaries - Gets a list of all boundary elements of a given room, Only ToRoom OR FromRoom Is Set - Evaluates if a door or window has only set one of the ToRoom / FromRoom properties. This may help to determine whether a door/window is external., Room Separators From Curves - Creates room separation lines from geometry curves. PLEASE NOTE: Might need a transaction node to work., Rooms From Doors And Windows - Gets the rooms that are connected by a given door or a window",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T17:59:39.703Z",
          "full_dependency_versions": [ "0.3.2", "0.1.5", "0.0.1", "0.1.5", "0.2.1", "0.1.2", "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Room Stuff",
              "_id": "52e217e8bfe425953600001c"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "If Null Replace With New Value",
              "_id": "52f3cdd7bfe425953600005f"
            },
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            },
            {
              "name": "Remove Duplicates From List",
              "_id": "5246f1d430e55dc52b000031"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Curve Array",
              "_id": "5335aecfbfe42595360000f0"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.2", "0.2.1", "0.1.5", "0.0.1", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Remove Duplicates From List",
              "_id": "5246f1d430e55dc52b000031"
            },
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            },
            {
              "name": "If Null Replace With New Value",
              "_id": "52f3cdd7bfe425953600005f"
            },
            {
              "name": "Curve Array",
              "_id": "5335aecfbfe42595360000f0"
            }
          ],
          "change_log": "",
          "version": "0.3.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T17:59:39.703Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 366,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "room", "area", "separator", "boundary", "boundaries", "doors", "windows", "toroom", "fromroom" ],
      "white_list": false
    },
    {
      "_id": "52b154a49de41c823500006a",
      "name": "Sequence With Leading Zeros",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f949daac-6107-4e4c-909e-7fdcd55a1429gregPkg969.zip",
          "contents": "Sequence With Leading Zeros - Adds leading zeros to a sequence of numbers",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:01:34.796Z",
          "full_dependency_versions": [ "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Sequence With Leading Zeros",
              "_id": "52b154a49de41c823500006a"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:01:34.796Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 12,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "sequence", "strings", "leading", "zeros" ],
      "white_list": false
    },
    {
      "_id": "52adf18e9de41c823500005e",
      "name": "Simple Patterning",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f88e4924-8443-4c10-b84e-d84264650d9agregPkg977.zip",
          "contents": "Build Triangular Sublists - Creates sublists of three items each from a list based on given indices, shift and reverse settings and offset., Get First Four Indices - Gets the first four indices of a given list, Get First Three Indices - Gets the first three indices of a given list, Quadrilateral Pattern (Alternating Rows) - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels in alternating rows. The placement pattern can be reversed (boolean) and shifted (integer)., Quadrilateral Pattern (Checkerboard) - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels in a checkerboard pattern. The placement pattern can be reversed (boolean) and shifted (integer)., Quadrilateral Pattern From Grid - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels. The placement pattern can be reversed (boolean) and shifted (integer)., Shift Placement And Reverse - Shifts (integer) and reverses (bool) a given list, Triangular Pattern (Flat, Diagonal) From Grid - Creates groups of points from a list of UVs or XYZs for the placement of triangular panels. The placement pattern can be reversed (boolean) and shifted (integer)., Triangular Pattern (Flat, Mirrored) From Grid - Creates groups of points from a list of UVs or XYZs for the placement of triangular panels. The placement pattern can be reversed (boolean) and shifted (integer)., Triangular Subpattern - Subcomponent of the Triangular Pattern From Grid node.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:03:27.428Z",
          "full_dependency_versions": [ "0.2.2", "0.1.1", "0.1.7", "0.1.8", "0.1.1", "0.1.5", "0.1.4", "0.2.0", "0.1.3", "0.1.0", "2014.6.5" ],
          "full_dependency_ids": [
            {
              "name": "Simple Patterning",
              "_id": "52adf18e9de41c823500005e"
            },
            {
              "name": "Swap UV",
              "_id": "53aa75550e5572016a000116"
            },
            {
              "name": "Drop Last Row & Column From UV Field",
              "_id": "521d8938e2f476ca05000047"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "UV Components",
              "_id": "534763b40e5572016a000017"
            },
            {
              "name": "Is Odd Number",
              "_id": "5246ff8a30e55dc52b000033"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "0.1.1", "0.1.7", "0.1.1", "2014.6.5", "0.2.0", "0.1.5", "0.1.8", "0.1.3" ],
          "direct_dependency_ids": [
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            },
            {
              "name": "Drop Last Row & Column From UV Field",
              "_id": "521d8938e2f476ca05000047"
            },
            {
              "name": "Swap UV",
              "_id": "53aa75550e5572016a000116"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "UV Components",
              "_id": "534763b40e5572016a000017"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "Is Odd Number",
              "_id": "5246ff8a30e55dc52b000033"
            }
          ],
          "change_log": "",
          "version": "0.2.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:03:27.428Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 179,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "pattern", "uv", "xyz", "grid", "quadrilateral", "alternating", "rows", "checkerboard", "triangular", "flat", "diagonal", "diagrid", "tesselation" ],
      "white_list": false
    },
    {
      "_id": "52aecaa09de41c8235000065",
      "name": "Subcategory Stuff",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4a04398e-6e47-4918-93cb-c3fdbc8dbc9egregPkg476.zip",
          "contents": "Create New Subcategory - Creates a new subcategory for a given element category (unless a subcategory of that name already exists - in that case it returns the existing subcategory), Select Subcategory By Name - Selects a subcategory for a given element category by name, Set Element Subcategory - Assigns the given element(s) to the specified subcategory (0 for Cut, 1 for Projection).",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:09:37.489Z",
          "full_dependency_versions": [ "0.1.3", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Subcategory Stuff",
              "_id": "52aecaa09de41c8235000065"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:09:37.489Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 54,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "subcategory", "set", "select", "create" ],
      "white_list": false
    },
    {
      "_id": "5246e8de30e55dc52b000027",
      "name": "Sublist Helpers",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/440e8984-66b7-4589-a349-9ca1c447429bgregPkg123.zip",
          "contents": "Build Irregular Sublists - Turns a list into a list of lists with sublists of varying lengths., Fill Sublists - Repeats a list of items into sublists of given lengths, Filter Sublists By Length - Filters out all sublists that do not have the specified length, Find In Sublists - Looks for an item in each sublist of a given list and returns true/false for each sublist., Get Sublist Lengths - Gets the lengths of all sublists in a given list of lists.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:10:33.179Z",
          "full_dependency_versions": [ "0.1.9", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Sublist Helpers",
              "_id": "5246e8de30e55dc52b000027"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            }
          ],
          "direct_dependency_versions": [ "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            }
          ],
          "change_log": "",
          "version": "0.1.9",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:10:33.179Z",
      "num_versions": 9,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1375,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Equal List Lengths",
          "_id": "52a943ec9de41c8235000054"
        },
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        },
        {
          "name": "Count True And False",
          "_id": "52ad7ab39de41c8235000059"
        },
        {
          "name": "Filter List By Booleans",
          "_id": "522ce04c4b31fa536a00001c"
        },
        {
          "name": "Regular Expressions",
          "_id": "528cf98a3f7315936f000074"
        },
        {
          "name": "Revit API Helpers",
          "_id": "52d3f1219f852b166e000015"
        },
        {
          "name": "Phasing Stuff",
          "_id": "52e21705bfe425953600001a"
        },
        {
          "name": "List-Sublist Length",
          "_id": "53597c620e5572016a000028"
        },
        {
          "name": "Ensure List is Sublist",
          "_id": "53597cf60e5572016a00002c"
        },
        {
          "name": "Flatten if Sublist",
          "_id": "535a9c7d0e5572016a000030"
        },
        {
          "name": "Create Placeholder Sheets",
          "_id": "536074a70e5572016a000039"
        },
        {
          "name": "CSV To List",
          "_id": "537087380e5572016a000056"
        },
        {
          "name": "Parse Solar Radiation CSV",
          "_id": "521cfcb8e2f476ca05000041"
        },
        {
          "name": "Simple Patterning",
          "_id": "52adf18e9de41c823500005e"
        }
      ],
      "num_dependents": 14,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "list", "sublist", "get", "length", "fill", "repeat", "build", "irregular", "varying", "find", "in", "filter" ],
      "white_list": false
    },
    {
      "_id": "5278a56d3f7315936f00004a",
      "name": "Topo Stuff",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1364dc39-d67c-4346-a5ba-187c774789c4gregPkg845.zip",
          "contents": "Filter For Topo Subregions - Filters out everything that is *not* a topo subregion. Needs Revit 2014 or newer to work., Topo To Mesh - Extracts the mesh of a toposurface, Topo-Plane Intersection - Calculates the intersection of a toposurface and a plane",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:14:04.932Z",
          "full_dependency_versions": [ "0.2.5", "0.1.5", "0.1.1", "0.1.2", "0.2.1", "0.1.0", "0.1.1", "0.1.2", "0.2.1" ],
          "full_dependency_ids": [
            {
              "name": "Topo Stuff",
              "_id": "5278a56d3f7315936f00004a"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "XYZ Axis From Vector",
              "_id": "5386fa8e0e5572016a0000ca"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Lines Through Points (Closed Loop)",
              "_id": "52c4403c9de41c823500008e"
            },
            {
              "name": "Type Name",
              "_id": "52793a753f7315936f000055"
            },
            {
              "name": "Plane Properties",
              "_id": "53831d590e5572016a000086"
            },
            {
              "name": "Get Third XYZ Axis",
              "_id": "53873b790e5572016a0000ce"
            },
            {
              "name": "Mesh Stuff",
              "_id": "5381c3550e5572016a000081"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.0", "0.1.2", "0.2.1", "0.1.2", "0.1.1", "0.1.1", "0.2.1" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Type Name",
              "_id": "52793a753f7315936f000055"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Mesh Stuff",
              "_id": "5381c3550e5572016a000081"
            },
            {
              "name": "Get Third XYZ Axis",
              "_id": "53873b790e5572016a0000ce"
            },
            {
              "name": "XYZ Axis From Vector",
              "_id": "5386fa8e0e5572016a0000ca"
            },
            {
              "name": "Plane Properties",
              "_id": "53831d590e5572016a000086"
            },
            {
              "name": "Lines Through Points (Closed Loop)",
              "_id": "52c4403c9de41c823500008e"
            }
          ],
          "change_log": "",
          "version": "0.2.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:14:04.932Z",
      "num_versions": 12,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 229,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "toposurface", "topography", "siteregion", "subregion", "site", "filter", "points", "xyz", "mesh", "plane", "intersection" ],
      "white_list": false
    },
    {
      "_id": "5322a7d3bfe42595360000d7",
      "name": "Transform Curve Loop",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6c47a4bd-b79e-4ced-8933-da4cc8347767gregPkg561.zip",
          "contents": "Transform Curve Loop - Returns the curve loop transformed by the transform",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:14:35.690Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Transform Curve Loop",
              "_id": "5322a7d3bfe42595360000d7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:14:35.69Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 60,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "transform", "curve", "loop" ],
      "white_list": false
    },
    {
      "_id": "52c65b7d04db8f7361000004",
      "name": "View Stuff",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f021d7c8-04b1-4e4c-a178-56213ee08b28gregPkg781.zip",
          "contents": "Category Is Visible In View - Checks if a given category is visible in a given view, Duplicate View - Duplicates a given view. Duplication options: 0 = Duplicate, 1 = Duplicate with Detailing, 2 = Duplicate as Dependent View. Probably needs to be used in conjunction with a Transaction node., Filter Views By Detail Level - Filters a list of views by their respective detail levels., Filter Views By Type - Filters a list of views by their respective types., Get Underlay From Plan View - Returns the view template assigned to a given view (if one is assigned), Get View Scale - Returns the scale of a given view, Get View Template From View - Returns the view template assigned to a given view (if one is assigned), Get Views On Sheet - Returns all views placed on a specified sheet, Is View Template - Checks if a given view is a view template, Resize View Crop Box - Resizes the bounding box of a given Revit element by the specified amount in X, Y and Z direction. May need to be used in conjunction with a Transaction node., View Uses View Filters - Checks if a given view has any view filters applied to it.",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:39:12.227Z",
          "full_dependency_versions": [ "0.4.1", "0.1.5", "0.1.2", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "View Stuff",
              "_id": "52c65b7d04db8f7361000004"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.5", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Elements From & To IDs",
              "_id": "5246f07f30e55dc52b00002f"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.4.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:39:12.227Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 269,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "view", "template", "sheet", "filter", "visible", "visibility", "underlay", "scale", "detail", "level", "resize", "crop", "box", "duplicate" ],
      "white_list": false
    },
    {
      "_id": "51fb8588e2f476ca0500001d",
      "name": "XYZ Grid From Face",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d93485cb-572c-4cfd-9201-d71b0c14dbc9gregPkg63.zip",
          "contents": "UV And XYZ Grid From Face - Returns UV coordinates, XYZ coordinates and normals for a face with UV subdivision",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-21T18:49:58.945Z",
          "full_dependency_versions": [ "0.1.6" ],
          "full_dependency_ids": [
            {
              "name": "XYZ Grid From Face",
              "_id": "51fb8588e2f476ca0500001d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:49:58.945Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 619,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Weave",
          "_id": "52fd75dbbfe4259536000072"
        },
        {
          "name": "Weave by Surface",
          "_id": "52ff017abfe4259536000077"
        },
        {
          "name": "Weave By Surface",
          "_id": "52ff03fcbfe4259536000079"
        }
      ],
      "num_dependents": 3,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "face", "uv", "grid", "xyz", "normals" ],
      "white_list": false
    },
    {
      "_id": "522f6e358f1189e274000004",
      "name": "Angle Bisector",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f690bb45-78ec-4c7b-9683-1fdb52a4e485gregPkg393.zip",
          "contents": "AngleBisector.ByPoints - Retrieves the vector of an angle bisector at point B based on three points (A, B, C) that define the angle. ",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-21T18:57:53.866Z",
          "full_dependency_versions": [ "0.71.1" ],
          "full_dependency_ids": [
            {
              "name": "Angle Bisector",
              "_id": "522f6e358f1189e274000004"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T18:57:53.866Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 4,
      "downloads": 210,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Solve Triangle By XYZs",
          "_id": "52f098e2bfe425953600004d"
        },
        {
          "name": "Altitude And Azimuth From Vector",
          "_id": "532af328bfe42595360000e1"
        }
      ],
      "num_dependents": 2,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "angle", "bisector", "vector", "xyz" ],
      "white_list": false
    },
    {
      "_id": "51fa7983e2f476ca05000010",
      "name": "Custom Rounding",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d6bfdd9c-621c-4048-b8ff-37619ffb9220gregPkg125.zip",
          "contents": "Round Down To Precision - Rounds a number *down* to a specified precision, Round To Precision - Rounds a number to a specified precision, Round Up To Precision - Rounds a number *up* to a specified precision",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-21T19:03:24.488Z",
          "full_dependency_versions": [ "0.71.2" ],
          "full_dependency_ids": [
            {
              "name": "Custom Rounding",
              "_id": "51fa7983e2f476ca05000010"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T19:03:24.488Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 216,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "round", "up", "down", "floor", "ceiling" ],
      "white_list": false
    },
    {
      "_id": "51ff5a32e2f476ca05000025",
      "name": "Dispatch",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/214accd0-c232-4c7b-aa32-0d4b38d18155gregPkg529.zip",
          "contents": "Dispatch - Dispatches a value to one of two output ports (true/false) depending on a condition. The other output  port will return an empty list.",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-21T19:03:54.528Z",
          "full_dependency_versions": [ "0.71.1" ],
          "full_dependency_ids": [
            {
              "name": "Dispatch",
              "_id": "51ff5a32e2f476ca05000025"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T19:03:54.528Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 160,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "dispatch", "if", "condition", "true", "false" ],
      "white_list": false
    },
    {
      "_id": "53c77d3f0e5572016a00013a",
      "name": "Increment Or Decrement By 1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/445ee1e6-d7f6-48ab-be72-c03263731052gregPkg51.zip",
          "contents": "+1 - Increments a value by 1, -1 - Decrements a value by 1",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-21T19:04:33.044Z",
          "full_dependency_versions": [ "0.71.2" ],
          "full_dependency_ids": [
            {
              "name": "Increment Or Decrement By 1",
              "_id": "53c77d3f0e5572016a00013a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T19:04:33.044Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 512,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "CSV To List",
          "_id": "537087380e5572016a000056"
        },
        {
          "name": "Get Current Revit Document Path",
          "_id": "537082900e5572016a000054"
        },
        {
          "name": "Get Directory From File Path",
          "_id": "537080aa0e5572016a000052"
        },
        {
          "name": "Intersects For Divided Surfaces",
          "_id": "52a6db889de41c823500004f"
        },
        {
          "name": "Invert And Mirror Normalized Values",
          "_id": "521d7f5ae2f476ca05000043"
        },
        {
          "name": "Parse Solar Radiation CSV",
          "_id": "521cfcb8e2f476ca05000041"
        },
        {
          "name": "Simple Patterning",
          "_id": "52adf18e9de41c823500005e"
        }
      ],
      "num_dependents": 7,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "increment", "decrement", "+1", "-1" ],
      "white_list": false
    },
    {
      "_id": "523a224430e55dc52b000008",
      "name": "Normalization",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/07c39dcb-f537-4005-9d52-df3a91ca927fgregPkg959.zip",
          "contents": "Invert Normalized Value - Inverts a value between 0 and 1 or a boolean to its opposite (1-x), Normalize Value - Converts a value into a normalized value according to a value range, Normalized Sequence by Function - Creates a sequence of N values between 0 and 1 driven by a function, Normalized Sequence - Creates a sequence of N values between 0 and 1, Scale Normalized Value - Scales a normalized value according to a given minimum and maximum",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-21T19:05:23.058Z",
          "full_dependency_versions": [ "0.71.2" ],
          "full_dependency_ids": [
            {
              "name": "Normalization",
              "_id": "523a224430e55dc52b000008"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T19:05:23.058Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 550,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Invert And Mirror Normalized Values",
          "_id": "521d7f5ae2f476ca05000043"
        },
        {
          "name": "Parse Solar Radiation CSV",
          "_id": "521cfcb8e2f476ca05000041"
        },
        {
          "name": "List Not Empty",
          "_id": "528df0219de41c8235000009"
        },
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        },
        {
          "name": "Intersects For Divided Surfaces",
          "_id": "52a6db889de41c823500004f"
        },
        {
          "name": "Revit API Helpers",
          "_id": "52d3f1219f852b166e000015"
        },
        {
          "name": "Count Sequences Of True Or False",
          "_id": "53cfc6e00e5572016a000167"
        }
      ],
      "num_dependents": 7,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "normalize", "value", "sequence", "invert", "scale", "1-x" ],
      "white_list": false
    },
    {
      "_id": "5226d7fee2f476ca05000065",
      "name": "Pythagorean Theorem",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7ee94ff0-63da-485d-82e8-7f9e3b52d811gregPkg183.zip",
          "contents": "Cathetus.ByPythagoras - Computes the length of one of the catheti / legs of a right triangle using the Pythagorean Theorem. B is the other leg / cathetus of the triangle while C is the hypotenuse., Hypotenuse.ByPythagoras - Computes the length of the hypotenuse of a right triangle using the Pythagorean Theorem. A and B are the legs / catheti of the triangle.",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-21T19:05:57.381Z",
          "full_dependency_versions": [ "0.71.1" ],
          "full_dependency_ids": [
            {
              "name": "Pythagorean Theorem",
              "_id": "5226d7fee2f476ca05000065"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T19:05:57.381Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 80,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "pythagoras", "pythagorean", "theorem", "right", "triangle", "hypotenuse", "cathetus", "leg" ],
      "white_list": false
    },
    {
      "_id": "521cf0d9e2f476ca0500003d",
      "name": "Similar",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a770e09b-faa1-46b1-8e76-9ec2eafa4743gregPkg694.zip",
          "contents": "Similar - Computes the difference between two values and whether that difference is within a given tolerance percentage",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-21T19:09:11.611Z",
          "full_dependency_versions": [ "0.71.1" ],
          "full_dependency_ids": [
            {
              "name": "Similar",
              "_id": "521cf0d9e2f476ca0500003d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T19:09:11.611Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 67,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "similar", "difference", "tolerance" ],
      "white_list": false
    },
    {
      "_id": "52b162fb9de41c823500006c",
      "name": "Standard Colours",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ca4df969-53de-48d6-83ba-d3425fd950ecgregPkg802.zip",
          "contents": "Aqua - Returns the colour aqua., Black - Returns the colour black., Blue - Returns the colour blue., Fuchsia - Returns the colour fuchsia a.k.a. magenta., Green - Returns the colour green., Grey - Returns the colour grey., Lime - Returns the colour lime., Maroon - Returns the colour maroon., Navy - Returns the colour navy., Olive - Returns the colour olive., Purple - Returns the colour purple., Red - Returns the colour red., Silver - Returns the colour silver., Teal - Returns the colour teal., White - Returns the colour white., Yellow - Returns the colour yellow.",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-21T19:09:41.352Z",
          "full_dependency_versions": [ "0.71.1" ],
          "full_dependency_ids": [
            {
              "name": "Standard Colours",
              "_id": "52b162fb9de41c823500006c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T19:09:41.352Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 247,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "FAR Color Overrides",
          "_id": "535eb4340e5572016a000037"
        }
      ],
      "num_dependents": 1,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "colour", "color" ],
      "white_list": false
    },
    {
      "_id": "5201e0a8e2f476ca05000029",
      "name": "Standard Normals",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/307066d0-95b0-4fa4-8dd0-e0827c970d4agregPkg173.zip",
          "contents": "Vector.XAxis (Negative) - Returns an XYZ of -1,0,0, Vector.YAxis (Negative) - Returns an XYZ of 0,-1,0, Vector.ZAxis (Negative) - Returns an XYZ of 0,0,-1",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-21T19:09:55.223Z",
          "full_dependency_versions": [ "0.71.2" ],
          "full_dependency_ids": [
            {
              "name": "Standard Normals",
              "_id": "5201e0a8e2f476ca05000029"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T19:09:55.223Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 220,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Get Plane U And V Vectors",
          "_id": "523e879030e55dc52b00001a"
        },
        {
          "name": "Get Normal By U And V Vectors",
          "_id": "52a08e5d9de41c8235000042"
        },
        {
          "name": "Intersects For Divided Surfaces",
          "_id": "52a6db889de41c823500004f"
        },
        {
          "name": "Move XYZ From Plane To Plane",
          "_id": "522ca5244b31fa536a000012"
        },
        {
          "name": "Buckyball",
          "_id": "53032162bfe4259536000087"
        },
        {
          "name": "Altitude And Azimuth From Vector",
          "_id": "532af328bfe42595360000e1"
        }
      ],
      "num_dependents": 6,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "normal", "zero", "0" ],
      "white_list": false
    },
    {
      "_id": "522cc70f4b31fa536a000014",
      "name": "Turn Into List",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/017e54ab-ccfa-40e8-892e-0ca485fe24e4gregPkg306.zip",
          "contents": "Turn Into List - Turns an element (or a nested list) into a flat list",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-21T19:10:39.351Z",
          "full_dependency_versions": [ "0.71.4" ],
          "full_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.71.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-21T19:10:39.351Z",
      "num_versions": 10,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 15457,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "XYZs From Adaptive Component",
          "_id": "522cd0794b31fa536a000016"
        },
        {
          "name": "Get Family Instances For Family Type",
          "_id": "522d408b4b31fa536a00001e"
        },
        {
          "name": "Elements From & To IDs",
          "_id": "5246f07f30e55dc52b00002f"
        },
        {
          "name": "Remove Duplicates From List",
          "_id": "5246f1d430e55dc52b000031"
        },
        {
          "name": "Topo Stuff",
          "_id": "5278a56d3f7315936f00004a"
        },
        {
          "name": "Regular Expressions",
          "_id": "528cf98a3f7315936f000074"
        },
        {
          "name": "Select By Category",
          "_id": "528d025a3f7315936f000076"
        },
        {
          "name": "Wall Stuff",
          "_id": "5299e0fd9de41c823500001b"
        },
        {
          "name": "Roof Stuff",
          "_id": "529afa5f9de41c823500001e"
        },
        {
          "name": "Get And Set Family Type",
          "_id": "529c69119de41c823500002c"
        },
        {
          "name": "Foundation Stuff",
          "_id": "529c8bc29de41c8235000036"
        },
        {
          "name": "Accumulate List",
          "_id": "52a143f89de41c8235000044"
        },
        {
          "name": "Intersects For Divided Surfaces",
          "_id": "52a6db889de41c823500004f"
        },
        {
          "name": "Hosted Object Stuff",
          "_id": "52ade6049de41c823500005c"
        },
        {
          "name": "Subcategory Stuff",
          "_id": "52aecaa09de41c8235000065"
        },
        {
          "name": "Sequence With Leading Zeros",
          "_id": "52b154a49de41c823500006a"
        },
        {
          "name": "True And False For Any And All (Boolean)",
          "_id": "529b0b779de41c8235000023"
        },
        {
          "name": "Get And Set Name",
          "_id": "52b2d8659de41c823500006f"
        },
        {
          "name": "Roof And Floor Stuff",
          "_id": "52b2e59a9de41c8235000072"
        },
        {
          "name": "Parameter Exists",
          "_id": "52b327389de41c8235000078"
        },
        {
          "name": "View Stuff",
          "_id": "52c65b7d04db8f7361000004"
        },
        {
          "name": "Replace Substring",
          "_id": "52d26e2b9f852b166e000012"
        },
        {
          "name": "Revit API Helpers",
          "_id": "52d3f1219f852b166e000015"
        },
        {
          "name": "Phasing Stuff",
          "_id": "52e21705bfe425953600001a"
        },
        {
          "name": "Room Stuff",
          "_id": "52e217e8bfe425953600001c"
        },
        {
          "name": "Filter List By Booleans",
          "_id": "522ce04c4b31fa536a00001c"
        },
        {
          "name": "Is Related To Mass",
          "_id": "52f06eb7bfe4259536000049"
        },
        {
          "name": "Switch",
          "_id": "52f51549bfe4259536000061"
        },
        {
          "name": "Get Element Location",
          "_id": "5300622abfe4259536000084"
        },
        {
          "name": "Vector Is In Plane",
          "_id": "53074571bfe425953600009e"
        },
        {
          "name": "Plane-Vector Intersection",
          "_id": "52ca73b49f852b166e000004"
        },
        {
          "name": "Almost Zero",
          "_id": "52c7ff3004db8f7361000007"
        },
        {
          "name": "Get Element By Face",
          "_id": "53083536bfe42595360000a4"
        },
        {
          "name": "Get Bounding Box",
          "_id": "53083642bfe42595360000a6"
        },
        {
          "name": "Get Faces From Solid",
          "_id": "530837c1bfe42595360000a8"
        },
        {
          "name": "Plane From Planar Face",
          "_id": "530838c1bfe42595360000aa"
        },
        {
          "name": "Central Projection On Face",
          "_id": "53083bd6bfe42595360000ac"
        },
        {
          "name": "Material Stuff",
          "_id": "5322abdabfe42595360000d9"
        },
        {
          "name": "Altitude And Azimuth From Vector",
          "_id": "532af328bfe42595360000e1"
        },
        {
          "name": "Get Wall",
          "_id": "53340537bfe42595360000ee"
        },
        {
          "name": "Curve Array",
          "_id": "5335aecfbfe42595360000f0"
        },
        {
          "name": "Create Unplaced Room at Phase",
          "_id": "53391848bfe42595360000f5"
        },
        {
          "name": "Parse Solar Radiation CSV",
          "_id": "521cfcb8e2f476ca05000041"
        },
        {
          "name": "Filter Selection by Family Type",
          "_id": "533dec780e5572016a000004"
        },
        {
          "name": "Family To Type And Back",
          "_id": "533e47150e5572016a000006"
        },
        {
          "name": "UV Components",
          "_id": "534763b40e5572016a000017"
        },
        {
          "name": "JBE sheet views",
          "_id": "53574ab60e5572016a000026"
        },
        {
          "name": "Convex Hull 2D",
          "_id": "535b301a0e5572016a000033"
        },
        {
          "name": "Purge Line Pattern",
          "_id": "535e302e0e5572016a000035"
        },
        {
          "name": "Create Placeholder Sheets",
          "_id": "536074a70e5572016a000039"
        },
        {
          "name": "Eraser by Name",
          "_id": "536e51150e5572016a00004e"
        },
        {
          "name": "Override Element in View",
          "_id": "536fda510e5572016a000050"
        },
        {
          "name": "Place Groups at XYZ",
          "_id": "537749570e5572016a000062"
        },
        {
          "name": "Get Items At Indicies",
          "_id": "5377a6a00e5572016a000065"
        },
        {
          "name": "List BuiltInParameterGroup",
          "_id": "537b217d0e5572016a000071"
        },
        {
          "name": "Is Point Inside Polygon",
          "_id": "537df4fb0e5572016a00007c"
        },
        {
          "name": "Compute Centroid",
          "_id": "538086010e5572016a00007e"
        },
        {
          "name": "Mesh Stuff",
          "_id": "5381c3550e5572016a000081"
        },
        {
          "name": "Plane Properties",
          "_id": "53831d590e5572016a000086"
        },
        {
          "name": "Plane By Reference Or Sketch Plane",
          "_id": "53873af40e5572016a0000cc"
        },
        {
          "name": "Central Projection On Plane",
          "_id": "5306fa4dbfe425953600009a"
        },
        {
          "name": "Physical Beam to Analytical",
          "_id": "538e2c920e5572016a0000f6"
        },
        {
          "name": "Remove List Intersection",
          "_id": "538ed1e50e5572016a0000f8"
        },
        {
          "name": "Create Room Level_UV",
          "_id": "533914c8bfe42595360000f3"
        },
        {
          "name": "Select by Bounding Box",
          "_id": "539b18360e5572016a000109"
        },
        {
          "name": "Highlight Elements in view",
          "_id": "53a582060e5572016a00010c"
        },
        {
          "name": "Is Empty",
          "_id": "53aa4eed0e5572016a000113"
        },
        {
          "name": "Swap UV",
          "_id": "53aa75550e5572016a000116"
        },
        {
          "name": "Simple Patterning",
          "_id": "52adf18e9de41c823500005e"
        },
        {
          "name": "Count Sequences Of True Or False",
          "_id": "53cfc6e00e5572016a000167"
        },
        {
          "name": "Recursive Boolean Difference",
          "_id": "53cfc7920e5572016a000169"
        },
        {
          "name": "Eraser by name",
          "_id": "54062c540e5572016a0001b2"
        },
        {
          "name": "Has Out-Of-Plane XYZs",
          "_id": "522c99e44b31fa536a000010"
        },
        {
          "name": "Mirror Element Using Origin and Normal Vector",
          "_id": "554b3a30a8367b9861000077"
        },
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "Elements in View(s)",
          "_id": "555f12f5a8367b98610000c0"
        },
        {
          "name": "Rudy'sRevit",
          "_id": "560aaaf1662bf0e908000209"
        },
        {
          "name": "QRCoder",
          "_id": "568e3ce15c568ad00c000096"
        },
        {
          "name": "OblomovNode",
          "_id": "568277405c568ad00c00006a"
        },
        {
          "name": "Level.CreateWithSelctionSet",
          "_id": "56c5e687c3e9ee4a08000119"
        },
        {
          "name": "JTHWAX",
          "_id": "56cd500bc3e9ee4a0800013e"
        },
        {
          "name": "GuDYNCat Scripts",
          "_id": "56fc70615bee3e21380000bc"
        },
        {
          "name": "Names Values Sum",
          "_id": "571b06d7305bec4d3c00001d"
        },
        {
          "name": "Silman Custom Nodes - alpha",
          "_id": "56bb8efdc3e9ee4a080000e2"
        }
      ],
      "num_dependents": 84,
      "description": "DEPRECATED - Moved to package Clockwork",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "element", "list" ],
      "white_list": false
    },
    {
      "_id": "5448a161cc26bfdc5a0000e4",
      "name": "NodeForTesting",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0c2ef639-b968-4dc9-a047-b54f0cc7be6fgregPkg927.zip",
          "contents": "NodeForTesting - We can delete this Custom Node, this is just for Testing.",
          "engine_metadata": "",
          "engine_version": "0.7.3.2950",
          "created": "2014-10-23T06:34:09.357Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "NodeForTesting",
              "_id": "5448a161cc26bfdc5a0000e4"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-23T06:34:09.357Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 21,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Testing",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "We can delete this Custom Node, this is just for Testing.",
      "maintainers": [
        {
          "username": "critesh",
          "_id": "530da612bfe42595360000b0"
        }
      ],
      "keywords": [ "testing" ],
      "white_list": false
    },
    {
      "_id": "5448b1cfcc26bfdc5a0000e7",
      "name": "Create Column Pairs",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3e12c657-4be7-433f-9c71-989b05efe392gregPkg535.zip",
          "contents": "Create Column Pairs - No description provided",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2014-10-23T07:44:15.094Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Create Column Pairs",
              "_id": "5448b1cfcc26bfdc5a0000e7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-23T07:44:15.094Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 65,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create Column Pairs",
      "maintainers": [
        {
          "username": "henry.hamamji",
          "_id": "5448b1c8cc26bfdc5a0000e6"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "542d2402cc26bfdc5a00003f",
      "name": "GetClashIds",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d203ccf3-a965-45df-9a5b-389d69376fc5gregPkg448.zip",
          "contents": "GetClashIds - Get Navisworks Object Clashing Element ID's",
          "engine_metadata": "",
          "engine_version": "0.7.2.2921",
          "created": "2014-10-24T01:39:02.957Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "GetClashIds",
              "_id": "542d2402cc26bfdc5a00003f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-24T01:39:02.957Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 586,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Navisworks",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Get Navisworks Object Clashing Element ID's (Requires Dynaworks15)",
      "maintainers": [
        {
          "username": "Gytaco",
          "_id": "542d2401cc26bfdc5a00003e"
        }
      ],
      "keywords": [ "navisworks", "dynaworks", "clashes" ],
      "white_list": false
    },
    {
      "_id": "544730fdcc26bfdc5a0000db",
      "name": "Clockwork for Dynamo 0.6.3",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/92f96b8e-d8d6-43e7-b496-998109c9827bgregPkg63.zip",
          "contents": "+1 - Increments a value by 1, -1 - Decrements a value by 1, Accumulate List - Accumulates the values of a given list and returns a list of the accumulated values, Add Intersect To Divided Surface - Adds an intersect to a divided surface, Almost Zero - Returns a feasable computational tolerance to zero (1.0e-9 or a billionth of 1) for use in calculations. More background info: https://github.com/ikeough/Dynamo/issues/879, Alphabetical Sequence - Creates a list of the first N letters of the alphabet  (where 1 = A, 2 = B, ... , 27 = AA, 28 = AB etc.)., Altitude And Azimuth From Vector - Computes the altitude and azimuth of a given vector, Angle Between Vectors - Computes the angle between two vectors, Angle Bisector - Retrieves the vector of an angle bisector at point B based on three points (A, B, C) that define the angle. , Angle By Angle Sum - Computes the missing interior angle of a *planar* polygon based on a given list of all other interior angles. , Angle By Law Of Cosines - Computes an angle of a triangle using the law of cosines. A is the opposite side of the triangle while B and C are the sides forming the angle., Angle By Law Of Sines - Determines the angle of a triangle based on the law of sines. (Alpha is the angle opposite side A and beta is the angle opposite side B...), Aqua - Returns the colour aqua., Binary To Decimal - Converts a list of binary (boolean) values into a decimal value, Black - Returns the colour black., Blue - Returns the colour blue., Buckyball Coordinates - Returns the coordinates of all the vertices of an (unscaled) truncated icosahedron., Buckyball - Returns all the data necessary for modeling a truncated icosahedron (vertices and struts) as well as the surface area and volume. Radius and origin of the object can be specified., Build Irregular Sublists - Turns a list into a list of lists with sublists of varying lengths., Build Path Graph - Builds a path graph (Python dictionary) from a list of value pairs., Build Triangular Sublists - Creates sublists of three items each from a list based on given indices, shift and reverse settings and offset., Category Is Visible In View - Checks if a given category is visible in a given view, Cathetus By Pythagoras - Computes the length of one of the catheti / legs of a right triangle using the Pythagorean Theorem. B is the other leg / cathetus of the triangle while C is the hypotenuse., Centimeters To Feet - Converts centimeters into feet, Central Projection On Face - Projects a list of points onto a given face, Central Projection On Plane - Projects a list of points onto a given plane, Combine List With Nested List - Works like the built-in Combine node, but for functions that would expect a single element as the first input and a list as the second input., Combine Two Nested Lists - In some cases I have found the built-in Combine node to struggle with nested lists. In cases like these, this node should do the trick., Compound Structure Has Variable Layer - Checks if the compound structure of a given floor or roof instance contains a variable layer., Convex Hull 2D - Computes the convex hull of a given set of UV coordinates based on the monotone chain algorithm, Correct Normal Orientation - Inverts normal A if its inversion is closer to normal B, Count Sequences Of True Or False - Retrieves the lengths of uninterrupted sequences of booleans (true or false) in a given list., Count True And False - Counts the occurences of True and False in a list of booleans, Create New Subcategory - Creates a new subcategory for a given element category (unless a subcategory of that name already exists - in that case it returns the existing subcategory), Create Placeholder Sheets - Creates placeholder sheets, Create Text Note - Creates a text note at a given location, CSV To List - Converts the content of a given CSV file to a list, Cubic Feet To Cubic Meters - Converts cubic feet into cubic meters, Cubic Meters To Cubic Feet - Converts cubic meters into cubic feet, Curve Array - Creates a curve array from a list of curves, Degrees To Radians - Converts degrees into radians, Dispatch - Dispatches a value to one of two output ports (true/false) depending on a condition. The other output  port will return an empty list., Distance From Point Sequence - Retrieves the accumulated distances of a sequence of points, Door Sequence From Room Sequence - Retrieves a sequence of doors connecting a given sequence of rooms (if possible), Drop Last Row And Column From UV Field - Drops the last row and column from a UV field, Duplicate View - Duplicates a given view. Duplication options: 0 = Duplicate, 1 = Duplicate with Detailing, 2 = Duplicate as Dependent View. Probably needs to be used in conjunction with a Transaction node., Element Has Transparent Materials - Checks if a given element contains transparent materials., Elements to IDs - Gets the ID(s) for a list of Revit elements (or a single element), Equal List Lengths - Trims all given lists to the length of the shortest list, Evaluate Divided Surface Grid Nodes - Returns UV and XYZ coordinates as well as surface normals for all grid nodes of a given divided surface. Also returns the underlying face and the UV count. PLEASE NOTE: Does not run in Revit version prior to 2014., Exterior Angle - Computes the exterior angle of a given angle., False For All (Boolean) - Returns true if all items in a list of booleans are false., False For Any (Boolean) - Returns true if any item in a list of booleans is false., Feet To Centimeters - Converts feet into centimeters, Feet To Meters - Converts feet into meters, Feet To Millimeters - Converts feet into millimeters, Fill Sublists - Repeats a list of items into sublists of given lengths, Filter For Topo Subregions - Filters out everything that is *not* a topo subregion. Needs Revit 2014 or newer to work., Filter List By Category - Filters out all elements that are not of a specified category, Filter List by Regular Expression Matches - Filters out all items from a list of strings that don't begin with the regular expression.  The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, Filter Roofs By Creation Method - Filters a list of roofs by their method of creation., Filter Roofs By Kind - Filters a list of roofs by their kind (basic or glazed)., Filter Structural Foundations By Kind - Filters a list of structural foundations by their kind (isolated, wall, slab)., Filter Sublists By Length - Filters out all sublists that do not have the specified length, Filter Views By Detail Level - Filters a list of views by their respective detail levels., Filter Views By Type - Filters a list of views by their respective types., Filter Wall Type By Kind - Separates a list of wall types into several lists according to wall kind, Filter Wall Types By Function - Separates a list of wall types into several lists according to wall function, Filter Walls By Creation Method - Filters a list of walls by their method of creation., Find All Paths - Finds all possible paths between two nodes.  The connections input expects a list of value pairs., Find In Sublists - Looks for an item in each sublist of a given list and returns true/false for each sublist., Find Shortest Path - Finds the shortest path (fewest steps) between two nodes. The connections input expects a list of value pairs., Footing Type Breaks At Inserts - Determines whether a list of wall footing types break at inserts in their attached walls, Fuchsia - Returns the colour fuchsia a.k.a. magenta., Get Area - Returns the area property of a given element (if that element has such a property), Get Bounding Box - Gets the bounding box of a Revit element, Get Buckyball Struts - Parses the vertices of an (unscaled) truncated icosahedron and returns a pair of XYZs for each strut., Get Current Revit Document Path - Gets the path and directory of the current Revit document, Get Curtain System Type - Retrieves the family type for a given curtain system instance., Get Dimension Style Type - Gets the style of a given Revit dimension type, Get Dimension Type - Gets the type of a given Revit dimension, Get Directory From File Path - Gets the directory from a given file path, Get Doors Or Windows From Room - Retrieves all doors or windows that are associated with a room (hosted in walls and roofs)., Get Element By Face - Returns the underlying Revit element of a given face, Get Element Location - Returns the location of an element as an XYZ (or if it's line-based the start and end point of the line), along with some booleans to help filtering the results. Use this for some element types (e.g. walls or lines) that do not work with the built-in Get Family Instance Location node. , Get Faces From Solid - Retrieves a list of faces from a given solid, Get Families By Category - Gets all famiies of a given category in the model  (does *not *work for system families), Get Family From Family Type - Retrieves the family of a given family type, Get Family Instances By Category And Name - Gets all family instances in the model for a given list of categories and a specified name. Use '*' as a wildcard., Get Family Instances By Category - Gets all family instances in the model for a given list of categories, Get Family Symbols By Category - Gets all family symbols of a given category in the model  (does *not *work for system families), Get Family Symbols From Family - Gets all family symbols of a given category in the model  (does *not *work for system families), Get Family Type - Returns the familyt type of a given family instance, Get First Four Indices - Gets the first four indices of a given list, Get First Three Indices - Gets the first three indices of a given list, Get Floor Type - Retrieves the floor type for a given floor instance, Get Footing Type - Retrieves the footing type for a given wall footing instance, Get Highest And Lowest From List - Gets the highest and lowest value from a given list, Get Host - Gets an element's host, Get Hosted Object Orientation - Gets the orientation of a hosted object (e.g. a window or a door - orientation always facing towards exterior), Get Inserts Of Room Boundaries By Category - Retrieves the inserts of the bounding elements of a given room - filtered by a given category., Get Inserts Of Room Boundaries - Retrieves the inserts of the bounding elements of a given room., Get Inserts - Gets all the objects inserted into a given element., Get Links And Imports - Gets all linked and imported files in the document, Get Material Properties - Retrieves a number of properties froma given material, Get Materials From Element - Retrieves all materials froma given element, Get Members - Gets a list of all members (properties and methods) of a selected element, Get Name - Gets the name of a given Revit element (if possible), Get Owner View - Gets the owner view of a given Revit element (if possible), Get Phase by Name - Returns the phase of a given name (if it exists), Get Phases - Gets the created and demolished phases of an element, Get Project Info - Gets the project information., Get Project Position - Gets the project's position data relative to XYZ.Zero. , Get Roof Type - Retrieves the roof type for  a given roof instance, Get Room Boundaries - Gets a list of all boundary elements of a given room, Get Source Element From Part - Retrieves the element a given part was made from, Get Sublist Lengths - Gets the lengths of all sublists in a given list of lists., Get Third XYZ Axis - Given two main XYZ axes (or vectors pointing more or less in thei general direction), this node will find the third axis., Get Underlay From Plan View - Returns the view template assigned to a given view (if one is assigned), Get View Scale - Returns the scale of a given view, Get View Template From View - Returns the view template assigned to a given view (if one is assigned), Get View-Dependent Family Instances By Category - Gets all view-dependent family instances in a given view for a given list of categories - useful for finding annotation elements, Get Views On Sheet - Returns all views placed on a specified sheet, Get Wall Orientation - Gets the orientation of a given wall instance (normal of the exterior face of the wall). Will *not* work for walls hosted on mass faces or in-place walls., Get Wall Type - Gets the wall type of a given wall instance. , Greatest Distance in Point Sequences - Retrieves the furthest point in a sequence of points, Green - Returns the colour green., Grey - Returns the colour grey., Group Elements By Host - Groups a list of Revit elements by their respective hosts (if they have any), Group List of Lists By Key - Groups a list of lists by one of its keys, Has Instances of Categories - Checks if family instances of specified categories are present in the model., Has Out-Of-Plane XYZs - Checks a list for XYZs that are not located on a given plane, Horizontal Intersects For Divided Surface by Endpoints and Function - Creates a number of horizontal intersects (levels)for a divided surface based on the path between two points. The spacing of the intersects can be controlled by a function., Horizontal Intersects For Divided Surface by Endpoints - Creates a number of equally spaced horizontal intersects for a divided surface based on the path between between two points. PLEASE NOTE: This node will currently (v 0.6.3) only work correctly if Dynamo project units are set to metric feet., Hypotenuse By Pythagoras - Computes the length of the hypotenuse of a right triangle using the Pythagorean Theorem. A and B are the legs / catheti of the triangle., IDs to Elements - Gets the Revit element(s) for a list of IDs (or a single ID), If Empty Replace With New Value - Replaces an <empty> item with a specified value.  Use with Map for lists, If X Equal - If X = Y as a mappable function, If X Greater Than Or Equal - If X >= Y as a mappable function, If X Greater Than - If X > Y as a mappable function, If X Less Than Or Equal - If X <= Y as a mappable function, If X Less Than - If X < Y as a mappable function, Invert And Mirror Normalized Values - Inverts and mirrors (horizontally & vertically) a list of normalized values., Invert Normalized Value - Inverts a value between 0 and 1 or a boolean to its opposite (1-x), Is Empty - Checks if the input items are <empty>, Is Even Number - Checks if a number is even., Is Multiple - Checks if A is a multiple of B., Is Odd Number - Checks if a number is odd., Is Of Category - Checks whether an element is of a specified category, Is Point In Room - Evaluates if an XYZ is located inside a given room., Is Point Inside Polygon - Determines if a point is inside the space enclosed by a polygon, Is Related To Mass - Returns true if an object (wall, roof, floor or curtain system) has been modelled by face and the underlying mass still exists in the project., Is View Template - Checks if a given view is a view template, LibG Vector Components - Gets the X, Y and Z of a LibG vector, Lime - Returns the colour lime., Lines Through Points (Closed Loop) - Works just like the built-in node Lines Through Points (creates a series of lines through a list of points) - except that it creates a *closed* loop of lines., List BuiltInCategories - List all the BuiltInCategories available, List BuiltInParameters - List all the BuiltInCategories available, List Not Empty - Just the inversion of the built-in Is Empty List node., List Phases - Lists all phases in the active document, Maroon - Returns the colour maroon., Match List With Key Values - Matches a list with a given set of keys and returns the values corresponding to the keys, Match Regular Expression - Determines if a regular expression matches a string (or a list of strings) and returns a boolean value (or a list, depending on the input). The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, Mesh From Face - Triangulates a given face into a mesh, Mesh-Plane Intersection - Calculates the intersection of a mesh and a plane, Meters To Feet - Converts meters into feet, Millimeters To Feet - Converts millimeters into feet, Move XYZ From Plane To Plane - Moves an XYZ from one plane to another, Navy - Returns the colour navy., Normalize Value - Converts a value into a normalized value according to a value range, Normalized Sequence by Function - Creates a sequence of N values between 0 and 1 driven by a function, Normalized Sequence - Creates a sequence of N values between 0 and 1, Number To Character - Converts a number into a character (where 1 = A, 2 = B, ... , 27 = AA, 28 = AB etc.)., Olive - Returns the colour olive., Only ToRoom OR FromRoom Is Set - Evaluates if a door or window has only set one of the ToRoom / FromRoom properties. This may help to determine whether a door/window is external., Opposite Side By Law Of Cosines - Computes the length of the missing side of a triangle using the law of cosines. Gamma is the angle between sides A and B., Parameter Exists - Checks if an element contains a parameter of a given name, Parse Solar Radiation CSV - Parses a Vasari solar radiation analysis CSV file and returns lists of absolute and normalized radiation values, their XYZ coordinates and their normals as well as the highest and lowest radiation value and a the total of all radiation samples, Plane By Reference Or Sketch Plane - Retrieves the plane of a reference or sketch plane., Plane From First 3 XYZs - Returns a plane, its origin and its normal based on the first three XYZs in a given list, Plane From Planar Face - Creates a plane from a planar face, Plane Properties - Returns the normal and origin of a given plane as well as its X and Y vectors., Plane-Vector Intersection - Finds the intersection point between a plane and a vector, Project Is Workshared - Returns true if the current project is workshared, Purple - Returns the colour purple., Quadrilateral Pattern (Alternating Rows) - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels in alternating rows. The placement pattern can be reversed (boolean) and shifted (integer)., Quadrilateral Pattern (Checkerboard) - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels in a checkerboard pattern. The placement pattern can be reversed (boolean) and shifted (integer)., Quadrilateral Pattern From Grid - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels. The placement pattern can be reversed (boolean) and shifted (integer)., Radians To Degrees - Converts radians into degrees, Recursive Boolean Difference - This node recursively applies the boolean difference node to a solid for each item in a given list of solids., Red - Returns the colour red., Reference Intersector By Category - Finds all elements of a specified category that intersect with a list of vectors, Remove Duplicate Revit Elements From List - Removes all duplicates of Revit elements from a given list. (Will also remove any other duplicates from a list...), Remove Duplicates From List - Removes duplicate items from a given list. Will *not* work for Revit elements!, Remove Duplicates UVs Or XYZs From List - Removes duplicate UVs or XYZs from a given list. May work for Revit Elements as well., Replace Substring - Replaces a specified part (substring) of a string by another string, Resize View Crop Box - Resizes the bounding box of a given Revit element by the specified amount in X, Y and Z direction. May need to be used in conjunction with a Transaction node., Return List Or Single Value - If the list in input #1 has only one item, only the first item of the list in input #2 will be returned., Revit App Version Info - Retrieves the name, version and build of the current Revit application., Room Is Unbounded - Checks whether a room is unbounded., Room Separators From Curves - Creates room separation lines from geometry curves. PLEASE NOTE: Might need a transaction node to work., Rooms From Doors And Windows - Gets the rooms that are connected by a given door or a window, Round Down To Precision - Rounds a number *down* to a specified precision, Round To Precision - Rounds a number to a specified precision, Round Up To Precision - Rounds a number *up* to a specified precision, Scale Normalized Value - Scales a normalized value according to a given minimum and maximum, Search In BuiltInCategories - Lets you search in Revit's built-in categories. Search is case-sensitive. Use * as a wildcard., Search In BuiltInParameters - Lets you search in Revit's built-in parameters. Search is case-sensitive. Use * as a wildcard., Search In Members - Lets you search in an element's members. Search is case-sensitive. Use * as a wildcard., Select Subcategory By Name - Selects a subcategory for a given element category by name, Sequence With Leading Zeros - Adds leading zeros to a sequence of numbers, Set Dimension Type - Changes the dimension type of a given dimension instance to the specified type, Set Element Subcategory - Assigns the given element(s) to the specified subcategory (0 for Cut, 1 for Projection)., Set Family Type - Changes the family type of a given famiyl instance to the specified type, Set Name - Gets the name of a given Revit element, Shift Placement And Reverse - Shifts (integer) and reverses (bool) a given list, Shortest Path From Point Sequences - Retrieves the shortest path from a number of point sequences, Side By Law Of Sines - Determines the length of a side based on the law of sines. (Alpha is the angle opposite side A and beta is the angle opposite side B...), Silver - Returns the colour silver., Similar - Computes the difference between two values and whether that difference is within a given tolerance percentage, Slab Shape By XYZs - Transform a slab shape based on a list of XYZs. PLEASE NOTE: Will reset any previous edits on the slab shape. May likely need to be used in conjunction with a Transaction node., Slab Shape Has Been Modified - Checks if the shape of a roof or floor slab has been modified with the shape editing tools, Solve Triangle By XYZs - Solves a triangle based on the XYZ coordinates of its vertices., Sort List Of Lists - Sorts a list of lists by one of its sublists, Square Feet To Square Meters - Converts square feet into square meters, Square Meters To Square Feet - Converts square meters into square feet, Swap UV - Swaps U and V coordinates, Switch - Emulates the Switch/Case statement that is  available in multiple programming languages., Teal - Returns the colour teal., Topo To Mesh - Extracts the mesh of a toposurface, Topo-Plane Intersection - Calculates the intersection of a toposurface and a plane, Transform Curve Loop - Returns the curve loop transformed by the transform, Triangles From Mesh - Retrieves all triangles from a mesh, Triangular Pattern (Flat, Diagonal) From Grid - Creates groups of points from a list of UVs or XYZs for the placement of triangular panels. The placement pattern can be reversed (boolean) and shifted (integer)., Triangular Pattern (Flat, Mirrored) From Grid - Creates groups of points from a list of UVs or XYZs for the placement of triangular panels. The placement pattern can be reversed (boolean) and shifted (integer)., Triangular Subpattern - Subcomponent of the Triangular Pattern From Grid node., True For All (Boolean) - Returns true if all items in a list of booleans are true., True For Any (Boolean) - Returns true if any item in a list of booleans is true., Turn Into List - Turns an element into a (flat) list, UV And XYZ Grid From Face - Returns UV coordinates, XYZ coordinates and normals for a face with UV subdivision, UV Components - Get the components of a UV, UV Or XYZ Is In List - Checks if a given UV or XYZ coordinate is present in a given list, Vector And Plane Are Parallel - Checks if a given vector is parallel to a given plane, Vector Is In Plane - Checks if a given vector is located on a given plane, Vector-Vector Intersection - Determines if two vectors intersect and returns the closest points of intersection on both vectors., Vectors Are Orthogonal - Checks if two vectors are orthogonal to each other, Vectors Are Parallel - Checks if two vectors are parallel to each other, Vertical Intersects for Divided Surface by Endpoints and Function - Creates a number of vertical intersects (reference planes) for a divided surface based on the path between between two points. The spacing can be controlled by a function., Vertical Intersects for Divided Surface by Endpoints - Creates a number of equally spaced vertical intersects for a divided surface based on the path between between two points, View Uses View Filters - Checks if a given view has any view filters applied to it., Wall Type Is Curtain Wall - Checks whether a given wall type is a curtain wall, White - Returns the colour white., X Axis (Negative) - Returns an XYZ of -1,0,0, XYZ Axis From Vector - Returns whichever main axis (X, Y or Z) is closest to a given vector, XYZ Is Out-Of-Plane - Checks a list for XYZs that are not located on a given plane, XYZs Almost Equal - Checks if any XYzs in a given list are almost equal (within a reasonable computational tolerance) to a specified XYZ., XYZs From MeshTriangle - Retrieves XYZs from MeshTriangles, Y Axis (Negative) - Returns an XYZ of 0,-1,0, Yellow - Returns the colour yellow., Z Axis (Negative) - Returns an XYZ of 0,0,-1",
          "engine_metadata": "",
          "engine_version": "0.6.3.7375",
          "created": "2014-10-29T09:53:04.746Z",
          "full_dependency_versions": [ "0.63.3", "0.0.1", "1.0.2", "0.1.0", "1.0.0", "0.0.9", "0.0.1", "0.1.0", "2014.6.5" ],
          "full_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.6.3",
              "_id": "544730fdcc26bfdc5a0000db"
            },
            {
              "name": "remove duplicates",
              "_id": "52650df13f7315936f000026"
            },
            {
              "name": "phi",
              "_id": "523b9a3330e55dc52b00000b"
            },
            {
              "name": "Type Name",
              "_id": "52793a753f7315936f000055"
            },
            {
              "name": "Sum List",
              "_id": "52203afbe2f476ca0500004b"
            },
            {
              "name": "Project To XY Plane",
              "_id": "51f823d4e2f476ca05000006"
            },
            {
              "name": "If Null Replace With New Value",
              "_id": "52f3cdd7bfe425953600005f"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "0.0.9", "1.0.0", "1.0.2", "0.0.1", "0.1.0", "0.0.1", "2014.6.5", "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Project To XY Plane",
              "_id": "51f823d4e2f476ca05000006"
            },
            {
              "name": "Sum List",
              "_id": "52203afbe2f476ca0500004b"
            },
            {
              "name": "phi",
              "_id": "523b9a3330e55dc52b00000b"
            },
            {
              "name": "remove duplicates",
              "_id": "52650df13f7315936f000026"
            },
            {
              "name": "List Contains",
              "_id": "52203d80e2f476ca0500004d"
            },
            {
              "name": "If Null Replace With New Value",
              "_id": "52f3cdd7bfe425953600005f"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "Type Name",
              "_id": "52793a753f7315936f000055"
            }
          ],
          "change_log": "",
          "version": "0.63.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-29T09:53:04.746Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 3,
      "downloads": 949,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "CAAD_RWTH",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Clockwork is a collection of 250+ custom nodes that were previously published in a number of separate packages. It contains many Revit-related nodes, but also lots of nodes for various other purposes such as list management, vector operations and paneling. More information:  https://github.com/CAAD-RWTH/ClockworkForDynamo",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "clockwork", "caad", "rwth" ],
      "white_list": false
    },
    {
      "_id": "52f7ca85bfe4259536000065",
      "name": "Diagrid Facets",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e8de79a2-8324-4b73-a403-d271fcac0773gregPkg324.zip",
          "contents": "Diagrid Facets - Creates diagrid facets from a surface",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-29T11:06:53.426Z",
          "full_dependency_versions": [ "2.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Diagrid Facets",
              "_id": "52f7ca85bfe4259536000065"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-29T11:06:53.426Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 150,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a diagrid (made of triangular facets) from a face/surface.\r\n\r\nThis is my first experiment with Dynamo. I decided to create a \"Diagrid\" custom node that takes as input: a Surface, U, and V and creates a set of facets (triangular faces) that form a diagrid on the input surface. The algorithm is mainly done in Python and is based on my original script as published in my book \"Parametric Design for Architecture\". The original script was written in Autodesk 3ds Max using MAXSCRIPT. I am going to try to share this custom node.See it in action at: \r\nhttp://youtu.be/qAKqSUD5Vag",
      "maintainers": [
        {
          "username": "jabi",
          "_id": "52f7ca85bfe4259536000064"
        }
      ],
      "keywords": [ "diagrid", "quad" ],
      "white_list": false
    },
    {
      "_id": "5451393e8b802a942700000e",
      "name": "Quads from Surface(s)",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/55ad0ecb-948e-40a4-8af7-5a6638d9062cgregPkg477.zip",
          "contents": "Quads from Surface(s) - Group quad points from surface, with data tree structured for u and v.  Srf(s) input functions for single surface or flattened list of surfaces.",
          "engine_metadata": "",
          "engine_version": "0.7.2.2114",
          "created": "2014-10-29T20:23:05.587Z",
          "full_dependency_versions": [ "1.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Quads from Surface(s)",
              "_id": "5451393e8b802a942700000e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-10-29T20:23:05.587Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 364,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Mode Lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Group quad points from surface, with data tree structured for uv and surfaces.  Srf(s) input functions for single surface or list of surfaces.",
      "maintainers": [
        {
          "username": "ekatzensteinMode",
          "_id": "54412f51cc26bfdc5a000058"
        }
      ],
      "keywords": [ "mode", "lab", "uv", "quads", "group", "surface", "surfaces" ],
      "white_list": false
    },
    {
      "_id": "543367d7cc26bfdc5a000047",
      "name": "TangentsFromCurveToPoint",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c830baa9-caff-4cea-a667-dbad61e3f10fgregPkg773.zip",
          "contents": "TangentsFromCurveToPoint - Brute force method to  finds 2 near tangents between a point and a target curve given a number of point samples on the curve|ContainsPythonScripts(58B25C0B-CBBE-4DDC-AC39-ECBEB8B55B10)",
          "engine_metadata": "",
          "engine_version": "0.7.3.3005",
          "created": "2014-11-03T16:26:10.958Z",
          "full_dependency_versions": [ "0.0.4" ],
          "full_dependency_ids": [
            {
              "name": "TangentsFromCurveToPoint",
              "_id": "543367d7cc26bfdc5a000047"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-03T16:26:10.958Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 159,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Brute force method to  finds 2 near tangents between a point and a target curve given a number of point samples on the curve",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "tangent", "birds", "nest" ],
      "white_list": false
    },
    {
      "_id": "54631939895fdbc25e000016",
      "name": "CreateCornerByTrimmingTwoSurface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3a4f9d89-5294-4d32-9729-7c7d8d448e82gregPkg683.zip",
          "contents": "CreateCornerByTrimmingTwoSurface - Pass two surface and pick point and you will get Trimmed Surface.",
          "engine_metadata": "",
          "engine_version": "0.7.4.3151",
          "created": "2014-11-12T08:24:25.962Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "CreateCornerByTrimmingTwoSurface",
              "_id": "54631939895fdbc25e000016"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-12T08:24:25.962Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 44,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Custom Node",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Pass two surface with pick point and this Custom node will reurn trimmed surface.",
      "maintainers": [
        {
          "username": "critesh",
          "_id": "530da612bfe42595360000b0"
        }
      ],
      "keywords": [ "trimmed", "surface" ],
      "white_list": false
    },
    {
      "_id": "54652829b77c84600c000007",
      "name": "test1234566666666666",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9ead4915-c242-4ff4-a927-b201d1f744dfgregPkg312.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.3.3034",
          "created": "2014-11-13T21:52:41.240Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "test1234566666666666",
              "_id": "54652829b77c84600c000007"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-13T21:52:41.24Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 12,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "3333333333333333333333333",
      "maintainers": [
        {
          "username": "clayton.scelzi@tlc-eng.com",
          "_id": "54652827b77c84600c000006"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5446f91dcc26bfdc5a0000d9",
      "name": "Remap with Source and Target Domains",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ad458bda-f11c-4238-84b9-6a0d812bd5f6gregPkg17.zip",
          "contents": "Remap with Source and Target Domains - Remap numbers from a given source domain to a new target domain.",
          "engine_metadata": "",
          "engine_version": "0.7.4.3141",
          "created": "2014-11-13T23:25:24.701Z",
          "full_dependency_versions": [ "1.2.1" ],
          "full_dependency_ids": [
            {
              "name": "Remap with Source and Target Domains",
              "_id": "5446f91dcc26bfdc5a0000d9"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-13T23:25:24.701Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 68,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Remap numbers from a source domain to a target domain",
      "maintainers": [
        {
          "username": "gaMode",
          "_id": "5446f91ccc26bfdc5a0000d8"
        }
      ],
      "keywords": [ "remap" ],
      "white_list": false
    },
    {
      "_id": "546c291bb77c84600c000016",
      "name": "Tim",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5a8ba78b-512f-4c13-acc1-a351f144a21bgregPkg528.zip",
          "contents": "Tims_ConvertToFt - Convert square meters to square feet, Tims_ConvertToMeters - Convert square meters to square feet, Tims_ConvertToSqFt - Convert square meters to square feet, Tims_ConvertToSqMeters - Convert square meters to square feet",
          "engine_metadata": "",
          "engine_version": "0.7.3.3034",
          "created": "2014-11-19T05:27:56.418Z",
          "full_dependency_versions": [ "2014.11.18" ],
          "full_dependency_ids": [
            {
              "name": "Tim",
              "_id": "546c291bb77c84600c000016"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2014.11.18",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-19T05:27:56.418Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 30,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Conversion Package from meters to feet",
      "maintainers": [
        {
          "username": "788donor",
          "_id": "546c291ab77c84600c000015"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "54755856b77c84600c00004f",
      "name": "Pack Circles Along Curve",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/942f2c29-2c70-482c-a8cb-527d5ef73080gregPkg316.zip",
          "contents": "Pack Circles Along Curve - Return a set of circles centered along the curve with the given radii so that they are tangent.",
          "engine_metadata": "",
          "engine_version": "0.7.5.3213",
          "created": "2014-11-26T04:34:30.260Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Pack Circles Along Curve",
              "_id": "54755856b77c84600c00004f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-26T04:34:30.26Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 74,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "CJM",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Return a set of circles centered along the curve with the given radii so that they are tangent.",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "chord", "tangent", "circlepacking", "packing" ],
      "white_list": false
    },
    {
      "_id": "52bdf30a9de41c8235000081",
      "name": "Slingshot! for Dynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7313b8bb-fd0d-461a-bc14-bb6ac046b73cgregPkg896.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.4.3245",
          "created": "2014-11-30T02:56:32.605Z",
          "full_dependency_versions": [ "2014.11.30" ],
          "full_dependency_ids": [
            {
              "name": "Slingshot! for Dynamo",
              "_id": "52bdf30a9de41c8235000081"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2014.11.30",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-11-30T02:56:32.605Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -5,
      "downloads": 6241,
      "repository_url": "https://bitbucket.org/archinate/slingshot",
      "site_url": "http://TheProvingGround.org",
      "banned": false,
      "deprecated": false,
      "group": "The Proving Ground",
      "engine": "dynamo",
      "license": "GNU",
      "used_by": [
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "Kevin MySQL Application",
          "_id": "58ececf9b529d0bb240000e4"
        }
      ],
      "num_dependents": 2,
      "description": "Slingshot! is a node library for connecting Dynamo (0.7.4) to external Relational Database Management Systems (RDBMS).  The library includes node interfaces for MySQL, SQLite and other databases supporting ODBC and OLE DB connections.  Slingshot also includes nodes for helping users construct commands and queries with the SQL language. Slingshot an open source tool and is authored by Nathan Miller  http://TheProvingGround.org",
      "maintainers": [
        {
          "username": "archinate",
          "_id": "5234d9ab6b18e47916000007"
        }
      ],
      "keywords": [ "interoperability", "database", "mysql", "sqlite" ],
      "white_list": false
    },
    {
      "_id": "547bf081b77c84600c00005f",
      "name": "Daylighting Workflows",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/bb3b90ed-4162-4394-8b0b-ee6a26517682gregPkg470.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3311",
          "created": "2014-12-01T19:57:27.104Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "Daylighting Workflows",
              "_id": "547bf081b77c84600c00005f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-01T19:57:27.104Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 7,
      "downloads": 598,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Analyze",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This package provides customized daylighting graphs.",
      "maintainers": [
        {
          "username": "mra1242@neo.tamu.edu",
          "_id": "53001b41bfe4259536000081"
        }
      ],
      "keywords": [ "daylighting", "lighting", "analysis" ],
      "white_list": false
    },
    {
      "_id": "54811babfa779c1c1100000f",
      "name": "first hanger test",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/efea31ff-dc7f-40d7-a94f-ebd1aa41c687gregPkg639.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.4.3245",
          "created": "2014-12-05T02:42:51.311Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "first hanger test",
              "_id": "54811babfa779c1c1100000f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-05T02:42:51.311Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 30,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "first hanger test",
      "maintainers": [
        {
          "username": "roger@aecfactory.com",
          "_id": "54811ba9fa779c1c1100000e"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5482b689fa779c1c11000017",
      "name": "Chinwen",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/49de7b05-298b-4fed-af8f-93e7fd7ca8adgregPkg191.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.4.3245",
          "created": "2014-12-06T07:55:53.690Z",
          "full_dependency_versions": [ "0.7.4" ],
          "full_dependency_ids": [
            {
              "name": "Chinwen",
              "_id": "5482b689fa779c1c11000017"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-06T07:55:53.69Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 45,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "this creates seating",
      "maintainers": [
        {
          "username": "ray11132002@gmail.com",
          "_id": "5482b688fa779c1c11000016"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5482b7bcfa779c1c11000019",
      "name": "seats",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4877337c-0c5c-477b-aafe-6e751d2a580egregPkg547.zip",
          "contents": "seats - creates seats for stadium",
          "engine_metadata": "",
          "engine_version": "0.7.4.3245",
          "created": "2014-12-06T08:01:00.940Z",
          "full_dependency_versions": [ "0.7.4" ],
          "full_dependency_ids": [
            {
              "name": "seats",
              "_id": "5482b7bcfa779c1c11000019"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-06T08:01:00.94Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 42,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "LOLOLOLOLOLOL",
      "maintainers": [
        {
          "username": "ray11132002@gmail.com",
          "_id": "5482b688fa779c1c11000016"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "548826dcfa779c1c11000028",
      "name": "test075",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/556330fa-d664-4123-95fe-4484dc44788cgregPkg806.zip",
          "contents": "test - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.5.3414",
          "created": "2014-12-10T11:07:05.390Z",
          "full_dependency_versions": [ "2.1.0" ],
          "full_dependency_ids": [
            {
              "name": "test075",
              "_id": "548826dcfa779c1c11000028"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-10T11:07:05.39Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 9,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing Dynamo",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": [ "test" ],
      "white_list": false
    },
    {
      "_id": "54893712fa779c1c1100003e",
      "name": "testsun",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5cc78da2-a3f3-4268-997e-a21e7594759cgregPkg555.zip",
          "contents": "test - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.6.3382",
          "created": "2014-12-11T06:17:54.321Z",
          "full_dependency_versions": [ "2.0.1" ],
          "full_dependency_ids": [
            {
              "name": "testsun",
              "_id": "54893712fa779c1c1100003e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-11T06:17:54.321Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 13,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing sundial",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "546f16a4b77c84600c00002b",
      "name": "Points.FormCurves(Dynamo 0.7)",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f1adfd94-0dcd-4ee5-ae9d-50dfd0e75950gregPkg991.zip",
          "contents": "Points.FormCurves(Convex) - same as above, Points.FormCurves - Sorts a collection of points using atan2 and connects them with curves",
          "engine_metadata": "",
          "engine_version": "0.7.6.3414",
          "created": "2014-12-12T07:59:05.907Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "Points.FormCurves(Dynamo 0.7)",
              "_id": "546f16a4b77c84600c00002b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-12T07:59:05.907Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 104,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "DEV",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Sorts a collection of points using an atan2 method (relative to the XY plane) and connects them with a poly-curve.",
      "maintainers": [
        {
          "username": "dimiter_v@mail.bg",
          "_id": "532baed2bfe42595360000e3"
        }
      ],
      "keywords": [ "points", "atan2", "connect" ],
      "white_list": false
    },
    {
      "_id": "5491fbbf9508c4370600000c",
      "name": "neal_test",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/bc49ad60-20aa-4f53-9c75-dee923c7e6dcgregPkg668.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3437",
          "created": "2014-12-17T21:55:11.075Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "neal_test",
              "_id": "5491fbbf9508c4370600000c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-17T21:55:11.075Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "neal_test_for_two_load",
      "maintainers": [
        {
          "username": "jnealb",
          "_id": "546ceba1b77c84600c00001d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "52f996f8bfe425953600006e",
      "name": "Quad Points on Face",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/66f57f8f-d258-40b7-a632-99d0fa49a111gregPkg655.zip",
          "contents": "Quad Points on Face - Creates a regular grid of points on a face in quad groups",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2014-12-28T01:06:17.540Z",
          "full_dependency_versions": [ "0.1.0", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Quad Points on Face",
              "_id": "52f996f8bfe425953600006e"
            },
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            }
          ],
          "direct_dependency_versions": [ "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            }
          ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2014-12-28T01:06:17.54Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 1006,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a regular grid of points on a face in quad groups",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "face", "uv", "quad", "paneling" ],
      "white_list": false
    },
    {
      "_id": "5463386a895fdbc25e000018",
      "name": "Sectionbox.ByElements",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/17969b4a-73d8-4686-9655-07d5102f376fgregPkg294.zip",
          "contents": "Sectionbox.ByElements - This node align a section box to the selected model elements.\r\n\r\nRequirements: active view must be a 3d view with section box enabled",
          "engine_metadata": "",
          "engine_version": "0.7.6.3557",
          "created": "2015-01-05T18:40:43.911Z",
          "full_dependency_versions": [ "0.7.5" ],
          "full_dependency_ids": [
            {
              "name": "Sectionbox.ByElements",
              "_id": "5463386a895fdbc25e000018"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-05T18:40:43.911Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 599,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Berger",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Aligns section box to selected model elements with offset. \r\nRequirements: must be in 3d-view with section box turned on.\r\n\r\nCompliments to Dimitar Venkov for help with Python!",
      "maintainers": [
        {
          "username": "josteinolsen7513",
          "_id": "53edcf720e5572016a00018f"
        }
      ],
      "keywords": [ "sectionbox" ],
      "white_list": false
    },
    {
      "_id": "54aef725dcee4dfd2600002e",
      "name": "HumanForDynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5b6fdc55-3681-4837-8141-2fb61e465d2egregPkg881.zip",
          "contents": "ShowMessageBox - Shows a simple message box., StringFormat - Formats a value according to a c#-style formatting string.",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-01-08T21:44:59.503Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "HumanForDynamo",
              "_id": "54aef725dcee4dfd2600002e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-08T21:44:59.503Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 93,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Don't download this, it probably doesn't work.",
      "maintainers": [
        {
          "username": "aheumann@nbbj.com",
          "_id": "54aef724dcee4dfd2600002d"
        }
      ],
      "keywords": [ "string", "format" ],
      "white_list": false
    },
    {
      "_id": "54313d30cc26bfdc5a000042",
      "name": "Door Ironmongery",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/34ea6db4-64ef-49f8-bc21-e7a3eb7cc2fbgregPkg958.zip",
          "contents": "Door Ironmongery - Determines door ironmongery (left or right hung, and/or outward or inward). Input takes doors, and output is returned in four lists (right, left, out, in).",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-01-10T15:01:06.155Z",
          "full_dependency_versions": [ "0.7.1" ],
          "full_dependency_ids": [
            {
              "name": "Door Ironmongery",
              "_id": "54313d30cc26bfdc5a000042"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-10T15:01:06.155Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 126,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "DanEDU Dynamo",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This package is obsolete, please use package \"DanEDU Dynamo\" instead",
      "maintainers": [
        {
          "username": "erfajo",
          "_id": "54313d2fcc26bfdc5a000041"
        }
      ],
      "keywords": [ "obsolete!" ],
      "white_list": false
    },
    {
      "_id": "54b41c31dcee4dfd26000049",
      "name": "Point.SortByAngle",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8477c632-b68c-46a8-8579-306611ed950dgregPkg753.zip",
          "contents": "SortByAngle - Sort a list of points about a center point counter-clockwise about a center point parallel to the XY plane.  Specify the vector to start (ex: Vector.XAxis is the zero point)",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-01-12T19:20:49.592Z",
          "full_dependency_versions": [ "0.0.2", "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Point.SortByAngle",
              "_id": "54b41c31dcee4dfd26000049"
            },
            {
              "name": "List.SortByKeyList",
              "_id": "540668980e5572016a0001b4"
            }
          ],
          "direct_dependency_versions": [ "0.0.2" ],
          "direct_dependency_ids": [
            {
              "name": "List.SortByKeyList",
              "_id": "540668980e5572016a0001b4"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-12T19:20:49.592Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 66,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Sort a list of points about a center point counter-clockwise about a center point parallel to the XY plane.  Specify the vector to start (ex: Vector.XAxis is the zero point)",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "sort", "angle" ],
      "white_list": false
    },
    {
      "_id": "542b7f65cc26bfdc5a00003c",
      "name": "CurtainPanel.Sort",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/600004ef-68a7-409e-81e3-8a730dc47698gregPkg566.zip",
          "contents": "CurtainPanel.PointX - Extract the X cooridinate of a curtain panel, CurtainPanel.PointY - Extract the Y coordinate of a Curtain Panell, CurtainPanel.PointZ - Extracts a curtain Panel's Z coordinate, CurtainPanel.Sort - Sort Curtain Panels ",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-01-13T02:58:07.688Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "CurtainPanel.Sort",
              "_id": "542b7f65cc26bfdc5a00003c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-13T02:58:07.688Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 1162,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "RevitMagic",
          "_id": "5741e1ecc1a604fb3600000c"
        }
      ],
      "num_dependents": 1,
      "description": "Sorts a list of Curtain Panels into ordered rows",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "sort", "curtain", "panel", "system" ],
      "white_list": false
    },
    {
      "_id": "54b4f6dfdcee4dfd26000053",
      "name": "Polar to Cartesian",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d32f80bc-686c-4b5c-9c20-06fe9ed8edbcgregPkg994.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-01-13T10:43:43.590Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Polar to Cartesian",
              "_id": "54b4f6dfdcee4dfd26000053"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-13T10:43:43.59Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 12,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Convert polar t,r values to x,y",
      "maintainers": [
        {
          "username": "mohanajjar85@gmail.com",
          "_id": "54b4f6dedcee4dfd26000052"
        }
      ],
      "keywords": [ "trial", "version" ],
      "white_list": false
    },
    {
      "_id": "54aacd91dcee4dfd26000019",
      "name": "Raindrops",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8e91cbff-5623-4bdc-a542-15f9ae95a838gregPkg910.zip",
          "contents": "Raindrops Publish Parameters - Publish parameter data in correct format for spreadsheet syncing., Raindrops Update Parameters - Update published element parameters from spreadsheet.",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-01-21T23:46:46.083Z",
          "full_dependency_versions": [ "2015.1.21" ],
          "full_dependency_ids": [
            {
              "name": "Raindrops",
              "_id": "54aacd91dcee4dfd26000019"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2015.1.21",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-21T23:46:46.083Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 842,
      "repository_url": "",
      "site_url": "http://goo.gl/0NCeEV",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Read and write Google Spreadsheets in Dynamo. Revit parameters can now be exposed and quickly socialized through the power of Google Docs. For more information, visit http://nodelete.org.",
      "maintainers": [
        {
          "username": "nmiller@gehrytech.com",
          "_id": "54aacd8fdcee4dfd26000018"
        }
      ],
      "keywords": [ "google", "sheets", "spreadsheet", "excel", "parametric", "data", "collaboration" ],
      "white_list": false
    },
    {
      "_id": "544199a0cc26bfdc5a000065",
      "name": "Optimo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/cb859220-7f5b-4b08-b327-955a60d54d49gregPkg185.zip",
          "contents": "BBox Fitness Function - The Fitness Function for Optimo's Bounding Box Example (Minimizing Bounding Box Volume), Loop Completion Check - A function that checcks if the loop is completed, NSGA_II Function - The function that performs the generation for NSGA_II., Point on Surface Fitness Function - The Fitness Function for Optimo's Point on Surface Example, SCH Fitness Function-1 - The Fitness Function for Optimo's SCH Example, SCH Fitness Function-2 - The Fitness Function for Optimo's SCH Example",
          "engine_metadata": "",
          "engine_version": "0.7.6.3982",
          "created": "2015-02-05T17:02:03.857Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Optimo",
              "_id": "544199a0cc26bfdc5a000065"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-02-05T17:02:03.857Z",
      "num_versions": 9,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 2466,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Optimo",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Optimo is a multi-objective optimization tool that enables Dynamo users to optimize problems with single and multiple objectives using evolutionary algorithms. Optimo includes various multi-objective optimization algorithm to reach to a set of optimal solutions (in the current version NSGA-II  (Non-dominated Sorting Genetic Algorithm-II) is included, More algorithms including SMPSO and MOEAD will be added soon). Optimo is developed by Mohammad Rahmani Asl and Dr. Wei Yan in the BIM-SIM (http://bim-sim.org/) Lab at Texas A&M University using jmetal.NET (http://jmetalnet.sourceforge.net/) open source code. Optimo source code is available on Optimo Github (https://github.com/BPOpt/Optimo). Please see the Github Wiki page to learn more about Optimo and its updates. Read more about Optimo Examples at https://github.com/BPOpt/Optimo/wiki/0_-Home.\r\nFeel Free to email us in case of any qustion (mrah@tamu.edu).",
      "maintainers": [
        {
          "username": "mra1242@neo.tamu.edu",
          "_id": "53001b41bfe4259536000081"
        }
      ],
      "keywords": [ "evolutionary", "multi-objective", "optimization", "genetic", "algorithm", "nsga-ii", "optimo" ],
      "white_list": false
    },
    {
      "_id": "54bdb25ddcee4dfd2600006e",
      "name": "HyunWooKim",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/419df46d-4766-4e57-8f17-0686c2018822gregPkg950.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-01-20T01:41:49.283Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "HyunWooKim",
              "_id": "54bdb25ddcee4dfd2600006e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-20T01:41:49.283Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 110,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "gives lists of each Mountain & Vally Vertexes from series of closed curves chain.",
      "maintainers": [
        {
          "username": "dingohot",
          "_id": "54bdb25bdcee4dfd2600006d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53a8d42a0e5572016a000111",
      "name": "Group Items by Key List",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6909f51f-dcd6-4fc4-beee-cd3b102c72a1gregPkg183.zip",
          "contents": "Group Items by Key List - Group items in a list according to a key list",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-01-21T10:19:41.873Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Group Items by Key List",
              "_id": "53a8d42a0e5572016a000111"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-21T10:19:41.873Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 423,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "CurtainPanel.Sort",
          "_id": "542b7f65cc26bfdc5a00003c"
        }
      ],
      "num_dependents": 1,
      "description": "Group items in a list according to unique values in a key list",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "group", "list", "key", "sort" ],
      "white_list": false
    },
    {
      "_id": "54c028ecdcee4dfd26000077",
      "name": "Archlib",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ffa3b8b0-8ed3-48b5-a090-39f3ccb8738fgregPkg277.zip",
          "contents": "ElementId - Queries Revit elements for ElementId, Id as string, Id as Integer, and GUID as string.",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-01-21T22:32:12.776Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Archlib",
              "_id": "54c028ecdcee4dfd26000077"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-21T22:32:12.776Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1003,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "first test ",
      "maintainers": [
        {
          "username": "smcnamara@cronepartners.com",
          "_id": "54c028ebdcee4dfd26000076"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54c820ffdcee4dfd2600009a",
      "name": "this is from Germany",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/572e2e89-ffa9-42a8-888d-048d5572a791gregPkg14.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.6.3916",
          "created": "2015-01-27T23:36:31.220Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "this is from Germany",
              "_id": "54c820ffdcee4dfd2600009a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-27T23:36:31.22Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "this is from Germany and",
      "maintainers": [
        {
          "username": "jnealb",
          "_id": "546ceba1b77c84600c00001d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54cb18ccdcee4dfd260000a3",
      "name": "CurvesToPolycurves",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/834e3fcd-6228-49f5-a08f-939d6a44e432gregPkg889.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-01-30T05:41:24.603Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "CurvesToPolycurves",
              "_id": "54cb18ccdcee4dfd260000a3"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-01-30T05:41:24.603Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 245,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EnjoyRevit",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Convert mutiple chains of Model Lines to each PolyCurves at once",
      "maintainers": [
        {
          "username": "dingohot",
          "_id": "54bdb25bdcee4dfd2600006d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54c660c3dcee4dfd2600008d",
      "name": "Families in Rooms",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d88370c0-de90-4104-aa91-6b8935654fbegregPkg648.zip",
          "contents": "Family.InRoom - checks if given families are in rooms, Family.LocationPoints - returns location points for families",
          "engine_metadata": "",
          "engine_version": "0.7.6.3982",
          "created": "2015-02-04T17:33:52.104Z",
          "full_dependency_versions": [ "2015.2.4" ],
          "full_dependency_ids": [
            {
              "name": "Families in Rooms",
              "_id": "54c660c3dcee4dfd2600008d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2015.2.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-02-04T17:33:52.104Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 919,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "KOP.FAMILIES",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Start of a group of custom nodes related to families. this first release finds out if  a list of familis is in a list of rooms, returns a list, returns locations",
      "maintainers": [
        {
          "username": "KOPPEVI",
          "_id": "53ce7c620e5572016a000163"
        }
      ],
      "keywords": [ "family", "in", "room" ],
      "white_list": false
    },
    {
      "_id": "54d334f7dcee4dfd260000c0",
      "name": "List.GenerateEmptyElements",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d009eeab-d4c1-49be-aefe-1fa89df43cf4gregPkg845.zip",
          "contents": "List.GenerateEmptyElements - Generates empty listelements for equally length sublist for Excel export",
          "engine_metadata": "",
          "engine_version": "0.7.6.3982",
          "created": "2015-02-05T09:16:39.480Z",
          "full_dependency_versions": [ "2015.2.5" ],
          "full_dependency_ids": [
            {
              "name": "List.GenerateEmptyElements",
              "_id": "54d334f7dcee4dfd260000c0"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2015.2.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-02-05T09:16:39.48Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 155,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "KOP.UTILITIES",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Generates empty list elements for equally length sublists for export to excel",
      "maintainers": [
        {
          "username": "KOPPEVI",
          "_id": "53ce7c620e5572016a000163"
        }
      ],
      "keywords": [ "list", "empty", "elements" ],
      "white_list": false
    },
    {
      "_id": "54d3b9c2dcee4dfd260000c7",
      "name": "NealsClassLib",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d5de417f-bafd-4e68-abfc-9bb6004a89cfgregPkg383.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.6.4006",
          "created": "2015-02-05T18:43:14.406Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "NealsClassLib",
              "_id": "54d3b9c2dcee4dfd260000c7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-02-05T18:43:14.406Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 0,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "NealsClassLib for test",
      "maintainers": [
        {
          "username": "jnealb",
          "_id": "546ceba1b77c84600c00001d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54d9288ddcee4dfd260000da",
      "name": "Neal's class lib",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b8f68fbf-2a72-4822-81e8-49dd2f63a112gregPkg284.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.6.4045",
          "created": "2015-02-09T21:37:17.715Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Neal's class lib",
              "_id": "54d9288ddcee4dfd260000da"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-02-09T21:37:17.715Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Neal's class lib test",
      "maintainers": [
        {
          "username": "jnealb",
          "_id": "546ceba1b77c84600c00001d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54e635c5dcee4dfd260000fb",
      "name": "ForeignéîçèæêëïôÊÉà2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/767eef34-0faa-415c-911b-3fac431ccfd0gregPkg795.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.6.4132",
          "created": "2015-02-19T19:13:09.213Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "ForeignéîçèæêëïôÊÉà2",
              "_id": "54e635c5dcee4dfd260000fb"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-02-19T19:13:09.213Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 2,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "ForeignéîçèæêëïôÊÉà2 test",
      "maintainers": [
        {
          "username": "jnealb",
          "_id": "546ceba1b77c84600c00001d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54ec7ab5dcee4dfd26000114",
      "name": "Elements.position_rotation_mirrored",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7879baff-2e45-40ed-bead-6acc813aac9fgregPkg511.zip",
          "contents": "Elements.position-rotation-mirrored - This node get the position, rotation of elements and indicates if they are mirrored.\r\n\r\nInput is a list of elements, output are lists of data",
          "engine_metadata": "",
          "engine_version": "0.7.6.4145",
          "created": "2015-02-24T13:20:53.453Z",
          "full_dependency_versions": [ "0.6.4145" ],
          "full_dependency_ids": [
            {
              "name": "Elements.position_rotation_mirrored",
              "_id": "54ec7ab5dcee4dfd26000114"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.6.4145",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-02-24T13:20:53.453Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 255,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "ABT",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Gets the position and roration of elements and indicaties if they are mirrored.",
      "maintainers": [
        {
          "username": "MartinB2",
          "_id": "54ec7ab5dcee4dfd26000113"
        }
      ],
      "keywords": [ "rotation", "mirror", "mirrored" ],
      "white_list": false
    },
    {
      "_id": "54f6b6fb0c7eac9b5700000b",
      "name": "ER Package",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f79e9143-6bf3-45ed-a090-a2fca9177facgregPkg17.zip",
          "contents": "ChainList - Return chained sublist with assigned length, IndicesOf - Return matching items indices from given, TopoToPoly - Return PolySurface from given topography",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-03-04T07:40:43.414Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "ER Package",
              "_id": "54f6b6fb0c7eac9b5700000b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-04T07:40:43.414Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 227,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EnjoyRevit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "RugularDome",
          "_id": "5513d7965899bb370500000b"
        }
      ],
      "num_dependents": 1,
      "description": "Useful definitions by EnjoyRevit",
      "maintainers": [
        {
          "username": "dingohot",
          "_id": "54bdb25bdcee4dfd2600006d"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "54f7a4100c7eac9b5700000e",
      "name": "HelixAtCurve",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/407ae15a-82eb-4d8b-916f-243c6ad6899bgregPkg946.zip",
          "contents": "HelixAtCurve - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-03-05T00:32:16.116Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "HelixAtCurve",
              "_id": "54f7a4100c7eac9b5700000e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-05T00:32:16.116Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 151,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EnjoyRevit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create a Helix following given curve",
      "maintainers": [
        {
          "username": "dingohot",
          "_id": "54bdb25bdcee4dfd2600006d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54f8488d0c7eac9b57000014",
      "name": "UV Grid ",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/dc9b9c45-3a06-4388-b5c9-0dd69b0a18e1gregPkg414.zip",
          "contents": "Points from UV Grig - face; uv count; ",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-03-05T12:14:05.362Z",
          "full_dependency_versions": [ "0.7.5" ],
          "full_dependency_ids": [
            {
              "name": "UV Grid ",
              "_id": "54f8488d0c7eac9b57000014"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-05T12:14:05.362Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 247,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Uv grid like in 0.6.3",
      "maintainers": [
        {
          "username": "dm.kriv",
          "_id": "54f8488b0c7eac9b57000013"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54f872d50c7eac9b57000017",
      "name": "Slice List 0.6.3",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e254dff3-b986-4150-a601-8c3ece54ae3fgregPkg427.zip",
          "contents": "Slice List 0.6.3 - Slice List: start, count, list",
          "engine_metadata": "",
          "engine_version": "0.6.3.7993",
          "created": "2015-03-05T15:14:29.780Z",
          "full_dependency_versions": [ "0.7.0" ],
          "full_dependency_ids": [
            {
              "name": "Slice List 0.6.3",
              "_id": "54f872d50c7eac9b57000017"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-05T15:14:29.78Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 91,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Slice list ",
      "maintainers": [
        {
          "username": "dm.kriv",
          "_id": "54f8488b0c7eac9b57000013"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54fd51600c7eac9b5700002b",
      "name": "Test_Rami",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e093287f-ccdf-45d9-b6d7-4a260fa585ffgregPkg528.zip",
          "contents": "get Geometry (rQueryLine) - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.4.3245",
          "created": "2015-03-09T07:53:04.198Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Test_Rami",
              "_id": "54fd51600c7eac9b5700002b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-09T07:53:04.198Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 30,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "0",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Get's geometry",
      "maintainers": [
        {
          "username": "hamati_rami2004@yahoo.com",
          "_id": "54fd515e0c7eac9b5700002a"
        }
      ],
      "keywords": [ "0" ],
      "white_list": false
    },
    {
      "_id": "54fd7a340c7eac9b5700002e",
      "name": "DynTweet",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3e309b23-0003-4fb2-b50a-0a0415ea1745gregPkg814.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.671",
          "created": "2015-03-09T10:47:16.910Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "DynTweet",
              "_id": "54fd7a340c7eac9b5700002e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-09T10:47:16.91Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 53,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Simple library to text tweet from Dynamo. \r\n\r\nAbility to tweet your models coming soon.",
      "maintainers": [
        {
          "username": "elayabharath.elango@autodesk.com",
          "_id": "5461d4c5895fdbc25e000014"
        }
      ],
      "keywords": [ "twitter", "tweet", "social" ],
      "white_list": false
    },
    {
      "_id": "54fd125f0c7eac9b57000027",
      "name": "Grapher",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/574cf056-efcd-4124-b913-2a675ff465f2gregPkg474.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.681",
          "created": "2015-03-10T07:09:35.586Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Grapher",
              "_id": "54fd125f0c7eac9b57000027"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-10T07:09:35.586Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 387,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A library to add graph capabilities into Dynamo\r\n\r\nAll graphs are inline - use watch image to see the results.\r\n\r\nThere is a known bug with pie chart viewing it inline, please use the saveAsSVGOption for now.\r\n\r\nWill be adding more features soon. Please write to elayabharath@gmail.com for any feedback / requests.",
      "maintainers": [
        {
          "username": "elayabharath.elango@autodesk.com",
          "_id": "5461d4c5895fdbc25e000014"
        }
      ],
      "keywords": [ "graph", "plot", "scatter", "chart", "pie", "guage" ],
      "white_list": false
    },
    {
      "_id": "54fecba60c7eac9b57000033",
      "name": "RegularStar",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f92dbf9f-ba3d-424f-9d7c-9942702f170dgregPkg310.zip",
          "contents": "RegularStar - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-03-10T10:47:02.560Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "RegularStar",
              "_id": "54fecba60c7eac9b57000033"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-10T10:47:02.56Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 43,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EnjoyRevit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create a regular star from given",
      "maintainers": [
        {
          "username": "dingohot",
          "_id": "54bdb25bdcee4dfd2600006d"
        }
      ],
      "keywords": [ "polygon", "star", "regular" ],
      "white_list": false
    },
    {
      "_id": "54ff955b0c7eac9b57000037",
      "name": "Export.CSV.of.Files.Appended.to.Navisworks.File",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/53bd0cb4-9e29-43e9-82ad-9f64bdb870a9gregPkg189.zip",
          "contents": "Export Navisworks Filename List to CSV - exports nominated file name list to nominated csv path",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-03-11T01:07:39.844Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Export.CSV.of.Files.Appended.to.Navisworks.File",
              "_id": "54ff955b0c7eac9b57000037"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-11T01:07:39.844Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 333,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "LSJ",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "requires Dynaworks",
      "maintainers": [
        {
          "username": "luke.johnson",
          "_id": "54e3d829dcee4dfd260000f4"
        }
      ],
      "keywords": [ "navisworks" ],
      "white_list": false
    },
    {
      "_id": "55008e000c7eac9b5700003a",
      "name": "DynaBleau",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e884d3ef-c96c-48b3-8475-a282b97c6fa6gregPkg840.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.684",
          "created": "2015-03-12T23:13:20.768Z",
          "full_dependency_versions": [ "2015.3.13" ],
          "full_dependency_ids": [
            {
              "name": "DynaBleau",
              "_id": "55008e000c7eac9b5700003a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2015.3.13",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-12T23:13:20.768Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 326,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Tableau Integration for Dynamo",
      "maintainers": [
        {
          "username": "kylemorin",
          "_id": "548b434efa779c1c1100004d"
        }
      ],
      "keywords": [ "revit", "tableau" ],
      "white_list": false
    },
    {
      "_id": "550263060c7eac9b57000047",
      "name": "NameRefPlaneBasedOnCurveDirection",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1af32cbb-67b3-4b58-b85f-ada6d4ae3733gregPkg560.zip",
          "contents": "NameRefPlaneBasedOnCurveDirection - This node will help you to Name your Reference Planes based on guiding curve (on based on curve direction)",
          "engine_metadata": "",
          "engine_version": "0.8.0.706",
          "created": "2015-03-13T04:09:42.609Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "NameRefPlaneBasedOnCurveDirection",
              "_id": "550263060c7eac9b57000047"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-13T04:09:42.609Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 53,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "CustomisedNodes",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This node will allow you to Name you reference planes based on curve direction and irrecpective of their creation order.",
      "maintainers": [
        {
          "username": "critesh",
          "_id": "530da612bfe42595360000b0"
        }
      ],
      "keywords": [ "reference", "planes", "name", "guiding", "curve", "curve", "direction" ],
      "white_list": false
    },
    {
      "_id": "5506a76a0c7eac9b5700004c",
      "name": "TEST",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/77a33c5c-01a5-49da-ba78-03eb2b093bd8gregPkg280.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-03-16T09:50:34.862Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "TEST",
              "_id": "5506a76a0c7eac9b5700004c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-16T09:50:34.862Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 12,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "1",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "rghdffdfjhjdrdfyetrytu",
      "maintainers": [
        {
          "username": "yngve@jeppsson.se",
          "_id": "5506a7690c7eac9b5700004b"
        }
      ],
      "keywords": [ "sdgsdfg" ],
      "white_list": false
    },
    {
      "_id": "55079ee40c7eac9b57000050",
      "name": "Export Structural Columns",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/04de4030-c5b6-4c74-91a6-151b8450f0a3gregPkg509.zip",
          "contents": "Export Structural Columns - Export Structural Columns from the current model to an Excel file (input .xlsx path)",
          "engine_metadata": "",
          "engine_version": "0.7.5.3881",
          "created": "2015-03-17T03:26:28.284Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Export Structural Columns",
              "_id": "55079ee40c7eac9b57000050"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-17T03:26:28.284Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 278,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "ChrisV",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Export Structural Columns to Excel File (Specify .xlsx file path for input)",
      "maintainers": [
        {
          "username": "subpartner@autodesk.com",
          "_id": "53f9764d0e5572016a00019d"
        }
      ],
      "keywords": [ "chris", "vorster" ],
      "white_list": false
    },
    {
      "_id": "5513d7965899bb370500000b",
      "name": "RugularDome",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6d51d839-1af6-4aaa-8c31-3f8c43d7355cgregPkg68.zip",
          "contents": "RegularDome - Create a dome with regular polygon",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-03-26T09:55:34.582Z",
          "full_dependency_versions": [ "1.0.0", "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "RugularDome",
              "_id": "5513d7965899bb370500000b"
            },
            {
              "name": "ER Package",
              "_id": "54f6b6fb0c7eac9b5700000b"
            }
          ],
          "direct_dependency_versions": [ "0.0.1" ],
          "direct_dependency_ids": [
            {
              "name": "ER Package",
              "_id": "54f6b6fb0c7eac9b5700000b"
            }
          ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-26T09:55:34.582Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 60,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EnjoyRevit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create a Dome with regular polygon",
      "maintainers": [
        {
          "username": "dingohot",
          "_id": "54bdb25bdcee4dfd2600006d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55187c5e5899bb3705000019",
      "name": "Elements.Rotate",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/76f136d7-f2cf-4c73-8079-f8b70c040049gregPkg88.zip",
          "contents": "Elements.Rotate - Rotates Element(s) over axis (Vector) by list of angles (radian and counterclockwise), Elements.RotateByAxisByAngle - Rotates Element(s) over axis (Vector) by list of angles (radian and counterclockwise)",
          "engine_metadata": "",
          "engine_version": "0.8.1.830",
          "created": "2015-03-30T16:03:03.364Z",
          "full_dependency_versions": [ "1.3.0" ],
          "full_dependency_ids": [
            {
              "name": "Elements.Rotate",
              "_id": "55187c5e5899bb3705000019"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.3.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-30T16:03:03.364Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 343,
      "repository_url": "",
      "site_url": "www.abt.eu",
      "banned": false,
      "deprecated": false,
      "group": "ABT",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Rotates Element(s) over axis (Vector) by list of angles (radian and counterclockwise)",
      "maintainers": [
        {
          "username": "MartinB2",
          "_id": "54ec7ab5dcee4dfd26000113"
        }
      ],
      "keywords": [ "rotate" ],
      "white_list": false
    },
    {
      "_id": "551838dd5899bb3705000014",
      "name": "LabelsFromStrings",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7601ea84-4623-491f-8668-aeb99fd7ac0agregPkg50.zip",
          "contents": "LabelsFromStrings - Create text label or labels from a string or list of strings.  XYZ origin values can be in list form or as a single value.  Characters are formed by lines and are visible in the Dynamo preview.",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-03-30T23:09:45.389Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "LabelsFromStrings",
              "_id": "551838dd5899bb3705000014"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-30T23:09:45.389Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 176,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Using an input string or list of strings, create text with lines in the Dynamo background preview.  Input for XYandZ origin values can be a single value or a list.",
      "maintainers": [
        {
          "username": "t.lane",
          "_id": "54ca8801dcee4dfd260000a0"
        }
      ],
      "keywords": [ "label", "text", "font", "string" ],
      "white_list": false
    },
    {
      "_id": "551a0ed75899bb3705000023",
      "name": "Fractal Tree",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c4c7c9b9-5551-473e-9c66-ab4b55d373degregPkg895.zip",
          "contents": "FractalTree - creates a fractal tree",
          "engine_metadata": "",
          "engine_version": "0.8.0.856",
          "created": "2015-03-31T03:04:55.489Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Fractal Tree",
              "_id": "551a0ed75899bb3705000023"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-31T03:04:55.489Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 284,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a Fractal Tree using recursion.  Sample included",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "550827dd0c7eac9b57000056",
      "name": "CurvesToPolyCurve",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/00b497f9-b875-496b-8c45-f74af655131fgregPkg94.zip",
          "contents": "CurvesToPolyCurve - Create PolyCurve(s) from given Curves even if they are not chained order",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-03-31T06:22:05.435Z",
          "full_dependency_versions": [ "1.1.0" ],
          "full_dependency_ids": [
            {
              "name": "CurvesToPolyCurve",
              "_id": "550827dd0c7eac9b57000056"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-31T06:22:05.435Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 278,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EnjoyRevit",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create PolyCurves from given Curves even if they are not in chain order",
      "maintainers": [
        {
          "username": "dingohot",
          "_id": "54bdb25bdcee4dfd2600006d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "551a5cf75899bb3705000027",
      "name": "PlanSurface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/94b5f8cc-374b-488e-b80c-bb546ab64425gregPkg417.zip",
          "contents": "PlanSurface - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-03-31T08:38:15.719Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "PlanSurface",
              "_id": "551a5cf75899bb3705000027"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-31T08:38:15.719Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 148,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EnjoyRevit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "create plan surface(s) at lowest level from solid",
      "maintainers": [
        {
          "username": "dingohot",
          "_id": "54bdb25bdcee4dfd2600006d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "551a92d55899bb370500002b",
      "name": "PipeGeomProps",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4a9c2a3f-d9a8-4c9e-911b-2a325c8facf8gregPkg782.zip",
          "contents": "PipeGeomProps - Geometrical characteristics of pipes",
          "engine_metadata": "",
          "engine_version": "0.7.6.4122",
          "created": "2015-03-31T12:28:05.727Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "PipeGeomProps",
              "_id": "551a92d55899bb370500002b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-31T12:28:05.727Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 159,
      "repository_url": "",
      "site_url": "http://hasan-mamay.blogspot.ru",
      "banned": false,
      "deprecated": false,
      "group": "Analyze",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "The geometric characteristics of pipe",
      "maintainers": [
        {
          "username": "KhasanMamaev",
          "_id": "551a92d55899bb370500002a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5378de610e5572016a00006c",
      "name": "Element by Parameter Value",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/291c848d-970b-4e9c-aa5b-3e6d537b6ae6gregPkg456.zip",
          "contents": "Element by Parameter Value - Filter Revit elements by a parameter  value",
          "engine_metadata": "",
          "engine_version": "0.7.6.4256",
          "created": "2015-03-31T23:20:54.134Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Element by Parameter Value",
              "_id": "5378de610e5572016a00006c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-03-31T23:20:54.134Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 711,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Depricated, updated to BlackBox FilterByParameter",
      "maintainers": [
        {
          "username": "anderj24",
          "_id": "5378dd950e5572016a000069"
        }
      ],
      "keywords": [ "filter", "elements", "parameter", "value" ],
      "white_list": false
    },
    {
      "_id": "551b428d5899bb3705000032",
      "name": "IsLine",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f275d323-1076-49af-9b54-f34eddd021d8gregPkg409.zip",
          "contents": "IsLine - Return True if curve is straight line",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-04-01T00:57:49.500Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "IsLine",
              "_id": "551b428d5899bb3705000032"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-01T00:57:49.5Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 131,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EnjoyRevit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Distinguish input curve is straight line or not",
      "maintainers": [
        {
          "username": "dingohot",
          "_id": "54bdb25bdcee4dfd2600006d"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "551eaaaf5899bb3705000041",
      "name": "StockRoom",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/21d6be8e-04c4-47cd-95c9-8a1c42fbde75gregPkg549.zip",
          "contents": "stockroom.fake - for the package manager",
          "engine_metadata": "",
          "engine_version": "0.7.6.4112",
          "created": "2015-04-03T15:20:20.935Z",
          "full_dependency_versions": [ "2015.4.16" ],
          "full_dependency_ids": [
            {
              "name": "StockRoom",
              "_id": "551eaaaf5899bb3705000041"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2015.4.16",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-03T15:20:20.935Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -5,
      "downloads": 120,
      "repository_url": "",
      "site_url": "http://stockroom.mattbenimble.com",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "--PLEASE DO NOT INSTALL FROM PACKAGE MANAGER--\r\nvisit: http:stockroom.mattbenimble.com for install\r\n\r\nA Revit Protyping Package for Dynamo \r\nGranting rapid access to the Revit API.",
      "maintainers": [
        {
          "username": "mnelson7982@gmail.com",
          "_id": "551eaaaf5899bb3705000040"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5525e0425899bb3705000054",
      "name": "Chris Hutchings",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3edfbb01-7af2-4c88-bd9a-357239ea7279gregPkg933.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-04-09T02:13:22.145Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Chris Hutchings",
              "_id": "5525e0425899bb3705000054"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-09T02:13:22.145Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 78,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "NLBIM",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "KeynoteParameterModifier",
      "maintainers": [
        {
          "username": "christopher.gc.waters@gmail.com",
          "_id": "5525e0415899bb3705000053"
        }
      ],
      "keywords": [ "modifys", "the", "information", "in", "keynote", "type", "parameter" ],
      "white_list": false
    },
    {
      "_id": "5527c28a5899bb370500005d",
      "name": "Convert Flat List to List of Strings",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e219b1b3-bdde-4c92-9629-e275c611c908gregPkg194.zip",
          "contents": "Flat List to List of Strings - using python methods",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-04-10T12:31:06.796Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Convert Flat List to List of Strings",
              "_id": "5527c28a5899bb370500005d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-10T12:31:06.796Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 431,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "LSJ",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Place Family Instances or Make Topography by Point Cloud",
          "_id": "552e47c55899bb370500007b"
        },
        {
          "name": "Convert Boolean Input to Variable String Output",
          "_id": "553994daa8367b9861000029"
        },
        {
          "name": "Report Build Number and Worksharing Status of RVT file",
          "_id": "553d9514a8367b986100003c"
        },
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        }
      ],
      "num_dependents": 4,
      "description": "uses inbuilt python str convert to take given input and deliver it as list of strings",
      "maintainers": [
        {
          "username": "luke.johnson",
          "_id": "54e3d829dcee4dfd260000f4"
        }
      ],
      "keywords": [ "string" ],
      "white_list": false
    },
    {
      "_id": "5490256afa779c1c1100005d",
      "name": "Get To-From Room",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/dc10d30e-0621-45cf-9d82-6dd9b78f06a1gregPkg133.zip",
          "contents": "Get To-From Room - Extract the ToRoom / FromRoom from Doors or Windows",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-04-14T08:54:59.341Z",
          "full_dependency_versions": [ "2.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Get To-From Room",
              "_id": "5490256afa779c1c1100005d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-14T08:54:59.341Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 737,
      "repository_url": "",
      "site_url": "revitbeyondbim.wordpress.com",
      "banned": false,
      "deprecated": true,
      "group": "BIM4Struc.Data",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Extracts ToRoom / FromRoom elements from selected Doors or Windows for all phases of a project.",
      "maintainers": [
        {
          "username": "dieter.vermeulen@autodesk.com",
          "_id": "54902569fa779c1c1100005c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "552d151b5899bb3705000076",
      "name": "Lingkon",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ae3f1e83-a389-4367-8f69-bcb06d445c23gregPkg107.zip",
          "contents": "6 Point Selector - Its can select Clockwise and Counterclockwise",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-04-14T13:24:43.255Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Lingkon",
              "_id": "552d151b5899bb3705000076"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-14T13:24:43.255Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 63,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Lingkon",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Point Selector",
      "maintainers": [
        {
          "username": "lingkonn@gmail.com",
          "_id": "552d15185899bb3705000075"
        }
      ],
      "keywords": [ "lingkon" ],
      "white_list": false
    },
    {
      "_id": "552e47c55899bb370500007b",
      "name": "Place Family Instances or Make Topography by Point Cloud",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ce6535b5-0a0a-4675-9fdb-856769aca396gregPkg341.zip",
          "contents": "Place Family by Point Cloud - allows dropitems from 0 to 4 (discards half of the points at each drop level). Needs XYZ space or comma delimited text file. The Topography creation option does not seem to work well with huge numbers of points...\r\nRefer to What Revit Wants post for more details.",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-04-16T00:20:28.239Z",
          "full_dependency_versions": [ "0.0.2", "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Place Family Instances or Make Topography by Point Cloud",
              "_id": "552e47c55899bb370500007b"
            },
            {
              "name": "Convert Flat List to List of Strings",
              "_id": "5527c28a5899bb370500005d"
            }
          ],
          "direct_dependency_versions": [ "0.0.1" ],
          "direct_dependency_ids": [
            {
              "name": "Convert Flat List to List of Strings",
              "_id": "5527c28a5899bb370500005d"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-16T00:20:28.239Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 245,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "LSJ",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "see post on What Revit Wants for more details. Still very alpha at this stage. 0.0.0 added point list output.",
      "maintainers": [
        {
          "username": "luke.johnson",
          "_id": "54e3d829dcee4dfd260000f4"
        }
      ],
      "keywords": [ "point", "cloud" ],
      "white_list": false
    },
    {
      "_id": "55375b5da8367b986100001a",
      "name": "Create a Surface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/27f278c4-03b5-4e92-b3de-973dbce7564dgregPkg799.zip",
          "contents": "wavesurface - No description provided",
          "engine_metadata": "",
          "engine_version": "0.8.0.1111",
          "created": "2015-04-22T08:27:09.853Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Create a Surface",
              "_id": "55375b5da8367b986100001a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-22T08:27:09.853Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 41,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a surface of wave form",
      "maintainers": [
        {
          "username": "aparajit",
          "_id": "55363745a8367b9861000016"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5537605da8367b986100001c",
      "name": "Wave Surface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1ddb34be-cb9b-4546-b294-04a88a55d664gregPkg452.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.1111",
          "created": "2015-04-22T08:48:29.979Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Wave Surface",
              "_id": "5537605da8367b986100001c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-22T08:48:29.979Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 13,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create surface with wave form - Testing Sign-in dialog",
      "maintainers": [
        {
          "username": "aparajit",
          "_id": "55363745a8367b9861000016"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5538b6b8a8367b9861000025",
      "name": "Test",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a9d333e6-3007-4b6d-bf03-258ec2aa7777gregPkg138.zip",
          "contents": "BoundingBoxXYZ - This node represents an upgrade of the <0.6.3 BoundingBoxXYZ node to.",
          "engine_metadata": "",
          "engine_version": "0.8.0.1122",
          "created": "2015-04-23T09:09:12.951Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Test",
              "_id": "5538b6b8a8367b9861000025"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-23T09:09:12.951Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "hjknmbnmnnmm",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5538be22a8367b9861000027",
      "name": "monika",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/870e53a5-6ca8-46a8-b8fb-0ced781ef1e8gregPkg570.zip",
          "contents": "testing - No description provided",
          "engine_metadata": "",
          "engine_version": "0.8.0.1112",
          "created": "2015-04-23T09:40:50.961Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "monika",
              "_id": "5538be22a8367b9861000027"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-23T09:40:50.961Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 4,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "publish package online ",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "553994daa8367b9861000029",
      "name": "Convert Boolean Input to Variable String Output",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2ff616b9-02a3-43f0-bd2c-1a9acc9754c3gregPkg289.zip",
          "contents": "If Equal Return Index - If element in list A is equal to an element in list B then return index from list B., Boolean Input to Variable String Output - you choose what you want to convert true / false to, good for validation",
          "engine_metadata": "",
          "engine_version": "0.8.0.706",
          "created": "2015-04-24T00:56:58.059Z",
          "full_dependency_versions": [ "0.0.1", "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Convert Boolean Input to Variable String Output",
              "_id": "553994daa8367b9861000029"
            },
            {
              "name": "Convert Flat List to List of Strings",
              "_id": "5527c28a5899bb370500005d"
            }
          ],
          "direct_dependency_versions": [ "0.0.1" ],
          "direct_dependency_ids": [
            {
              "name": "Convert Flat List to List of Strings",
              "_id": "5527c28a5899bb370500005d"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-24T00:56:58.059Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 31,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "LSJ",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "when you want to take a Boolean and give one of two different Strings as output",
      "maintainers": [
        {
          "username": "luke.johnson",
          "_id": "54e3d829dcee4dfd260000f4"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "553a789ba8367b9861000033",
      "name": "shana",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9171f46d-d87c-413d-bbcc-36df6821b956gregPkg330.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.1132",
          "created": "2015-04-24T17:08:43.150Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "shana",
              "_id": "553a789ba8367b9861000033"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-24T17:08:43.15Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 15,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "s",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "sasdasdasdasdasd",
      "maintainers": [
        {
          "username": "priwer",
          "_id": "553a7841a8367b9861000031"
        }
      ],
      "keywords": [ "sss" ],
      "white_list": false
    },
    {
      "_id": "553d1c94a8367b9861000039",
      "name": "List.FilterByString.Boolean",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d38be4ba-b8ba-4e6c-abd9-668a12ce1704gregPkg346.zip",
          "contents": "List.FilterByString.Boolean - Return boolean by string filter",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-04-26T17:12:52.107Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "List.FilterByString.Boolean",
              "_id": "553d1c94a8367b9861000039"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-26T17:12:52.107Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 225,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Filter By String with Boolean as return values",
      "maintainers": [
        {
          "username": "long.tran@mac.com",
          "_id": "553d1c94a8367b9861000038"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "53faae830e5572016a00019f",
      "name": "BuildingMaker_RevolvedCuboid",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/458af1e3-3ae5-4063-8ecc-100c81c31932gregPkg284.zip",
          "contents": "BuiildingMaker_RevolvedCuboid - Makes a Building based on base proportion and target square footage",
          "engine_metadata": "",
          "engine_version": "0.8.0.1164",
          "created": "2015-04-28T03:33:42.744Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "BuildingMaker_RevolvedCuboid",
              "_id": "53faae830e5572016a00019f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-28T03:33:42.744Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 244,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Makes a Tower with consistent floor area based on a revolved cubiod",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "building", "generator", "cuboid" ],
      "white_list": false
    },
    {
      "_id": "553f7ce2a8367b9861000041",
      "name": "C.F. Moller",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/fd3b0325-b56f-47b9-a8eb-e9dd810e3c45gregPkg693.zip",
          "contents": "Apply View Template - This node will allow you to apply a view template to a set of views., Get Floor Plan - This node will query all views in the model and return them based on category",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-04-28T12:47:07.996Z",
          "full_dependency_versions": [ "0.0.2", "0.72.1" ],
          "full_dependency_ids": [
            {
              "name": "C.F. Moller",
              "_id": "553f7ce2a8367b9861000041"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "direct_dependency_versions": [ "0.72.1" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-28T12:47:07.996Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 69,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "C.F. Møllers custom nodes",
      "maintainers": [
        {
          "username": "K.Kvistgaard",
          "_id": "553f7ce1a8367b9861000040"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54eb61ecdcee4dfd2600010a",
      "name": "DynamoUtilities",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/00312ddc-245c-4681-bfb6-1cf06f334131gregPkg219.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.1.1106",
          "created": "2015-04-29T13:53:34.810Z",
          "full_dependency_versions": [ "0.0.6" ],
          "full_dependency_ids": [
            {
              "name": "DynamoUtilities",
              "_id": "54eb61ecdcee4dfd2600010a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-29T13:53:34.81Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 421,
      "repository_url": "https://github.com/redinkinc/DynamoUtilities.git",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Utilities",
      "engine": "dynamo",
      "license": "Apache License, Version 2.0, January 2004",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Experimental build of dynamo utilities (https://github.com/redinkinc/DynamoUtilities.git). Includes two nodes:\r\n- a dropdown from a list that returns the selected value and index\r\n- a watch2d that displays the values from a list of doubles as ether a graph or a histogram.\r\n\r\nIMPROVEMENTS:\r\nCan be used directly without copying the .dll's into the node folder\r\nDropdown saves selected index in .dyn file\r\n\r\nPlease notice this is still an experimental build. Most of the exceptions are not handled jet and cause Dynamo to crash. Please report any comments and issues to the github repository issue list. ",
      "maintainers": [
        {
          "username": "fabian.ritter@tum.de",
          "_id": "5474bb55b77c84600c000047"
        }
      ],
      "keywords": [ "watch2d;", "dropdown", "list" ],
      "white_list": false
    },
    {
      "_id": "55378307a8367b986100001e",
      "name": "Dynanimator",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/96c3c945-6df7-4d1d-9649-d50212b129bdgregPkg561.zip",
          "contents": "Dynanimate Camera And Target Position - Animates the camera and target position of a perspective view., Dynanimate Camera Position With Fixed Target - Animates the camera of a perspective view around a fixed target., Dynanimate Element Color - Animates the color of a selection of elements in the active view., Dynanimate Element Transparency - Animates the transparency of a selection of elements in a given view., Dynanimate Numeric Parameter And Camera Position With Fixed Target - Animates the camera of a perspective view around a fixed target., Dynanimate Numeric Parameter - Animates parameter values of a selection of elements., Dynanimate Phases - Animates the phases of a project in a given view., Dynanimate Target Position With Fixed Camera Position - Animates the target position of a perspective view with a fixed camera position., DynanimatorFunction Camera And Target Position - Helper function for Dynanimate Camera And Target Position, DynanimatorFunction Camera Position With Fixed Target - Helper function for Dynanimate Camera Position With Fixed Target, DynanimatorFunction Element Color - Helper function for Dynanimate Element Color, DynanimatorFunction Element Transparency - Helper function for Dynanimate Element Transparency, DynanimatorFunction Numeric Parameter And Camera Position With Fixed Target - Helper function for Dynanimate Camera Position With Fixed Target, DynanimatorFunction Numeric Parameter - Helper function for Dynanimate Numeric Parameter, DynanimatorFunction Phases - Helper function for Dynanimate Phases, DynanimatorFunction Target Position With Fixed Camera - Helper function for Dynanimate Target Position With Fixed Camera Position, DynanimatorNestedFunction Numeric Parameter And Camera Position With Fixed Target - Nested function used in DynanimatorFunction Numeric Parameter And Camera Position With Fixed Target",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-04-30T07:41:07.229Z",
          "full_dependency_versions": [ "1.0.4", "0.75.24" ],
          "full_dependency_ids": [
            {
              "name": "Dynanimator",
              "_id": "55378307a8367b986100001e"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "direct_dependency_versions": [ "0.75.24" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "change_log": "",
          "version": "1.0.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-30T07:41:07.229Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 868,
      "repository_url": "https://github.com/BadMonkeysInc/Dynanimator",
      "site_url": "http://vasshaug.net/",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This package contains a collection of nodes that will create images between a set of Revit model changes. Refer to the repository URL for tips on usage.",
      "maintainers": [
        {
          "username": "vasshaug",
          "_id": "53182dc0bfe42595360000c1"
        }
      ],
      "keywords": [ "animation", "image", "parameter", "iteration" ],
      "white_list": false
    },
    {
      "_id": "55429a5ea8367b9861000055",
      "name": "EvaluatePanelOrientationToSun",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/52da75cd-021f-4207-8181-19800c3a6da7gregPkg512.zip",
          "contents": "AllNormalsPointUpward - No description provided, AllNormalsPointOutward - No description provided, EvaluatePanelOrientationToSun - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-04-30T21:10:54.429Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "EvaluatePanelOrientationToSun",
              "_id": "55429a5ea8367b9861000055"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-04-30T21:10:54.429Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 139,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "EvaluatePanelOrientationToSun",
      "maintainers": [
        {
          "username": "rui3",
          "_id": "55429a5ca8367b9861000054"
        }
      ],
      "keywords": [ "sun" ],
      "white_list": false
    },
    {
      "_id": "553d9514a8367b986100003c",
      "name": "Report Build Number and Worksharing Status of RVT file",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/dc8e0a1a-8c54-4027-adc9-ade37880e986gregPkg555.zip",
          "contents": "Get Build Number and Worksharing from RVT file - uses read.text and string split methods, from Marcello",
          "engine_metadata": "",
          "engine_version": "0.8.0.706",
          "created": "2015-05-01T04:17:54.758Z",
          "full_dependency_versions": [ "0.0.3", "0.0.1", "0.75.21" ],
          "full_dependency_ids": [
            {
              "name": "Report Build Number and Worksharing Status of RVT file",
              "_id": "553d9514a8367b986100003c"
            },
            {
              "name": "Convert Flat List to List of Strings",
              "_id": "5527c28a5899bb370500005d"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "direct_dependency_versions": [ "0.0.1", "0.75.21" ],
          "direct_dependency_ids": [
            {
              "name": "Convert Flat List to List of Strings",
              "_id": "5527c28a5899bb370500005d"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-05-01T04:17:54.758Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 27,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "LSJ",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Returns a flat list with some headings \"build number\" and \" worksharing status\". credit to Marcello Sgambelluri. 002 fixes central status. 003 fixed build.",
      "maintainers": [
        {
          "username": "luke.johnson",
          "_id": "54e3d829dcee4dfd260000f4"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55322d5da8367b9861000005",
      "name": "Maxymo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/80db2acf-d297-467b-a9cd-547641456940gregPkg89.zip",
          "contents": "MXCircle - Maxymo Circle, MXCone - Maxymo Circle, MXCuboid - Maxymo Circle, MXCylinder - Maxymo Circle, MXFace - Maxymo Circle, MXLine - Maxymo Circle, MXPoint - Maxymo Circle, MXReceiveNodes - Receive Nodes from Maxymo, MXServer - Maxymo Socket, MXSocket - Maxymo Socket, MXSphere - Maxymo Circle",
          "engine_metadata": "",
          "engine_version": "0.8.1.1060",
          "created": "2015-05-03T13:19:57.670Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Maxymo",
              "_id": "55322d5da8367b9861000005"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-05-03T13:19:57.67Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 223,
      "repository_url": "",
      "site_url": "http://www.scriptspot.com/3ds-max/scripts/maxymo-server",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Send Dynamo Geometry to 3ds Max",
      "maintainers": [
        {
          "username": "jabi",
          "_id": "52f7ca85bfe4259536000064"
        }
      ],
      "keywords": [ "3ds", "max" ],
      "white_list": false
    },
    {
      "_id": "554b3a30a8367b9861000077",
      "name": "Mirror Element Using Origin and Normal Vector",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/53982c6a-bff1-4fff-bbb1-41eb81939559gregPkg660.zip",
          "contents": "Mirror an Element - using python, Mirror Element Using Origin and Normal Vector - No description provided",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-05-07T10:10:56.485Z",
          "full_dependency_versions": [ "0.0.1", "0.1.5", "0.1.2", "0.75.24" ],
          "full_dependency_ids": [
            {
              "name": "Mirror Element Using Origin and Normal Vector",
              "_id": "554b3a30a8367b9861000077"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "direct_dependency_versions": [ "0.75.24", "0.1.5", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-05-07T10:10:56.485Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 77,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "LSJ",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "will use instance origin and hosted object normal vectors. input 0 for facing or 1 for hand mirror. It will duplicate objects, and make a selection set for you to delete originals later. Thanks to Dimitar Venkov for the Python help.",
      "maintainers": [
        {
          "username": "luke.johnson",
          "_id": "54e3d829dcee4dfd260000f4"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "554de440a8367b9861000082",
      "name": "ConnectPointRevit",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0341c6f5-d1c5-4f5b-b2aa-f3374ba8fecfgregPkg429.zip",
          "contents": "ConnectPoints - ConnectPointsRevit",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-05-09T10:41:04.324Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "ConnectPointRevit",
              "_id": "554de440a8367b9861000082"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-05-09T10:41:04.324Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 193,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Connect Points by a chain",
      "maintainers": [
        {
          "username": "pelle-niklas@t-online.de",
          "_id": "554ddd4aa8367b9861000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "554de4b7a8367b9861000084",
      "name": "ConnectPointsRevit",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/be20f701-e6a1-49d4-a066-1b6fd89ad520gregPkg760.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-05-09T10:43:03.232Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "ConnectPointsRevit",
              "_id": "554de4b7a8367b9861000084"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-05-09T10:43:03.232Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 115,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Test Connect Points",
      "maintainers": [
        {
          "username": "pelle-niklas@t-online.de",
          "_id": "554ddd4aa8367b9861000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5497aa163bdbc3ea4a000004",
      "name": "DetailLine.ByCurveAndView",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/37d75ba9-ba7a-4b79-9b82-0ed2ef32b7e0gregPkg235.zip",
          "contents": "DetailLine.ByCurveAndView - Create detail lines from geometry curves in the specified view.",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-05-15T07:02:04.031Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "DetailLine.ByCurveAndView",
              "_id": "5497aa163bdbc3ea4a000004"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-05-15T07:02:04.031Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 204,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "DEV",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "*DEPRICIATED* Use Clockwork for Dynamo instead.\r\n\r\nCreate detail lines from geometry curves in the specified view.",
      "maintainers": [
        {
          "username": "dimiter_v@mail.bg",
          "_id": "532baed2bfe42595360000e3"
        }
      ],
      "keywords": [ "detail", "line" ],
      "white_list": false
    },
    {
      "_id": "555f12f5a8367b98610000c0",
      "name": "Elements in View(s)",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3cac1193-ed07-4c15-a93e-7527f4436e11gregPkg626.zip",
          "contents": "Elements in View(s) - Gets all elements in given view(s).",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-05-22T11:37:13.140Z",
          "full_dependency_versions": [ "1.0.1", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Elements in View(s)",
              "_id": "555f12f5a8367b98610000c0"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-05-22T11:37:13.14Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 660,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Gets the elements in a given (list of) view(s)",
      "maintainers": [
        {
          "username": "marctavenier@msn.com",
          "_id": "555f12f5a8367b98610000bf"
        }
      ],
      "keywords": [ "element", "elements", "view", "views" ],
      "white_list": false
    },
    {
      "_id": "556fb12ff2ae5a9a07000014",
      "name": "Compare two point grids",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c2663cf5-149c-49fb-b550-748b765cca89gregPkg699.zip",
          "contents": "Compare two point Grids - For each point on Grid1, finds the closest point on Grid2, returns the Grid2 index.",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-06-04T02:00:15.970Z",
          "full_dependency_versions": [ "8.0.950" ],
          "full_dependency_ids": [
            {
              "name": "Compare two point grids",
              "_id": "556fb12ff2ae5a9a07000014"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "8.0.950",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-04T02:00:15.97Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 58,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "For each point on Grid1, finds the closest point on Grid2, returns the Grid2 index.\r\nDesigned to work with the image.pixels node, mapping that image to a variable number of objects.",
      "maintainers": [
        {
          "username": "Glenn.Sinclair",
          "_id": "542563b2cc26bfdc5a00002d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5579345ef2ae5a9a0700005f",
      "name": "ClassLibrary2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8e57b51f-19a4-459b-bfed-b99bc5d81756gregPkg66.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.1592",
          "created": "2015-06-11T07:10:22.929Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "ClassLibrary2",
              "_id": "5579345ef2ae5a9a0700005f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-11T07:10:22.929Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 56,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "classLibrary",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "ClassLibrary2.dll+xml",
      "maintainers": [
        {
          "username": "t_yanz",
          "_id": "55792f5ef2ae5a9a0700005c"
        }
      ],
      "keywords": [ "class" ],
      "white_list": false
    },
    {
      "_id": "55793c06f2ae5a9a07000062",
      "name": "HFB",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/fb826e4c-7801-4924-ab58-7863097a399fgregPkg569.zip",
          "contents": "HFB sheet parameter to excel - HFB sheet parameter to excel",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-06-11T07:43:02.639Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "HFB",
              "_id": "55793c06f2ae5a9a07000062"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-11T07:43:02.639Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 214,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Revit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "HFB revit package",
      "maintainers": [
        {
          "username": "j.stuij@hfb-groep.nl",
          "_id": "55793c06f2ae5a9a07000061"
        }
      ],
      "keywords": [ "revit" ],
      "white_list": false
    },
    {
      "_id": "557941cff2ae5a9a07000065",
      "name": "Curve Pipe",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/126153dd-8f13-4f1d-b155-104e2733d95egregPkg870.zip",
          "contents": "Curve Pipe - Creates a solid pipe around a curve",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-06-11T08:07:43.032Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Curve Pipe",
              "_id": "557941cff2ae5a9a07000065"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-11T08:07:43.032Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 466,
      "repository_url": "",
      "site_url": "www.zweiform.de",
      "banned": false,
      "deprecated": false,
      "group": "Geometry, Solids, Pipe",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a solid pipe around a curve. Similar to the Rhino-native _pipe-command.",
      "maintainers": [
        {
          "username": "zweiform",
          "_id": "557941cef2ae5a9a07000064"
        }
      ],
      "keywords": [ "geometry", "solids", "pipe" ],
      "white_list": false
    },
    {
      "_id": "557e3868f2ae5a9a0700009a",
      "name": "myicon1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6b885f50-18a3-4483-8f30-b35b31d81edcgregPkg87.zip",
          "contents": "aaa - aaa",
          "engine_metadata": "",
          "engine_version": "0.8.0.1592",
          "created": "2015-06-15T02:28:56.032Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "myicon1",
              "_id": "557e3868f2ae5a9a0700009a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-15T02:28:56.032Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 12,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "myicon1has iocon",
      "maintainers": [
        {
          "username": "t_yanz",
          "_id": "55792f5ef2ae5a9a0700005c"
        }
      ],
      "keywords": [ "myicon1" ],
      "white_list": false
    },
    {
      "_id": "557e3d34f2ae5a9a0700009c",
      "name": "icon123iconf",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b89897d0-bf97-4d9a-bcc0-af492094cb6bgregPkg866.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.1592",
          "created": "2015-06-15T02:49:24.588Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "icon123iconf",
              "_id": "557e3d34f2ae5a9a0700009c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-15T02:49:24.588Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "sdlfkasjdfoisdfjasdof",
      "maintainers": [
        {
          "username": "t_yanz",
          "_id": "55792f5ef2ae5a9a0700005c"
        }
      ],
      "keywords": [ "iconyan" ],
      "white_list": false
    },
    {
      "_id": "557e88d3f2ae5a9a0700009e",
      "name": "uploadLime",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8fde01c1-6f2b-4013-b2df-b7a9f296eb6agregPkg943.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.1592",
          "created": "2015-06-15T08:12:03.761Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "uploadLime",
              "_id": "557e88d3f2ae5a9a0700009e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-15T08:12:03.761Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 3,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "upLoadLimeffffffffffff",
      "maintainers": [
        {
          "username": "t_yanz",
          "_id": "55792f5ef2ae5a9a0700005c"
        }
      ],
      "keywords": [ "uploadlime" ],
      "white_list": false
    },
    {
      "_id": "557e896ff2ae5a9a070000a0",
      "name": "uploadLime1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a2f8acf4-34f0-4ff3-90ac-8234df3e5e77gregPkg675.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.1592",
          "created": "2015-06-15T08:14:39.114Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "uploadLime1",
              "_id": "557e896ff2ae5a9a070000a0"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-15T08:14:39.114Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 9,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "ssssssssssssssssssssssssss",
      "maintainers": [
        {
          "username": "t_yanz",
          "_id": "55792f5ef2ae5a9a0700005c"
        }
      ],
      "keywords": [ "uploadlime2" ],
      "white_list": false
    },
    {
      "_id": "557e8cbbf2ae5a9a070000a2",
      "name": "111limandminh",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ea4ff4d3-30c5-45a1-b24e-824a7d3333b2gregPkg963.zip",
          "contents": "abcd - abcd",
          "engine_metadata": "",
          "engine_version": "0.8.0.1592",
          "created": "2015-06-15T08:28:43.505Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "111limandminh",
              "_id": "557e8cbbf2ae5a9a070000a2"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-15T08:28:43.505Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 27,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "safas",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "111asfsdfasdfasdfsdf",
      "maintainers": [
        {
          "username": "t_yanz",
          "_id": "55792f5ef2ae5a9a0700005c"
        }
      ],
      "keywords": [ "11minh" ],
      "white_list": false
    },
    {
      "_id": "5582bdd4f2ae5a9a070000b5",
      "name": "OptimaX",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ac7239b3-46b4-4b91-89cb-5ef94231c3cfgregPkg369.zip",
          "contents": "OptimaX - Optimize Shell Structure 1",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-06-18T12:47:16.719Z",
          "full_dependency_versions": [ "1.1.1", "0.2.0" ],
          "full_dependency_ids": [
            {
              "name": "OptimaX",
              "_id": "5582bdd4f2ae5a9a070000b5"
            },
            {
              "name": "Structural Analysis for Dynamo",
              "_id": "546b8e83b77c84600c000011"
            }
          ],
          "direct_dependency_versions": [ "0.2.0" ],
          "direct_dependency_ids": [
            {
              "name": "Structural Analysis for Dynamo",
              "_id": "546b8e83b77c84600c000011"
            }
          ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-18T12:47:16.719Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 87,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Shell Structure Optimizer - Under Development -Developed By Ahmed Zakzouk ",
      "maintainers": [
        {
          "username": "ahmed_zakzouk0@yahoo.com",
          "_id": "5582bdd4f2ae5a9a070000b4"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "558379a4f2ae5a9a070000bb",
      "name": "pvhDynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/10a6ce0d-140a-4abb-ab49-e058d553a64agregPkg596.zip",
          "contents": "Text To Upper Case - Text In Parameter to Upper Case",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-06-19T02:08:36.136Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "pvhDynamo",
              "_id": "558379a4f2ae5a9a070000bb"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-19T02:08:36.136Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 41,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "pvh",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "pvh Dynamo Nodes",
      "maintainers": [
        {
          "username": "michael@emaa.com.au",
          "_id": "558379a3f2ae5a9a070000ba"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "558c17faf2ae5a9a070000dc",
      "name": "Home upload",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/515ad06d-7b50-4343-ac10-d9a549f682d0gregPkg672.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.0",
          "created": "2015-06-25T15:02:18.136Z",
          "full_dependency_versions": [ "3.3.3" ],
          "full_dependency_ids": [
            {
              "name": "Home upload",
              "_id": "558c17faf2ae5a9a070000dc"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "3.3.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-25T15:02:18.136Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 0,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Home upload desc",
      "maintainers": [
        {
          "username": "jnealb",
          "_id": "546ceba1b77c84600c00001d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55910232f2ae5a9a070000eb",
      "name": "Elements.get.Rotation",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ecdc84cd-1ab6-4d3d-9c33-13c81788ad70gregPkg304.zip",
          "contents": "Elements.get.Rotation - This node give the rotation in radians and degrees of elements that are placed in a project/family. \r\nThe rotation is counterclockwise and based on the original orientation.\r\n\r\nInput is an elements or list of elements\r\noutput is a list in radian and degrees",
          "engine_metadata": "",
          "engine_version": "1.0.0.0",
          "created": "2015-06-29T08:30:42.938Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Elements.get.Rotation",
              "_id": "55910232f2ae5a9a070000eb"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-29T08:30:42.938Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 336,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "ABT",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This node give the rotation in radians and degrees of elements that are placed in a project/family. \r\nThe rotation is counterclockwise and based on the original orientation.\r\n\r\nInput is an elements or list of elements\r\noutput is a list in radian and degrees",
      "maintainers": [
        {
          "username": "MartinB2",
          "_id": "54ec7ab5dcee4dfd26000113"
        }
      ],
      "keywords": [ "rotation", "elements", "element" ],
      "white_list": false
    },
    {
      "_id": "55924214f2ae5a9a070000f5",
      "name": "LineBystartpointEndpoint",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/33adac51-7021-4c59-9a38-d1338e4e03dagregPkg108.zip",
          "contents": "createLine3 - create Line with two point",
          "engine_metadata": "",
          "engine_version": "1.0.0.0",
          "created": "2015-06-30T07:15:32.661Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "LineBystartpointEndpoint",
              "_id": "55924214f2ae5a9a070000f5"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-06-30T07:15:32.661Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 47,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "create a line with two same output line, start point is (0,0,0), end point is(2,0,0)",
      "maintainers": [
        {
          "username": "t_yanz",
          "_id": "55792f5ef2ae5a9a0700005c"
        }
      ],
      "keywords": [ "line" ],
      "white_list": false
    },
    {
      "_id": "559d0864f2ae5a9a07000125",
      "name": "Id to Element",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d0ecca6e-01d9-444d-9b89-2858bbae785egregPkg630.zip",
          "contents": "Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID)",
          "engine_metadata": "",
          "engine_version": "1.0.0.0",
          "created": "2015-07-08T11:24:20.948Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Id to Element",
              "_id": "559d0864f2ae5a9a07000125"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-07-08T11:24:20.948Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 858,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Own",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Id to Element",
      "maintainers": [
        {
          "username": "herbert.voort@itannex.com",
          "_id": "559d07def2ae5a9a07000124"
        }
      ],
      "keywords": [ "id" ],
      "white_list": false
    },
    {
      "_id": "559ef172f2ae5a9a07000136",
      "name": "Workset.Create",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6d73dcb2-b83f-48c8-a035-b67906824c32gregPkg632.zip",
          "contents": "Workset.Create - Creates worksets, input is a string or list of strings.\r\nExisting worksetnames are ignored.",
          "engine_metadata": "",
          "engine_version": "1.0.0.0",
          "created": "2015-07-09T22:15:00.130Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Workset.Create",
              "_id": "559ef172f2ae5a9a07000136"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-07-09T22:15:00.13Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 801,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "ABT",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates worksets, input is a string or list of strings",
      "maintainers": [
        {
          "username": "MartinB2",
          "_id": "54ec7ab5dcee4dfd26000113"
        }
      ],
      "keywords": [ "workset" ],
      "white_list": false
    },
    {
      "_id": "559f8396f2ae5a9a0700013d",
      "name": "Simple Line Creation",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2923d6fd-b970-4067-8b23-d67eea09bf77gregPkg511.zip",
          "contents": "CreateLine - Create one line by providing X coordinate. The other one in origin point",
          "engine_metadata": "",
          "engine_version": "0.8.0.1653",
          "created": "2015-07-10T08:34:30.682Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Simple Line Creation",
              "_id": "559f8396f2ae5a9a0700013d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-07-10T08:34:30.682Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 12,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create one Line by providing only X coordiante, the other point is origin point by default.",
      "maintainers": [
        {
          "username": "t_yanz",
          "_id": "55792f5ef2ae5a9a0700005c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "559f88e9f2ae5a9a0700013f",
      "name": "LineCreation",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/23dbc294-e48d-4617-b40d-24c89e8defbcgregPkg46.zip",
          "contents": "LineCreation - Create a line by providing X,Y,Z coordinate value. the other point is original point",
          "engine_metadata": "",
          "engine_version": "1.0.0.0",
          "created": "2015-07-10T08:57:13.936Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "LineCreation",
              "_id": "559f88e9f2ae5a9a0700013f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-07-10T08:57:13.936Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 22,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create a line by providing X,Y,Z and it is linked with origin",
      "maintainers": [
        {
          "username": "t_yanz",
          "_id": "55792f5ef2ae5a9a0700005c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55a4c949662bf0e90800000f",
      "name": "RotateAdaptiveComponentDuringPlacement",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/21048419-f46f-4499-a191-0ef92106120dgregPkg53.zip",
          "contents": "RotateAdaptiveComponentDuringPlacement - This will provide you opportunity to rotate Adaptive Componenet while placement.",
          "engine_metadata": "",
          "engine_version": "1.0.0.0",
          "created": "2015-07-14T08:59:11.478Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "RotateAdaptiveComponentDuringPlacement",
              "_id": "55a4c949662bf0e90800000f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-07-14T08:59:11.478Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 100,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "UtilityNodes",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This will provide you opportunity to rotate Adaptive Componenet while placement.",
      "maintainers": [
        {
          "username": "critesh",
          "_id": "530da612bfe42595360000b0"
        }
      ],
      "keywords": [ "adaptive", "components", "rotation", "or", "rotate" ],
      "white_list": false
    },
    {
      "_id": "55a84c71662bf0e90800001e",
      "name": "T-DeX",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9600d647-4303-4d59-bb79-ab8d89815bb8gregPkg37.zip",
          "contents": "Document.ExternalFileReferences - Get all external file references from revit link types., Document.GetLinkedDocumentFromPath - Gets the linked document from a path",
          "engine_metadata": "",
          "engine_version": "0.8.1.1823",
          "created": "2015-07-17T00:29:37.153Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "T-DeX",
              "_id": "55a84c71662bf0e90800001e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-07-17T00:29:37.153Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 72,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo extensions from Taisei",
      "maintainers": [
        {
          "username": "hps_anave",
          "_id": "55503951a8367b986100008e"
        }
      ],
      "keywords": [ "external", "file", "reference", "linked", "document", "link" ],
      "white_list": false
    },
    {
      "_id": "55acde09662bf0e908000028",
      "name": "cncn",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/049c45b9-3860-4984-9862-e6e0dd478368gregPkg226.zip",
          "contents": "cn - cn",
          "engine_metadata": "",
          "engine_version": "1.0.0.0",
          "created": "2015-07-20T11:39:53.262Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "cncn",
              "_id": "55acde09662bf0e908000028"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-07-20T11:39:53.262Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 16,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "cncncncncncn",
      "maintainers": [
        {
          "username": "maria.manoylo@autodesk.com",
          "_id": "55acdd8c662bf0e908000027"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55acf200662bf0e90800002b",
      "name": "Cute rainbow",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8de94365-3615-4f93-8403-d092308d4367gregPkg763.zip",
          "contents": "Rainbow - No description provided",
          "engine_metadata": "",
          "engine_version": "0.8.2.1904",
          "created": "2015-07-20T13:05:04.136Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Cute rainbow",
              "_id": "55acf200662bf0e90800002b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-07-20T13:05:04.136Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 26,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Cute rainbow",
      "maintainers": [
        {
          "username": "maria.manoylo@autodesk.com",
          "_id": "55acdd8c662bf0e908000027"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55b4ed2e662bf0e908000040",
      "name": "Robert Narracci",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b8194fba-67bd-4ea3-87eb-e6277e2c318cgregPkg138.zip",
          "contents": "UV Quads on Surface Reorder - Reorder groups of 4 points from a grid on a surface",
          "engine_metadata": "",
          "engine_version": "1.0.0.0",
          "created": "2015-07-26T14:22:38.978Z",
          "full_dependency_versions": [ "0.8.2" ],
          "full_dependency_ids": [
            {
              "name": "Robert Narracci",
              "_id": "55b4ed2e662bf0e908000040"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.8.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-07-26T14:22:38.978Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 10,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Geometry.Surface",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Reorder Quad points coming from \"UV Quads on Surface\" node. Thanks to Colin McCrone for that node.",
      "maintainers": [
        {
          "username": "rnarracci@pcparch.com",
          "_id": "55b4ec2d662bf0e90800003f"
        }
      ],
      "keywords": [ "quads", "reorder", "sort", "points" ],
      "white_list": false
    },
    {
      "_id": "55b5590d662bf0e908000042",
      "name": "UV Quads on Surface Reorder",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5a0e4587-61b2-4d1d-aba1-0133c63b160cgregPkg22.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.0",
          "created": "2015-07-26T22:02:53.510Z",
          "full_dependency_versions": [ "0.8.2" ],
          "full_dependency_ids": [
            {
              "name": "UV Quads on Surface Reorder",
              "_id": "55b5590d662bf0e908000042"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.8.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-07-26T22:02:53.51Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 102,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Geometry.Surface",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Reorder groups of 4 points from a grid on a surface",
      "maintainers": [
        {
          "username": "rnarracci@pcparch.com",
          "_id": "55b4ec2d662bf0e90800003f"
        }
      ],
      "keywords": [ "uv", "points", "reorder", "order", "sort" ],
      "white_list": false
    },
    {
      "_id": "55b691de662bf0e90800004b",
      "name": "Mourrekh",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/28d8e706-d267-4ab4-9777-dc6594dbcfe8gregPkg871.zip",
          "contents": "STR ext - STR ext mars, STR Mars 2nd degre - Mars STR, tressage - courbes tressees dans une direction, arete epaisseur - peau ep, Curve points - EXT STR PTS, Peau Finale - final, Peau premiere couche - premier pas, Peau totale - peau, Perimeter curve - gets perimeter curve, SAS ext - sas ext",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-07-28T06:35:15.192Z",
          "full_dependency_versions": [ "0.0.2", "0.9.9" ],
          "full_dependency_ids": [
            {
              "name": "Mourrekh",
              "_id": "55b691de662bf0e90800004b"
            },
            {
              "name": "DOHA M2 ",
              "_id": "55478245a8367b9861000063"
            }
          ],
          "direct_dependency_versions": [ "0.9.9" ],
          "direct_dependency_ids": [
            {
              "name": "DOHA M2 ",
              "_id": "55478245a8367b9861000063"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-07-28T06:35:15.192Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 18,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "M.S.P manzil ",
      "maintainers": [
        {
          "username": "Mchtoufy",
          "_id": "55478244a8367b9861000062"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55be53a7662bf0e908000069",
      "name": "PipeQA Beta",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a0a6252f-ecb9-4aaf-b3cf-f674d01fed38gregPkg308.zip",
          "contents": "CheckSystem - Return pipes with a specific System Type.\r\nSystemType must be entered by its ID.\r\n607132 Sanitary, Check.SystemType - Check if pipe has system type, CheckSlope - Check if pipe has the minimal slope.\r\nX is the number in the fraction 1/X of the minimal slope",
          "engine_metadata": "",
          "engine_version": "0.8.1.1942",
          "created": "2015-08-02T17:30:15.358Z",
          "full_dependency_versions": [ "8.8.8" ],
          "full_dependency_ids": [
            {
              "name": "PipeQA Beta",
              "_id": "55be53a7662bf0e908000069"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "8.8.8",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-08-02T17:30:15.358Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 210,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "QA",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Simple nodes for MEP pipes QA- Still in beta",
      "maintainers": [
        {
          "username": "pderendinger@gmail.com",
          "_id": "55be531b662bf0e908000068"
        }
      ],
      "keywords": [ "mep", "qa" ],
      "white_list": false
    },
    {
      "_id": "55c0e472662bf0e908000074",
      "name": "Simple",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ee177f31-59e1-4369-bce1-77f36c77ecb3gregPkg85.zip",
          "contents": "Simple - Simple Desc",
          "engine_metadata": "",
          "engine_version": "0.8.2.2155",
          "created": "2015-08-04T16:12:34.699Z",
          "full_dependency_versions": [ "0.0.4" ],
          "full_dependency_ids": [
            {
              "name": "Simple",
              "_id": "55c0e472662bf0e908000074"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-08-04T16:12:34.699Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 9,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Simple Desc",
      "maintainers": [
        {
          "username": "Sally-prod-enthu",
          "_id": "54bd83fedcee4dfd2600006c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "556edac0f2ae5a9a0700000e",
      "name": "RHA_Utilities",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4f6c20b2-208e-4e01-9652-a2f9d5f28a12gregPkg173.zip",
          "contents": "Algorithms.CorrectAndCloseGeometry - If you want to select a set of lines from a Revit document representing a plate for example, and the lines do not correctly define a closed shape. (lines may be intersecting wrongfully, other lines may not belong to the plate, other lines may be extended beyong margins) this plugin will try to correct this and provide a closed element. This is in beta version (will not work on all cases)., Algorithms.CorrectAndCloseGeometry.FunctionLink - Same as Correct and Close Geometry, but it provides the function definition to be used in more locations without oversizing the file., Algorithms.InsertionSort - It applies insertion sort algorithm to sort a list of numbers., Algorithms.InsertionSortOfAttribute - It applies insertion sort algorithm to sort a list of numbers. Numbers are obtained from the attribute of the elements. Exp: Element.Length, at attribute pass a string \"Length\", Algorithms.LineDistribution - Will add normal lines to your geometry like this: Curve can be array or polycurve (will determine if the iteration is made on all lines separate or as one). Param will determine the start point, end point and distribution pattern of normal lines. Lengths is an array of start, end and middle values. Exp: make several arches and pass them as polycurve. At param add 0..1..#100. At lengths add {1000,2000,5000,1000,50}, Curve.MultipleIntersection - Add multiple geometries in one list and this plugin will detect all intersection points., Curve.StartPointEndPoint - Retrieves lists of start point end point, Curve.UniqueEdges - No description provided, Element.AddCope - Adds cope to revit elements. When the number of elements 1 is the same of elements 2, coping will be added to elements from the 2 lists of the same index. Otherwise, all elements from list1 will be matched to elements from list2, Element.AddCopeLaced - Adds cope to revit elements. All elements from list1 will be matched to all elements from list2, Formula.OffsetDist.RightTriangle - Determines what distance should a triangle offset to get from a triangle side length to another triangle side length. \r\nAlpha is the angle bewteen the triangle side and the hypothenuse, Formula.OffsetDist.RightTriangle_Sides - Determines what distance should a triangle offset to get from a triangle side length to another triangle side length. \r\nAlpha is the angle bewteen the triangle side and the hypothenuse, Formula.OffsetDist.SideParalel_ByLength - Given a random triangle. This node will determine to what distance you have to offset <Main Side> so that the intersecion between new line with other sides givse a line with the length<Inner Side>, Geometry.FarthestFrom - No description provided, Line.ByConseqPoints - Returns Lines made by a list of points. (It will filter out elements that are not points and will flatten the list), Line.UniqueLines - Iterates and array of lines and returns all points that are unique(same coordinates). Duplicate Elements are set to False, Line.UniqueLines.OptimisedIterations - Iterates and array of lines and returns all points that are unique(same coordinates). Duplicate Elements are set to False, List.Boolify.FalseWay - Iterates a list and keeps True where True is declared, all other are set to False, List.Boolify.TrueWay - Iterates a list and keeps False where False is declared, all other are set to True, List.CompareIfNotExist - Compares values in list1 against values in list 2. If these exist in list2 they will be replaced with False in list 1, List.DoubleSort - Will sort first list and each index shift will be applied also on second list. Output is List1 (sorted list), List2 (list with index shift), List.Flatten - Same as flatten. But for a single item array item a = [val], it will return val instead of the array, List.KeepLines - Removes elements that are not instances of rQueryClass, List.KeepModelCurve - Filters out elements that are not model curve (revit elements), List.KeepTrue - Removes elements with null or False type, List.RemoveFirstIndexAtAllBranches - Will iterate a nested array and remove each item positioned at first index (0), List.RemoveFirstIndexOfLastBranchLevel - Will iterate a nested array and remove each item positioned at first index for all arrays located at the last branch. , List.RemoveLastIndexOfAllBranches - Will iterate a nested array and remove each item positioned at last index., List.RemoveLastIndexOfLastBranchLevel - Will iterate a nested array and remove each item positioned at last index for all arrays located at the last branch. , List.RepeatRemoveFirstIndexOfLastBranchLevel - Will iterate a nested array and remove each item positioned at first index for all arrays located at the last branch. Operation is repeated for a certain amount of times., List.RepeatRemoveLastIndexOfLastBranchLevel - Will iterate a nested array and remove each item positioned at last index for all arrays located at the last branch. Operation is repeated for a certain amount of times., List.ReverseFlatten - Works the same as flatten, but operatios are made from the end side. , Plane.ByLineAndZAxis - No description provided, Point.ClosestTo - Closest Point from the list of points, to point at first input, Point.Collinear - Checks if points are collinear. Accepts points, set of points, variation of different set sizes of points for each entry, Point.UniquePoints - Iterates and array of points and returns all points that are unique(same coordinates). Elements in array that are not points are set to false., Point.UniquePoints.OptimisedIterations - Iterates and array of points and returns all points that are unique(same coordinates). Elements in array that are not points are set to false. , Point.UniquePointsAtDistance - Iterates and array of points and returns all points that are unique(same coordinates). Two points are unique if the distance between them is smaller then maxDist. Elements in array that are not points are removed. Returned list is flattened.",
          "engine_metadata": "",
          "engine_version": "0.8.1.1942",
          "created": "2015-08-05T06:32:00.617Z",
          "full_dependency_versions": [ "1.5.1" ],
          "full_dependency_ids": [
            {
              "name": "RHA_Utilities",
              "_id": "556edac0f2ae5a9a0700000e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.5.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-08-05T06:32:00.617Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 176,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "0",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "Doha PW",
          "_id": "56cf1ab5c3e9ee4a08000152"
        }
      ],
      "num_dependents": 1,
      "description": "Utilities for Dynamo ",
      "maintainers": [
        {
          "username": "hamati_rami2004@yahoo.com",
          "_id": "54fd515e0c7eac9b5700002a"
        }
      ],
      "keywords": [ "0" ],
      "white_list": false
    },
    {
      "_id": "55c30c7f662bf0e908000080",
      "name": "MTHV Package",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/08c985d5-d1b4-431d-926a-cf138ce729d7gregPkg229.zip",
          "contents": "Element.Type - This retrieves the element type of the given elements. (if available) Similar to others available but no python here., Add Share Parameter to Topography Category - Add Share Parameter to Topography Category, Get All Building Pads Volume and ID - Get All Building Pads Volume and ID, Get Reference Toposurfaces Under Buidling Pads - Get Reference Toposurfaces Under Buidling Pads, Set Real Cut Volume  - Set Real Cut Volume by subtracting Pad Volume from Cut volume, Set Real Fill Volume - Set Real Fill Volume by adding Pad Volume with Fill volume",
          "engine_metadata": "",
          "engine_version": "1.0.0.0",
          "created": "2015-08-06T07:27:59.747Z",
          "full_dependency_versions": [ "1.1.1", "2015.6.10", "2015.3.12" ],
          "full_dependency_ids": [
            {
              "name": "MTHV Package",
              "_id": "55c30c7f662bf0e908000080"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "2015.3.12", "2015.6.10" ],
          "direct_dependency_ids": [
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            }
          ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-08-06T07:27:59.747Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 28,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "MTHV ",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "MTHV Package",
      "maintainers": [
        {
          "username": "vubui278",
          "_id": "5514b0a45899bb370500000e"
        }
      ],
      "keywords": [ "mthv" ],
      "white_list": false
    },
    {
      "_id": "55c3a6eb662bf0e908000083",
      "name": "Curve.Loop",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1d4dace4-7be2-4520-a753-00eb3525dacfgregPkg486.zip",
          "contents": "Curve.Loop - Creates a single PolyCurve from a list of curves.",
          "engine_metadata": "",
          "engine_version": "0.8.1.1823",
          "created": "2015-08-06T18:26:51.949Z",
          "full_dependency_versions": [ "0.8.1" ],
          "full_dependency_ids": [
            {
              "name": "Curve.Loop",
              "_id": "55c3a6eb662bf0e908000083"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.8.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-08-06T18:26:51.949Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 230,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create a single polycurve from a list of connected curves.",
      "maintainers": [
        {
          "username": "cirela20",
          "_id": "523507506b18e4791600000a"
        }
      ],
      "keywords": [ "curve", "polycurve", "join", "curves", "loop" ],
      "white_list": false
    },
    {
      "_id": "55cb0c71662bf0e90800009c",
      "name": "Gothic Arc",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1df4a1ec-a318-433a-b320-cccb569f5434gregPkg548.zip",
          "contents": "gothic_main_arcs - No description provided, gothic_arc_sub_rays - No description provided",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-08-12T09:05:53.326Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Gothic Arc",
              "_id": "55cb0c71662bf0e90800009c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-08-12T09:05:53.326Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 72,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Arcs",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Gothic Arcs creation tool (based on radius, width, offset and rays count)",
      "maintainers": [
        {
          "username": "mohanajjar85@gmail.com",
          "_id": "54b4f6dedcee4dfd26000052"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54b2685edcee4dfd2600003e",
      "name": "Ventilation_POFanger & NBK",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9c18d905-0870-44fa-9f78-60632fc5dc33gregPkg146.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.3.2256",
          "created": "2015-08-18T10:06:56.098Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "Ventilation_POFanger & NBK",
              "_id": "54b2685edcee4dfd2600003e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-08-18T10:06:56.098Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 187,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "HVAC",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "HVAC Calculation based on PO_Fanger and NBK, Create a PD parameter in your Space-Schedule.",
      "maintainers": [
        {
          "username": "Kea_uv",
          "_id": "54b2685cdcee4dfd2600003d"
        }
      ],
      "keywords": [ "ventilation", "calculation" ],
      "white_list": false
    },
    {
      "_id": "55d6ebff662bf0e9080000f8",
      "name": "Join.Geometry",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/74ab1b2b-8e27-462d-92cd-f611a56f12c0gregPkg251.zip",
          "contents": "Join.Geometry - Join.Geometry",
          "engine_metadata": "",
          "engine_version": "0.8.1.1942",
          "created": "2015-08-21T09:14:39.720Z",
          "full_dependency_versions": [ "8.1.1942" ],
          "full_dependency_ids": [
            {
              "name": "Join.Geometry",
              "_id": "55d6ebff662bf0e9080000f8"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "8.1.1942",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-08-21T09:14:39.72Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 369,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Johnes",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Join.GeometryByElements",
      "maintainers": [
        {
          "username": "s04049",
          "_id": "54bfd524dcee4dfd26000074"
        }
      ],
      "keywords": [ "join" ],
      "white_list": false
    },
    {
      "_id": "55dadcd1662bf0e908000105",
      "name": "SystemList",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9f09b8f2-4fc9-4018-8ebc-ad703f8bfb50gregPkg529.zip",
          "contents": "SystemList - Takes MEPSystem elements and displays Information about each system to use in Dynamo.\r\nCreated by Michael Cox at NG Bailey.",
          "engine_metadata": "",
          "engine_version": "0.8.1.1942",
          "created": "2015-08-24T08:58:57.230Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "SystemList",
              "_id": "55dadcd1662bf0e908000105"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-08-24T08:58:57.23Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 363,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "NG Bailey",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A Collection of Dynamo nodes that assist with data extraction from Revit for COBie standards.\r\nCreated by Michael Cox.",
      "maintainers": [
        {
          "username": "michael.cox@blueyonder.co.uk",
          "_id": "55dadb12662bf0e908000104"
        }
      ],
      "keywords": [ "cobie", "systemlist", "system", "mepsystem", "mep" ],
      "white_list": false
    },
    {
      "_id": "55debb9a662bf0e908000118",
      "name": "Test_Paramètre_Element",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/582e4282-17e8-4e90-8245-0a8069126c21gregPkg188.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.1.1942",
          "created": "2015-08-27T07:26:18.307Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Test_Paramètre_Element",
              "_id": "55debb9a662bf0e908000118"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-08-27T07:26:18.307Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 39,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "BdC",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Tester la valeur d'un paramètre d'un élément.",
      "maintainers": [
        {
          "username": "ecoureuil",
          "_id": "55debaee662bf0e908000117"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "55defeb5662bf0e90800011b",
      "name": "Filtre-element-parametre",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/584ae4ce-1944-48d3-be64-65268d962ce1gregPkg169.zip",
          "contents": "Filtre-element-parametre - Filtrer élément par la valeur d'un paramètre",
          "engine_metadata": "",
          "engine_version": "0.8.1.1942",
          "created": "2015-08-27T12:12:37.909Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Filtre-element-parametre",
              "_id": "55defeb5662bf0e90800011b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-08-27T12:12:37.909Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 131,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Paramètre",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Filtre suivant la valeur d'un paramètre",
      "maintainers": [
        {
          "username": "ecoureuil",
          "_id": "55debaee662bf0e908000117"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55e60551662bf0e908000132",
      "name": "Gouging project",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/95fdeddb-6952-46a0-a84a-9d5bc9f1d024gregPkg942.zip",
          "contents": "Tool sweep bodies - Creates bodies representing the sweep of a ball end mill, Cut base plane - Creates a plane for the base of cuts at the XY origin, Extrude arcs - Extrude arcs symmetrically into surface, Gcode Move to - Rapid traverse to point, g arc - g, internal arc - a, Origins from UVs - No description provided, Randomly rotate - No description provided, Scale meters to inches - Scales geometry, Stock body - Creates a rectangular stock body at the origin",
          "engine_metadata": "",
          "engine_version": "0.8.0.1233",
          "created": "2015-09-01T20:06:41.695Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Gouging project",
              "_id": "55e60551662bf0e908000132"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-01T20:06:41.695Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 39,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "OCTO",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Carving a surface with CNC",
      "maintainers": [
        {
          "username": "william.goldie@autodesk.com",
          "_id": "55e60137662bf0e908000131"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55df023b662bf0e90800011d",
      "name": "Scale Revit Elements",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/44c4593d-abf9-4fc3-9ce4-ca8c44a4db90gregPkg548.zip",
          "contents": "Scale Revit Elements - Select Revit elements to scale in full size. Scaling factor can be adjusted.",
          "engine_metadata": "",
          "engine_version": "0.8.1.1942",
          "created": "2015-09-04T03:36:22.084Z",
          "full_dependency_versions": [ "1.1.3" ],
          "full_dependency_ids": [
            {
              "name": "Scale Revit Elements",
              "_id": "55df023b662bf0e90800011d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-04T03:36:22.084Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 292,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Select Revit elements to scale in full size. The scale factor can be adjusted.",
      "maintainers": [
        {
          "username": "carolpoonwsp",
          "_id": "55d6f2ac662bf0e9080000fa"
        }
      ],
      "keywords": [ "scale", "element", "revit" ],
      "white_list": false
    },
    {
      "_id": "55e96dd8662bf0e908000149",
      "name": "QuickGraph for Dynamo ",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c59ef327-c6e2-4ad8-b809-ecb11c7f7beegregPkg671.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.3.2464",
          "created": "2015-09-07T09:10:00.474Z",
          "full_dependency_versions": [ "1.0.2" ],
          "full_dependency_ids": [
            {
              "name": "QuickGraph for Dynamo ",
              "_id": "55e96dd8662bf0e908000149"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-07T09:10:00.474Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 226,
      "repository_url": "",
      "site_url": "http://dynamopackages.com/",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "Microsoft Public License (Ms-PL)",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Library for solving graph problems using QuickGraph.Provides generic directed/undirected graph datastructures and algorithms for .NET. QuickGraph comes with algorithms such as shortest path , depth first seach.The dlls can be used directly to solve problems related to shortest path and other graph related problems using IMport CSharp Library. For details on license and Functionality please visit https://quickgraph.codeplex.com/",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": [ "shortest", "path", "graph", "network" ],
      "white_list": false
    },
    {
      "_id": "55f475ad662bf0e908000175",
      "name": "LIST OPERATION(IHN)",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/463bbb47-7ad6-49c0-a3a9-d8797b06605bgregPkg358.zip",
          "contents": "LIST ADDITION - adding custom number to the whole give list items (displacement), LIST REMOVE SIMILARITIES  - removes the occurences of any item inside the list and return it back withour occurences ",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-09-12T18:57:49.709Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "LIST OPERATION(IHN)",
              "_id": "55f475ad662bf0e908000175"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-12T18:57:49.709Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 187,
      "repository_url": "",
      "site_url": "https://www.linkedin.com/profile/preview?locale=en_US&trk=prof-0-sb-preview-primary-button",
      "banned": false,
      "deprecated": false,
      "group": "LIST OPERATION",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "New list operations ",
      "maintainers": [
        {
          "username": "hema_cima",
          "_id": "55e64329662bf0e908000134"
        }
      ],
      "keywords": [ "list" ],
      "white_list": false
    },
    {
      "_id": "55f7d347662bf0e908000180",
      "name": "Visual Style Select",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/dea774cc-aa40-4443-a694-0cad91bd83bagregPkg695.zip",
          "contents": "Visual Style Select - Change the Visual Style on a list of views.\r\n\r\nPlease use the following as the integer input:\r\n\r\n1 - Wireframe\r\n2 - Hidden line\r\n3 - Shaded\r\n4 - Shaded with Edges\r\n5 - Consistent Colors\r\n6 - Realistic",
          "engine_metadata": "",
          "engine_version": "0.7.5.3271",
          "created": "2015-09-15T08:13:59.255Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Visual Style Select",
              "_id": "55f7d347662bf0e908000180"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-15T08:13:59.255Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 187,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "LD",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Change the Visual Style for a list of views.\r\n\r\nPlease use the following as the integer input:\r\n\r\n1 - Wireframe\r\n2 - Hidden line\r\n3 - Shaded\r\n4 - Shaded with Edges\r\n5 - Consistent Colors\r\n6 - Realistic",
      "maintainers": [
        {
          "username": "JeremyJamesGraham",
          "_id": "55f7d345662bf0e90800017f"
        }
      ],
      "keywords": [ "view", "views", "visual", "style", "graphic", "display", "hidden", "wireframe", "shaded", "realistic" ],
      "white_list": false
    },
    {
      "_id": "55f7f990662bf0e908000183",
      "name": "Triple from Rectangular Grid",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/81d86bcb-3bf5-41a9-bb3c-bcdd6c73ab9fgregPkg536.zip",
          "contents": "Triple from Rectangular Grid - Given a grid of points (xyz or uv) in lists of rows/columns, create a list of quadrilaterals",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-09-15T10:57:20.184Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Triple from Rectangular Grid",
              "_id": "55f7f990662bf0e908000183"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-15T10:57:20.184Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 53,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Given a grid of points (xyz or uv) in lists of rows/columns, create a list of quadrilaterals",
      "maintainers": [
        {
          "username": "takehiro_matsushita@mhs.co.jp",
          "_id": "55f7bb1c662bf0e90800017d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55f9c802662bf0e908000191",
      "name": "BesideTheCursor Replace Empty String Values in List",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f9088834-89ef-4545-8118-a405c7d2ba9fgregPkg399.zip",
          "contents": "ReplaceEmptyStringValuesInList - Check each item in List for string length and perform swap if string length less than 1",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-09-16T19:50:26.540Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "BesideTheCursor Replace Empty String Values in List",
              "_id": "55f9c802662bf0e908000191"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-16T19:50:26.54Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 63,
      "repository_url": "",
      "site_url": "http://www.integr-8.com",
      "banned": false,
      "deprecated": false,
      "group": "BesideTheCursor",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Use this node to replace a list item or parameter value before Revit warns you that it cannot be empty.  Will save your Esc button from damage in a rage.",
      "maintainers": [
        {
          "username": "RichardBinning2010",
          "_id": "551d4a895899bb370500003d"
        }
      ],
      "keywords": [ "replace", "text", "list", "item", "string", "length" ],
      "white_list": false
    },
    {
      "_id": "55f91ef6662bf0e90800018b",
      "name": "Find Wall Material Areas",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9f07f06c-4d62-4958-8dd4-53f643ef22abgregPkg574.zip",
          "contents": "Find Wall Material Areas - Input wall elements to find areas of the materials associated with each wall element.",
          "engine_metadata": "",
          "engine_version": "0.7.5.3271",
          "created": "2015-09-17T06:05:54.672Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Find Wall Material Areas",
              "_id": "55f91ef6662bf0e90800018b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-17T06:05:54.672Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 332,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "LD",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Plug in the wall elements to retrieve the associated materials and areas. \r\n\r\nOutput should be the Wall Type name followed by a number of lists containing, each containing a material and its area.\r\n\r\nAreas are in square meters.",
      "maintainers": [
        {
          "username": "JeremyJamesGraham",
          "_id": "55f7d345662bf0e90800017f"
        }
      ],
      "keywords": [ "wall", "material", "area", "calculate", "type", "finish" ],
      "white_list": false
    },
    {
      "_id": "55f09f19662bf0e908000160",
      "name": "MapToSurface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5666e604-f132-4dc2-93b6-e927f6a72717gregPkg661.zip",
          "contents": "NurbsCrvToSurface - Map Nurbs Curves from Source Surface to Target Surface, OffsetPointsToSurface - Map Points from Source Surface to Target Surface, offset from surface normals, PointsToSurface - Map Points from Source Surface to Target Surface, PolygonsToSurface - Map Polygons from Source Surface to Target Surface, SampleSrf - Just a sample surface for testing map operations",
          "engine_metadata": "",
          "engine_version": "0.8.3.2256",
          "created": "2015-09-18T18:01:06.451Z",
          "full_dependency_versions": [ "0.0.4" ],
          "full_dependency_ids": [
            {
              "name": "MapToSurface",
              "_id": "55f09f19662bf0e908000160"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-18T18:01:06.451Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 491,
      "repository_url": "",
      "site_url": "dynamoprimer.com",
      "banned": false,
      "deprecated": false,
      "group": "DynamoPrimer",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A library for mapping geometry to surfaces based on UV coordinates.",
      "maintainers": [
        {
          "username": "ekatzenstein",
          "_id": "55f07dbf662bf0e90800015f"
        }
      ],
      "keywords": [ "svg", "import" ],
      "white_list": false
    },
    {
      "_id": "55fc4779662bf0e9080001a7",
      "name": "Dynastrator",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9f8e2c19-b0b8-4246-9e48-fe6431c88bc4gregPkg254.zip",
          "contents": "AI Artboard - get extents of adobe illustrator exported .svg, SVG Import - import svg elements from Illustrator",
          "engine_metadata": "",
          "engine_version": "0.8.3.2256",
          "created": "2015-09-18T20:32:32.452Z",
          "full_dependency_versions": [ "0.0.7" ],
          "full_dependency_ids": [
            {
              "name": "Dynastrator",
              "_id": "55fc4779662bf0e9080001a7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.7",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-18T20:32:32.452Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 249,
      "repository_url": "",
      "site_url": "modelab.is",
      "banned": false,
      "deprecated": false,
      "group": "Mode Lab",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Import vector drawings from Illustrator or the web using .svg. Alpha version.",
      "maintainers": [
        {
          "username": "ekatzenstein",
          "_id": "55f07dbf662bf0e90800015f"
        }
      ],
      "keywords": [ "illustrator", "vector", "2d", "drafting" ],
      "white_list": false
    },
    {
      "_id": "560243d9662bf0e9080001c8",
      "name": "AdaptiveHangers.OnCableTrays",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/dc8456b9-1b1b-4c70-922d-aed4d9ef6c99gregPkg284.zip",
          "contents": "AdaptiveHangers.OnCableTrays - Place Adaptive Hangers on Cable Trays, based on minimal distance",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-09-23T06:16:57.034Z",
          "full_dependency_versions": [ "0.9.0", "2015.7.21" ],
          "full_dependency_ids": [
            {
              "name": "AdaptiveHangers.OnCableTrays",
              "_id": "560243d9662bf0e9080001c8"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "2015.7.21" ],
          "direct_dependency_ids": [
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "0.9.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-23T06:16:57.034Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 107,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "ScaleID.Model",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Place Adaptive Hangers on Cable Trays, based on maximum distance.\r\nLoad the adaptive family named \"Hanger-WithOffset.rfa\". INPUT elements ONLY CableTrays",
      "maintainers": [
        {
          "username": "GoroVT",
          "_id": "56024190662bf0e9080001c7"
        }
      ],
      "keywords": [ "hanger", "mep", "electrical", "cabletray" ],
      "white_list": false
    },
    {
      "_id": "560210dd662bf0e9080001c2",
      "name": "All Elements of Family Name",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7409ba20-b83f-4f9f-a4fb-0c90dd636067gregPkg969.zip",
          "contents": "All Elements of Family Name - Gets all instances of a specified Family name from the model., Family.Name - Gets the family name of elements",
          "engine_metadata": "",
          "engine_version": "0.8.3.2632",
          "created": "2015-09-24T03:37:46.991Z",
          "full_dependency_versions": [ "0.83.2" ],
          "full_dependency_ids": [
            {
              "name": "All Elements of Family Name",
              "_id": "560210dd662bf0e9080001c2"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.83.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-24T03:37:46.991Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 853,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Revit.Selection",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Get all elements within a category of a specified family name in the project",
      "maintainers": [
        {
          "username": "testingwaters",
          "_id": "5232aa726189d12d7e000003"
        }
      ],
      "keywords": [ "revit", "family", "name", "select" ],
      "white_list": false
    },
    {
      "_id": "56018fdb662bf0e9080001bb",
      "name": "Family.Name",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6b3b13a7-bf2e-42fc-ae72-b434c6d151d8gregPkg294.zip",
          "contents": "Family.Name - Gets the family name of elements",
          "engine_metadata": "",
          "engine_version": "0.8.3.2632",
          "created": "2015-09-24T03:38:04.897Z",
          "full_dependency_versions": [ "0.83.2" ],
          "full_dependency_ids": [
            {
              "name": "Family.Name",
              "_id": "56018fdb662bf0e9080001bb"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.83.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-24T03:38:04.897Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 337,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Revit.Elements.Family",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Use this node to get name of parent family in cases where it  is not properly extracted using the in-built nodes.",
      "maintainers": [
        {
          "username": "testingwaters",
          "_id": "5232aa726189d12d7e000003"
        }
      ],
      "keywords": [ "revit", "parent", "family", "name" ],
      "white_list": false
    },
    {
      "_id": "5601939f662bf0e9080001bd",
      "name": "String.Replace.List",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8d651cd8-ae36-4859-8958-88a9e0a3ba79gregPkg740.zip",
          "contents": "String.Replace List - Searches for all occurances of every item in a list of strings and replaces it with corresponding items  from another list of equal length.",
          "engine_metadata": "",
          "engine_version": "0.8.3.2632",
          "created": "2015-09-24T03:57:41.398Z",
          "full_dependency_versions": [ "0.83.2" ],
          "full_dependency_ids": [
            {
              "name": "String.Replace.List",
              "_id": "5601939f662bf0e9080001bd"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.83.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-24T03:57:41.398Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 158,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Core.String",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Replaces all occurances of every instance in a  list of strings with a string from another list with a corresponding number of items.",
      "maintainers": [
        {
          "username": "testingwaters",
          "_id": "5232aa726189d12d7e000003"
        }
      ],
      "keywords": [ "search", "replace", "strings", "multiple", "list" ],
      "white_list": false
    },
    {
      "_id": "560381ad662bf0e9080001db",
      "name": "Mitesh Gajjar's Nodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5aad1bb0-07c6-4dd6-a295-b3c6ae7bae49gregPkg33.zip",
          "contents": "SunPath Direction - SunPath From Current Project, GetFamilyList - FamilyList",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2015-09-24T05:39:27.732Z",
          "full_dependency_versions": [ "9.25.2015" ],
          "full_dependency_ids": [
            {
              "name": "Mitesh Gajjar's Nodes",
              "_id": "560381ad662bf0e9080001db"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "9.25.2015",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-24T05:39:27.732Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 15,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Mitesh",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Custom Nodes",
      "maintainers": [
        {
          "username": "Mitesh_Gajjar",
          "_id": "560381ad662bf0e9080001da"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "548f9ad5fa779c1c11000055",
      "name": "HostedFloorOpening.ByCurves",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b175132c-2c8e-43a3-a533-400aa90c7236gregPkg184.zip",
          "contents": "HostedFloorOpening.ByCurves - Accesses the API to create hosted floor opeinngs at the given floors. The first input is the host floor elements, the second input is a list of lists of the openings' curves., Shaft.ByOutlineLevels - The node attempts to create a shaft opening. The top level must be above the base level for a successful execution.",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-09-27T02:11:47.821Z",
          "full_dependency_versions": [ "0.0.5" ],
          "full_dependency_ids": [
            {
              "name": "HostedFloorOpening.ByCurves",
              "_id": "548f9ad5fa779c1c11000055"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-27T02:11:47.821Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 197,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "DEV",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRICIATED - Moved to package Spring Nodes",
      "maintainers": [
        {
          "username": "dimiter_v@mail.bg",
          "_id": "532baed2bfe42595360000e3"
        }
      ],
      "keywords": [ "open", "opening", "floor", "roof" ],
      "white_list": false
    },
    {
      "_id": "56099113662bf0e9080001f8",
      "name": "BNIM Tools",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/42c3198a-e233-4424-9527-98031dcb751bgregPkg644.zip",
          "contents": "Replace String in Parameter Value - No description provided, Views Placed On Sheets - Retrieves Views On Sheets (or not on Sheets)",
          "engine_metadata": "",
          "engine_version": "0.8.2.2225",
          "created": "2015-09-28T19:22:17.905Z",
          "full_dependency_versions": [ "0.0.2", "2015.9.15", "0.75.45" ],
          "full_dependency_ids": [
            {
              "name": "BNIM Tools",
              "_id": "56099113662bf0e9080001f8"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "direct_dependency_versions": [ "2015.9.15", "0.75.45" ],
          "direct_dependency_ids": [
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-28T19:22:17.905Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 62,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Experimental Set of Tools for Workflows at BNIM",
      "maintainers": [
        {
          "username": "dsiroky@bnim.com",
          "_id": "56099060662bf0e9080001f6"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "560a91e4662bf0e908000204",
      "name": "Prefixed List Generator",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/52ec0aa1-9c21-4c1e-aafb-132be8fa3754gregPkg339.zip",
          "contents": "Prefixed List Generator - Pass in a List, a Prefix, and a Separator",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-09-29T13:28:04.185Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Prefixed List Generator",
              "_id": "560a91e4662bf0e908000204"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-29T13:28:04.185Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 48,
      "repository_url": "",
      "site_url": "http://www.integr-8.com",
      "banned": false,
      "deprecated": false,
      "group": "BTC",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Add static Prefix and Delimiter to List of Strings",
      "maintainers": [
        {
          "username": "RichardBinning2010",
          "_id": "551d4a895899bb370500003d"
        }
      ],
      "keywords": [ "btc", "besidethecursor", "string", "prefix" ],
      "white_list": false
    },
    {
      "_id": "56031545662bf0e9080001d3",
      "name": "ScaleID.MEP",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/910894ea-6ba9-47d4-ac51-cd736aa83be5gregPkg938.zip",
          "contents": "Cuboid.from.Grids - Creates a DirectShape at intersection of 2 Grids. The Category of DirectShape is \"Site\"., Elements.By.Category.and.Level - Select all elements by Category and Level, Elements.Types - Get the Types of List of Elements, Hangers.On.CableTrays - Place Hangers on Cable Trays based on maximum distance. Is needed the family \"Hanger.rfa\". This component is located on: \"AppData\\Roaming\\Dynamo\\0.8\\packages\\ScaleID\\extra\", MEP.Clearance.from.CableTrays - Creates a rectangular clearance from Cable Trays on Project. The Category of clearances is \"Cable Trays\". These clearances can be shown in a Schedule., MEP.Clearance.from.Pipes - Creates a pipe clearance from Pipes, based on \"System Classification\". The Category of clearances is \"Pipe Accessories\". These clearances can be shown in a Schedule., OverrideColor.By.Parameter.Value - Override color of elements based on Parameter Value., OverrideColor.By.Types.of.Category - Override color of elements based on Family Types of Category",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-10-01T04:20:36.223Z",
          "full_dependency_versions": [ "0.5.7" ],
          "full_dependency_ids": [
            {
              "name": "ScaleID.MEP",
              "_id": "56031545662bf0e9080001d3"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.5.7",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-01T04:20:36.223Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 341,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "ScaleID",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A set of nodes for MEP models. Still in development",
      "maintainers": [
        {
          "username": "GoroVT",
          "_id": "56024190662bf0e9080001c7"
        }
      ],
      "keywords": [ "mep", "electrical", "hangers", "clearance", "color", "pipes", "cabletray", "clearance" ],
      "white_list": false
    },
    {
      "_id": "56006727662bf0e9080001b5",
      "name": "banana.byStartMiddleEnd",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/95c71128-a085-4d9c-af2b-f4c06d2c5037gregPkg864.zip",
          "contents": "banana - makes a nice ripe banana",
          "engine_metadata": "",
          "engine_version": "0.9.0.2744",
          "created": "2015-10-03T11:43:23.139Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "banana.byStartMiddleEnd",
              "_id": "56006727662bf0e9080001b5"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-03T11:43:23.139Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 69,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "create a nice ripe banana",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56148c6c662bf0e90800023a",
      "name": "Topography.PolySurface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2b7bd0db-7ab5-4426-9b46-566d0f697d59gregPkg692.zip",
          "contents": "Topography.PolySurface - Converts a Revit topography to a poly surface in Dynamo",
          "engine_metadata": "",
          "engine_version": "0.9.0.2762",
          "created": "2015-10-07T03:07:24.975Z",
          "full_dependency_versions": [ "0.90.1" ],
          "full_dependency_ids": [
            {
              "name": "Topography.PolySurface",
              "_id": "56148c6c662bf0e90800023a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.90.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-07T03:07:24.975Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 1117,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Testing Waters",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Converts Revit topography to a poly surface",
      "maintainers": [
        {
          "username": "testingwaters",
          "_id": "5232aa726189d12d7e000003"
        }
      ],
      "keywords": [ "topography", "poly", "surface" ],
      "white_list": false
    },
    {
      "_id": "56161641662bf0e90800023d",
      "name": "T-DEX",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ca12ef2d-1be7-469d-a5f0-4ad7ce7d94bdgregPkg766.zip",
          "contents": "Document.GetLinkedDocumentFromPath - Gets the linked document from a path, Document.LinksAndImports - Gets all linked and imported files in the document, CountListAtIndex - Returns number of items in a list at index., FlattenListAtIndex - 説明は提供されていません, GetSectionBoxProperties - 説明は提供されていません, SectionBoxEditor - Edits a 3D view's section box by assigning minimum and maximum points",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-10-08T07:07:45.208Z",
          "full_dependency_versions": [ "2015.1.0" ],
          "full_dependency_ids": [
            {
              "name": "T-DEX",
              "_id": "56161641662bf0e90800023d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2015.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-08T07:07:45.208Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 57,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "TDEX",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo Extensions from Taisei",
      "maintainers": [
        {
          "username": "hps_anave",
          "_id": "55503951a8367b986100008e"
        }
      ],
      "keywords": [ "document", "external", "file", "link", "linked", "list", "flatten", "count", "section", "box", "editor" ],
      "white_list": false
    },
    {
      "_id": "56164ce2662bf0e90800023f",
      "name": "Write Rooms To doors",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/47ed54b4-6ce2-4018-b472-c1834e56ea07gregPkg520.zip",
          "contents": "Get To-From RoomNames - Extract the ToRoom / FromRoom from Doors or Windows, ConCatRooms - No description provided, Get To-From Room - Extract the ToRoom / FromRoom from Doors or Windows, WriteDoors_FromToRoom - No description provided, Write FromTo-Rooms To Door Parameter - No description provided",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-10-08T15:55:42.681Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Write Rooms To doors",
              "_id": "56164ce2662bf0e90800023f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-08T15:55:42.681Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 406,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Write From/To Room in custom door parameter",
      "maintainers": [
        {
          "username": "kristof@vandenbogaerde.org",
          "_id": "55cb48e3662bf0e9080000a0"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "561695fd662bf0e908000242",
      "name": "Write From-To Information to Door",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4b3a22de-358b-4c2b-b2d0-61e2a5334139gregPkg111.zip",
          "contents": "Get To-From RoomNames - Extract the ToRoom / FromRoom from Doors or Windows, Write FromTo-Rooms To Door Parameter - No description provided",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-10-08T16:12:45.070Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Write From-To Information to Door",
              "_id": "561695fd662bf0e908000242"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-08T16:12:45.07Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 183,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Write Room information to Door",
      "maintainers": [
        {
          "username": "kristof@vandenbogaerde.org",
          "_id": "55cb48e3662bf0e9080000a0"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "561730f5662bf0e908000246",
      "name": "BOP-pipe",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/fa75a035-acc7-4099-a1fa-338c200fb931gregPkg152.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.1.1942",
          "created": "2015-10-09T03:13:57.725Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "BOP-pipe",
              "_id": "561730f5662bf0e908000246"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-09T03:13:57.725Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 191,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "a",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "bottom outside pipe",
      "maintainers": [
        {
          "username": "daothethang@gmail.com",
          "_id": "55c81f13662bf0e90800008c"
        }
      ],
      "keywords": [ "bottom", "outside", "pipe" ],
      "white_list": false
    },
    {
      "_id": "561be90c662bf0e90800024f",
      "name": "Utilities",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3af01163-f598-43f3-81a0-7b5b59405010gregPkg959.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-10-12T17:08:28.630Z",
          "full_dependency_versions": [ "0.2.0" ],
          "full_dependency_ids": [
            {
              "name": "Utilities",
              "_id": "561be90c662bf0e90800024f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-12T17:08:28.63Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 125,
      "repository_url": "https://github.com/redinkinc/Utilities",
      "site_url": "http://www.redinkinc.de/index.php?content=utilities",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Adds a watch2D for plots and histograms, a dropdown for simple lists (no nested lists) and a ParallelCoordinate system to Dynamo. For further information please visit the website or contact me via email (mail@redinkinc.de).\r\n\r\nWarning: This is an alpha version. its not a stable build and may lead to crashes when used. Please leave any issues at the github repository.",
      "maintainers": [
        {
          "username": "fabian.ritter@tum.de",
          "_id": "5474bb55b77c84600c000047"
        }
      ],
      "keywords": [ "datahandling", "plots" ],
      "white_list": false
    },
    {
      "_id": "561e855d662bf0e908000257",
      "name": "Pedouze",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4ec8bde6-dfcb-4427-b02d-ce39919a8d1agregPkg776.zip",
          "contents": "Get line type from model element - Get line type from model element, Line type - Line type, Outline floor  - Outline floor , Remove last item - Remove last item, Separate curves - Separate curves, Thicken Downward - Thicken Downward",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-10-14T16:39:57.213Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Pedouze",
              "_id": "561e855d662bf0e908000257"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-14T16:39:57.213Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 24,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Nodes for Pedouze",
      "maintainers": [
        {
          "username": "Mchtoufy",
          "_id": "55478244a8367b9861000062"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5551c1b9a8367b9861000096",
      "name": "Illustrator",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/03468200-0441-4f5e-ad0a-8d6d65f6015cgregPkg537.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.2903",
          "created": "2015-10-18T13:13:57.951Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Illustrator",
              "_id": "5551c1b9a8367b9861000096"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-18T13:13:57.951Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 227,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "graphic design",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Export your 2D curves into Illustrator or Inkscape via SVG.\r\n\r\nPlease write to elayabharath@gmail.com or aparajit.pratap@autodesk.com for any questions or feedback.",
      "maintainers": [
        {
          "username": "elayabharath.elango@autodesk.com",
          "_id": "5461d4c5895fdbc25e000014"
        }
      ],
      "keywords": [ "illustrator", "svg", "inkscape", "graphic", "design" ],
      "white_list": false
    },
    {
      "_id": "56266a52662bf0e908000275",
      "name": "ByHSVA",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/040c6a43-071a-4f0b-863a-86d7084ed897gregPkg889.zip",
          "contents": "ByHSVA - Creates a color using inputs of hue, saturation, value, and alpha. Currently only supports single item inputs. Use List.Combine to input lists of values and create multiple colors.",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-10-20T16:22:42.257Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "ByHSVA",
              "_id": "56266a52662bf0e908000275"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-20T16:22:42.257Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 41,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Node to create colors using hue, saturation, value, and alpha as the inputs. Currently only works with one item for each input. Use List.Combine to handle lists of inputs.",
      "maintainers": [
        {
          "username": "dsiroky@bnim.com",
          "_id": "56099060662bf0e9080001f6"
        }
      ],
      "keywords": [ "color", "colour", "hue", "saturation", "value" ],
      "white_list": false
    },
    {
      "_id": "5554ad29a8367b98610000a3",
      "name": "Building.ByPlazaSiteFAR",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7c47a398-570c-42fd-ade7-0ac552fe304dgregPkg707.zip",
          "contents": "Building.ByPlazaSiteFAR - Creates a building envelope based on zoning rules for Site, Plaza, and FAR inputs",
          "engine_metadata": "",
          "engine_version": "0.9.1.2912",
          "created": "2015-10-21T15:41:51.944Z",
          "full_dependency_versions": [ "0.9.0" ],
          "full_dependency_ids": [
            {
              "name": "Building.ByPlazaSiteFAR",
              "_id": "5554ad29a8367b98610000a3"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.9.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-21T15:41:51.944Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 265,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Makes a building form based on Plaza Site and FAR constraints",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "floor", "area", "ratio", "far", "analysis" ],
      "white_list": false
    },
    {
      "_id": "546fa232b77c84600c00002e",
      "name": "Neal",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8aa6a9ab-841c-490a-b4bf-cd5c1c317a9egregPkg454.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.0.3012",
          "created": "2015-10-30T19:24:07.359Z",
          "full_dependency_versions": [ "1.1.21" ],
          "full_dependency_ids": [
            {
              "name": "Neal",
              "_id": "546fa232b77c84600c00002e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.21",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-30T19:24:07.359Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Studio 0.9.0 test",
      "maintainers": [
        {
          "username": "jnealb",
          "_id": "546ceba1b77c84600c00001d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "563e2875662bf0e9080002f7",
      "name": "FILTER STRUCTURAL FRAMING",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4f6ec7b4-9367-4014-af0c-2d0bae0b90a8gregPkg410.zip",
          "contents": "STRUCTURAL FRAMING FILTER-4 - FILTERS FRAMNG BY LEVEL, MARK , FILTER STRUCTURAL FRAMING - Gets structural framing at or above a level but below another level",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-11-07T16:36:05.816Z",
          "full_dependency_versions": [ "0.2.2392" ],
          "full_dependency_ids": [
            {
              "name": "FILTER STRUCTURAL FRAMING",
              "_id": "563e2875662bf0e9080002f7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.2392",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-11-07T16:36:05.816Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 218,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "REVIT",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Filter framing by level and mark value, prepare data for calculating beam weight for excel",
      "maintainers": [
        {
          "username": "mikeyforrest",
          "_id": "54a57a5cdcee4dfd2600000f"
        }
      ],
      "keywords": [ "revit", "structural", "framing", "filter", "mark", "by", "level", "beams", "excel", "beam", "weight" ],
      "white_list": false
    },
    {
      "_id": "563e2d28662bf0e9080002f9",
      "name": "FILTER STRUCTURAL FRAMING AND WEIGHT FOR EXPORT TO EXCEL",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/add73849-1759-463c-a454-c34fcf3d4f4agregPkg15.zip",
          "contents": "FILTER STRUCTURAL FRAMING - Gets structural framing at or above a level but below another level, STRUCTURAL FRAMING FILTER-4 - FILTERS FRAMNG BY LEVEL, MARK ",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-11-07T16:56:08.587Z",
          "full_dependency_versions": [ "8.2.2392" ],
          "full_dependency_ids": [
            {
              "name": "FILTER STRUCTURAL FRAMING AND WEIGHT FOR EXPORT TO EXCEL",
              "_id": "563e2d28662bf0e9080002f9"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "8.2.2392",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-11-07T16:56:08.587Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 143,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "REVIT",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Filters framing, gets weight parameter and calculates total weight for export to excel",
      "maintainers": [
        {
          "username": "mikeyforrest",
          "_id": "54a57a5cdcee4dfd2600000f"
        }
      ],
      "keywords": [ "revit", "structural", "framing", "excel", "export", "mark", "parameter", "total", "weight", "filter" ],
      "white_list": false
    },
    {
      "_id": "563cfda8662bf0e9080002f0",
      "name": "Semantic",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c13cfd2c-0ef0-441a-a499-0134bb86ba5fgregPkg854.zip",
          "contents": "Categories.BuiltIn.Names - list of all the builtin category names, Categories.ByName - Returns Category(ies) from given Category name(s). Provide a string with value \"All\" to get all the Categories. (note: this is different from BuiltInCategory), Elements.Element.SetParameterByNameIfExists - Sets the parameter by name if the element has the parameter, Elements.Filter.ByParameterIfExists - seperates \"elements with a parameter\" from \"elements without a parameter\"",
          "engine_metadata": "",
          "engine_version": "0.9.1.3071",
          "created": "2015-11-09T17:26:10.132Z",
          "full_dependency_versions": [ "0.0.8" ],
          "full_dependency_ids": [
            {
              "name": "Semantic",
              "_id": "563cfda8662bf0e9080002f0"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.8",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-11-09T17:26:10.132Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 37,
      "repository_url": "https://github.com/baazoo/semantic-dynamo.git",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This package has been written for an exercise at DTU university. At the current state of Dynamo, the author does not intend to maintain it.",
      "maintainers": [
        {
          "username": "hkh222",
          "_id": "563cb7d1662bf0e9080002ed"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5641e841662bf0e908000316",
      "name": "Mepworks",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/a3951d5f-01d1-4e52-957e-8bd2147d6931gregPkg478.zip",
          "contents": "LENGHT FILTER - FILTER CURVES BY LENGHT, SLOPE FILTER - FILTER CURVES BY SLOPE",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-11-10T12:51:13.430Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Mepworks",
              "_id": "5641e841662bf0e908000316"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-11-10T12:51:13.43Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 295,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Filter",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Utilities for MEP",
      "maintainers": [
        {
          "username": "lc.luisja@gmail.com",
          "_id": "5641e7a3662bf0e908000315"
        }
      ],
      "keywords": [ "by", "luis", "javier", "lópez" ],
      "white_list": false
    },
    {
      "_id": "56446665662bf0e908000324",
      "name": "MEPWORKS",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7075d7ae-b60d-4493-b205-3580e4207f21gregPkg977.zip",
          "contents": "CONTROL & COUNT - No description provided, Data analysis formatting - No description provided, Ducting.Supports - create support on ducts, FILTER DATA NAALYSIS - No description provided, ft to m - No description provided, Infinite.value.fix - replaces NaN values with 0 values, Length.filter - No description provided, Piping.Supports - Creates piping support, Slope.Filter - No description provided, Sublist count - No description provided, sublist.mass.count - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-11-12T10:43:53.250Z",
          "full_dependency_versions": [ "0.0.3", "2015.4.15", "0.90.2", "82.3.3", "2015.8.17", "2015.9.15" ],
          "full_dependency_ids": [
            {
              "name": "MEPWORKS",
              "_id": "56446665662bf0e908000324"
            },
            {
              "name": "BlackBox",
              "_id": "551b2a415899bb370500002e"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "0.90.2", "2015.9.15", "82.3.3", "2015.4.15", "2015.8.17" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "BlackBox",
              "_id": "551b2a415899bb370500002e"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-11-12T10:43:53.25Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 219,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "UTILITIES FOR MEP WORKING",
      "maintainers": [
        {
          "username": "lc.luisja@gmail.com",
          "_id": "5641e7a3662bf0e908000315"
        }
      ],
      "keywords": [ "by", "luis", "javier", "lópez" ],
      "white_list": false
    },
    {
      "_id": "564730fa662bf0e908000331",
      "name": "Hexagon Grid",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c25459c7-29a5-40d0-8b5a-2c6d1415a8b3gregPkg174.zip",
          "contents": "Hexagon Grid - Creat Hexagon grid from (x,y,spacing)",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-11-14T13:02:50.630Z",
          "full_dependency_versions": [ "9.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Hexagon Grid",
              "_id": "564730fa662bf0e908000331"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "9.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-11-14T13:02:50.63Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 152,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create Hexagon grid and provide polygons & corner Points",
      "maintainers": [
        {
          "username": "mashour@edgearch.pro",
          "_id": "5646fdca662bf0e90800032f"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56461a4e662bf0e90800032b",
      "name": "Prorubim Grids Renumeration",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/891f903a-90fc-4d00-9390-11b61c7c54b0gregPkg417.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-11-15T07:03:05.699Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Prorubim Grids Renumeration",
              "_id": "56461a4e662bf0e90800032b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-11-15T07:03:05.699Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 197,
      "repository_url": "",
      "site_url": "http://tools.prorubim.com/en/",
      "banned": false,
      "deprecated": true,
      "group": "Prorubim",
      "engine": "dynamo",
      "license": "CC Attribution-NoDerivatives 4.0 International",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED. Use \"Prorubim Grids Renumbering\" package",
      "maintainers": [
        {
          "username": "alexey.lobanov",
          "_id": "546cdebcb77c84600c00001c"
        }
      ],
      "keywords": [ "grid" ],
      "white_list": false
    },
    {
      "_id": "564b8c77662bf0e90800034c",
      "name": "Revit Slab Subdivision",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7e55a88b-1d94-41b8-9221-0b9574e53be5gregPkg146.zip",
          "contents": "Revit Slab Subdivision - This custom node explores Revit slab subdivison methods for construction applications. It is intended as a general purpose tool that allows users to further customize results after the initial pass helping to expedite an otherwise manual and tedious process. Divisions are calculated by grids, columns, and expansion joints.",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-11-17T20:22:15.045Z",
          "full_dependency_versions": [ "0.5.0" ],
          "full_dependency_ids": [
            {
              "name": "Revit Slab Subdivision",
              "_id": "564b8c77662bf0e90800034c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.5.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-11-17T20:22:15.045Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 251,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This custom node explores Revit slab subdivison methods for construction applications. It is intended as a general purpose tool that allows users to further customize results after the initial pass helping to expedite an otherwise manual and tedious process. Divisions are calculated by grids, columns, and expansion joints.",
      "maintainers": [
        {
          "username": "alfarok",
          "_id": "564b7ef5662bf0e90800034b"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "562e3029662bf0e90800029e",
      "name": "Elk",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0d64a3b8-418a-4cc4-8664-7c13d32f0b55gregPkg998.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-11-22T19:50:14.886Z",
          "full_dependency_versions": [ "1.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Elk",
              "_id": "562e3029662bf0e90800029e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-11-22T19:50:14.886Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 4,
      "downloads": 2053,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Import OSM mapping data and USGS elevation data",
      "maintainers": [
        {
          "username": "timothylogan2019",
          "_id": "54c65021dcee4dfd2600008c"
        }
      ],
      "keywords": [ "elk", "osm", "srtm", "topo", "map", "usgs" ],
      "white_list": false
    },
    {
      "_id": "5654a12c0370b0a90700000d",
      "name": "Reshuffle Lists",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/02239f0c-b1e3-4733-a890-e81c41bec075gregPkg894.zip",
          "contents": "List.DeconstructLast - Deconstruct a list in two: the list minus its last item, and the last., List.First to End - Remove the first item of a list and add it to the end, List.Last to Front - Remove the last item of a list and paste it to the front, Shorten List - Shortens a list by a number of items from the start and/or from the end",
          "engine_metadata": "",
          "engine_version": "0.8.1.1942",
          "created": "2015-11-24T17:41:00.852Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Reshuffle Lists",
              "_id": "5654a12c0370b0a90700000d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-11-24T17:41:00.852Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 57,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A couple of nodes to add/remove elements from/to heads and tails of lists.",
      "maintainers": [
        {
          "username": "jan@big.dk",
          "_id": "54aef310dcee4dfd2600002c"
        }
      ],
      "keywords": [ "list", "deconstruct", "first", "last" ],
      "white_list": false
    },
    {
      "_id": "565cd61e0370b0a907000032",
      "name": "testnode",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8f224f27-66f2-4381-8dd5-1836ca6b4458gregPkg288.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-11-30T23:05:02.008Z",
          "full_dependency_versions": [ "2015.11.30" ],
          "full_dependency_ids": [
            {
              "name": "testnode",
              "_id": "565cd61e0370b0a907000032"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2015.11.30",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-11-30T23:05:02.008Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 16,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "tests if I can publish a dll",
      "maintainers": [
        {
          "username": "nholland@nbbj.com",
          "_id": "5486713bfa779c1c11000021"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "565d68e30370b0a907000034",
      "name": "Foundation Rebar",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c4c904c2-028b-4419-b2a2-5b3860e95f13gregPkg545.zip",
          "contents": "Foundation Rebar - Standard Rebar for Foundations",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-12-01T11:46:15.199Z",
          "full_dependency_versions": [ "0.1.2", "0.2.6" ],
          "full_dependency_ids": [
            {
              "name": "Foundation Rebar",
              "_id": "565d68e30370b0a907000034"
            },
            {
              "name": "Dynamo for Rebar",
              "_id": "55f2f4ad662bf0e908000171"
            }
          ],
          "direct_dependency_versions": [ "0.2.6" ],
          "direct_dependency_ids": [
            {
              "name": "Dynamo for Rebar",
              "_id": "55f2f4ad662bf0e908000171"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-01T11:46:15.199Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 489,
      "repository_url": "https://github.com/tt-acm/DynamoForRebar",
      "site_url": "https://core-studio.gitbooks.io/dynamoforrebar/content/foundations.html",
      "banned": false,
      "deprecated": false,
      "group": "Rebar",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A node for creating bars and stirrups in a structural column foundation using the DynamoForRebar Package.",
      "maintainers": [
        {
          "username": "CORE_studio",
          "_id": "54c69c81dcee4dfd26000090"
        }
      ],
      "keywords": [ "rebar" ],
      "white_list": false
    },
    {
      "_id": "56611c930370b0a907000052",
      "name": "TestPackageUpload2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/363e1ddb-6676-48e4-ac1f-85426402b725gregPkg979.zip",
          "contents": "Diagonal Generation - Generate diagonals between two lists of  points, c - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3371",
          "created": "2015-12-04T04:54:43.053Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "TestPackageUpload2",
              "_id": "56611c930370b0a907000052"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-04T04:54:43.053Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 19,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dummy package",
      "maintainers": [
        {
          "username": "ellensi@live.com",
          "_id": "566104c60370b0a907000051"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56611dbe0370b0a907000054",
      "name": "TestUploadPackage3",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8fef8982-fdad-46b8-a9aa-ecf6445c65dfgregPkg840.zip",
          "contents": "c - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3371",
          "created": "2015-12-04T04:59:42.667Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "TestUploadPackage3",
              "_id": "56611dbe0370b0a907000054"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-04T04:59:42.667Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 34,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dummy package",
      "maintainers": [
        {
          "username": "ellensi@live.com",
          "_id": "566104c60370b0a907000051"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5662c7ce0370b0a907000057",
      "name": "List to List Test",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/67403548-6711-4879-acbd-9d717b50fb70gregPkg765.zip",
          "contents": "list to list test - adding custom number to the whole give list items (displacement)",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-12-05T11:17:34.238Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "List to List Test",
              "_id": "5662c7ce0370b0a907000057"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-05T11:17:34.238Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 3,
      "downloads": 112,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "List Operations (IHN)",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Checking the equality between two lists elements and gives a new boolean list with size of list1.size X list2.size",
      "maintainers": [
        {
          "username": "hema_cima",
          "_id": "55e64329662bf0e908000134"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55642a2ca8367b98610000ce",
      "name": "DynaWorks16",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/bad5061f-104b-49fb-b701-6c8eea16c305gregPkg142.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.3335",
          "created": "2015-12-07T07:26:06.547Z",
          "full_dependency_versions": [ "1.2.0" ],
          "full_dependency_ids": [
            {
              "name": "DynaWorks16",
              "_id": "55642a2ca8367b98610000ce"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-07T07:26:06.547Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 1688,
      "repository_url": "https://github.com/Gytaco/DynaWorks",
      "site_url": "http://stuffandbims.blogspot.com/2014/10/dynaworks-is-here-navisworks-library.html",
      "banned": false,
      "deprecated": false,
      "group": "Bad Monkeys",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo Library for Navisworks 2016",
      "maintainers": [
        {
          "username": "Gytaco",
          "_id": "542d2401cc26bfdc5a00003e"
        }
      ],
      "keywords": [ "navisworks", "dynaworks", "clashes" ],
      "white_list": false
    },
    {
      "_id": "55f84b9e662bf0e908000188",
      "name": "Ayuda",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3e289408-c974-4340-824e-f0d65204d81dgregPkg717.zip",
          "contents": "Ayuda.FMMark - Custom node created for Alisder Brown on the Dynamo Forums, Ayuda.FurnitureMarkByRoom - This will set the mark parameter in furniture by sequence + room number., Ayuda.MarkChecker - Custom node adapted by request of Sol on the Dynamo forums. This node will take a sample value and analyze if the elements of the categories parameter matches it., Ayuda.WorksetsByLink(+ Set) - This gathers of all of the cad and revit links, creates a workset for them, and sets the links to their workset., Ayuda.WindowCommentsByRoomNumber - This will assign the comments field on windows based on the room they are attached to.",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-12-14T17:53:39.893Z",
          "full_dependency_versions": [ "2015.12.14", "0.1.0", "0.90.2", "2015.12.8", "2015.11.12" ],
          "full_dependency_ids": [
            {
              "name": "Ayuda",
              "_id": "55f84b9e662bf0e908000188"
            },
            {
              "name": "If Equal Return Index",
              "_id": "5297a3ff9de41c8235000018"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "2015.12.8", "0.1.0", "2015.11.12", "0.90.2" ],
          "direct_dependency_ids": [
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "If Equal Return Index",
              "_id": "5297a3ff9de41c8235000018"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "change_log": "",
          "version": "2015.12.14",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-14T17:53:39.893Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 156,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Breaking CAD",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "First off, Ayuda is spanish for help. This is a set of nodes that contain typical solutions to help topics asked on the forums. Rather than share on the forums, I thought a package would be nice.  Use with care :) ",
      "maintainers": [
        {
          "username": "j0hnp",
          "_id": "54943e329508c43706000013"
        }
      ],
      "keywords": [ "help", "room", "furniture", "mark", "rhythm" ],
      "white_list": false
    },
    {
      "_id": "566f88715c568ad00c000025",
      "name": "CatedralDeBrasilia - 4.517",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b4e4cd40-0e90-4373-b067-36a2285c418bgregPkg551.zip",
          "contents": "Cathedral_FinalProduct - Creates whole cathedral from input parameters, geometry_glazing surface - creates one glazing surface by lofting outside or inside curve edge curve geometry from the ribs of the cathedral, Geometry_Oculus - Generates oculus and dome for the cathedral, geometry_ribs - lofts cross sections through ribs nurb curve to create solid rib geometry for the cathedral, refence_crosssection - Creates one triangular cross section for the ribs of the cathedral., reference_baseradiallines - Creates n number of radial lines from the origin based on the number of ribs to be created. Then creates points at the intersection of the radial lines and the base ellipse., reference_buildingaxisinfo - creates the central building axis for the form and accompanying information, reference_glazingedgecurves - generates edges from rectangular ribs that serve as the glazing edges, reference_ribsnurbscurve - Creates a reference nurbs curve that represents the ribs of the cathedral, reference_shallowest rib point info - finds the shallowest rib points and analyzes the distance between the points (use distance as crosssection width for mid ribs), reference_structurecrosssection - creates a square cross section for concrete and neoprene structure, structure_concretefoundation - creates concrete foundation under neoprene for each rib from structural crosssection, structure_metalbase - No description provided, structure_neoprene - creates neoprene from structural cross section to serve between the metal base plate and the concrete slab for each rib, Cathedral_Adapted Design Options Layout - Adaptation of Zach Kron's Design Options Layout - lays out design options on a grid regardless of how many items are attributed to each design (i.e. designs do not need to be singular solids)",
          "engine_metadata": "",
          "engine_version": "0.8.2.2431",
          "created": "2015-12-15T03:26:41.061Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "CatedralDeBrasilia - 4.517",
              "_id": "566f88715c568ad00c000025"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-15T03:26:41.061Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 81,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "4.517 MIT project - constructs a parametric model of the Cathedral of Brasilia from given parameters. Whole files included.",
      "maintainers": [
        {
          "username": "mballina",
          "_id": "561c27d0662bf0e908000251"
        }
      ],
      "keywords": [ "mit", "4.517" ],
      "white_list": false
    },
    {
      "_id": "566f8a9c5c568ad00c000027",
      "name": "Monamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2c30f727-f360-47c0-9362-22e7f1781ed4gregPkg66.zip",
          "contents": "Rename H&H pdf - Pulls Job number, Sheet Number and Current Revision and Names pdf files in set directory.",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-12-15T03:35:56.384Z",
          "full_dependency_versions": [ "0.0.1", "2015.12.10" ],
          "full_dependency_ids": [
            {
              "name": "Monamo",
              "_id": "566f8a9c5c568ad00c000027"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "2015.12.10" ],
          "direct_dependency_ids": [
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-15T03:35:56.384Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 71,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Custom Structural Nodes",
      "maintainers": [
        {
          "username": "mdorling1",
          "_id": "566f85205c568ad00c000024"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54affe45dcee4dfd26000035",
      "name": "Hollandaise",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7110bd2b-4af6-4605-92da-18ffb5310f23gregPkg952.zip",
          "contents": "Element.Category - returns an elements category, Element.ContainsParameter - determines if an element has a specific parameter, Element.GetDesignOption - gets an elements design option, Element.Parameters - returns parameter names and values, Element.SetType - Sets an elements type, ElementParamByHostTypeParam - Given an element, finds its host element type, retrieves data from a parameter and assigns it to a parameter on the original element, ElementParamByParam - Takes an element, finds its host, retrieves a value from a parameter and assigns that value to the same parameter of the hosted element, Floor.Boundaries - returns the boundaries of a floor, List.DuplicateToMatch - Duplicates the items in list1 so that they match the number of items in the sublists of list2, List.IncrementalAddition - Incrementally adds all of the items in a list, Set Site Location - Sets the project site location, Sheet.GetViewports - returns all of the viewports on a sheet, Sort Panel by UV - Sorts CW panels by the UV of the host wall, String.ProperCase - puts the string in proper case, first letter of each word is capitalized, String.ProperCaseWithExclusions - converts a string to proper case, but excludes any whole words from a list of exclusions, Viewport.Pts - Gets the min and max points of a viewport, Switch - simulates a switch statement",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-12-24T00:21:33.291Z",
          "full_dependency_versions": [ "2015.12.23", "2015.11.12" ],
          "full_dependency_ids": [
            {
              "name": "Hollandaise",
              "_id": "54affe45dcee4dfd26000035"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "2015.11.12" ],
          "direct_dependency_ids": [
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "change_log": "",
          "version": "2015.12.23",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-24T00:21:33.291Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 510,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "LionsDen",
          "_id": "56fa23aa5bee3e21380000a8"
        }
      ],
      "num_dependents": 1,
      "description": "Set of tools for interfacing with a revit model",
      "maintainers": [
        {
          "username": "nholland@nbbj.com",
          "_id": "5486713bfa779c1c11000021"
        }
      ],
      "keywords": [ "element;", "host;", "parameters;", "tags;", "locations;" ],
      "white_list": false
    },
    {
      "_id": "5683c9915c568ad00c00006e",
      "name": "Replace.Element.By.Mask",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/acbbfa06-2e2e-4c4a-8534-a317d6c18211gregPkg893.zip",
          "contents": "Replace.Element.By.Mask - Replaces an element in a list (original) from another (modified) based on a boolean mask.",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-12-30T12:09:53.504Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Replace.Element.By.Mask",
              "_id": "5683c9915c568ad00c00006e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-30T12:09:53.504Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 102,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Replaces an element in a list based on a mask with an element from another list at the same index. All inputs intended to be of the same size.",
      "maintainers": [
        {
          "username": "mgo@damgaard-ri.dk",
          "_id": "5532699ca8367b9861000007"
        }
      ],
      "keywords": [ "list;", "replace;", "mask;", "element;" ],
      "white_list": false
    },
    {
      "_id": "5686ca905c568ad00c00007a",
      "name": "Eric Koehne",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7ceac03f-f7f8-46e6-b6a3-ea6647450edfgregPkg138.zip",
          "contents": "ReturnListOrSingleValue - If the unknown item is not a list but rather a single item, only the first item of the list (input \"seq\") will be returned., Turn Into List - Turns an element (or a nested list) into a flat list, View.DuplicateAsDependent - Duplicates a given view as a dependent view",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-01-01T18:50:56.199Z",
          "full_dependency_versions": [ "0.9.0" ],
          "full_dependency_ids": [
            {
              "name": "Eric Koehne",
              "_id": "5686ca905c568ad00c00007a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.9.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-01T18:50:56.199Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 266,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Duplicate Views & Assign Scope Boxes",
      "maintainers": [
        {
          "username": "revitnation",
          "_id": "5686c7f15c568ad00c000079"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "568a778f5c568ad00c000084",
      "name": "FamilyMan",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d7b1817c-8ae5-472f-b489-84431d923bb0gregPkg757.zip",
          "contents": "AddFamilyParameter - Add a family parameter to the active family document",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-01-04T14:09:29.057Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "FamilyMan",
              "_id": "568a778f5c568ad00c000084"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-04T14:09:29.057Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 498,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "FamilyMan",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A package with utility nodes for family creation and management.",
      "maintainers": [
        {
          "username": "isak.regnstrom@sweco.se",
          "_id": "568a67c95c568ad00c000082"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "568e3ce15c568ad00c000096",
      "name": "QRCoder",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/99eb2601-7ba3-4cb7-b00d-da4ce9f8d877gregPkg136.zip",
          "contents": "QRcoder - This node will create an QR code with the input. Accepts single items and lists",
          "engine_metadata": "",
          "engine_version": "0.9.1.3464",
          "created": "2016-01-07T10:24:33.088Z",
          "full_dependency_versions": [ "2016.1.7", "0.1.5", "0.90.3" ],
          "full_dependency_ids": [
            {
              "name": "QRCoder",
              "_id": "568e3ce15c568ad00c000096"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "direct_dependency_versions": [ "0.90.3", "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "2016.1.7",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-07T10:24:33.088Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 68,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Dynamite and Ammo",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This package contains nodes for creating simple QR codes based on string input.\r\n\r\nBased on the QRCoder project here: https://github.com/codebude/QRCoder\r\n\r\nThe QRCoder.dll is lisenced under the MIT license.",
      "maintainers": [
        {
          "username": "josteinolsen7513",
          "_id": "53edcf720e5572016a00018f"
        }
      ],
      "keywords": [ "qr" ],
      "white_list": false
    },
    {
      "_id": "569337375c568ad00c0000aa",
      "name": "sabari nathan",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9e8f9b22-fe88-40b7-8001-84f2e81631d2gregPkg27.zip",
          "contents": "All Families Of Category - Gets all famiies of a given category in the model  (does *not *work for system families), All Family Types Of Category - Gets all family types/symbols of a given category in the model  (does *not *work for system families), ReturnListOrSingleValue - If the unknown item is not a list but rather a single item, only the first item of the list (input \"seq\") will be returned., TurnIntoList - Turns an element (or a nested list) into a flat list",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-01-11T05:01:43.606Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "sabari nathan",
              "_id": "569337375c568ad00c0000aa"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-11T05:01:43.606Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 35,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "sabari nathan",
      "maintainers": [
        {
          "username": "periyasamy.suresh",
          "_id": "567394535c568ad00c000041"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5532c464a8367b986100000a",
      "name": "Center_line_of_Revit_MEP_Pipe_Improved",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/2e9ab9ac-f21d-4e33-b6a2-4d7dfc61d1fegregPkg273.zip",
          "contents": "Center_line_of_Revit_MEP_Pipe_Improved - Returns centre line and end points of MEP Pipe",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-01-20T17:45:58.129Z",
          "full_dependency_versions": [ "2.2.0" ],
          "full_dependency_ids": [
            {
              "name": "Center_line_of_Revit_MEP_Pipe_Improved",
              "_id": "5532c464a8367b986100000a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2.2.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-20T17:45:58.129Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 597,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "MEP",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Returns lists with endpoints, centre line, connector types and points of other connectors of pipes, ducts, cable trays, any system family with connectors. Requires IronPython installed in C:\\Program Files (x86)\\IronPython.",
      "maintainers": [
        {
          "username": "mgo@damgaard-ri.dk",
          "_id": "5532699ca8367b9861000007"
        }
      ],
      "keywords": [ "mep;", "pipe" ],
      "white_list": false
    },
    {
      "_id": "569fea44c3e9ee4a08000009",
      "name": "ReplaceSubList",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/63990dea-476a-497c-8245-29cfe3af8240gregPkg541.zip",
          "contents": "ReplaceSubList - list1 has one sublist, list2 is a simple list: will replace the nth sublist in list1 with list2 ",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-01-20T20:12:52.833Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "ReplaceSubList",
              "_id": "569fea44c3e9ee4a08000009"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-20T20:12:52.833Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 58,
      "repository_url": "",
      "site_url": "http://truevis.com",
      "banned": false,
      "deprecated": false,
      "group": "truevis",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "list1 has one sublist, list2 is a simple list: will replace the nth sublist in list1 with list2 ",
      "maintainers": [
        {
          "username": "truevis",
          "_id": "569fd8c3c3e9ee4a08000005"
        }
      ],
      "keywords": [ "replace", "sublist" ],
      "white_list": false
    },
    {
      "_id": "56a5d003c3e9ee4a08000022",
      "name": "BOP ",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9110d603-58f5-4b2d-97e4-94a2f9e4b3efgregPkg388.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-01-25T07:34:27.767Z",
          "full_dependency_versions": [ "0.9.0" ],
          "full_dependency_ids": [
            {
              "name": "BOP ",
              "_id": "56a5d003c3e9ee4a08000022"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.9.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-25T07:34:27.767Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 116,
      "repository_url": "",
      "site_url": "fliop2.blogspot.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "To Give BOP in the Parameter. First Create BOP Shared Parameter to pipes",
      "maintainers": [
        {
          "username": "rajkumar.n@neilsoft.com",
          "_id": "56a5cf30c3e9ee4a08000021"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56a79ddec3e9ee4a08000034",
      "name": "Etude Solaire",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4bc8434c-ed64-48eb-b941-3b24ffd88152gregPkg875.zip",
          "contents": "Ombre mappee - Ombre mappee, Ombre par face - A mapper - Ombre par face - A mapper, Ombre par face - Ombre par face, Ombres sur surfaces a maper - Ombres sur surfaces a maper, Project on surface on surface - Project on surface on surface, Projection arbre conique sur surface d'analyse - Aucune description disponible",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-01-29T07:22:04.104Z",
          "full_dependency_versions": [ "0.0.6", "0.7.0", "1.2.0" ],
          "full_dependency_ids": [
            {
              "name": "Etude Solaire",
              "_id": "56a79ddec3e9ee4a08000034"
            },
            {
              "name": "Doha M3 voutes",
              "_id": "55cb52a2662bf0e9080000a1"
            },
            {
              "name": "DOHA M2 ",
              "_id": "55478245a8367b9861000063"
            }
          ],
          "direct_dependency_versions": [ "0.7.0" ],
          "direct_dependency_ids": [
            {
              "name": "Doha M3 voutes",
              "_id": "55cb52a2662bf0e9080000a1"
            }
          ],
          "change_log": "",
          "version": "0.0.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-29T07:22:04.104Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 42,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "AREP",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Etude Solaire AREP",
      "maintainers": [
        {
          "username": "Mchtoufy",
          "_id": "55478244a8367b9861000062"
        }
      ],
      "keywords": [ "arep", "nimes" ],
      "white_list": false
    },
    {
      "_id": "56b079a5c3e9ee4a08000080",
      "name": "Lines",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b1fb28dc-c67a-467e-8719-00dae6d40e7bgregPkg800.zip",
          "contents": "lineGrid - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3966",
          "created": "2016-02-02T09:40:53.523Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Lines",
              "_id": "56b079a5c3e9ee4a08000080"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-02T09:40:53.523Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 29,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create lines (Testing upload of a packakge)",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b07cdcc3e9ee4a08000082",
      "name": "surface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5ae87664-6de4-4797-8bdc-e78f25ad2514gregPkg105.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3965",
          "created": "2016-02-02T09:54:36.370Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "surface",
              "_id": "56b07cdcc3e9ee4a08000082"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-02T09:54:36.37Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 38,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "create a surface( test upload of pacakge)",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b07e1ac3e9ee4a08000084",
      "name": "sfdsf",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/461a07bc-13f5-4f05-8b4f-0eae58d8617cgregPkg636.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3965",
          "created": "2016-02-02T09:59:54.529Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "sfdsf",
              "_id": "56b07e1ac3e9ee4a08000084"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-02T09:59:54.529Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "sfsfsfsfsfsfsfsf",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b08472c3e9ee4a0800008a",
      "name": "waves",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/672dd290-335c-4604-a092-ad33a5498380gregPkg590.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.3965",
          "created": "2016-02-02T10:26:58.395Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "waves",
              "_id": "56b08472c3e9ee4a0800008a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-02T10:26:58.395Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 7,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "create surface( test package)",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b093c6c3e9ee4a0800008f",
      "name": "surftest",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/df4cca37-b8c0-4fb8-8c70-14575e10ebf1gregPkg534.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3765",
          "created": "2016-02-02T11:32:22.740Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "surftest",
              "_id": "56b093c6c3e9ee4a0800008f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-02T11:32:22.74Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "test upload ",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b0972ac3e9ee4a08000091",
      "name": "wavetest",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c27a2e9c-62ab-48c7-a242-abe22167b5f2gregPkg439.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3721",
          "created": "2016-02-02T11:46:50.394Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "wavetest",
              "_id": "56b0972ac3e9ee4a08000091"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-02T11:46:50.394Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 7,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "upload a package",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b2d97fc3e9ee4a0800009c",
      "name": "quicksurf",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/580aecbe-6c33-4aec-b235-4d69f44a8baegregPkg214.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3986",
          "created": "2016-02-04T04:54:23.096Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "quicksurf",
              "_id": "56b2d97fc3e9ee4a0800009c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-04T04:54:23.096Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "test publish package",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b2dc7dc3e9ee4a0800009f",
      "name": "surfw",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c05166d8-3f14-42ca-a1cf-f7f82e81a5abgregPkg827.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "1.0.0.336",
          "created": "2016-02-04T05:07:09.868Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "surfw",
              "_id": "56b2dc7dc3e9ee4a0800009f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-04T05:07:09.868Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "publish package",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b2ea59c3e9ee4a080000a1",
      "name": "surfloc",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7d03b651-9913-4ca2-9bf5-fa334a50c957gregPkg724.zip",
          "contents": "surf - No description provided, xyz2 - No description provided",
          "engine_metadata": "",
          "engine_version": "1.0.0.336",
          "created": "2016-02-04T06:06:17.535Z",
          "full_dependency_versions": [ "5.1.1" ],
          "full_dependency_ids": [
            {
              "name": "surfloc",
              "_id": "56b2ea59c3e9ee4a080000a1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "5.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-04T06:06:17.535Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing publish package",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b2efd0c3e9ee4a080000a5",
      "name": "GenPoint",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9e6a0d4e-76f4-45a4-9d61-c0684685d8c1gregPkg857.zip",
          "contents": "genPoint - No description provided",
          "engine_metadata": "",
          "engine_version": "1.0.0.336",
          "created": "2016-02-04T06:29:36.408Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "GenPoint",
              "_id": "56b2efd0c3e9ee4a080000a5"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-04T06:29:36.408Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 18,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "to generate a point set( test package)",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b30d6fc3e9ee4a080000a7",
      "name": "sftest",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/68d55789-4237-403f-98e2-1a121fc8bdddgregPkg863.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "1.0.0.336",
          "created": "2016-02-04T08:35:59.007Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "sftest",
              "_id": "56b30d6fc3e9ee4a080000a7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-04T08:35:59.007Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "update package test",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b310edc3e9ee4a080000ab",
      "name": "testPk",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/025ec98a-5475-4e69-bb33-8365bb7fca17gregPkg19.zip",
          "contents": "buko - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-02-04T08:50:53.204Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "testPk",
              "_id": "56b310edc3e9ee4a080000ab"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-04T08:50:53.204Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing package update",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b3248dc3e9ee4a080000ad",
      "name": "surfacetest",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/71629737-c70d-4d33-b9d0-7ba1e39413b7gregPkg466.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2016-02-04T10:14:37.123Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "surfacetest",
              "_id": "56b3248dc3e9ee4a080000ad"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-04T10:14:37.123Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 17,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Test package in 0.8.2",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b3c312c3e9ee4a080000b7",
      "name": "PZP",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c27c52aa-35d7-48b8-af21-4a037172a8bdgregPkg853.zip",
          "contents": "Drawn By/Checked By - Populates Drawn By and Checked By sheet parameters, Read from excel - Read data from pre-formatted excel spreadsheet and write to revit, Write to excel - Write data to an excel file",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-02-05T00:47:43.539Z",
          "full_dependency_versions": [ "0.1.101", "0.75.20" ],
          "full_dependency_ids": [
            {
              "name": "PZP",
              "_id": "56b3c312c3e9ee4a080000b7"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "direct_dependency_versions": [ "0.75.20" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "change_log": "",
          "version": "0.1.101",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-05T00:47:43.539Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 89,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "easily complete drawn by and checked by fields for mechanical, electrical and plumbing disciplines",
      "maintainers": [
        {
          "username": "pzphares@bpce.com",
          "_id": "56b3c222c3e9ee4a080000b6"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "568277405c568ad00c00006a",
      "name": "OblomovNode",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7a34db68-d0fb-49b4-92a9-ea1e76c7977dgregPkg729.zip",
          "contents": "Code Parameter By Mass - Codes all Choosen objects inside masses that has the desired values, Filter Primary Design Option - Filters elements by primary design option, ParameterValueColorFilter - Overrides Elements by random color according to Certain type Parameters, RoomCast - Checks distance between walls inside a room by RayCasting",
          "engine_metadata": "",
          "engine_version": "1.0.0.276",
          "created": "2016-02-07T12:56:40.362Z",
          "full_dependency_versions": [ "0.0.3", "2015.11.28" ],
          "full_dependency_ids": [
            {
              "name": "OblomovNode",
              "_id": "568277405c568ad00c00006a"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "2015.11.28" ],
          "direct_dependency_ids": [
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-07T12:56:40.362Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 30,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Nodes Created By GS",
      "maintainers": [
        {
          "username": "gustav.skarin@sweco.se",
          "_id": "5632376a662bf0e9080002c3"
        }
      ],
      "keywords": [ "design", "option", "filter", "colors" ],
      "white_list": false
    },
    {
      "_id": "56ba19c3c3e9ee4a080000d3",
      "name": "Trimble.Import",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b69ad7c6-f894-44cd-ac53-bf22a72290e5gregPkg18.zip",
          "contents": "Trimble.Import - Trimble Point Import",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-02-09T16:54:27.261Z",
          "full_dependency_versions": [ "0.9.0" ],
          "full_dependency_ids": [
            {
              "name": "Trimble.Import",
              "_id": "56ba19c3c3e9ee4a080000d3"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.9.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-09T16:54:27.261Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 120,
      "repository_url": "https://github.com/natethegrate1/MEPTools/blob/master/TrimbleImport.dyf",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "MEP Tools",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Trimble Point Import",
      "maintainers": [
        {
          "username": "natethegrate1@gmail.com",
          "_id": "56ba14e0c3e9ee4a080000d0"
        }
      ],
      "keywords": [ "trimble", "total", "station", "import" ],
      "white_list": false
    },
    {
      "_id": "56a8eb08c3e9ee4a08000046",
      "name": "Prorubim DS Common Kit for 0.9",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8dd6a0bd-be09-4883-8f32-6b866827c8c6gregPkg808.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.276",
          "created": "2016-02-13T18:06:51.883Z",
          "full_dependency_versions": [ "0.4.1" ],
          "full_dependency_ids": [
            {
              "name": "Prorubim DS Common Kit for 0.9",
              "_id": "56a8eb08c3e9ee4a08000046"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.4.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-13T18:06:51.883Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 274,
      "repository_url": "",
      "site_url": "http://tools.prorubim.com/en/",
      "banned": false,
      "deprecated": false,
      "group": "Prorubim",
      "engine": "dynamo",
      "license": "CC Attribution-NoDerivatives 4.0 International",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Node set with additional app independent universal Dynamo nodes",
      "maintainers": [
        {
          "username": "alexey.lobanov",
          "_id": "546cdebcb77c84600c00001c"
        }
      ],
      "keywords": [ "common", "elements", "execution", "global", "parameters", "force", "restart" ],
      "white_list": false
    },
    {
      "_id": "56c144a6c3e9ee4a08000103",
      "name": "testing_pkg",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f247a3e2-1d49-49f0-a758-8e29e45fa35cgregPkg772.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "1.0.0.411",
          "created": "2016-02-15T03:23:18.470Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "testing_pkg",
              "_id": "56c144a6c3e9ee4a08000103"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-15T03:23:18.47Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 7,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing package ",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56cd500bc3e9ee4a0800013e",
      "name": "JTHWAX",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4badf09e-2b34-47ca-8657-f53108a00f0fgregPkg582.zip",
          "contents": "取得文件中所有元素_v1 - 取得文件中所有元素, 取得文件中所有元素,可指定品類_v1 - 取得文件中所有元素, RoomBounds_v1 - 取出房間資料, Element.GetType - 取出元素類型資料",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2016-02-24T06:39:07.265Z",
          "full_dependency_versions": [ "0.1.2", "0.1.5", "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "JTHWAX",
              "_id": "56cd500bc3e9ee4a0800013e"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "direct_dependency_versions": [ "0.1.5", "0.1.2" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "Return List Or Single Value",
              "_id": "529c54699de41c8235000027"
            }
          ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-24T06:39:07.265Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 11,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "JTHWAX",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "自行開發與蒐集節點\r\n2016-02-24",
      "maintainers": [
        {
          "username": "AD8080202",
          "_id": "562b24f4662bf0e908000294"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "56ce77cac3e9ee4a08000146",
      "name": "surf01test",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/be1bd2b2-4e4d-48ee-8d06-a14ea5253e5bgregPkg205.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "1.0.0.544",
          "created": "2016-02-25T03:40:58.665Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "surf01test",
              "_id": "56ce77cac3e9ee4a08000146"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-25T03:40:58.665Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "publish a test - wavy surface",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56cec6fcc3e9ee4a0800014b",
      "name": "testsurf02",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ca374d1c-481a-49a9-a940-ba99c13ec5ebgregPkg470.zip",
          "contents": "Fibonacci - No description provided",
          "engine_metadata": "",
          "engine_version": "1.0.0.543",
          "created": "2016-02-25T09:18:52.011Z",
          "full_dependency_versions": [ "2.0.0" ],
          "full_dependency_ids": [
            {
              "name": "testsurf02",
              "_id": "56cec6fcc3e9ee4a0800014b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-25T09:18:52.011Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing upload package",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56d793cb5bee3e213800000e",
      "name": "NSK Pack",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9af63ac1-8c96-45bf-92a1-db504cdd1728gregPkg519.zip",
          "contents": "GetAll室外機 - Get all 室外機",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-03-03T01:30:51.556Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "NSK Pack",
              "_id": "56d793cb5bee3e213800000e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-03T01:30:51.556Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "NSK",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "NAK Tools for design",
      "maintainers": [
        {
          "username": "yoji.takahashi@autodesk.com",
          "_id": "56d6d0175bee3e213800000c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56d7a3e05bee3e2138000010",
      "name": "ADSK.ACJP.General",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/dfbfb1c5-369c-4380-8aff-c8d556a0d704gregPkg447.zip",
          "contents": "getCurrentTime - get Current Time",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-03-03T02:39:28.514Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "ADSK.ACJP.General",
              "_id": "56d7a3e05bee3e2138000010"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-03T02:39:28.514Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 0,
      "repository_url": "https://github.com/birdland007s/DynamoPackages.git",
      "site_url": "https://github.com/birdland007s/DynamoPackages",
      "banned": false,
      "deprecated": true,
      "group": "ADSK",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "ADSK ACJP General",
      "maintainers": [
        {
          "username": "yoji.takahashi@autodesk.com",
          "_id": "56d6d0175bee3e213800000c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55916d4bf2ae5a9a070000f2",
      "name": "Atmos",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ee5e0412-5a96-4e7d-ada7-769bb488dc2fgregPkg281.zip",
          "contents": "Atmos.CosineTower - This definition will create a Cosine Surface and Points Distribution from any selected model lines as template. , Atmos.DoorHostChecker - This definition will allow you to check if your doors are hosted to the correct Wall type(s), Atmos.ElementIsolateByHostLevel - This definition will group Elements of the 'Room', 'Wall', 'Floor', 'Ceiling' and 'Roof' categories hosted to a chosen level. You can choose to Isolate, Colour or Reset the colour override on aforementioned Elements. , Atmos.SlattedFacade - This node will take a flat surface as input, and will provide a randomised 'Slatted Facade' as Dynamo geometry., Atmos.XY.frameExtents - Gathers the maximum and minimum points from a selection of model lines to create an extent frame. Output gives you the frame rectangle, corner points, centre points of frame and centroid of shape. , Atmos.XY.pointsDistribution - Creates a points distribution based off divisions across the XY Plane from a selection of Revit Model lines",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-03-10T20:47:05.261Z",
          "full_dependency_versions": [ "0.90.2", "82.2.1" ],
          "full_dependency_ids": [
            {
              "name": "Atmos",
              "_id": "55916d4bf2ae5a9a070000f2"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            }
          ],
          "direct_dependency_versions": [ "82.2.1" ],
          "direct_dependency_ids": [
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            }
          ],
          "change_log": "",
          "version": "0.90.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-10T20:47:05.261Z",
      "num_versions": 14,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 335,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Atmos",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Atmos is a collection of custom nodes by Sol Amour | After installation searching for 'Atmos' will bring up the category in Dynamo | The nodes have been created and tested in Dynamo 0.8 and Revit 2015 | @solamour | www.cargocollective.com/amoursol",
      "maintainers": [
        {
          "username": "solamour",
          "_id": "55916d4bf2ae5a9a070000f1"
        }
      ],
      "keywords": [ "room", "extents", "frame", "xy", "isolate", "checker", "facade" ],
      "white_list": false
    },
    {
      "_id": "56f134d05bee3e213800008c",
      "name": "jpn_test",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5948d74b-e7eb-4d18-966b-2b8729f48267gregPkg375.zip",
          "contents": "1 - 1",
          "engine_metadata": "",
          "engine_version": "1.0.0.802",
          "created": "2016-03-22T12:04:32.861Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "jpn_test",
              "_id": "56f134d05bee3e213800008c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-22T12:04:32.861Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 6,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "for testing",
      "maintainers": [
        {
          "username": "t_syvns",
          "_id": "560bcc81662bf0e908000210"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "561ed4d4662bf0e90800025b",
      "name": "Dynablaster",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5a7012cd-c6e9-4920-810b-0c0dea9d2635gregPkg402.zip",
          "contents": "Dyno.JsonGenerator - No description provided, DynoPresetGenerator - Generates the Preset for Dyno, DynoPresetInputGenerator - Authomatizes the.dpr file generation, Element.FIlterByParameterValue - Filters the elements which parameter value equals the input value. Returns two lists, the first been \"true\" and the second \"false\", Enumeration - Returns a list from 1 to n; where n is the count of the input list. Revamped to prevent unpredictable behaviour when input list was empty. More at: http://dynamonodes.com/, NumberToCharacter AAZZ - Returns alphabetical equivalent for a given integer. \r\nfrom 1 to 26  returns A-Z values. Also provides a list of values from 1 to input integer, translated to alphabet equivalents.\r\nWith higher inputs returns \"AA\" type values, up to n=676. Higher inputs than this returns \"Out of range\" string., NumberToCharacter AZ - Returns the alphabetical equivalent for a given integer. Range 1-26 (A-Z), paragraphFromStrings - This node takes a list of strings as input, and returns a single string formatted like a paragraph.\r\n, TitleblockFromSheet - Returns the TitleBlock corresponding to the input Sheet element. Also works with lists of Sheets., Wall.GetTotalWidth_2 - Get Wall's  Total Width parameter",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-03-22T23:27:10.555Z",
          "full_dependency_versions": [ "0.90.91" ],
          "full_dependency_ids": [
            {
              "name": "Dynablaster",
              "_id": "561ed4d4662bf0e90800025b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.90.91",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-22T23:27:10.555Z",
      "num_versions": 10,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 464,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "functionality",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A variety of custom nodes to speed up tedious tasks. Use at your own risk. Built on Dynamo 8.2 and tested on Revit 2014. Also tested on Dynamo 9.0 ontop Revit 2016.\r\nVisit http://dynamonodes.com/",
      "maintainers": [
        {
          "username": "MS_idp",
          "_id": "561ed3ef662bf0e90800025a"
        }
      ],
      "keywords": [ "alphabet", "enumeration", "filter", "parameter", "dynobrowser", "sheets", "titleblocks", "paragraph" ],
      "white_list": false
    },
    {
      "_id": "56fa23aa5bee3e21380000a8",
      "name": "LionsDen",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ff5355c8-bc0a-4214-8750-e5cb966726e9gregPkg72.zip",
          "contents": "Viewport Detail Number Engine-Custom - The black box that processes ans calculates where and how to label the viewports on the sheet according to CAD standards. ",
          "engine_metadata": "",
          "engine_version": "0.9.2.4472",
          "created": "2016-03-29T06:50:02.119Z",
          "full_dependency_versions": [ "1.0.2", "2015.12.23", "2016.2.10", "2015.11.12", "0.75.47" ],
          "full_dependency_ids": [
            {
              "name": "LionsDen",
              "_id": "56fa23aa5bee3e21380000a8"
            },
            {
              "name": "Hollandaise",
              "_id": "54affe45dcee4dfd26000035"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "direct_dependency_versions": [ "2016.2.10", "0.75.47", "2015.12.23" ],
          "direct_dependency_ids": [
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            },
            {
              "name": "Hollandaise",
              "_id": "54affe45dcee4dfd26000035"
            }
          ],
          "change_log": "",
          "version": "1.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-29T06:50:02.119Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 31,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "LionsDen",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A collection of tools to assist in crafting your own cave. ",
      "maintainers": [
        {
          "username": "Tim.Halvorson@hdrinc.com",
          "_id": "56e8e7ed5bee3e2138000068"
        }
      ],
      "keywords": [ "sheet", "management" ],
      "white_list": false
    },
    {
      "_id": "5656c3890370b0a90700001c",
      "name": "PackageWithIcons",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c1414611-3632-4ac8-85a9-4d8fa1179bf8gregPkg502.zip",
          "contents": "blue_node - No description provided, default_node - No description provided, red_node - No description provided",
          "engine_metadata": "",
          "engine_version": "1.0.0.883",
          "created": "2016-04-04T13:58:28.555Z",
          "full_dependency_versions": [ "2.0.0" ],
          "full_dependency_ids": [
            {
              "name": "PackageWithIcons",
              "_id": "5656c3890370b0a90700001c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-04T13:58:28.555Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 40,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Test pachage with iicons.",
      "maintainers": [
        {
          "username": "Alannna",
          "_id": "55783449f2ae5a9a07000052"
        }
      ],
      "keywords": [ "icons" ],
      "white_list": false
    },
    {
      "_id": "56fc70615bee3e21380000bc",
      "name": "GuDYNCat Scripts",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/dea875f6-c1e4-4207-b52b-60eac89015fegregPkg977.zip",
          "contents": "all.Elements.ParametersofCategory - get all elements with all its parameters of a category, All.Model.Cagegories - list of all model categories, all.Type.ParametersofCategory - get all elements with all its parameters of a category, AllElementsOfCategoryToExcel - No description provided, AllTypesOfCategoryToExcel - No description provided, Export.ModelToExcel - get all elements with all its parameters of a category, ExportModelToExcel - No description provided, Filtered.Type.ParametersofCategory - get all elements with all its parameters of a category, FilteredTypesOfCategoryToExcel - No description provided, null.GUID.RowsOfList - Obtain rows of list where GUID in first column is null",
          "engine_metadata": "",
          "engine_version": "0.9.2.4472",
          "created": "2016-04-05T20:51:55.377Z",
          "full_dependency_versions": [ "1.0.1", "0.1.5", "2015.4.15", "0.90.7" ],
          "full_dependency_ids": [
            {
              "name": "GuDYNCat Scripts",
              "_id": "56fc70615bee3e21380000bc"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "BlackBox",
              "_id": "551b2a415899bb370500002e"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "direct_dependency_versions": [ "0.90.7", "0.1.5", "2015.4.15" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "BlackBox",
              "_id": "551b2a415899bb370500002e"
            }
          ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-05T20:51:55.377Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 35,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "GuDYNCat",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Custom nodes created by GuDYNCat members",
      "maintainers": [
        {
          "username": "miquel.rodriguez@static-ing.com",
          "_id": "56fc6fc35bee3e21380000bb"
        }
      ],
      "keywords": [ "gudyncat" ],
      "white_list": false
    },
    {
      "_id": "57047cc45bee3e21380000ea",
      "name": "Unfold.CutFoldCurves",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/303c5d05-61b6-429c-8fba-fb752a672039gregPkg229.zip",
          "contents": "Unfold.CutFoldCurves - Takes a flattend polysurface and derives interior fold and exterior cuts.  Use with DynamoUnfold",
          "engine_metadata": "",
          "engine_version": "1.0.0.953",
          "created": "2016-04-06T03:04:36.392Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Unfold.CutFoldCurves",
              "_id": "57047cc45bee3e21380000ea"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-06T03:04:36.392Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 143,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Takes a flattend polysurface and derives interior fold and exterior cuts.  Use with DynamoUnfold",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56cf1ab5c3e9ee4a08000152",
      "name": "Doha PW",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/50561878-e11b-4efc-9f64-194776c6e0dagregPkg505.zip",
          "contents": "Element.SetAreaParameter - No description provided, Element.SetMaterialParameter - No description provided, Parameter.SetData - No description provided, Revit.GeometryExport - No description provided, Revit.SetFamilyParameterByName - No description provided, Aperture.thickening - Aperture input - inmport instace, Sort.byArea - Sort surfaces by area size from min to max, output for min, max and middle",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2016-04-06T12:28:32.752Z",
          "full_dependency_versions": [ "1.0.2", "1.5.1" ],
          "full_dependency_ids": [
            {
              "name": "Doha PW",
              "_id": "56cf1ab5c3e9ee4a08000152"
            },
            {
              "name": "RHA_Utilities",
              "_id": "556edac0f2ae5a9a0700000e"
            }
          ],
          "direct_dependency_versions": [ "1.5.1" ],
          "direct_dependency_ids": [
            {
              "name": "RHA_Utilities",
              "_id": "556edac0f2ae5a9a0700000e"
            }
          ],
          "change_log": "",
          "version": "1.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-06T12:28:32.752Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 85,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A collection of custom nodes used for advanced parameter writing.",
      "maintainers": [
        {
          "username": "sorin.c.tatu@gmail.com",
          "_id": "56cf19f1c3e9ee4a08000151"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56ab7b47c3e9ee4a0800006b",
      "name": "EthosMEP",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9b4c7f59-bc37-4779-98e4-0524245c888cgregPkg263.zip",
          "contents": "ScopeBox Collector - Gets Scope boxes from document. Output Elements, Names and Count, SelectCategoriesElectrical - Query all Electrical categories and output separetely, SelectCategoriesMechanical - Query all Mechanical categories and output separetely, SelectElements.ByGuid - Input list of GUIDs to select the elements, View.isDependent - Checks if a view is dependent or not. Returns true or false, ViewTemplate FilteredCollector - Filtered View Template Collector by Name or part of Name. Input String, Output- Elements, Names and Count",
          "engine_metadata": "",
          "engine_version": "0.9.2.4472",
          "created": "2016-04-07T13:21:10.332Z",
          "full_dependency_versions": [ "2016.1.2", "0.90.7" ],
          "full_dependency_ids": [
            {
              "name": "EthosMEP",
              "_id": "56ab7b47c3e9ee4a0800006b"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "direct_dependency_versions": [ "0.90.7" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "change_log": "",
          "version": "2016.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-07T13:21:10.332Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 518,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "MEP selection tools",
      "maintainers": [
        {
          "username": "alessandrocaligari",
          "_id": "56ab7751c3e9ee4a08000069"
        }
      ],
      "keywords": [ "select", "elements", "categories", "electrical", "mechanical", "mep", "guid", "scopebox", "view", "dependent", "template" ],
      "white_list": false
    },
    {
      "_id": "570a4088287283f905000006",
      "name": "Rain Area",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/25bf571c-1dac-4a35-b99d-6ff81abf155fgregPkg731.zip",
          "contents": "Rain - Retrieving the horizontal area hit by rain/sun/snow/... from roofs, floors or topography",
          "engine_metadata": "",
          "engine_version": "0.9.2.4472",
          "created": "2016-04-10T12:01:12.186Z",
          "full_dependency_versions": [ "1.0.0", "0.1.3", "2015.11.28" ],
          "full_dependency_ids": [
            {
              "name": "Rain Area",
              "_id": "570a4088287283f905000006"
            },
            {
              "name": "List Not Empty",
              "_id": "528df0219de41c8235000009"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "0.1.3", "2015.11.28" ],
          "direct_dependency_ids": [
            {
              "name": "List Not Empty",
              "_id": "528df0219de41c8235000009"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-10T12:01:12.186Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 193,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Retrieves the horizontal area hit by rain/sun/snow/... from roofs, floors and topography",
      "maintainers": [
        {
          "username": "lpnsanhudo",
          "_id": "570a3fc4287283f905000005"
        }
      ],
      "keywords": [ "area", "rain", "snow", "sun", "horizontal", "roofs", "floors", "topography" ],
      "white_list": false
    },
    {
      "_id": "570ed970287283f90500002b",
      "name": "Jason Test",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/360332a6-bcdf-4a28-8853-375190b2304dgregPkg563.zip",
          "contents": "CurtainWallJDO - Testing Curtain Wall",
          "engine_metadata": "",
          "engine_version": "0.9.2.4461",
          "created": "2016-04-13T23:42:40.313Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Jason Test",
              "_id": "570ed970287283f90500002b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-13T23:42:40.313Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 15,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Obligatory Description",
      "maintainers": [
        {
          "username": "jasonoliveira",
          "_id": "56edabca5bee3e213800007a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5717687a3ad9e8713b000004",
      "name": "Zynka BIM Test",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c84f1988-245d-41a8-99bc-7bde52653bb3gregPkg194.zip",
          "contents": "Get All Views - This node will query all views in the model and return them based on category, String.RemoveAfterGivenCharacter - This will move all characters at and after the given character., View.DuplicateAsDependent - Duplicates a given view as a dependent view",
          "engine_metadata": "",
          "engine_version": "0.9.2.4472",
          "created": "2016-04-20T11:31:06.155Z",
          "full_dependency_versions": [ "1.1.1", "0.90.7" ],
          "full_dependency_ids": [
            {
              "name": "Zynka BIM Test",
              "_id": "5717687a3ad9e8713b000004"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "direct_dependency_versions": [ "0.90.7" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-20T11:31:06.155Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 30,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Zynka BIM Test Skapa Dependent Views",
      "maintainers": [
        {
          "username": "guslju0522",
          "_id": "57176327287283f905000051"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5717930e3ad9e8713b000006",
      "name": "bridge",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9cdc8bb5-6cda-46ea-9d9e-e5c8e392465cgregPkg58.zip",
          "contents": "01_SplineFromExcel - Creates a Spline from a list of points coming from an Excel data sheet (profile or alignment), 02_TangentAndCoordinateSystem - Creates a tangent in a point of a spline and adds a local coordinate system to it which is normal to the tangent and aligned to global Z-axis, 03_Loft - Reads a Revit profile family; tranfers profile family from ground floor to a coordinate system on a spline, 04_Loft1Parameters - Reads 1 parameter from Excel and adds it to a Revit profile family; tranfers profile family from ground floor to a coordinate system on a spline, 05_Loft2Parameters - Reads 2 parameters from Excel and adds them to a Revit profile family; tranfers profile family from ground floor to a coordinate system on a spline, 06_Loft3Parameters - Reads 3 parameters from Excel and adds them to a Revit profile family; tranfers profile family from ground floor to a coordinate system on a spline, 07_Loft4Parameters - Reads 4 parameters from Excel and adds them to a Revit profile family; tranfers profile family from ground floor to a coordinate system on a spline, 08_Loft5Parameters - Reads 5 parameters from Excel and adds them to a Revit profile family; tranfers profile family from ground floor to a coordinate system on a spline, 09_StationPlane - Creates a vertical plane along a spline at a specific station and a specific anlge, 10_TrimBody - Trims a solid with a (inclinated) plane, 11_SectionElevation - Creates a section with a specific angle at a specific station and adds elevation text to each vertex of the geometry, 12_SectionElevationLabel - Creates a section with a specific angle at a specific station and adds elevation labels to each vertex of the geometry, 13_FaceElevationLabel - Let the user select a face in Revit and adds elevation labels to each vertex of the face, 14_HandrailConstructor - Creates a railing based on RiZ GEL standards by using adaptive components",
          "engine_metadata": "",
          "engine_version": "0.8.2.2431",
          "created": "2016-04-20T14:32:46.159Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "bridge",
              "_id": "5717930e3ad9e8713b000006"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-20T14:32:46.159Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -5,
      "downloads": 680,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "bridge",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "bridge from German",
      "maintainers": [
        {
          "username": "herrychen",
          "_id": "56f0a4df5bee3e2138000088"
        }
      ],
      "keywords": [ "bridge" ],
      "white_list": false
    },
    {
      "_id": "5720071f305bec4d3c00003c",
      "name": "SolidFractal",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b5af742b-5b32-4322-88d9-2429fa4b2891gregPkg154.zip",
          "contents": "BoxFractalformIt - Create fractal shape from solid",
          "engine_metadata": "",
          "engine_version": "0.8.0.1233",
          "created": "2016-04-27T00:26:07.473Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "SolidFractal",
              "_id": "5720071f305bec4d3c00003c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-27T00:26:07.473Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 77,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Solid",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "build box on solid faces",
      "maintainers": [
        {
          "username": "huangq",
          "_id": "571c93b2305bec4d3c000020"
        }
      ],
      "keywords": [ "solid", "fractal" ],
      "white_list": false
    },
    {
      "_id": "57220387305bec4d3c00004c",
      "name": "TestCordoba1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/315223e0-d44c-457c-8df4-8bdc0b7939a3gregPkg431.zip",
          "contents": "List.Take1and2separate.converttonumber - Este Nodo me sirve para tomar el primer indice y segundo indice de una lista y convertilos a Numeros. Made by Nacho",
          "engine_metadata": "",
          "engine_version": "0.9.2.4472",
          "created": "2016-04-28T12:35:19.052Z",
          "full_dependency_versions": [ "0.90.7" ],
          "full_dependency_ids": [
            {
              "name": "TestCordoba1",
              "_id": "57220387305bec4d3c00004c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.90.7",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-28T12:35:19.052Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "test",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Delete me please",
      "maintainers": [
        {
          "username": "corbis",
          "_id": "572201a3305bec4d3c00004b"
        }
      ],
      "keywords": [ "test" ],
      "white_list": false
    },
    {
      "_id": "57047d245bee3e21380000ec",
      "name": "Solid.TruncateCorners",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/572321b7-d40b-47d1-8a40-4fd01e9e0295gregPkg188.zip",
          "contents": "Solid.TruncateCorners - cuts the corners off a solid",
          "engine_metadata": "",
          "engine_version": "1.0.0.1111",
          "created": "2016-05-02T19:13:51.808Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Solid.TruncateCorners",
              "_id": "57047d245bee3e21380000ec"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-02T19:13:51.808Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 58,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "cuts the corners off a solid",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57296c3c384037b37e000009",
      "name": "Lunchbox Quad Grid By Face Dalian",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/39be6427-ceb1-446e-8b0c-4d3a36bca332gregPkg848.zip",
          "contents": "LunchBox Quad Grid by Face - Create a quadrangular XYZ grid on a face.  The face surface must have an untrimmed UV parameter space.",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-05-04T03:27:56.573Z",
          "full_dependency_versions": [ "1.1.1", "2015.7.21" ],
          "full_dependency_ids": [
            {
              "name": "Lunchbox Quad Grid By Face Dalian",
              "_id": "57296c3c384037b37e000009"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "2015.7.21" ],
          "direct_dependency_ids": [
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-04T03:27:56.573Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 317,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "create quad grid",
      "maintainers": [
        {
          "username": "hottakensuke",
          "_id": "57296bff384037b37e000007"
        }
      ],
      "keywords": [ "quad", "grid" ],
      "white_list": false
    },
    {
      "_id": "572aebb7384037b37e000015",
      "name": "XML Split",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/2148003a-d7ed-4cd0-89e7-283b79da7515gregPkg495.zip",
          "contents": "XML Split - Split string between ><",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-05-05T06:44:07.534Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "XML Split",
              "_id": "572aebb7384037b37e000015"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-05T06:44:07.534Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 41,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "truevis",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Split XML at ><",
      "maintainers": [
        {
          "username": "design1@truevis.com",
          "_id": "571b032f305bec4d3c00001c"
        }
      ],
      "keywords": [ "split", "xml" ],
      "white_list": false
    },
    {
      "_id": "570e45b2287283f905000025",
      "name": "Curve.SuperJoin",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/2e858e0a-4fd6-4339-ab5f-ef9cefd95c81gregPkg130.zip",
          "contents": "Curve.SuperJoin - Join all connected curves into Polycurves even they are intersected",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-05-05T06:59:51.914Z",
          "full_dependency_versions": [ "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Curve.SuperJoin",
              "_id": "570e45b2287283f905000025"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-05T06:59:51.914Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 251,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Chynamo",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Join all connected curves into Polycurves even they are intersected",
      "maintainers": [
        {
          "username": "kozmos",
          "_id": "570e4462287283f905000024"
        }
      ],
      "keywords": [ "curve", "join", "polycurve" ],
      "white_list": false
    },
    {
      "_id": "55974eaff2ae5a9a07000111",
      "name": "Testing Waters",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/4bc67121-a2ed-407a-90fd-7647b9704e62gregPkg313.zip",
          "contents": "BackgroundText.SingleLine - Single line graphic text in backround preview, BackgroundText.Thickened - Graphic text in background preview. Content , height and placement point of text to be specified.",
          "engine_metadata": "",
          "engine_version": "1.0.1.1250",
          "created": "2016-05-06T13:44:11.441Z",
          "full_dependency_versions": [ "0.8.23" ],
          "full_dependency_ids": [
            {
              "name": "Testing Waters",
              "_id": "55974eaff2ae5a9a07000111"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.8.23",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-06T13:44:11.441Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 253,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Testing Waters",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Conceptual Design and Development Tools",
      "maintainers": [
        {
          "username": "testingwaters",
          "_id": "5232aa726189d12d7e000003"
        }
      ],
      "keywords": [ "surfaces", "vertices", "background", "text" ],
      "white_list": false
    },
    {
      "_id": "573931b4ea5c18500800001e",
      "name": "Voyager",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8fb4b809-572e-4792-8574-e86b5ccc6efcgregPkg642.zip",
          "contents": "List.Item.Slider - Scroll through List items with a 0 to 1 slider, Voyager.Display.Vector - Creates a modeled Vector Arrow matching its Magnitude, Voyager.Pipe.AsSolid - No description provided, Voyager.Triangle.FromTwoLines - Two lines must touch, Allspark.Polycurve.Deconstruct - Gets segments and points of a single polycurve",
          "engine_metadata": "",
          "engine_version": "0.9.2.4472",
          "created": "2016-05-16T02:51:30.581Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Voyager",
              "_id": "573931b4ea5c18500800001e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-16T02:51:30.581Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 86,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "0.9.2",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Useful Nodes",
      "maintainers": [
        {
          "username": "Nick.Curtis@populous.com",
          "_id": "5543efa9a8367b986100005d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5741e1ecc1a604fb3600000c",
      "name": "RevitMagic",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/14e4898c-5b77-4f73-b412-b469ee10ca35gregPkg400.zip",
          "contents": "CurtainPanal.Count - Returns the number of curtain panels by length and height",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-05-22T16:48:39.172Z",
          "full_dependency_versions": [ "0.0.2", "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "RevitMagic",
              "_id": "5741e1ecc1a604fb3600000c"
            },
            {
              "name": "CurtainPanel.Sort",
              "_id": "542b7f65cc26bfdc5a00003c"
            }
          ],
          "direct_dependency_versions": [ "0.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "CurtainPanel.Sort",
              "_id": "542b7f65cc26bfdc5a00003c"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-22T16:48:39.172Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 664,
      "repository_url": "",
      "site_url": "https://revitmagic.wordpress.com/",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "**Built for Dynamo 1.0 (Revit 2015 + 2016)** RevitMagic is a collection of reusable geometry and data management nodes. For more information, visit https://revitmagic.wordpress.com/",
      "maintainers": [
        {
          "username": "semko_dm",
          "_id": "5741dd97c1a604fb3600000b"
        }
      ],
      "keywords": [ "curtain", "panels" ],
      "white_list": false
    },
    {
      "_id": "5742bac1c1a604fb36000018",
      "name": "TeklaList1_CreateCurve",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/75628c13-7c0f-455d-b65c-f5f0dc41e3cbgregPkg731.zip",
          "contents": "TeklaList1_CreateCurve - Import Tekla Structural List to create Points and Lines., TeklaList2_FilterbyLevels - No description provided, TeklaList3_GetIDData - No description provided, TeklaList4_FeedbackData - No description provided",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-05-23T08:09:37.708Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "TeklaList1_CreateCurve",
              "_id": "5742bac1c1a604fb36000018"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-23T08:09:37.708Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 87,
      "repository_url": "",
      "site_url": "https://www.linkedin.com/in/zefreestijl",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create Structural Frame Elements from Tekla Design Report data",
      "maintainers": [
        {
          "username": "t104390535",
          "_id": "573f1929e383e60d6b000007"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5744eabcc1a604fb3600002d",
      "name": "Level Generator",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/be393184-3a58-44fd-b4b6-75059d531f46gregPkg364.zip",
          "contents": "Generador de niveles - genera niveles ",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-05-24T23:58:52.750Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Level Generator",
              "_id": "5744eabcc1a604fb3600002d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-24T23:58:52.75Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 202,
      "repository_url": "",
      "site_url": "escripto.wordpress.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Generates Revit levels according to a min height , max height and distance between levels",
      "maintainers": [
        {
          "username": "dipinoch@mit.edu",
          "_id": "53739fdf0e5572016a00005d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "571b06d7305bec4d3c00001d",
      "name": "Names Values Sum",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/51877ccf-b0e9-40a4-b1ea-a3fea303b7f5gregPkg548.zip",
          "contents": "Names Values Sum - Find Unique Sums given a list of names and an equal length list of numbers",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-05-25T08:00:24.360Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Names Values Sum",
              "_id": "571b06d7305bec4d3c00001d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-25T08:00:24.36Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 17,
      "repository_url": "",
      "site_url": "http://truevis.com",
      "banned": false,
      "deprecated": true,
      "group": "truevis",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Find Unique Sums given a list of names and an equal length list of numbers",
      "maintainers": [
        {
          "username": "design1@truevis.com",
          "_id": "571b032f305bec4d3c00001c"
        }
      ],
      "keywords": [ "names", "values", "unique", "sum" ],
      "white_list": false
    },
    {
      "_id": "56dadd8e5bee3e2138000025",
      "name": "MOST-BCF2014",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/ef34425a-cfc2-4565-94a7-453bd8f663ebgregPkg221.zip",
          "contents": "CFc營建施工總碳排(2014) - CFc營建施工總碳排(2014)\r\n\r\n更新日期:2015/11/30\r\n\r\n建議:\r\n設定順序由CFm與CFrm開始,計算結果之後連結CFc與CFdw,接著獨立操作CFeu,最後將上述5個結果連接至TCF., Project Parameter Input 專案參數輸入 - Project Parameter Input 專案參數輸入\r\n\r\n更新日期:\r\n2016.04.12 // 修正AFu輸出錯誤\r\n2016.05.05 // 修正不同樣板讀取問題\r\n2016.05.07 // 修正無地下層出現錯誤\r\n2016.05.11 // 解決Bh平均樓高數值錯誤, ProjectImformation - Project EnergySetting\r\n\r\n更新日期: 2016.04.28, 學校類 - (BCFs建築尺寸預設標準值2014) - 學校類 - (BCFs建築尺寸預設標準值)\r\n\r\n更新日期:2015/11/30, BCFsForOffice計算法-2014 - BCFsForOffice, BCFsForSchool計算法-2014 - BCFsForSchool計算法-2014, Bc採用高爐混凝土減碳比例(2014) - Bc採用高爐混凝土減碳比例\r\n\r\n更新日期:2015/11/12, CFdw拆除與廢棄物處理總碳排(2014) - CFdw拆除與廢棄物處理總碳排\r\n\r\n更新日期:2015/11/30\r\n\r\n建議:\r\n設定順序由CFm與CFrm開始,計算結果之後連結CFc與CFdw,接著獨立操作CFeu,最後將上述5個結果連接至TCF., CFeu建築使用階段耗能碳排量(2014) - CFeu建築使用階段耗能碳排量\r\n\r\n更新日期:2015/11/30\r\n\r\n建議:\r\n設定順序由CFm與CFrm開始,計算結果之後連結CFc與CFdw,接著獨立操作CFeu,最後將上述5個結果連接至TCF.\r\n\r\n設定方式說明:\r\n因為牽涉圖面幾何以及人為判斷,因此Cfeu節點需要另外計算CFa,CFel,CFI\r\n, CFm新建工程資材總碳排-(BCFs算法2014) - CFm新建工程資材總碳排-(BCFs算法)\r\n\r\n更新日期:2015/11/30\r\n\r\n建議:\r\n設定順序由CFm與CFrm開始,計算結果之後連結CFc與CFdw,接著獨立操作CFeu,最後將上述5個結果連接至TCF., CFrm修繕更新階段資材總碳排(2014) - CFrm修繕更新階段資材總碳排\r\n\r\n更新日期:2015/11/30\r\n\r\n建議:\r\n設定順序由CFm與CFrm開始,計算結果之後連結CFc與CFdw,接著獨立操作CFeu,最後將上述5個結果連接至TCF., LC建築生命週期標準(2014) - LC建築生命週期標準\r\n\r\n更新日期:2015/11/12, RT-中損耗建築(出租辦公建築、一般旅館、一般公共設施、教育文化醫療設施2014) - RT-中損耗建築(出租辦公建築、一般旅館、一般公共設施、教育文化醫療設施)\r\n\r\n更新日期:2015/11/02, RT-低損耗建築(自用辦公建築、工廠、倉庫、住宅、一般住宿類建築2014) - RT-低損耗建築(自用辦公建築、工廠、倉庫、住宅、一般住宿類建築)\r\n\r\n更新日期:2015/11/02, RT-超高損耗建築(百貨商場、量販店、高級餐廳、娛樂設施、交通旅運設施2014) - RT-超高損耗建築(百貨商場、量販店、高級餐廳、娛樂設施、交通旅運設施)\r\n\r\n更新日期:2015/11/02, RT-高損耗建築(觀光旅館、一般商店、一般餐廳、運動設施2014) - RT-高損耗建築(觀光旅館、一般商店、一般餐廳、運動設施)\r\n\r\n更新日期:2015/11/02, TCF建築生命週期總碳足跡(2014) - TCF建築生命週期總碳足跡\r\n\r\n更新日期:2015/11/30\r\n\r\n\r\n建議:\r\n設定順序由CFm與CFrm開始,計算結果之後連結CFc與CFdw,接著獨立操作CFeu,最後將上述5個結果連接至TCF., W構造係數(2014) - W構造係數\r\n\r\n更新日期:2015/11/12, W構造係數(基準案2014) - W構造係數(基準案)\r\n\r\n更新日期:2015/11/12, 住宿、醫院、旅館類 - (BCFs建築尺寸預設值2014) - 住宿、醫院、旅館類 - (BCFs建築尺寸預設值)\r\n\r\n更新日期:2015/11/30, 倉儲、賣場、工廠類 - (BCFs建築尺寸預設標準值2014) - 倉儲、賣場、工廠類 - (BCFs建築尺寸預設標準值)\r\n\r\n更新日期:2015/11/30, 商店、餐廳、交通運輸類 - (BCFs建築尺寸預設標準值2014) - 商店、餐廳、交通運輸類 - (BCFs建築尺寸預設標準值)\r\n\r\n更新日期:2015/11/30, 文化演藝類、體育館 - (BCFs建築尺寸預設標準值2014) - 文化演藝類、體育館 - (BCFs建築尺寸預設標準值)\r\n\r\n更新日期:2015/11/30, 百貨商場類 - (BCFs建築尺寸預設標準值2014) - 百貨商場類 - (BCFs建築尺寸預設標準值)\r\n\r\n更新日期:2015/11/30, 辦公與其他公共建築物 - (BCFs建築尺寸預設標準值2014) - 辦公與其他公共建築物 - (BCFs建築尺寸預設標準值)\r\n\r\n更新日期:2015/11/30",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-05-28T12:22:02.522Z",
          "full_dependency_versions": [ "0.0.6" ],
          "full_dependency_ids": [
            {
              "name": "MOST-BCF2014",
              "_id": "56dadd8e5bee3e2138000025"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.6",
          "contains_binaries": true,
          "node_libraries": [ "Package.customization, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-05-28T12:22:02.522Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 56,
      "repository_url": "",
      "site_url": "http://thedynamostudy.er-webs.com/",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "根據建築碳足跡理論(林憲德2014)所研發之碳足跡計算工具，此版本公式以2014年為主，建議:設定順序由CFm與CFrm開始,計算結果之後連結CFc與CFdw,接著獨立操作CFeu,最後將上述5個結果連接至TCF。",
      "maintainers": [
        {
          "username": "n76011136@ncku.edu.tw",
          "_id": "54743f84b77c84600c000043"
        }
      ],
      "keywords": [ "bim", "bcf" ],
      "white_list": false
    },
    {
      "_id": "574b0289e70394822f000025",
      "name": "TASmanianDevil BIM",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8e15eb70-b9fc-4a76-8b8e-c4916d71a82fgregPkg888.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.2.4472",
          "created": "2016-05-29T14:54:01.558Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "TASmanianDevil BIM",
              "_id": "574b0289e70394822f000025"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": true,
          "node_libraries": [ "Interop.TAS3D, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "Interop.TBD, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "Interop.TSD, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "TASmanianDevil, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-05-29T14:54:01.558Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 15,
      "downloads": 247,
      "repository_url": "https://github.com/TASmanianDevilBIM/TASmanianDevil",
      "site_url": "https://www.facebook.com/TASmanianDevilBIM/",
      "banned": false,
      "deprecated": false,
      "group": "TASmanianDevilBIM",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "TASmanianDevil is a free and open source plugin for Dynamo to help engineers and designers using TAS to perform thermal and daylight simulation.\r\nhttps://www.facebook.com/TASmanianDevilBIM \r\n\r\n+ Build on Dynamo 9.2.4472 and Revit 2015 + TasmanianDevil is plugin that link to TAS simulation software with Dynamo or Revit. Collection of nodes controls T3D – TAS 3D modeller, TBD – Building Designer and TSD – Results file for TAS. We can control TAS to read or write data.  \r\n",
      "maintainers": [
        {
          "username": "mdengusiak",
          "_id": "5748aba5e70394822f00001b"
        }
      ],
      "keywords": [ "tas", "bim", "tasmaniandevil", "modeling", "thermal", "daylight", "simulation", "calculation", "building", "information", "modeling" ],
      "white_list": false
    },
    {
      "_id": "574cb3a7e70394822f000030",
      "name": "Dimension Detail Line",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/28058050-dcaf-43e8-8cbd-947ea7a134ecgregPkg997.zip",
          "contents": "Dimension Detail Line - Given Detail Line, pleace Dimension",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-05-30T21:41:59.692Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Dimension Detail Line",
              "_id": "574cb3a7e70394822f000030"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-30T21:41:59.692Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 275,
      "repository_url": "",
      "site_url": "http://truevis.com/",
      "banned": false,
      "deprecated": false,
      "group": "truevis",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Given Detail Line, pleace Dimension",
      "maintainers": [
        {
          "username": "design1@truevis.com",
          "_id": "571b032f305bec4d3c00001c"
        }
      ],
      "keywords": [ "dimension", "detail", "line" ],
      "white_list": false
    },
    {
      "_id": "574ef02ae70394822f000042",
      "name": "BGM Meh",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/eae5bc60-3e5e-4649-a60e-c19f565c14f9gregPkg381.zip",
          "contents": "BGM.Excel.Export - Exportiert alle relevanten Baugrunddaten in eine Exceltabelle, die für die Baugrundmodellierung in Revit nötig sind.",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2016-06-01T14:24:42.872Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "BGM Meh",
              "_id": "574ef02ae70394822f000042"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-06-01T14:24:42.872Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 32,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "BGM Daten Export",
      "maintainers": [
        {
          "username": "pelle-niklas@t-online.de",
          "_id": "554ddd4aa8367b9861000081"
        }
      ],
      "keywords": [ "bgm" ],
      "white_list": false
    },
    {
      "_id": "574ef810e70394822f000044",
      "name": "Meh BGM",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/93571075-68d4-4c2b-9bdb-897e78c58ec7gregPkg673.zip",
          "contents": "BGM.Excel.Export - Exportiert alle relevanten Baugrunddaten in eine Exceltabelle, die für die Baugrundmodellierung in Revit nötig sind.",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2016-06-01T14:58:24.932Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Meh BGM",
              "_id": "574ef810e70394822f000044"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-06-01T14:58:24.932Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 34,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Baugrunddaten Export",
      "maintainers": [
        {
          "username": "pelle-niklas@t-online.de",
          "_id": "554ddd4aa8367b9861000081"
        }
      ],
      "keywords": [ "baugrund" ],
      "white_list": false
    },
    {
      "_id": "5758f804e70394822f000079",
      "name": "Replace Falsy",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/e8e0eb68-bfda-4ae7-9758-04f8e98b5791gregPkg256.zip",
          "contents": "Replace Falsy - Replace elements of a list that are falsy",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-06-09T05:00:52.964Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Replace Falsy",
              "_id": "5758f804e70394822f000079"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-06-09T05:00:52.964Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 37,
      "repository_url": "",
      "site_url": "http://truevis.com/",
      "banned": false,
      "deprecated": false,
      "group": "truevis.",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Replace ampty parameter values, i.e., falsy values",
      "maintainers": [
        {
          "username": "design1@truevis.com",
          "_id": "571b032f305bec4d3c00001c"
        }
      ],
      "keywords": [ "falsy", "false", "not", "true" ],
      "white_list": false
    },
    {
      "_id": "575eaadae70394822f000090",
      "name": "DynaWorks17",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c964844c-7bcd-4015-8039-207d4a5e9571gregPkg331.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.123",
          "created": "2016-06-13T12:45:14.525Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "DynaWorks17",
              "_id": "575eaadae70394822f000090"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": true,
          "node_libraries": [ "DynaWorks17, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "Interop.NavisworksAutomationAPI14, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "Interop.NavisworksIntegratedAPI14, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-06-13T12:45:14.525Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 3,
      "downloads": 1198,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Bed Monkeys",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo Library for Navisworks 2017",
      "maintainers": [
        {
          "username": "Gytaco",
          "_id": "542d2401cc26bfdc5a00003e"
        }
      ],
      "keywords": [ "navisworks", "dynaworks", "clashes" ],
      "white_list": false
    },
    {
      "_id": "576300a9e70394822f0000b5",
      "name": "GeometRics",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/7cd7bb6f-248e-46c9-a3ce-b9f9bb44674dgregPkg488.zip",
          "contents": "2.Circle.Intersection.By.Perpendicular.Radius - Finds the intersection points of two intersecting circles given its centers and one radius when the angle between the two radius in the intersecting points is 90 degrees., 2.Circle.Intersection - Finds the two points of intersection of two intersecting circles., Distance.Between.2Points - Distance between two points",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-06-16T19:40:25.814Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "GeometRics",
              "_id": "576300a9e70394822f0000b5"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-06-16T19:40:25.814Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 91,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Geometrical basic operations",
      "maintainers": [
        {
          "username": "j.r.c.r",
          "_id": "5762f9b1e70394822f0000b4"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5767c67be70394822f0000d7",
      "name": "SWAPI - Star Wars API",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/51d93850-fc90-44a4-a8df-b55fe1a9e9fdgregPkg84.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-06-20T10:33:31.163Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "SWAPI - Star Wars API",
              "_id": "5767c67be70394822f0000d7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": true,
          "node_libraries": [ "SharpTrooper, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-06-20T10:33:31.163Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 69,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Revit Dynamite & Ammo",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Package for getting all the Star Wars data you could dream of from SWAPI: www.swapi.co\r\nBased entirely on the C#-helper \"SharpTrooper\" by Olcay Bayram: https://github.com/olcay/SharpTrooper \r\nDISCLAIMER!! This is not the package you are looking for.",
      "maintainers": [
        {
          "username": "josteinolsen7513",
          "_id": "53edcf720e5572016a00018f"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57758509535146064800000a",
      "name": "DynaFabrication17",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/1f7e6c66-97b0-4cb3-a8f1-fb7c39061cabgregPkg249.zip",
          "contents": "Dropdown List - No description provided, Dropdown List - No description provided, Fabrication Specification Dropdown List - Dropdown list of specification(s), Get All Fabrication Service(s) - Get all fabrication services in loaded configuration, Get All Loaded Fabrication Service(s) - Get all loaded services in document, Get Fabrication Configuration Name - Get loaded fabriation configuration name, Get Fabrication Configuration Profile  - Get the loaded configuration profile, Get Fabrication Connector(s) Information - Get fabrication connector info, Get Fabrication Insulation Specification(s) - Get all fabrication insulation specification(s), Get Fabrication Specification(s) - Get all fabrication specification(s), Load Fabrication Service(s) - Load fabrication service(s) into document, Set Fabrication Specification - Set spec on element(s) with Spec ID, Unload Fabrication Service(s) - Unload fabrication service(s) from document",
          "engine_metadata": "",
          "engine_version": "1.0.1.1757",
          "created": "2016-06-30T20:46:01.706Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "DynaFabrication17",
              "_id": "57758509535146064800000a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-06-30T20:46:01.706Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 25,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Various nodes for fabricating in revit.  Check back often as node count and functionality will grow over time.",
      "maintainers": [
        {
          "username": "nathan.chapman",
          "_id": "57741ab4a8864af46c000009"
        }
      ],
      "keywords": [ "fabrication" ],
      "white_list": false
    },
    {
      "_id": "5769284be70394822f0000eb",
      "name": "Dynamo4MEP",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/3f17a64a-4da8-4f12-a723-a80658bea616gregPkg56.zip",
          "contents": "Air Terminals Element Collector - Air Terminals Element Collector, Cable Tray Element Collector - Cable Tray Element Collector, Cable Tray Fittings Element Collector - Cable Tray Fittings Element Collector, Duct Accessories Element Collector - Duct Accessories Element Collector, Duct Element Collector - Duct Element Collector, Duct Fittings Element Collector - Duct Fittings Element Collector, Element Collector from Linked File(s) - Element Collector from Linked File(s), Element Curve - Element Curve, Element Cut with Void - Cut a list of elements with void instances, Geometry Insersection by Level - Get intersection between geometries by level, Geometry Intersection - Find the intersection solid between two list of geometries, Image From Directory - Create drafting views from images in specific directory, Linked File(s) Collector - Linked File(s) Collector, Mechanical Equipment Element Collector - Mechanical Equipment Element Collector, MEP Spaces Element Collector - MEP Spaces Element Collector, Pipe Accessories Element Collector - Pipe Accessories Element Collector, Pipe Element Collector - Pipe Element Collector, Pipe Fittings Element Collector - Pipe Fittings Element Collector, Rooms Element Collector - Rooms Element Collector, Sprinklers Element Collector - Sprinklers Element Collector",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-07-12T11:30:02.148Z",
          "full_dependency_versions": [ "2016.7.11" ],
          "full_dependency_ids": [
            {
              "name": "Dynamo4MEP",
              "_id": "5769284be70394822f0000eb"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.7.11",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-07-12T11:30:02.148Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 4,
      "downloads": 1154,
      "repository_url": "",
      "site_url": "bimandothers.blogspot.com",
      "banned": false,
      "deprecated": false,
      "group": "Dynamo4MEP",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Collection of nodes for MEP design",
      "maintainers": [
        {
          "username": "cesare.caoduro@gmail.com",
          "_id": "57692598e70394822f0000ea"
        }
      ],
      "keywords": [ "this", "package", "is", "under", "construction", "and", "will", "be", "updated", "as", "soon", "as", "new", "nodes", "will", "be", "available" ],
      "white_list": false
    },
    {
      "_id": "5791449e5351460648000095",
      "name": "Flux for Dynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/b108f82a-f293-4a6a-92cc-ab8132b469ccgregPkg762.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-07-21T23:46:49.990Z",
          "full_dependency_versions": [ "2.0.12000" ],
          "full_dependency_ids": [
            {
              "name": "Flux for Dynamo",
              "_id": "5791449e5351460648000095"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2.0.12000",
          "contains_binaries": true,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-07-21T23:46:49.99Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 408,
      "repository_url": "",
      "site_url": "https://flux.io",
      "banned": false,
      "deprecated": true,
      "group": "Flux",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DEPRECATED -- use https://flux.io/downloads",
      "maintainers": [
        {
          "username": "dynamoDKZEW",
          "_id": "579140bb5351460648000094"
        }
      ],
      "keywords": [ "flux", "flux.io", "dynamo", "revit", "sketchup", "grasshopper", "excel", "rhino", "interoperability", "share", "collaborate", "collaboration", "cloud" ],
      "white_list": false
    },
    {
      "_id": "578fcded535146064800008a",
      "name": "HelpingFriendlyPackage",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/154af90c-fce8-4d21-bbb4-92db6431c495gregPkg118.zip",
          "contents": "Diamond Shape Based Conceptual Building - Builds a simple building to be be loaded into a Mass Family.   Use Number Sliders for Inputs, and use Import Instance by Geometries node to import solid to Mass Family.  , Ellipse Based Conceptual Building - Builds a simple building to be be loaded into a Mass Family.   Use Number Sliders for Inputs, and use Import Instance by Geometries node to import solid to Mass Family.  , First and Last Item in New List - Gets the first and last item of a list and puts them in a new list.  , L - Shape Based Conceptual Building  - Builds a simple building to be be loaded into a Mass Family.   Use Number Sliders for Inputs, and use Import Instance by Geometries node to import solid to Mass Family.   *EXTENSIONS CANNOT BE SET TO ZERO*, Polygon Based Conceptual Building - Builds a simple building to be be loaded into a Mass Family.   Use Number Sliders for Inputs, and use Import Instance by Geometries node to import solid to Mass Family.  , Simple Conceptual Building  - Builds a simple building to be be loaded into a Mass Family.   Use Number Sliders for Inputs, and use Import Instance by Geometries node to import solid to Mass Family.  ",
          "engine_metadata": "",
          "engine_version": "1.0.1.1823",
          "created": "2016-07-22T13:42:40.481Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "HelpingFriendlyPackage",
              "_id": "578fcded535146064800008a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-07-22T13:42:40.481Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 63,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Conceptual design tools to create some simple building shapes.  Also includes a node that will combine the first and last item of a list into a new list.  ",
      "maintainers": [
        {
          "username": "DanielRosenberg",
          "_id": "57698977e70394822f0000f5"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "579fa7dfa669eab575000003",
      "name": "test_Aaron",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/feea56e0-ebb8-4db2-82fe-7ffbfad72bb4gregPkg857.zip",
          "contents": "X bracings - Generate X bracing lines between two equal collections of points. ",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-08-01T19:49:52.000Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "test_Aaron",
              "_id": "579fa7dfa669eab575000003"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-01T19:49:52Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "test_Aarontest_Aaron",
      "maintainers": [
        {
          "username": "aaron.tang@autodesk.com",
          "_id": "56b0102ac3e9ee4a0800007b"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57b123c44172a48a3500005a",
      "name": "Update all Levels and Grids to New Workset",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/1b671a6a-cd5c-43a2-baa1-7d65cf72f876gregPkg645.zip",
          "contents": "Update all Levels and Grids to New Workset - The purpose of this node is to streamline the process of creating a new workset and mass-assigning levels and grids to that new workset. This can easily be retooled to facilitate the same process for other element types if you wish.\r\n\r\nThe tool works in two steps. First, make the new workset (Supply text via a code block). Second, manually change one grid or level in your model to the new workset, then use the \"Select Model Element\" node and choose that selected grid/level. The four outputs allow you to grab the elements in their respective status groups.",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-08-15T02:07:00.532Z",
          "full_dependency_versions": [ "1.0.0", "0.90.7", "2016.4.4" ],
          "full_dependency_ids": [
            {
              "name": "Update all Levels and Grids to New Workset",
              "_id": "57b123c44172a48a3500005a"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            }
          ],
          "direct_dependency_versions": [ "0.90.7", "2016.4.4" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            }
          ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-15T02:07:00.532Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 91,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Process",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "The purpose of this node is to streamline the process of creating a new workset and mass-assigning levels and grids to that new workset. This can easily be retooled to facilitate the same process for other element types if you wish.\r\n\r\nThe tool works in two steps. First, make the new workset (Supply text via a code block). Second, manually change one grid or level in your model to the new workset, then use the \"Select Model Element\" node and choose that selected grid/level. The four outputs allow you to grab the elements in their respective status groups.",
      "maintainers": [
        {
          "username": "j.darling",
          "_id": "557587d8f2ae5a9a07000033"
        }
      ],
      "keywords": [ "workset;", "level;", "grid" ],
      "white_list": false
    },
    {
      "_id": "57b67bf14172a48a35000091",
      "name": "fasdfasdfasdf",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/3c656136-06b8-4fd5-bb5d-1d08e1216831gregPkg22.zip",
          "contents": "newCustomNode - as;dlkfjasdklj",
          "engine_metadata": "",
          "engine_version": "1.1.1.2200",
          "created": "2016-08-19T03:24:33.175Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "fasdfasdfasdf",
              "_id": "57b67bf14172a48a35000091"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-19T03:24:33.175Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 4,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "asdfasdfasdfasdfasdasdf",
      "maintainers": [
        {
          "username": "leph0002",
          "_id": "57b531cf4172a48a35000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57b67d984172a48a35000093",
      "name": "asdfasdfasdfasd",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/ed315dfa-4e90-48b5-87b8-ac9f58051745gregPkg579.zip",
          "contents": "newCustomNode - as;dlkfjasdklj",
          "engine_metadata": "",
          "engine_version": "1.1.1.2200",
          "created": "2016-08-19T03:31:36.640Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "asdfasdfasdfasd",
              "_id": "57b67d984172a48a35000093"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-19T03:31:36.64Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "fasdfasdfasdfas",
      "maintainers": [
        {
          "username": "leph0002",
          "_id": "57b531cf4172a48a35000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57b67e224172a48a35000095",
      "name": "azfasdfasdfas",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/5e12a7e7-e84b-43d3-abee-5c3e49da28b7gregPkg960.zip",
          "contents": "newCustomNode - as;dlkfjasdklj",
          "engine_metadata": "",
          "engine_version": "1.1.1.2200",
          "created": "2016-08-19T03:33:54.214Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "azfasdfasdfas",
              "_id": "57b67e224172a48a35000095"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-19T03:33:54.214Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 6,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "asdfasdfasdfasd",
      "maintainers": [
        {
          "username": "leph0002",
          "_id": "57b531cf4172a48a35000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57b70e864172a48a3500009e",
      "name": "WERFAU_Parameters",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/b8753aaa-e3d0-4bb3-ac0b-f1e01ab3be33gregPkg597.zip",
          "contents": "Points on Grid - Определение ближайшей левой и нижней осей у точки. Работает со списком точек.",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-08-19T13:49:58.713Z",
          "full_dependency_versions": [ "2016.8.19" ],
          "full_dependency_ids": [
            {
              "name": "WERFAU_Parameters",
              "_id": "57b70e864172a48a3500009e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.8.19",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-19T13:49:58.713Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 118,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Nodes for the management of BIM's parameters.",
      "maintainers": [
        {
          "username": "SergeyKrivoy",
          "_id": "57b44e034172a48a3500007c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57bafc024172a48a350000ae",
      "name": "Informática na Construção - Ficha 2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/e8ffcc8e-eae7-4bff-9f36-9573446a500fgregPkg435.zip",
          "contents": "Informática na Construção - Ficha 2 - Node a ser utilizado na Ficha 2.",
          "engine_metadata": "",
          "engine_version": "0.9.2.4472",
          "created": "2016-08-22T15:39:33.255Z",
          "full_dependency_versions": [ "0.9.4" ],
          "full_dependency_ids": [
            {
              "name": "Informática na Construção - Ficha 2",
              "_id": "57bafc024172a48a350000ae"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.9.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-22T15:39:33.255Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 19,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Node a ser utilizado na Ficha 2",
      "maintainers": [
        {
          "username": "lpnsanhudo",
          "_id": "570a3fc4287283f905000005"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "559e079bf2ae5a9a0700012b",
      "name": "Number.ToAlpha",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/76363108-38fc-4598-8eeb-0c7f8bed9e53gregPkg945.zip",
          "contents": "Number.ToAlpha - Gets the letter of the alphabet associated with the input from 0 to 25",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-08-29T15:30:23.184Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "Number.ToAlpha",
              "_id": "559e079bf2ae5a9a0700012b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-29T15:30:23.184Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 69,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Input integer 0-25 and output the corresponding letter with Uppercase toggle.",
      "maintainers": [
        {
          "username": "spage@rdgusa.com",
          "_id": "55807ee1f2ae5a9a070000ad"
        }
      ],
      "keywords": [ "character", "integer", "letter", "number", "alpha" ],
      "white_list": false
    },
    {
      "_id": "57c82baf4172a48a35000109",
      "name": "hello",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/d6ed3d30-8d75-40e4-8fc2-a228119693f1gregPkg243.zip",
          "contents": "C:\\Users\\t_lephm\\AppData\\Roaming\\Dynamo\\Dynamo Revit\\1.1\\packages\\test1.dyf - a;sdlkfjas;dlk",
          "engine_metadata": "",
          "engine_version": "1.1.1.2200",
          "created": "2016-09-01T13:22:55.453Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "hello",
              "_id": "57c82baf4172a48a35000109"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-01T13:22:55.453Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 21,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "a;ldskfja;lsdkfj",
      "maintainers": [
        {
          "username": "leph0002",
          "_id": "57b531cf4172a48a35000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57c9d3e04172a48a35000117",
      "name": "Robot Link for Dynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/361748f8-2b1a-4f9b-b390-f8e4920560a0gregPkg440.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2016-09-02T19:32:48.141Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Robot Link for Dynamo",
              "_id": "57c9d3e04172a48a35000117"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": true,
          "node_libraries": [ "RobotLink, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ClassLibrary5, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-09-02T19:32:48.141Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 100,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Nodes providing links between Robot and Dynamo",
      "maintainers": [
        {
          "username": "AlexBaalham",
          "_id": "57c9d3e04172a48a35000116"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57cc54814172a48a35000124",
      "name": "Robot Link 3",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/2a980f79-d770-48cb-8f1c-9520a8ded5e1gregPkg750.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2016-09-04T17:06:09.217Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "Robot Link 3",
              "_id": "57cc54814172a48a35000124"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": true,
          "node_libraries": [ "Microsoft.Office.Interop.Excel, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c", "ClassLibrary5, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "RobotLink, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-09-04T17:06:09.217Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 28,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Link Robot and Dynamo",
      "maintainers": [
        {
          "username": "AlexBaalham",
          "_id": "57c9d3e04172a48a35000116"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57d169aff615e7725800000d",
      "name": "testRacelAgain",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/2adf839d-cff6-4471-a79c-fa7c9609115fgregPkg942.zip",
          "contents": "testPoint - test Point",
          "engine_metadata": "",
          "engine_version": "1.1.1.2352",
          "created": "2016-09-08T13:37:51.502Z",
          "full_dependency_versions": [ "0.0.10" ],
          "full_dependency_ids": [
            {
              "name": "testRacelAgain",
              "_id": "57d169aff615e7725800000d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.10",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-08T13:37:51.502Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 0,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "MyStuff",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testRacelAgain",
      "maintainers": [
        {
          "username": "racel",
          "_id": "55d1e1d5662bf0e9080000d2"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57d837d9f615e77258000036",
      "name": "TestRacelPackage",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/7c6e6652-e914-4850-b539-9eb7f090bb2fgregPkg874.zip",
          "contents": "testPoint - test Point",
          "engine_metadata": "",
          "engine_version": "1.2.0.2555",
          "created": "2016-09-13T17:31:05.759Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "TestRacelPackage",
              "_id": "57d837d9f615e77258000036"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-13T17:31:05.759Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Is this going to work I dont know",
      "maintainers": [
        {
          "username": "racel",
          "_id": "55d1e1d5662bf0e9080000d2"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57d83a1af615e77258000039",
      "name": "Eskil Landet",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/9e13cba6-c4d6-43f5-9f38-b8283104234cgregPkg198.zip",
          "contents": "Endpoints - Points at both ends of curve",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-09-13T17:40:42.498Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Eskil Landet",
              "_id": "57d83a1af615e77258000039"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-13T17:40:42.498Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 21,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Eskil",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Endpoints of a curve",
      "maintainers": [
        {
          "username": "eskiland@stud.aho.no",
          "_id": "57d839c1f615e77258000038"
        }
      ],
      "keywords": [ "endpoints" ],
      "white_list": false
    },
    {
      "_id": "57d845f9f615e7725800003c",
      "name": "Graft",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/3e08a519-1e1f-4c12-8d97-872e13ff245dgregPkg878.zip",
          "contents": "Graft - graft list",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-09-13T18:31:21.144Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Graft",
              "_id": "57d845f9f615e7725800003c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-13T18:31:21.144Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 48,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Eskil",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "graft  list",
      "maintainers": [
        {
          "username": "eskiland@stud.aho.no",
          "_id": "57d839c1f615e77258000038"
        }
      ],
      "keywords": [ "graft" ],
      "white_list": false
    },
    {
      "_id": "57db8ed7882d868b42000008",
      "name": "Replace.Material (Sample)",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/5a799c92-46f5-4694-a084-183d703804d6gregPkg3.zip",
          "contents": "Replace.Material - Change Material (instance parameter)",
          "engine_metadata": "",
          "engine_version": "0.7.5.3881",
          "created": "2016-09-16T06:19:03.695Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Replace.Material (Sample)",
              "_id": "57db8ed7882d868b42000008"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-16T06:19:03.695Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 103,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "(Sample Only)",
      "maintainers": [
        {
          "username": "karibal@mscorp.com.ph",
          "_id": "57db8ed6882d868b42000007"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57d01b9e4172a48a35000141",
      "name": "new",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/2eb86ca4-138c-43a7-9e8d-fcba31ebcbecgregPkg148.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2623",
          "created": "2016-09-19T16:27:47.073Z",
          "full_dependency_versions": [ "1.1.3" ],
          "full_dependency_ids": [
            {
              "name": "new",
              "_id": "57d01b9e4172a48a35000141"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-19T16:27:47.073Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 15,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "new111111111",
      "maintainers": [
        {
          "username": "t_syvns",
          "_id": "560bcc81662bf0e908000210"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56bb8efdc3e9ee4a080000e2",
      "name": "Silman Custom Nodes - alpha",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c7e6cbd5-7bd0-4aa0-b76c-0953e80b8229gregPkg302.zip",
          "contents": "PreviewGrids in 3D - No description provided, Structural Column - Curve by Project Coordinates - This node takes Structural Column elements and creates locations based on project levels",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-09-19T20:11:14.643Z",
          "full_dependency_versions": [ "0.0.2", "0.1.5", "2015.11.28", "0.90.7" ],
          "full_dependency_ids": [
            {
              "name": "Silman Custom Nodes - alpha",
              "_id": "56bb8efdc3e9ee4a080000e2"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "direct_dependency_versions": [ "0.90.7", "0.1.5", "2015.11.28" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-19T20:11:14.643Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Custom Nodes to Assist the Structural Process",
      "maintainers": [
        {
          "username": "hazell@silman.com",
          "_id": "56bb8e0fc3e9ee4a080000e1"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57e2013a2107b8022300001a",
      "name": "col01-az",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/6a65fac4-e48d-4bae-b227-06b727056575gregPkg466.zip",
          "contents": "col01-az - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.0.2634",
          "created": "2016-09-21T03:40:42.077Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "col01-az",
              "_id": "57e2013a2107b8022300001a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-21T03:40:42.077Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 3,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Collection for placement",
      "maintainers": [
        {
          "username": "eel.shyn",
          "_id": "57e200a42107b80223000019"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57e22ae22107b8022300001e",
      "name": "MisterMEP",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/6f1e3800-3536-4f2b-b764-3467544709f6gregPkg931.zip",
          "contents": "AS3500.1 Probable Simultaneous Demand Calculator - Takes the fixture's loading units and looks up the probable simultaneous flow figure from Barrie Smith's Blue Book table 48\r\n\r\nInput\r\n'IPC to AS3500.1 Multiplier' as Number\r\n\r\nInput 'PSD Parameter' as String, Create abbreviation from family name - No description provided, Pipe from strings - Creates pipes from strings, be they detail lines or lines within a DWG file, Remove - and _ from String - No description provided, Replace Empty Parameter - No description provided, Select Water Pipework - selects pipework from pipecurves category that are part of system classification name contains \"water\", Set Project Information - Does as it says",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-09-21T06:38:26.931Z",
          "full_dependency_versions": [ "0.1.3", "2016.5.3" ],
          "full_dependency_ids": [
            {
              "name": "MisterMEP",
              "_id": "57e22ae22107b8022300001e"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "2016.5.3" ],
          "direct_dependency_ids": [
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": true,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-21T06:38:26.931Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 158,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Useful nodes for MEP",
      "maintainers": [
        {
          "username": "ryan.lenihan",
          "_id": "57c8bf824172a48a3500010f"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57e4a7d62107b80223000046",
      "name": "GetElementInfo.FromElementNameMatch",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/b0c49d74-48ec-47b1-b857-d531c6c1aa25gregPkg936.zip",
          "contents": "GetElementInfo.FromElementNameMatch - Gets the element ID from a list by matching a string to the name of the element.",
          "engine_metadata": "",
          "engine_version": "1.0.1.1733",
          "created": "2016-09-23T03:56:06.649Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "GetElementInfo.FromElementNameMatch",
              "_id": "57e4a7d62107b80223000046"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-23T03:56:06.649Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 226,
      "repository_url": "",
      "site_url": "www.parametric.com.au",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Gets element information including Element ID, Element Name and Element ID as a string.",
      "maintainers": [
        {
          "username": "diego.martinez@au.brookfield.com",
          "_id": "57e4a77a2107b80223000045"
        }
      ],
      "keywords": [ "elementid" ],
      "white_list": false
    },
    {
      "_id": "57e4c6c22107b8022300004b",
      "name": "uoiuoiu",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/51e3f3fb-18bd-4301-afa0-0f998fc8808fgregPkg906.zip",
          "contents": "mon123 - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.2651",
          "created": "2016-09-23T06:08:02.600Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "uoiuoiu",
              "_id": "57e4c6c22107b8022300004b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-23T06:08:02.6Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 0,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "tesing package 1234",
      "maintainers": [
        {
          "username": "mo.pr",
          "_id": "57e37e2e2107b8022300002a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57ecef4db135d45974000041",
      "name": "Exceltopoint",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/494f9ddb-33ea-4ac9-b37d-2849f8fa9658gregPkg730.zip",
          "contents": "ExcelToPoint - Choose Pt from Excel Spreadsheet",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-09-29T10:39:09.737Z",
          "full_dependency_versions": [ "8.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Exceltopoint",
              "_id": "57ecef4db135d45974000041"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "8.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-29T10:39:09.737Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 200,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Office",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Exceltopoint",
      "maintainers": [
        {
          "username": "pvhuyg@gmail.com",
          "_id": "57e7bf82b135d4597400000a"
        }
      ],
      "keywords": [ "excel", "point", "exceltopoint" ],
      "white_list": false
    },
    {
      "_id": "57ed823cb135d45974000047",
      "name": "RL_Crea_ejes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/7be12da1-4321-4ccf-9dfb-ad49f6efe1d7gregPkg981.zip",
          "contents": "EJESXY - crea serie de ejes en x e y de acuerdo a distancias con sliders",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-09-29T21:06:04.397Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "RL_Crea_ejes",
              "_id": "57ed823cb135d45974000047"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-29T21:06:04.397Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 30,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "lorem ipsum",
      "maintainers": [
        {
          "username": "dipinoch@mit.edu",
          "_id": "53739fdf0e5572016a00005d"
        }
      ],
      "keywords": [ "codigo", "secreto", "xx" ],
      "white_list": false
    },
    {
      "_id": "57f2b039d3d589541a00000c",
      "name": "SELECT ALL ROOMS",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/d0dbc7e1-cca5-4c69-9641-e8a432b377c5gregPkg149.zip",
          "contents": "SELECT ALL ROOMS - SELECT ALL ROOMS",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-10-03T19:23:37.523Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "SELECT ALL ROOMS",
              "_id": "57f2b039d3d589541a00000c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-03T19:23:37.523Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 172,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "SELECT ALL ROOMS",
      "maintainers": [
        {
          "username": "jpolding",
          "_id": "56708ace5c568ad00c00002f"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57f2b254d3d589541a00000e",
      "name": "FILTER VIEWS BY NAME",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/995865ae-7a9f-4ad0-8430-c2ddde49aca6gregPkg688.zip",
          "contents": "FILTER VIEWS BY NAME - FILTER VIEWS BY NAME",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-10-03T19:32:36.862Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "FILTER VIEWS BY NAME",
              "_id": "57f2b254d3d589541a00000e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-03T19:32:36.862Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 187,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "FILTER VIEWS BY STRING IN NAME",
      "maintainers": [
        {
          "username": "jpolding",
          "_id": "56708ace5c568ad00c00002f"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "562baef5662bf0e908000298",
      "name": "DynamoMEP",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/21f52f92-b285-460d-ad6c-315b27cc9fc7gregPkg93.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-10-08T12:27:01.979Z",
          "full_dependency_versions": [ "0.5.1" ],
          "full_dependency_ids": [
            {
              "name": "DynamoMEP",
              "_id": "562baef5662bf0e908000298"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.5.1",
          "contains_binaries": true,
          "node_libraries": [ "DynamoMEP, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-10-08T12:27:01.979Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 3,
      "downloads": 3135,
      "repository_url": "https://github.com/simonmoreau/DynamoMEP",
      "site_url": "www.bim42.com",
      "banned": false,
      "deprecated": false,
      "group": "BIM 42",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DynamoMEP is a package for working with MEP elements, Rooms and Spaces.",
      "maintainers": [
        {
          "username": "moreaus",
          "_id": "5623ae45662bf0e90800026d"
        }
      ],
      "keywords": [ "mep", "room", "space" ],
      "white_list": false
    },
    {
      "_id": "57fb6c25d3d589541a00004e",
      "name": "mttest",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c6bf2a88-c871-4f1c-b247-dcc306abaf06gregPkg364.zip",
          "contents": "test - test",
          "engine_metadata": "",
          "engine_version": "1.2.0.2621",
          "created": "2016-10-10T10:23:33.978Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "mttest",
              "_id": "57fb6c25d3d589541a00004e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-10T10:23:33.978Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "123",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "mttest00000",
      "maintainers": [
        {
          "username": "megamax84x",
          "_id": "57e3e08e2107b80223000039"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "564dc5a3662bf0e90800035b",
      "name": "Landform",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/0bc53a8d-be73-4d9b-9caa-2bfc0c5b52a9gregPkg507.zip",
          "contents": "Arc.ByLine - Create an arc from the start and end point of a line. Specify the height of the arc (from 0 to 1) and (if desired) flip the arc across the line., Curve.DivideByLengthRemainders - Divides curve into curves of given length. Will return remainder at end or split the remainder between the start and end., Curve.DividePoints - Get the (start) points along an equally divided curve., Curve.MidPoint - Get the midpoint along the Curve, Curve.StartMidPoint - Get the start point and midpoint along the Curve., Curves.Reorder - Reorders the list of curves by creating a polycurve and returning the curves of the polycurve., Element.TopBasePolysurface - Get the top and bottom polysurfaces from an element., Elements.RandomizeParameter - Set an element's instance parameter to a random value between a range specified by the minimum and maximum parameter., FamilyInstance.Percentage - Place familiy instances by point from a list of multiple family types and percentages., FamilyInstance.RandomRotation - Rotates the angle of the family instance a random amount (between 0 and 360)., IndexOf.Equals - Returns the indices of items in list B that are equal to items in list A., List.MatchLength - Cycle a list to match the length of the first list., List.RemoveEmpty - Removes empty indices from a list., List.SortByKey - Sort a list (or lists) according to the order specified by the key list., Math.RandomIntegerMin - Creates a list of random integers between a given minimum and maximum value, NurbsSurface.ByNurbsCurves - Creates a NurbsSurface with points generated from an interval along the specified curves., Point.GridTriangle - Create a triangular grid of points over an area from a set of boundary curves., Point.GridTriangleContain - Create a triangular grid of points contained within a set of boundary curves., Point.Random - Creates a random set of points within a set of boundary cuves. Tolerance specifies the minimum distance between points., Point.RandomAmount - Creates the specified amount of random points within a set boundary curves. Tolerance specifies the minimum distance between points., Point.ShiftCoordinates - Shifts the coordinates of the point by the given amount. The default shift is positive (add) but can be switched to negative (via boolean)., Point.XRange - Get all X components and the minimum and maximum X components from a list of Points., Point.XYZ - Get the X, Y, and Z components of a Point, Point.XYZByCoordinates - Get the X,Y, and Z components and create a point from those coordinates., Point.YRange - Get all Y components and the minimum and maximum Y components from a list of Points., Point.ZRange - Get all Z components and the minimum and maximum Z components from a list of Points., Points.SortByDistance - Sort a list of points based on their distance from a specified point, Points.SortByXY - Sort list of points based on its X and Y coordinate values. In order to sort correctly, points must be rounded (default value is 3 decimal points)., PointsFromCSV - Imports data points from a text file containing comma separated values., PointsToCSV - Write a list of points into a file using a comma-separated values format., SlabShape.AdjacentPoints - Get the adjacent slab shape points between two adjacent Floors., SlabShape.MatchPoints - Match the adjacent slab shape points from Floor 1 to Floor 2. (requires Clockwork package), SlabShape.Points - Get the XYZ points of any slab shape Roof or Floor., Surfaces.TopBasePolysurface - Get the top and bottom polysurfaces from a set of surfaces., Topography.ByLines - Create a toposurface from lines. Generates points at a specified interval along the lines., Topography.ColorByElevation - Applies a color range based on the elevation of each triangle face. Elevation is calculated from the center point of each triangle face., Topography.ColorBySlope - Applies a color range based on the slope of the triangle faces. Based on percentage slope. Max slope index is 1 (100%, or 45 degrees)., Topography.Plane.XZ - Creates a row of planes cutting through the Toposurface in the world XZ, SlabShape.AddAdjacentPoints - Add and match adjacent slab shape points (Floor or Roof) from Slab 1 to Slab 2. (requires Spring Nodes and Clockwork packages), Points.SameXY - Find points that share the same XY (or overlap in plan). Used for creating Topography., Curve.DivideEqually - Divides a curve into a given number of equal length curves.",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-10-13T05:18:57.340Z",
          "full_dependency_versions": [ "2016.10.13", "1.0.2", "100.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Landform",
              "_id": "564dc5a3662bf0e90800035b"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            }
          ],
          "direct_dependency_versions": [ "1.0.2", "100.0.1" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            }
          ],
          "change_log": "",
          "version": "2016.10.13",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-13T05:18:57.34Z",
      "num_versions": 15,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 5,
      "downloads": 2513,
      "repository_url": "",
      "site_url": "landarchbim.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        }
      ],
      "num_dependents": 1,
      "description": "A growing set of nodes created primarily to assist with site and landscape modeling and analysis in Revit. Developed by the author of landarchbim.com. @landarchBIM",
      "maintainers": [
        {
          "username": "laurenkschmidt",
          "_id": "55fb1f20662bf0e9080001a1"
        }
      ],
      "keywords": [ "landscape", "architecture", "site", "land", "topo", "topography", "points" ],
      "white_list": false
    },
    {
      "_id": "5805ccdbf50b17c720000016",
      "name": "up1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/a01ff0ea-58d4-42ea-a376-dd6b487a1db3gregPkg245.zip",
          "contents": "Update - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.2910",
          "created": "2016-10-18T07:18:51.876Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "up1",
              "_id": "5805ccdbf50b17c720000016"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-18T07:18:51.876Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "create a new package",
      "maintainers": [
        {
          "username": "trial.autodesk",
          "_id": "5805ccb1f50b17c720000015"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57c611e84172a48a350000f4",
      "name": "SpaceLayout",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/b745a581-a1dd-4467-a0ed-03175dae4a3egregPkg618.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2016-10-18T16:21:02.930Z",
          "full_dependency_versions": [ "1.0.20" ],
          "full_dependency_ids": [
            {
              "name": "SpaceLayout",
              "_id": "57c611e84172a48a350000f4"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.20",
          "contains_binaries": true,
          "node_libraries": [ "SpaceLayout, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-10-18T16:21:02.93Z",
      "num_versions": 21,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 473,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Space plan layout builder",
      "maintainers": [
        {
          "username": "colin.day@autodesk.com",
          "_id": "56e736805bee3e2138000059"
        }
      ],
      "keywords": null,
      "white_list": true
    },
    {
      "_id": "54e4b668dcee4dfd260000f9",
      "name": "ForeignéîçèæêëïôÊÉà",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/baba2e16-b21e-4a48-9e82-787d87e7eef4gregPkg136.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2016-10-18T18:04:22.213Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "ForeignéîçèæêëïôÊÉà",
              "_id": "54e4b668dcee4dfd260000f9"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": true,
          "node_libraries": [ "SampleLibraryZeroTouch, Version=0.8.2.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-10-18T18:04:22.213Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 7,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Very French library",
      "maintainers": [
        {
          "username": "jnealb",
          "_id": "546ceba1b77c84600c00001d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54416e37cc26bfdc5a000060",
      "name": "Energy Analysis for  Dynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/fc3813d0-724a-4c14-9a74-f3946f881a34gregPkg653.zip",
          "contents": "IterativeGlazing - Example of a custom parametric run",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-10-18T21:41:31.253Z",
          "full_dependency_versions": [ "0.2.42" ],
          "full_dependency_ids": [
            {
              "name": "Energy Analysis for  Dynamo",
              "_id": "54416e37cc26bfdc5a000060"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.42",
          "contains_binaries": true,
          "node_libraries": [ "EnergyAnalysisForDynamo, Version=0.2.42.0, Culture=neutral, PublicKeyToken=null", "EnergyAnalysisForDynamo_UI, Version=0.2.42.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-10-18T21:41:31.253Z",
      "num_versions": 14,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -4,
      "downloads": 2767,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Energy Analysis for Dynamo allows for parametric energy modeling and whole-building energy analysis workflows in Dynamo 1.1.  Energy Analysis for Dynamo allows the user to configure the energy model from Autodesk Revit, submit to Green Building Studio for DOE2 energy analysis, and dig into the results returned from the analysis.  The package is being developed by Thornton Tomasetti's CORE studio.  Check out the project's github repo to see the source code and/or report any issues: https://github.com/tt-acm/EnergyAnalysisForDynamo.\r\n",
      "maintainers": [
        {
          "username": "bhowes-tt",
          "_id": "54416e32cc26bfdc5a00005f"
        }
      ],
      "keywords": [ "energy", "analysis", "core", "corestudio" ],
      "white_list": false
    },
    {
      "_id": "5814c75cf50b17c720000098",
      "name": "Area of Filled Region",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8ba4910f-ea96-4efe-aedc-c3f47f92f5f6gregPkg437.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2016-10-29T15:59:24.866Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Area of Filled Region",
              "_id": "5814c75cf50b17c720000098"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-29T15:59:24.866Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 108,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Copy Revit Area from Filled Region to a Shared Parameter named Area_Region",
      "maintainers": [
        {
          "username": "KEAbja",
          "_id": "5814c6b9f50b17c720000097"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "581905c8dbe5183048000009",
      "name": "TestFracReach",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/358c18a7-c896-44cf-bf13-c1f3c03a8857gregPkg700.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3002",
          "created": "2016-11-01T21:14:48.891Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "TestFracReach",
              "_id": "581905c8dbe5183048000009"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": true,
          "node_libraries": [ "CrashReach, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-11-01T21:14:48.891Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Testing FRAC-629",
      "maintainers": [
        {
          "username": "siddhartha.mangarole",
          "_id": "580e70b2f50b17c720000061"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54c69c83dcee4dfd26000091",
      "name": "DynamoSAP",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/6c85c183-1cd4-402f-9b46-5327c1ccb86cgregPkg321.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-07T20:49:45.233Z",
          "full_dependency_versions": [ "1.2.10" ],
          "full_dependency_ids": [
            {
              "name": "DynamoSAP",
              "_id": "54c69c83dcee4dfd26000091"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.10",
          "contains_binaries": true,
          "node_libraries": [ "DynamoSAP, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null", "DynamoSAP_UI, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-11-07T20:49:45.233Z",
      "num_versions": 19,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 1702,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "CORE studio",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Compatible with Dynamo 1.2, DynamoSAP is a parametric interface for SAP2000 v18, built on top of Dynamo. The project enables designers and engineers to generatively author and analyze structural systems in SAP, using Dynamo to drive the SAP model. The project prescribes a few common workflows which are described in the included sample files, and provides a wide range of opportunities for automation of typical tasks in SAP.",
      "maintainers": [
        {
          "username": "CORE_studio",
          "_id": "54c69c81dcee4dfd26000090"
        }
      ],
      "keywords": [ "structural", "analysis", "sap2000", "sap", "core", "corestudio" ],
      "white_list": false
    },
    {
      "_id": "5821feba5af9f3713d00000c",
      "name": "Floors.byRooms",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/9e3253df-47be-406f-a698-2dc46fc1b4c2gregPkg865.zip",
          "contents": "FLOORS BY ROOMS per Level - Create Floors by Rooms boundaries, by level.",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-08T16:35:06.305Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Floors.byRooms",
              "_id": "5821feba5af9f3713d00000c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-08T16:35:06.305Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 157,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create floors by room, per level.",
      "maintainers": [
        {
          "username": "Marco_Scala",
          "_id": "5821fdbb5af9f3713d00000b"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "546ceba2b77c84600c00001e",
      "name": "1234",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/45111cb5-badc-4589-85a9-c9ac4281f716gregPkg927.zip",
          "contents": "GroupedCodeBlocks - Delete key broken for Input nodes, Pentagram - Closed polycurve in the shape of a 5-pointed star., Math.Sum - Find the sum of a set of numbers and a list of the partial sums.",
          "engine_metadata": "",
          "engine_version": "1.2.1.2934",
          "created": "2016-11-08T20:14:59.098Z",
          "full_dependency_versions": [ "3.2.0" ],
          "full_dependency_ids": [
            {
              "name": "1234",
              "_id": "546ceba2b77c84600c00001e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "3.2.0",
          "contains_binaries": true,
          "node_libraries": [ "CSharpAnalytics.WinForms, Version=1.2.0.0, Culture=neutral, PublicKeyToken=null", "DSCoreNodesTests, Version=0.7.4.3105, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-11-08T20:14:59.098Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 6,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "12345678901",
      "maintainers": [
        {
          "username": "jnealb",
          "_id": "546ceba1b77c84600c00001d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "582251235af9f3713d000011",
      "name": "TestSol",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/d887ba42-304e-4e3c-94ff-53ef46151059gregPkg714.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2016-11-11T18:42:20.109Z",
          "full_dependency_versions": [ "0.0.9" ],
          "full_dependency_ids": [
            {
              "name": "TestSol",
              "_id": "582251235af9f3713d000011"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.9",
          "contains_binaries": true,
          "node_libraries": [ "DynamoSolarAnalysis, Version=0.8.2.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-11-11T18:42:20.109Z",
      "num_versions": 9,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 20,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Analyze",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Testing Sol",
      "maintainers": [
        {
          "username": "clsgalvez",
          "_id": "57d8441af615e7725800003b"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "582bfd1f5af9f3713d00008d",
      "name": "Fill Identity Daya from Excel",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/ffba7a6c-7ab3-499a-80e9-3131b4f87b64gregPkg619.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.7.5.3881",
          "created": "2016-11-16T06:30:55.493Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Fill Identity Daya from Excel",
              "_id": "582bfd1f5af9f3713d00008d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-16T06:30:55.493Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 83,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Fill Identity Daya from Excel",
      "maintainers": [
        {
          "username": "karibal@mscorp.com.ph",
          "_id": "57db8ed6882d868b42000007"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "582ed4885af9f3713d0000b6",
      "name": "BIMSYK",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/439fe73c-1036-4810-9ce4-e6d3f79aa3c6gregPkg689.zip",
          "contents": "Set empty parameters - Set parameter if empty, Search list and return list - Searches a list for a string and returns all matches or unmatches from that list or another. Good for filtering room names and returning elements, Clean List - Cleans a list of empties and nulls, Remove elements from list based on parameter values search - Removes elements from a list based on search terms, Hide Elements outside room in view - No description provided, Revs to Sheets - Input a list of revs and sheets, add rev[i] to sheet[i], Count minus one - Counts from 0 instead of 1, Sublist length - Returns the lengths of the first sublist of every item in a list. Returns 0 for [EMPTY], Return numbers from string - Return any numbers in a string, Is Param Empty - Checks for an empty param (empty string), Current Revision Properties - Gets all current revision properties, Search for and replace - Replace item, SPZ Issue sheet to excel - No description provided, Invert booleans - All false become true and all true false!, Crop View to Room - Crops a view to a room, AutoRenamer - Checks list A against list B.\r\nIf an item of list A is in list B, a number is appended removing all duplicates from A in B., Create Sheet - from http://hastebin.com/udinigurur.hs shamelessly stolen for my own maniacle reasons., Duplicate Schedule - Duplicates a schedule n times, Remove empties - Removes all empty items from a list, Sheet Number List v2 - Generates a specified length list of sheet numbers, Revit Sheet Number list - Generates a specified length list of sheet numbers, Link in revit model from file path - Stolen shamelessly from https://forum.dynamobim.com/t/how-to-link-a-revit-file-with-python/3237, Get sublist item {{A,B}, {A,B}} - Retrieve one sublist downs items, Crop plan to room - Crops a floor plan to an input room.\r\nAn altered version of the Archinodes create floor plan from room node., Create Dependent View - Creates a new dependent floor plan from any floor plan., Seperate page sizes - Reads through a list and returns the indicies of each into a seperate list. For use with List.GetItemAtIndex.\r\n(Helpful for sorting sheets into lists based on page sizes), Get View Crop - Get the view crop of a view, Get Elements in Rooms - Obtains a list of all elements in specified room(s), Place view on sheet - Placing views on sheets\r\n\r\nShamelessly taken from here http://hastebin.com/wimaquraji.hs and put into a custom node for my own personal use. I DID NOT create this., IF(x) - Conditinal If statement, Replace parameter if empty - Checks to see if parameter is empty before replacing it, good for adding new data to sheets., Remove elements from list based on parameter values - Input element list, parameter name to list and parameter values to remove from list, Get Type Parameters - Get type parameters from an element, All Parameters - Grabs all associated parameters of an element, Fitted Type - Fitted type maniuplating node, Fitted Set - Sets fitted furnitures type, All Model Categories - Gives all categories, Bools to indicies - Takes a true/false populated list and returns the indicies of true, Remove str from str - Input string A and B, remove A from B., Delete all ViewTemplates - No description provided, Get Element info - Gets much of an elements information, Empty String Check - If a string is empty returns true",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-11-18T10:14:32.917Z",
          "full_dependency_versions": [ "0.1.0", "1.0.0", "0.90.7", "2016.6.231", "100.0.1", "2016.9.7", "2016.5.27" ],
          "full_dependency_ids": [
            {
              "name": "BIMSYK",
              "_id": "582ed4885af9f3713d0000b6"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "1.0.0", "2016.5.27", "0.90.7", "2016.9.7", "100.0.1", "2016.6.231" ],
          "direct_dependency_ids": [
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-18T10:14:32.917Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 10,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Revit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Freshly baked nodes",
      "maintainers": [
        {
          "username": "callum.sykes",
          "_id": "57b471804172a48a3500007d"
        }
      ],
      "keywords": [ "bimsyk" ],
      "white_list": false
    },
    {
      "_id": "582974205af9f3713d00005f",
      "name": "AU2016 Advanced Workshop",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/93cc513b-6465-47c7-9238-0ccb0c3fb663gregPkg334.zip",
          "contents": "CreateBuildings - Create buildings, getBaseSurface - Given a solid that has faces, returns the base surface",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-22T20:22:45.788Z",
          "full_dependency_versions": [ "7.0.0" ],
          "full_dependency_ids": [
            {
              "name": "AU2016 Advanced Workshop",
              "_id": "582974205af9f3713d00005f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "7.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-22T20:22:45.788Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 658,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This package contains all the datasets for AU 2016 Dynamo Advanced Workshop.",
      "maintainers": [
        {
          "username": "DynamoTeam",
          "_id": "556e21d1888bb8ca03000008"
        }
      ],
      "keywords": [ "​dynamo", "tutorials", "advanced", "workshop", "datasets", "dynamobim", "dynamoteam", "au", "2016" ],
      "white_list": false
    },
    {
      "_id": "58369e95fdef23aa6e000007",
      "name": "DynamoFormInput",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/5f245c11-3b94-46a3-a9f5-bd77756fabafgregPkg115.zip",
          "contents": "FormAlert - Creates a TaskDialog Alert, DropdownInput - Creates a WPF form with a dropdown for user input, FormTextInput - Creates a WPF form with textbox for user input",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-28T05:17:39.931Z",
          "full_dependency_versions": [ "2016.11.2704" ],
          "full_dependency_ids": [
            {
              "name": "DynamoFormInput",
              "_id": "58369e95fdef23aa6e000007"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.11.2704",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-28T05:17:39.931Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 300,
      "repository_url": "https://github.com/gtalarico/revitpythonwrapper",
      "site_url": "http://revitpythonwrapper.readthedocs.io",
      "banned": false,
      "deprecated": false,
      "group": "Input",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Forms For User Input in Dynamo ",
      "maintainers": [
        {
          "username": "gtalarico",
          "_id": "56aa7b39c3e9ee4a0800005b"
        }
      ],
      "keywords": [ "python", "forms", "wpf", "input", "alert", "taskdialog", "textbox" ],
      "white_list": false
    },
    {
      "_id": "583d8ad8fdef23aa6e000037",
      "name": "DynamoJson",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/2218d819-9f9d-453d-a80e-75f9f503c81dgregPkg989.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2016-11-29T14:04:08.404Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "DynamoJson",
              "_id": "583d8ad8fdef23aa6e000037"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": true,
          "node_libraries": [ "DynamoJson, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-11-29T14:04:08.404Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 187,
      "repository_url": "https://github.com/ellensi/DynamoJson",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This package provides functionality to read and write Dynamo data to and from JSON strings or files.",
      "maintainers": [
        {
          "username": "ellensi",
          "_id": "5715c9ae287283f905000048"
        }
      ],
      "keywords": [ "json;read;write;import;export;file;interop;convert;csv" ],
      "white_list": false
    },
    {
      "_id": "58457589fdef23aa6e000078",
      "name": "Adaptive.Component.ByPoints_",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/50517be0-1e05-494e-832f-179d07bad6bfgregPkg943.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-12-05T14:11:21.732Z",
          "full_dependency_versions": [ "0.7.5" ],
          "full_dependency_ids": [
            {
              "name": "Adaptive.Component.ByPoints_",
              "_id": "58457589fdef23aa6e000078"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-05T14:11:21.732Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 47,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "3566",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Adaptive.Component.ByPoints_",
      "maintainers": [
        {
          "username": "italo_guedes_@hotmail.com",
          "_id": "5840619ffdef23aa6e000050"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5578df1ff2ae5a9a07000057",
      "name": "UI++",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c8497562-44b9-4722-9ae8-f988bc156727gregPkg836.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-12-07T03:07:00.446Z",
          "full_dependency_versions": [ "12.1.0" ],
          "full_dependency_ids": [
            {
              "name": "UI++",
              "_id": "5578df1ff2ae5a9a07000057"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "12.1.0",
          "contains_binaries": true,
          "node_libraries": [ "UIplusplus, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-12-07T03:07:00.446Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 5,
      "downloads": 1358,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Bad Monkey Inc",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "UI node enhancements for Dynamo",
      "maintainers": [
        {
          "username": "Gytaco",
          "_id": "542d2401cc26bfdc5a00003e"
        }
      ],
      "keywords": [ "color" ],
      "white_list": false
    },
    {
      "_id": "58498ca3fdef23aa6e0000bb",
      "name": "DYN_SharedParamTesting",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/90084ca8-a08e-42eb-bc71-d708bb80aadegregPkg901.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-12-08T16:38:59.322Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "DYN_SharedParamTesting",
              "_id": "58498ca3fdef23aa6e0000bb"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": true,
          "node_libraries": [ "Dyn_SharedParamTesting, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-12-08T16:38:59.322Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 161,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "add shared parameters to a family",
      "maintainers": [
        {
          "username": "kiknchikn2060",
          "_id": "581c873f28c433b35800001e"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "584eaf38fdef23aa6e0000e9",
      "name": "Crandle",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/93c86fa9-6f4e-4391-a3a6-ff8f4cf13212gregPkg495.zip",
          "contents": "ElementsInWhichRooms - This node will check if any of the supplied elements are inside any of the supplied rooms. It will return the list of elements, as well as equal length lists of room numbers, room names, or the rooms themselves.",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-12-12T14:07:52.599Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Crandle",
              "_id": "584eaf38fdef23aa6e0000e9"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-12T14:07:52.599Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 72,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Various revit nodes I've created for various reasons. ",
      "maintainers": [
        {
          "username": "mastjaso",
          "_id": "584eae28fdef23aa6e0000e8"
        }
      ],
      "keywords": [ "design;", "revit;", "mep;" ],
      "white_list": false
    },
    {
      "_id": "584f93defdef23aa6e0000fc",
      "name": "AutoBIM",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/86d8c60d-2cf5-48ed-90dd-d5b98e71f28cgregPkg48.zip",
          "contents": "AutoBIM - Just a placeholder",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-12-13T06:23:26.747Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "AutoBIM",
              "_id": "584f93defdef23aa6e0000fc"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-13T06:23:26.747Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 117,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Just a placeholder",
      "maintainers": [
        {
          "username": "megamax84x",
          "_id": "57e3e08e2107b80223000039"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "585512e3fdef23aa6e000144",
      "name": "PAR.STRUC.",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/dda26a43-35e5-494e-8c93-16d6076c806cgregPkg44.zip",
          "contents": "Get diameter - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-12-17T10:26:43.977Z",
          "full_dependency_versions": [ "1.2.0" ],
          "full_dependency_ids": [
            {
              "name": "PAR.STRUC.",
              "_id": "585512e3fdef23aa6e000144"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-17T10:26:43.977Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 63,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Package for structure",
      "maintainers": [
        {
          "username": "virgilio_benedictos",
          "_id": "585511e2fdef23aa6e000143"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5868d3e5094336bd7e000007",
      "name": "column",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8a6099b4-6d36-4c00-9b9d-ac063f208c6fgregPkg588.zip",
          "contents": "height - bulid, z - z",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2017-01-01T10:03:17.622Z",
          "full_dependency_versions": [ "0.9.1" ],
          "full_dependency_ids": [
            {
              "name": "column",
              "_id": "5868d3e5094336bd7e000007"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.9.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-01T10:03:17.622Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 134,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "build column",
      "maintainers": [
        {
          "username": "TSAICHING",
          "_id": "5868cdfa094336bd7e000006"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5853090afdef23aa6e00012e",
      "name": "DynamoCad",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/534e811b-743f-435b-a62b-ad72b02315e3gregPkg581.zip",
          "contents": "Add Lines - Описание не предоставлено, Add Points - Описание не предоставлено, Import Lines - Описание не предоставлено, Import Points - Описание не предоставлено, Import Text&MText from Autocad - Import Text&MText from Autocad, Import Block Attributes - Import Block Attributes",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2017-01-15T09:58:48.248Z",
          "full_dependency_versions": [ "0.0.5" ],
          "full_dependency_ids": [
            {
              "name": "DynamoCad",
              "_id": "5853090afdef23aa6e00012e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-15T09:58:48.248Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 743,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo and Autocad",
      "maintainers": [
        {
          "username": "KhasanMamaev",
          "_id": "551a92d55899bb370500002a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "586cff5775c961bb1e000029",
      "name": "DominaDynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/a261e644-9995-4a44-ad04-e337f45d8129gregPkg450.zip",
          "contents": "Cambiar parametros de familia - Obtiene el valor (numérico) de un parametro de familia de una lista de ejemplares, Cambiar Tipo de Familia - Cambia el tipo de familia de los elementos seleccionados., Curve.Divide at intersection - Divide una serie de curvas en las intersecciones que generan entre si., Divide - Divide una curva en un numero dado de segmentos, Elemento.Nivel - Gets an element's level, Filtrar por parametro - Filtra los ejemplares de una lista que tienen un valor de paramettro determinado., If(mejorado) - Corrige algunos problemas del nodo OOTB If, Index of lista - Devuelve el índice de una serie de elementos dentro de una lista., Levels.All - Selecciona todos los niveles existentes en el proyecto, Lines.Chamfer - Crea un chaflan entre varias lineas con la distancia al vertice que se indique., List.GroupByNumber - A partir de una lista base, crea subgruposgrupos con número de elementos indicados (hay que indicar tantos números de elementos como subgrupos), Muro.Anchura - Obtiene el valor (numérico) de un parametro de familia de una lista de ejemplares, Muro.Eje - Obtiene ejes de muros y puntos inicio, centro y final, Muro.Habitaciones - Selecciona las habitaciones ue lindan con un muro. Da 3 salidas: las 2 series habitaciones enfrentadas a cada lado y un conjunto de todas las habitaciones., Poligono desde lineas - Crea un polígono a partir de lineas itersecantes., Puertas_Ventanas en Puntos_n tipos - Crea ventanas o puertas de distinto tipo en una lista de puntos. Debe haber tantos tipos de ventana y valores de altura de antepecho como puntos., Puerta_Ventana en puntos_1 tipo - Crea ventanas o puertas de un mismo tipo tipo en una lista de puntos., Puerta_Ventana en puntos_1 tipoENG - Crea ventanas o puertas de un mismo tipo tipo en una lista de puntos., Puerta_Ventana en puntos_1 tipo_nivel - Crea ventanas o puertas de un tipo en una lista de puntos en un nivel o niveles dados. Sirve para muros que abarquen varios niveles., Renombrar elementos  - Renombra los elementos de una lista con un texto fijo y un número ascendente (Ejemplo: M1, M2, M3...), Sort.byKeys(list of keys) - Reordena una lista de listas a partir de los valores de las sublistas., Superficie desde lineas - Crea una superficie a partir de lineas itersecantes., Valor de parámetro de tipo - Obtiene un valor de parametro de tipo de un ejemplar por su nombre",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2017-01-18T16:34:28.935Z",
          "full_dependency_versions": [ "2017.0.6" ],
          "full_dependency_ids": [
            {
              "name": "DominaDynamo",
              "_id": "586cff5775c961bb1e000029"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.0.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-18T16:34:28.935Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 141,
      "repository_url": "",
      "site_url": "dominadynamo.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Serie de nodos de distinatas categorías desarrollados por Joan Moretó para Domina Dynamo. Están clasificados por:\r\n-Ejemplar\r\n-Geometría\r\n-Habitaciones\r\n-Listas\r\n-Muros\r\n-Puertas y ventanas\r\nwww.dominadynamo.com\r\n",
      "maintainers": [
        {
          "username": "joanmoreto",
          "_id": "575a5adde70394822f000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5836fa2afdef23aa6e000012",
      "name": "MipadaemoN Collection",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/723d9cd3-6fa9-4dbc-81e6-ba207d680c09gregPkg133.zip",
          "contents": "Paint Material Info - Extract Material ID, Area and/or Volume from element(s), Percentage - Calculate the percentage of two given values, Parallel Lines - Simple - Create 2 simple, parallel lines which lenght and direction can be changed via Number sliders",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-24T16:03:38.459Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "MipadaemoN Collection",
              "_id": "5836fa2afdef23aa6e000012"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-24T16:03:38.459Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 41,
      "repository_url": "https://github.com/mipadaemon/Mipaython",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "MipadaemoN",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Collection of custom nodes / scripts for Dynamo",
      "maintainers": [
        {
          "username": "mikael.vanderwal",
          "_id": "581c8e4728c433b358000021"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5889d377ca6a5edb650000a1",
      "name": "Point.ByStartPointDirectionDistance",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/a89ce318-98b1-4167-be11-fff8aa906fe6gregPkg126.zip",
          "contents": "Point.ByStartPointDirectionDistance - Create a point(s) for a given Vector direction and specified distance",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-26T10:46:15.818Z",
          "full_dependency_versions": [ "1.2.1" ],
          "full_dependency_ids": [
            {
              "name": "Point.ByStartPointDirectionDistance",
              "_id": "5889d377ca6a5edb650000a1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-26T10:46:15.818Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 9,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Lightos",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create a point(s) for a given Vector direction and specified distance",
      "maintainers": [
        {
          "username": "tom.james@bailygarner.co.uk",
          "_id": "5889cf44ca6a5edb650000a0"
        }
      ],
      "keywords": [ "point", "direction", "distance" ],
      "white_list": false
    },
    {
      "_id": "5884bdfeca6a5edb65000076",
      "name": "DynamoPDF",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c7f81ce4-303f-4b61-9474-2aaaeaa85d2dgregPkg145.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-02-05T16:08:05.720Z",
          "full_dependency_versions": [ "1.2.4" ],
          "full_dependency_ids": [
            {
              "name": "DynamoPDF",
              "_id": "5884bdfeca6a5edb65000076"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.4",
          "contains_binaries": true,
          "node_libraries": [ "DynamoPDF, Version=1.2.4.0, Culture=neutral, PublicKeyToken=null", "itextsharp, Version=5.5.10.0, Culture=neutral, PublicKeyToken=8354ae6d2174ddca" ]
        }
      ],
      "latest_version_update": "2017-02-05T16:08:05.72Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 582,
      "repository_url": "https://github.com/grevit-dev/DynamoPDF",
      "site_url": "https://github.com/grevit-dev/DynamoPDF",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Read and Write PDFs with Dynamo",
      "maintainers": [
        {
          "username": "h-mt",
          "_id": "55dad3ba662bf0e908000103"
        }
      ],
      "keywords": [ "pdf", "annotation", "read", "write", "text", "geometry", "images" ],
      "white_list": false
    },
    {
      "_id": "5874e32a75c961bb1e000067",
      "name": "RoofGenerator",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/af7ee0f0-47b8-488b-a483-f69769e3c9eegregPkg894.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-02-06T10:59:40.205Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "RoofGenerator",
              "_id": "5874e32a75c961bb1e000067"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": true,
          "node_libraries": [ "RoofGenerator, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-02-06T10:59:40.205Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 392,
      "repository_url": "www.onbim.com.br",
      "site_url": "www.onboxdesign.com.br",
      "banned": false,
      "deprecated": false,
      "group": "onBIM+ONBOX",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Automatically distribute roof shingles on footprint roof",
      "maintainers": [
        {
          "username": "onBIM-Consulting",
          "_id": "5838c238fdef23aa6e000021"
        }
      ],
      "keywords": [ "roof", "shingles", "tiles" ],
      "white_list": false
    },
    {
      "_id": "58a1da1361de68010800005a",
      "name": "CheapWine",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/66f7d8c7-23a5-41d6-a763-5f4cfde53d4dgregPkg539.zip",
          "contents": "Next Number in String - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-02-13T16:08:51.907Z",
          "full_dependency_versions": [ "0.0.1", "1.0.2" ],
          "full_dependency_ids": [
            {
              "name": "CheapWine",
              "_id": "58a1da1361de68010800005a"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "direct_dependency_versions": [ "1.0.2" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-02-13T16:08:51.907Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 30,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Greg's first package. A single node but you gotta start somewhere!",
      "maintainers": [
        {
          "username": "Greg.McDowell.Jr",
          "_id": "573f1421e383e60d6b000005"
        }
      ],
      "keywords": [ "string", "clockwork" ],
      "white_list": false
    },
    {
      "_id": "580f5b5af50b17c72000006c",
      "name": "Second Law",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/9766fa36-694a-42a3-9e8c-11df4aab9803gregPkg385.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2017-02-21T20:06:11.802Z",
          "full_dependency_versions": [ "0.2.0" ],
          "full_dependency_ids": [
            {
              "name": "Second Law",
              "_id": "580f5b5af50b17c72000006c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.0",
          "contains_binaries": true,
          "node_libraries": [ "SecondLaw, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-02-21T20:06:11.802Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 204,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Simple physics engine for dynamic relaxation. Nodes and engine rewritten since v0.1.x to enhance performance and simplify handling of linked geometry. Examples now provided at a smaller scale (effectively in m rather than mm) so mesh displays properly. ",
      "maintainers": [
        {
          "username": "AlexBaalham",
          "_id": "57c9d3e04172a48a35000116"
        }
      ],
      "keywords": [ "dynamic", "relaxation;", "physics;", "form", "finding" ],
      "white_list": false
    },
    {
      "_id": "58b32d9af4db78ec0100004d",
      "name": "Open File Dialog",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/1c2b2d82-9f6d-467e-9795-c39533aa86e9gregPkg590.zip",
          "contents": "Open File Dialog - Opens files based on input criteria using the standard Windows \"OpenFileDialog\"",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-02-26T19:33:46.947Z",
          "full_dependency_versions": [ "2017.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Open File Dialog",
              "_id": "58b32d9af4db78ec0100004d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-02-26T19:33:46.947Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 62,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Lightos",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates an \"Open File Dialog\" as per Sstem.Windows.Forms library",
      "maintainers": [
        {
          "username": "tom.james@lightos.co.uk",
          "_id": "5887e38eca6a5edb6500008f"
        }
      ],
      "keywords": [ "open", "file", "dialog" ],
      "white_list": false
    },
    {
      "_id": "58b74a2cf4db78ec01000074",
      "name": "Truss by curve - web diagonals",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/d6c842df-92a3-41a0-9e47-3ba04ace3658gregPkg384.zip",
          "contents": "truss - web diagonals - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-01T22:24:44.479Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Truss by curve - web diagonals",
              "_id": "58b74a2cf4db78ec01000074"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-01T22:24:44.479Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 97,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "use a curve as input for a truss. Also give the number of diagonals and bottom chord offset and you're ready to go.",
      "maintainers": [
        {
          "username": "mvanleeuwen",
          "_id": "58871ce4ca6a5edb65000085"
        }
      ],
      "keywords": [ "truss", "structural", "framing" ],
      "white_list": false
    },
    {
      "_id": "56f177a85bee3e213800008e",
      "name": "Bad Moon",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c0fad51a-3232-46d7-a971-805210e417c2gregPkg424.zip",
          "contents": "MassAdd - MassAdd",
          "engine_metadata": "",
          "engine_version": "1.2.3.592",
          "created": "2017-03-02T17:51:31.525Z",
          "full_dependency_versions": [ "6.7.2" ],
          "full_dependency_ids": [
            {
              "name": "Bad Moon",
              "_id": "56f177a85bee3e213800008e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "6.7.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-02T17:51:31.525Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 33,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Bad Files here",
      "maintainers": [
        {
          "username": "jnealb",
          "_id": "546ceba1b77c84600c00001d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5887684eca6a5edb65000089",
      "name": "Regnstrom",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/90918faf-41fa-4004-9373-f730cd200ca8gregPkg177.zip",
          "contents": "Regex.Search - No description provided, Regex.Substitute - Replaces the first match in str. Returns false if there is no match.",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-07T12:36:38.816Z",
          "full_dependency_versions": [ "0.0.7" ],
          "full_dependency_ids": [
            {
              "name": "Regnstrom",
              "_id": "5887684eca6a5edb65000089"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.7",
          "contains_binaries": true,
          "node_libraries": [ "Regnstrom, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-03-07T12:36:38.816Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 39,
      "repository_url": "https://github.com/regnstr/Regnstrom-Dynamo",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Some utility nodes for Dynamo 1.2.\r\n\r\nVery much a work in progress! Use at your own risk!",
      "maintainers": [
        {
          "username": "isak.regnstrom@sweco.se",
          "_id": "568a67c95c568ad00c000082"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58bed0cef4db78ec010000ad",
      "name": "Conco Custom",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/3a20b8dc-4dd0-4ccd-a8bf-245440a6a253gregPkg392.zip",
          "contents": "Filter Concrete, Formwork, Embeds - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-07T15:25:02.460Z",
          "full_dependency_versions": [ "0.0.1", "1.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Conco Custom",
              "_id": "58bed0cef4db78ec010000ad"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "direct_dependency_versions": [ "1.0.2" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-07T15:25:02.46Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 29,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Conco's Custom nodes",
      "maintainers": [
        {
          "username": "zkirkhamAL5U8",
          "_id": "58934aa3ca6a5edb650000fc"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "585b2875fdef23aa6e000177",
      "name": "SlapsUI User Interface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/86b717ec-04c4-4dde-bae4-d33c90720f82gregPkg833.zip",
          "contents": "Slaps UI ComboBox1 - UI one Combo boxes, Slaps UI ComboBox2 - UI two Combo boxes, Slaps UI ComboBox3 - UI three Combo boxes, Slaps UI ComboBox4 - UI four Combo boxes, Slaps UI InputBox1 - UI for one input box. , Slaps UI InputBox2 - UI two input boxes, Slaps UI InputBox3 - UI three input boxes, Slaps UI InputBox4 - UI four input boxes, Slaps UI Open File - UI Open File, Slaps UI Slider1 - UI one Slider, Slaps UI Slider2 - UI two Slider, Slaps UI Slider3 - UI three Sliders, Slaps UI Slider4 - UI four Sliders",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-14T15:54:40.368Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "SlapsUI User Interface",
              "_id": "585b2875fdef23aa6e000177"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": true,
          "node_libraries": [ "SlapsUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-03-14T15:54:40.368Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 79,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Parachence",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "Dynamo User Interface",
          "_id": "58c968c2f4db78ec0100010b"
        }
      ],
      "num_dependents": 1,
      "description": "Under Construction ",
      "maintainers": [
        {
          "username": "danny.bentley@som.com",
          "_id": "574db6e0e70394822f000039"
        }
      ],
      "keywords": [ "user", "interface", "display" ],
      "white_list": false
    },
    {
      "_id": "58ac69def4db78ec0100000a",
      "name": "Butterfly",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/7b7b3acd-d4b6-4d03-a757-3ded8400020cgregPkg971.zip",
          "contents": "blockMesh - blockMesh\r\n-, Boundary - Create a custom boundary.\r\n-, calculated - calculated boundary condition.\r\n-, chekMesh - chekMesh\r\n-, controlDict - Set parameters for runDict, Create Butterfly Geometry - Create Butterfly surface.\r\n-, Create Case from Folder - Create an OpenFOAM Case from an existing case in a local folder.\r\n-, Create Case from Geometries - Create an OpenFOAM Case from geometries.\r\n-, Create Case from Tunnel - Create Case from wind tunnel.\r\n-, decomposeParDict scotch - Scotch decomposeParDict. Dictionary for parallel runs.\r\n-, decomposeParDict simple - Simple decomposeParDict. Dictionary for parallel runs.\r\n-, DistanceRefinementMode - Inside/Ouside region refinement.\r\n-, divSchemes library - Generate fvSchemes based on mesh non-orthogonalities.\r\n-, epsilonWallFunction - epsilonWallFunction boundary condition.\r\n-, fixedValue - fixedValue boundary condition.\r\n-, Function Object - Function Object., FvSchemes from Non-orthogonality - Generate fvSchemes based on mesh non-orthogonalities.\r\n-, Get Geometry - Update fvSchemes values based on mesh orthogonalities.\r\n-, Grading XYZ - MultiGrading\r\nCreate a grading for multiple segmentGradings.\r\n-, Heat Transfer Recipe - Heat Transfer Recipe.\r\n-, Inlet Boundary - Create an inlet boundary with uniform velocity value.\r\n-, Inlet Flow-Rate Boundary - Create an inlet boundary with flow rate in m3/s.\r\n-, kqRWallFunction - kqRWallFunction boundary condition.\r\n-, Laminar Turbulance Model - Large eddy simulation (LES) modelling.\r\nRead more: http://cfd.direct/openfoam/user-guide/turbulence/\r\nWatch this: https://www.youtube.com/watch?v=Eu_4ppppQmw, LES Turbulance Model - Large eddy simulation (LES) modelling.\r\nRead more: http://cfd.direct/openfoam/user-guide/turbulence/\r\nWatch this: https://www.youtube.com/watch?v=Eu_4ppppQmw, Load Mesh - Load mesh from the case for preview.\r\n-, Load Points - Load points from the case for preview.\r\n-, Load Probes Value - Load results for a field in probes.\r\n-, Load Probes - Load probes from a folder.\r\n-, Load Skipped Probes - Load results for a field in probes.\r\n-, LocationRefinementMode - Inside/Ouside region refinement.\r\n-, Look Up Case Folder - Look Up Case Folder.\r\n-, Make2d Parameters - Make a case 2d., Meshing Parameters - Set meshing parameters for blockMesh and snappyHexMesh., MultiGrading - MultiGrading\r\nCreate a grading for multiple segmentGradings.\r\n-, nutkWallFunction - nutkWallFunction boundary condition.\r\n-, Outlet Boundary - Create an outlet boundary with uniform pressure value.\r\n-, Plot Residuals - Load residual values for a case.\r\n-, probes - Create Butterfly probes, purgeCase - Purge case folder.\r\n-, RAS Turbulance Model - Reynolds-averaged simulation (RAS) turbulence model.\r\nRead more: http://cfd.direct/openfoam/user-guide/turbulence/\r\nWatch this: https://www.youtube.com/watch?v=Eu_4ppppQmw, Refinement Region - Butterfly refinement range.\r\n-, relaxtionFactors - Set relaxtionFactors values, residualControl - Set residual control convergance values, Sample Case - Sample the results for a case.\r\nUse this component yo load the results for a case that you have ran already. \r\n-, Segment Grading - Segment Grading.\r\nUse this component to create a grading for a segment of the block based on ratio\r\nor length.\r\n-, snappyHexMesh - snappyHexMesh\r\n-, snappyHexMeshDict - Set parameters for snappyHexMeshDict.\r\nRead more about snappyHexMeshDict here:\r\n    https://openfoamwiki.net/images/f/f0/Final-AndrewJacksonSlidesOFW7.pdf, Solution Parameter - Solution Parameter., Solution Parameters - Solution Parameters., Solution - Run recipes using OpenFOAM.\r\n-, Steady Incompressible Recipe - Steady Incompressible Recipe.\r\n-, Update blockMeshDict - Update blockMeshDict.\r\n-, Visualize Vectors - Visualize vectors, Wall Boundary - Create a wall boundary.\r\n-, Wind Tunnel Parameters - Wind tunnel parameters.\r\n-, Wind Vector - Wind vector.\r\n-, zeroGradient - zeroGradient boundary condition.\r\n-",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-19T14:18:25.430Z",
          "full_dependency_versions": [ "0.1.0", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Butterfly",
              "_id": "58ac69def4db78ec0100000a"
            },
            {
              "name": "Ladybug",
              "_id": "56aa7950c3e9ee4a08000059"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Ladybug",
              "_id": "56aa7950c3e9ee4a08000059"
            }
          ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-19T14:18:25.43Z",
      "num_versions": 10,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -4,
      "downloads": 438,
      "repository_url": "https://github.com/ladybug-analysis-tools/butterfly",
      "site_url": "ladybug.tools",
      "banned": false,
      "deprecated": false,
      "group": "Ladybug Analysis Tools",
      "engine": "dynamo",
      "license": "GPL-3.0",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Butterfly connects Dynamo to OpenFOAM for CFD simulation. Follow the direction on this page for installation:\r\n\r\nhttps://github.com/ladybug-tools/butterfly/wiki/Getting-started-with-butterfly-in-dynamo\r\n\r\nThere are two example files under extra/examplefiles that you can use to get yourself familiarized with the process. There will be more documentation and tutorials available soon. Open an issue on GitHub for wishes and bugs!",
      "maintainers": [
        {
          "username": "thisisladybug",
          "_id": "56a911d7c3e9ee4a0800004a"
        }
      ],
      "keywords": [ "cfd;", "openfoam" ],
      "white_list": false
    },
    {
      "_id": "58cf622af4db78ec01000134",
      "name": "Structural Framing Optimization",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/47ce316c-3b77-4b8f-b742-262f3a0c0cd0gregPkg588.zip",
          "contents": "Framing.BaySize - Determines bay size, given two opposite-corner columns., Framing.Compute_Zxx_Ixx - For a given bay length, width, number of beams, and unfactored loads, computes the minimum required Zxx and Ixx, Framing.ComputeDesignWeight - Computes the weight of the entire framing., Framing.DrawFrameElements - Draws the frame elements on the Revit model., Framing.GetLightestSection - Gets lightest W section from the AISC shapes database, given a minimum Ixx and Zxx., Framing.OptimizeFromRevit - Given two opposite-corner columns from Revit model, area loads, maximum filler beam spacing, and AISC shapes database, determines optimum framing., Framing.RunOptimization - Returns optimum framing",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2017-03-20T05:01:30.982Z",
          "full_dependency_versions": [ "1.0.0", "2017.1.28", "1.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Structural Framing Optimization",
              "_id": "58cf622af4db78ec01000134"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "direct_dependency_versions": [ "1.0.2", "2017.1.28" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-20T05:01:30.982Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 104,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Collection of nodes to analyze, optimize, and draw structural frame elements on rectangular gravity system.",
      "maintainers": [
        {
          "username": "a01204502",
          "_id": "58cf5debf4db78ec01000133"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "58d53fb7f4db78ec0100017d",
      "name": "BuildingSP MEP Nodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/42650d20-a940-4a87-a0af-8b0bf86050d9gregPkg73.zip",
          "contents": "Select Element by Parameter - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-24T15:48:07.253Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "BuildingSP MEP Nodes",
              "_id": "58d53fb7f4db78ec0100017d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-24T15:48:07.253Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 226,
      "repository_url": "",
      "site_url": "https://github.com/benbuschmannBSP/Dynamo",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Collection of tools for MEP automation",
      "maintainers": [
        {
          "username": "ben65Y3A",
          "_id": "58d53f0cf4db78ec0100017c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58513499fdef23aa6e000113",
      "name": "SPraUt",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/ba24baec-4841-492f-a8e7-d7e8fb99379egregPkg381.zip",
          "contents": "Export category To Excell - Nessuna descrizione disponibile, Gross Wall Area - Calculates the gross area of the walls by adding the window area less area of a given value, QTO-Floor&wall - Nessuna descrizione disponibile, Responsive facade - xxxxxxxxxxxxxxxx, Sort Curtain Panel - Ordina e raggruppa i pannelli basati su motivo dal primo in basso a sinistra all'ultimo in alto a destra per una superficie divisa piana",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-24T16:38:00.933Z",
          "full_dependency_versions": [ "0.0.10" ],
          "full_dependency_ids": [
            {
              "name": "SPraUt",
              "_id": "58513499fdef23aa6e000113"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.10",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-24T16:38:00.933Z",
      "num_versions": 10,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 36,
      "repository_url": "",
      "site_url": "www.spraut.it",
      "banned": false,
      "deprecated": false,
      "group": "SPraUt",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Raccolta di nodi sviluppati e aggiornati dal gruppo SPraUt",
      "maintainers": [
        {
          "username": "danirson",
          "_id": "565c59a90370b0a90700002c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58d9dc76b529d0bb2400000c",
      "name": "LinkDWG",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/aeb3c7dc-06d4-4f6a-989f-55637029d3ebgregPkg451.zip",
          "contents": "ActiveX.ExportCurvesToAutoCAD - Export basic curves into Active AutoCAD on specified Layer, ActiveX.GetArcProperties - Get COM arc properties, ActiveX.GetAttributeProperties - Get COM Attribute properties, ActiveX.GetBlockProperties - Get COM Block properties, ActiveX.GetCircleProperties - Get COM circle properties, ActiveX.GetCOMObjects - Get various objects (points, blocks, attributes, text, mtexts, polylines, spline, 3dfaces) from AutoCAD Active SelectionSet or layout, need to generate an AutoCAD selectionset if using active selectionset, ActiveX.GetFaceProperties - Get COM 3DFace properties, ActiveX.GetLayers - Get active AutoCAD layers list, ActiveX.GetLineProperties - Get COM line properties, ActiveX.GetMTextProperties - Get COM TEXT/MTEXT properties, ActiveX.GetPointProperties - Get COM point properties, ActiveX.GetPolylineProperties - Get the COM LWPolyline properties, ActiveX.ImportCurveFromSSET - Import curves from Active AutoCAD SelectionSet, need to generate a selectionset in AutoCAD before running this node, ActiveX.ImportGeometryByLayer - Import basic geometries (point, line, circle, arc, polyline, spline, 3dface, meshes) from certain layer of active AutoCAD, ImportInstance.GetLayers - Get layer list of linked or imported DWG, ImportInstance.GroupGeometriesByLayer - Group geometries in ImportInstance by their layer name and convert the inside meshes into polysurface",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-28T03:45:58.178Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "LinkDWG",
              "_id": "58d9dc76b529d0bb2400000c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-28T03:45:58.178Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 517,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Inspired by DynamoCAD and BimorphNodes, LinkDWG provides data access to both active AutoCAD files and DWG as ImportInstance",
      "maintainers": [
        {
          "username": "kozmos",
          "_id": "570e4462287283f905000024"
        }
      ],
      "keywords": [ "dwg", "autocad" ],
      "white_list": false
    },
    {
      "_id": "58e4e62db529d0bb2400007d",
      "name": "Structural Rebar",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/eb73239a-4e2c-458a-9ecd-ff3b8473d477gregPkg879.zip",
          "contents": "Rebar_LabSplice - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-04-05T12:42:21.444Z",
          "full_dependency_versions": [ "0.0.1", "1.2.4", "1.2.1", "1.2.0" ],
          "full_dependency_ids": [
            {
              "name": "Structural Rebar",
              "_id": "58e4e62db529d0bb2400007d"
            },
            {
              "name": "BIM4Struc.Rebar",
              "_id": "5763be8ce70394822f0000c1"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Dynamo for Rebar",
              "_id": "55f2f4ad662bf0e908000171"
            }
          ],
          "direct_dependency_versions": [ "1.2.4", "1.2.1", "1.2.0" ],
          "direct_dependency_ids": [
            {
              "name": "BIM4Struc.Rebar",
              "_id": "5763be8ce70394822f0000c1"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Dynamo for Rebar",
              "_id": "55f2f4ad662bf0e908000171"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-05T12:42:21.444Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 69,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "BimSolutions",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Set for creating and modifying rebar",
      "maintainers": [
        {
          "username": "mahmoudsamir1@gmail.com",
          "_id": "58e4e16eb529d0bb2400007c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58e4fec3b529d0bb24000089",
      "name": "BS-RebarLabSplice",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/22834af6-c3a6-40a2-8300-4a76aee13b08gregPkg2.zip",
          "contents": "BS-RebarLabSplice - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-04-05T14:27:15.676Z",
          "full_dependency_versions": [ "0.0.2", "1.2.4", "1.2.1", "1.2.0" ],
          "full_dependency_ids": [
            {
              "name": "BS-RebarLabSplice",
              "_id": "58e4fec3b529d0bb24000089"
            },
            {
              "name": "BIM4Struc.Rebar",
              "_id": "5763be8ce70394822f0000c1"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Dynamo for Rebar",
              "_id": "55f2f4ad662bf0e908000171"
            }
          ],
          "direct_dependency_versions": [ "1.2.4", "1.2.1", "1.2.0" ],
          "direct_dependency_ids": [
            {
              "name": "BIM4Struc.Rebar",
              "_id": "5763be8ce70394822f0000c1"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Dynamo for Rebar",
              "_id": "55f2f4ad662bf0e908000171"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-05T14:27:15.676Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 4,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "BimSolutions.Rebar",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create rebar sets with lapsplice based on original rebar set",
      "maintainers": [
        {
          "username": "mahmoudsamir1@gmail.com",
          "_id": "58e4e16eb529d0bb2400007c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58e5188fb529d0bb2400008f",
      "name": "BS.Rebar",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c5149822-c1ea-4a9a-8ce5-eca6643ec90bgregPkg198.zip",
          "contents": "BS.Rebar.LabSplice - Create rebar set with lapsplice based on original rebar set.",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-04-05T16:17:19.292Z",
          "full_dependency_versions": [ "0.0.1", "1.2.4", "1.2.1" ],
          "full_dependency_ids": [
            {
              "name": "BS.Rebar",
              "_id": "58e5188fb529d0bb2400008f"
            },
            {
              "name": "BIM4Struc.Rebar",
              "_id": "5763be8ce70394822f0000c1"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            }
          ],
          "direct_dependency_versions": [ "1.2.1", "1.2.4" ],
          "direct_dependency_ids": [
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "BIM4Struc.Rebar",
              "_id": "5763be8ce70394822f0000c1"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-05T16:17:19.292Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 122,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "BimSolutions",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Set of nodes to create or modify rebar elements.",
      "maintainers": [
        {
          "username": "mahmoudsamir1@gmail.com",
          "_id": "58e4e16eb529d0bb2400007c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58e709fcb529d0bb240000a1",
      "name": "Taiwan No.1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/1052e649-2b12-44e9-ada8-d446ac7288f9gregPkg821.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2017-04-07T03:39:40.991Z",
          "full_dependency_versions": [ "1.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Taiwan No.1",
              "_id": "58e709fcb529d0bb240000a1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-07T03:39:40.991Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 69,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Read EXCEL ",
      "maintainers": [
        {
          "username": "aa6309aa",
          "_id": "57f20dc2d3d589541a000005"
        }
      ],
      "keywords": [ "excel" ],
      "white_list": false
    },
    {
      "_id": "584c2d99fdef23aa6e0000d0",
      "name": "MyVit",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/688442ce-469e-4f4d-91ac-bb36b3bccda9gregPkg966.zip",
          "contents": "CenterViewPort - Place viewports to the center of sheets/views , \" Only One Time Run \", if run again viewports will be shifted., FurnitureInRoom - Main purpose is to export excel , include room number, name , level and furniture which existing in each particular room. , GridDimension - Generate dimensions on all plan views by grids reference ., LevelDimension - Generate dimensions by level reference, LevelRoomArea - Get room area by each level with total area and room name., OldIF - built-ins ' if ' return longest index length , ' OldIf ' return acutal index length ., ParkingNumber - Get ordered parking number by using model curve., ReadExcel_Bumblebee - Read excel data with extended features by Bumblebee(KKSobon), RemoveNull - Remove null from lists, RoomNameUpperCase - Change all room name to Upper Case letter, RoomNumberAndStringByLine - Create or renumbering Room number with prefix and suffix string , need to use comma (eg. A,100,B) if only need number (eg. space,100,space)., RoomNumberByLine - Create or renumbering (increasing) room number by line element passing through by particular Room(s)., SheetCustom - Create sheets , number title block . Plus viewport alignment and scale., SheetNameUpperCase - Convert all sheet name to uppercase., SpaceNameNumbering - The same with Space Name Ultilities Add-in. , ViewNameUpperCase - Change all views or particular view name to upper case ., WallColumnsAlignment - Wall and Columns adjustment of base offset and top offset , WallDimension - Create aligned dimension for wall by using a curve reference, WriteExcel_Bumblebee - Write data to excel sheets by Bumblebee(KKSobon)",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-04-09T02:25:15.983Z",
          "full_dependency_versions": [ "0.4.2", "1.2.2", "0.90.7" ],
          "full_dependency_ids": [
            {
              "name": "MyVit",
              "_id": "584c2d99fdef23aa6e0000d0"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "direct_dependency_versions": [ "1.2.2", "0.90.7" ],
          "direct_dependency_ids": [
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "change_log": "",
          "version": "0.4.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-09T02:25:15.983Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 144,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "MyVit",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A collections of useful Revit nodes . \r\nReminder : if you get warning message \r\n\" Uninstall the following dependent packages : ... .... .. \"\r\nlike this, [no issues] just go ahead and install. Dynamo reinstall those \r\npackages by itself. Thank you for trying out this package.\r\nHave a great day.\r\n ",
      "maintainers": [
        {
          "username": "mgjean",
          "_id": "5836959dfdef23aa6e000005"
        }
      ],
      "keywords": [ "for", "more", "info", "and", "issues", "-", "armpit.east@gmail.com" ],
      "white_list": false
    },
    {
      "_id": "58f23b9819da52d31a000030",
      "name": "JsonData",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8ec1f27e-0aa0-4717-b177-ce428e895068gregPkg999.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-04-19T00:09:57.394Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "JsonData",
              "_id": "58f23b9819da52d31a000030"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": true,
          "node_libraries": [ "JsonData, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-04-19T00:09:57.394Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 88,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Package to manage data using Newtonsoft Json library for C#. It can handle primitive object types (string, int, double, etc.) as well as Autodesk.DesignScript and Revit object types. Non-primitive objects are kept intact along the graph, only converted to its string representation when writing to file. For any comments, contact at aortegapickmans@gmail.com",
      "maintainers": [
        {
          "username": "aortegapickmans@gmail.com",
          "_id": "565364fb0370b0a907000004"
        }
      ],
      "keywords": [ "json", "data", "jsonnet" ],
      "white_list": false
    },
    {
      "_id": "5652b53d662bf0e908000371",
      "name": "Hydra",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/e4edf73d-3f4a-4111-b7ee-417c49800127gregPkg623.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-04-19T22:09:37.934Z",
          "full_dependency_versions": [ "2017.4.20" ],
          "full_dependency_ids": [
            {
              "name": "Hydra",
              "_id": "5652b53d662bf0e908000371"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.4.20",
          "contains_binaries": true,
          "node_libraries": [ "HydraDynamo.customization, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", "HydraDynamo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "HydraHelperFunctions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-04-19T22:09:37.934Z",
      "num_versions": 9,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 169,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Hydra - project for sharing dynamo files on the web.",
      "maintainers": [
        {
          "username": "alfarok",
          "_id": "564b7ef5662bf0e90800034b"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "58f9a82319da52d31a000067",
      "name": "111",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/fda49d25-4dee-464e-bd9c-2fffa50e54cdgregPkg201.zip",
          "contents": "Create 8 Points for Panaling Tools - 未提供说明",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2017-04-21T06:35:15.007Z",
          "full_dependency_versions": [ "11.11.11" ],
          "full_dependency_ids": [
            {
              "name": "111",
              "_id": "58f9a82319da52d31a000067"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "11.11.11",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-21T06:35:15.007Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 20,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "11111111111111",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "11111111111111",
      "maintainers": [
        {
          "username": "liming@dongjingty.com.cn",
          "_id": "58f9a7e119da52d31a000066"
        }
      ],
      "keywords": [ "111111111111" ],
      "white_list": false
    },
    {
      "_id": "590313cbababfb4f17000012",
      "name": "Artbi",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/26b9fe6f-9817-4f3d-a8ac-c9a7c9d22644gregPkg670.zip",
          "contents": "Elements.GetandSetParametersAtIndex - Copie-colle la valeur d'un paramètre dans un autre pour l'élément situé à l'index x d'une liste d'éléments",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2017-04-28T10:04:59.776Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Artbi",
              "_id": "590313cbababfb4f17000012"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-28T10:04:59.776Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 14,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Nodes by Artbi",
      "maintainers": [
        {
          "username": "JH.Bonnet",
          "_id": "57d7f12bf615e77258000031"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "59036a41ababfb4f1700001a",
      "name": "excelandraz",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/bbf06da6-87fc-4990-839b-acd3922d3060gregPkg616.zip",
          "contents": "nodetruss - No description provided",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-04-28T16:13:53.897Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "excelandraz",
              "_id": "59036a41ababfb4f1700001a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-28T16:13:53.897Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 15,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "moj jsdbcs gg",
      "maintainers": [
        {
          "username": "andrazstarc7@gmail.com",
          "_id": "59036856ababfb4f17000019"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5903b95bababfb4f1700001f",
      "name": "DynaShape",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/4096e91d-ae4e-49da-9cc4-da9703799b78gregPkg969.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-04-28T22:20:41.710Z",
          "full_dependency_versions": [ "0.2.1" ],
          "full_dependency_ids": [
            {
              "name": "DynaShape",
              "_id": "5903b95bababfb4f1700001f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-28T22:20:41.71Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 144,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Geometric optimization, constraint solving and form finding tool for Dynamo",
      "maintainers": [
        {
          "username": "LongMozart",
          "_id": "5903ac46ababfb4f1700001e"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58ee849619da52d31a000009",
      "name": "CrackerJack",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/bf605aff-5a08-4d6a-929e-dec5c158d5a5gregPkg376.zip",
          "contents": "NurbsCurve.ByControlPoints.AnyDegree - Creates a BSplineCurve by usings explicit control points. Sorts list of points by number of points in list into 1, 2, or 3 degree Nurbscurves before constructing NurbsCurves., Surface.DivideByIsoGrid - Surface subdivided by Isoline Grid., Surface.PerimeterLines.RemovesDuplicates - Creates Perimeter Lines around a divided surface then removes duplicates which have reversed start and end points., Surface.ReplaceWithCircles - Creates a circular surface of a set size with the same center point as the surface it replaced. Useful for DoesIntersect nodes when analyzing surface characteristics., Surface.ReplaceWithSquares - Creates a square surface of a set size with the same center point as the surface it replaced. Useful for DoesIntersect nodes when analyzing surface characteristics., Surface.TrimByOffset - Trims a surface by a set offset around both interior and exterior borders. Must input a single surface and not a polysurface.",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-05-01T19:43:03.831Z",
          "full_dependency_versions": [ "2017.5.1" ],
          "full_dependency_ids": [
            {
              "name": "CrackerJack",
              "_id": "58ee849619da52d31a000009"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.5.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-01T19:43:03.831Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 35,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Set of nodes that seemed useful enough to share. Divide an irregular surface with an isoline grid; trace a grid of surfaces then remove duplicate lines with reversed start and end points; Trim an irregular surface by a set amount; from boring curves to sexy nurbscurves receiving a list of 1, 2, & 3 degree; \r\n\r\n2017.4.13: Fixed a organizational error\r\n\r\nNodes by Michael-Paul \"Jack Kelly\" James ",
      "maintainers": [
        {
          "username": "jackelly3",
          "_id": "58af494cf4db78ec01000033"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "5907cce5ababfb4f17000037",
      "name": "WAM",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/86d1d3ad-b09b-4059-9a68-f2af86f4c3c6gregPkg928.zip",
          "contents": "WAM_Template - WAM Definition startup node - edit and copy the groups to your definition",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-02T05:45:27.443Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "WAM",
              "_id": "5907cce5ababfb4f17000037"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-02T05:45:27.443Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 35,
      "repository_url": "",
      "site_url": "http://www.warrenandmahoney.com/en/",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo 1.3 - Collection of Dynamo nodes developed by Warren and Mahoney Architects",
      "maintainers": [
        {
          "username": "maciejwypych",
          "_id": "54d891abdcee4dfd260000d6"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "567978bc5c568ad00c000052",
      "name": "ParametricAlly",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/403b1373-9945-459b-8b05-0cdf24645eb9gregPkg263.zip",
          "contents": "Factors - Finding nearest two factors, Group Elements by values - Retrieve Specific values and group by These values, Multiple By Level - Translate Geometry using Level Height And number",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-04T07:17:20.087Z",
          "full_dependency_versions": [ "0.0.4" ],
          "full_dependency_ids": [
            {
              "name": "ParametricAlly",
              "_id": "567978bc5c568ad00c000052"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-04T07:17:20.087Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 96,
      "repository_url": "http://parametrically.com/nodes/",
      "site_url": "www.parametrically.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Some nodes used in case studies. aded Color alpha changer",
      "maintainers": [
        {
          "username": "kaankrby",
          "_id": "567839355c568ad00c00004e"
        }
      ],
      "keywords": [ "listing", "-", "solid", "editing", "-", "factors" ],
      "white_list": false
    },
    {
      "_id": "59120bfaababfb4f1700009c",
      "name": "Moe's Nodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/a6d63211-f26c-4665-8f2d-0fe9aad7e307gregPkg241.zip",
          "contents": "Create.Points.Grid.Sequare - Create a grid of points by inputing the number of the points wanted and the numbers of rows, RenumberDoors.ByToRoom - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-05-09T18:35:38.231Z",
          "full_dependency_versions": [ "0.0.1", "1.0.3", "2016.11.11", "2016.12.2" ],
          "full_dependency_ids": [
            {
              "name": "Moe's Nodes",
              "_id": "59120bfaababfb4f1700009c"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "1.0.3", "2016.12.2", "2016.11.11" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-09T18:35:38.231Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 4,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This is just a way to share my in progress costume nodes",
      "maintainers": [
        {
          "username": "Moe_H",
          "_id": "59120a1eababfb4f1700009b"
        }
      ],
      "keywords": [ "doors", "renumber" ],
      "white_list": false
    },
    {
      "_id": "59181c42ababfb4f170000cf",
      "name": "DynaWorks18",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/02e7c070-64b9-43ed-8547-1b9aa65201dfgregPkg154.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.2.373",
          "created": "2017-05-14T08:58:42.948Z",
          "full_dependency_versions": [ "1.1.0" ],
          "full_dependency_ids": [
            {
              "name": "DynaWorks18",
              "_id": "59181c42ababfb4f170000cf"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.0",
          "contains_binaries": true,
          "node_libraries": [ "DynaWorks18, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-05-14T08:58:42.948Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 47,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Bad Monkeys",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo Library for Navisworks 2018",
      "maintainers": [
        {
          "username": "Gytaco",
          "_id": "542d2401cc26bfdc5a00003e"
        }
      ],
      "keywords": [ "navisworks", "dynaworks", "clashes" ],
      "white_list": false
    },
    {
      "_id": "59182acaababfb4f170000d1",
      "name": "HA-StructuralSolutions",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/fdb6532e-5463-443f-9e0d-bb1098c203a0gregPkg230.zip",
          "contents": "HA-Pro2Sur_Geo - Công ty TNHH Giải Pháp Kết Cấu H.A\r\n- Tư vấn thiết kế | Đào tạo nhân lực | Lập trình ứng dụng xây dựng\r\n- Địa chỉ : Phòng 311, 125B, Ngách 33, Ngõ Hòa Bình 7, Minh Khai, Hai Bà Trưng, HN.\r\n- Điện thoại : Kỹ thuật : (+84) 968 799 444 | Kinh doanh : (+84) 968 544 599\r\n- Fanpage : www.fb.com/HA.StructuralSolutions\r\n- Email : Lienhe.HA@gmail.com, HA-Sur2Pro_Geo - Công ty TNHH Giải Pháp Kết Cấu H.A\r\n- Tư vấn thiết kế | Đào tạo nhân lực | Lập trình ứng dụng xây dựng\r\n- Địa chỉ : Phòng 311, 125B, Ngách 33, Ngõ Hòa Bình 7, Minh Khai, Hai Bà Trưng, HN.\r\n- Điện thoại : Kỹ thuật : (+84) 968 799 444 | Kinh doanh : (+84) 968 544 599\r\n- Fanpage : www.fb.com/HA.StructuralSolutions\r\n- Email : Lienhe.HA@gmail.com",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-14T10:28:17.876Z",
          "full_dependency_versions": [ "2017.5.17" ],
          "full_dependency_ids": [
            {
              "name": "HA-StructuralSolutions",
              "_id": "59182acaababfb4f170000d1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.5.17",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-14T10:28:17.876Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 62,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Công ty TNHH Giải Pháp Kết Cấu H.A\r\n- Tư vấn thiết kế | Đào tạo nhân lực | Lập trình ứng dụng xây dựng\r\n- Địa chỉ : Phòng 311, 125B, Ngách 33, Ngõ Hòa Bình 7, Minh Khai, Hai Bà Trưng, HN.\r\n- Điện thoại : Kỹ thuật : (+84) 968 799 444 | Kinh doanh : (+84) 968 544 599\r\n- Fanpage : www.fb.com/HA.StructuralSolutions\r\n- Email : Lienhe.HA@gmail.com",
      "maintainers": [
        {
          "username": "kstheanhdo@gmail.com",
          "_id": "5703cf1f5bee3e21380000e4"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5918934cdcb2b9d27d000004",
      "name": "Bake++",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/0f9e6f11-0ac8-405d-8588-204c49fb914fgregPkg763.zip",
          "contents": "Bake Elements++ - Conversts elements to DSType to avoid deletion when rerunning the graph",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-14T17:26:36.351Z",
          "full_dependency_versions": [ "1.3.0" ],
          "full_dependency_ids": [
            {
              "name": "Bake++",
              "_id": "5918934cdcb2b9d27d000004"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.3.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-14T17:26:36.351Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 27,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "LRCZ",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Turns elements into DSType to avoid deletion when rerunning a graph",
      "maintainers": [
        {
          "username": "taurerm",
          "_id": "55152e015899bb370500000f"
        }
      ],
      "keywords": [ "avoid", "deletion", "of", "elements", "created", "by", "a", "graph", "when", "rerunning", "a", "graph" ],
      "white_list": false
    },
    {
      "_id": "592085a74f57b8e070000041",
      "name": "O2FEM",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/bd7ad059-6509-43e1-b75c-0dcd4d68b3a6gregPkg401.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-05-20T18:16:50.615Z",
          "full_dependency_versions": [ "1.1.0" ],
          "full_dependency_ids": [
            {
              "name": "O2FEM",
              "_id": "592085a74f57b8e070000041"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.0",
          "contains_binaries": true,
          "node_libraries": [ "OOFEMZeroTouch, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-05-20T18:16:50.615Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 15,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "FEA for truss and beam",
      "maintainers": [
        {
          "username": "hgbk2008@gmail.com",
          "_id": "5920833c4f57b8e070000040"
        }
      ],
      "keywords": [ "fea" ],
      "white_list": false
    },
    {
      "_id": "591aa68fdcb2b9d27d00001c",
      "name": "Phoenix",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/ea84e9a5-2388-453f-96ac-cb3e050e71a3gregPkg676.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-21T08:19:38.590Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Phoenix",
              "_id": "591aa68fdcb2b9d27d00001c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": true,
          "node_libraries": [ "Phoenix, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-05-21T08:19:38.59Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 30,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Phoenix",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo Package for Revit /Zerotouch Nodes",
      "maintainers": [
        {
          "username": "fathygad",
          "_id": "58b2baa6f4db78ec0100004b"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "564c67ee662bf0e90800034f",
      "name": "Modelical",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/441b7726-3eef-412b-993c-25a65ce48237gregPkg733.zip",
          "contents": "3D Views by Workset - Makes a new 3D view for each workset in the model, It leaves only one workset visible., Angle Between Vectors - Returns the angle that forms a vector with another reference vector, clockwise and counterclockwise. The vectors are calculated in the XY plane., Apply ViewTemplate - Apply ViewTemplate(s) to selected view(s)., CeilingPlan with ViewTemplate - Create a new ceiling plan based on a level, with a ViewTemplate applied., Change duct_pipe fitting level - Change the level of a pipe/duct fitting(s) to another one, modifying also its offset value., Color By Parameter - Override elements graphics by param value without making view filters. You can also reset them with this node. If a \"Solid fill\" pattern is found, it will be applied., Delete Unused Filters - Delete all unused filters in your project file, Delete Unused ViewTemplates - Delete all unused ViewTemplates in your file, except for 3D view templates, as they cannot be converted to work with Dynamo yet., Disable Analytical Model - Enable or disable the analytical model (True = Disable | False = Enable), Duplicate view with ViewTemplate - Duplicate selected views as many times as View Template names and apply them., FloorPlan with ViewTemplate - Create a new floor plan based on a level, with a ViewTemplate applied., Get Element Rotation - Get the rotation of a family instance whose location is a point., Get Scope Boxes - Get all the Scope Boxes in the project, Get Views By Type - Get all views in the project classified by type, OverrideColorInView Full - Improve the OOTB tool in Dynamo by adding a Fill Pattern option. \"Solid fill\" will be applied by default., Remove Underlay Views - Remove all the underlay views in a project. Works for R16 and below, Room and Tag Location Centering - Move room location point and its tag to its centroid. If centroid is located outside the room, location point stays at its origin coords., Room Location Centering - Move room location point to its centroid. If centroid is located outside the room, location point stays at its origin coords.\r\n\r\nIt's a good tool for auto-tagging., Room Tag To Room Location - Move RoomTags to the location point of the room, Schedules Exporter - Batch export of schedules to CSV files. You can select the schedules with the nodes \"Element Types\">ViewSchedule + \"All Elements of Type\"., Scope Boxes to Views - Create as many dependent view as needed to selected views to apply selected Scope Boxes., Wall Finishes by Room - Place wall finishes with the info contained in room parameters, Wall inserts - Get all the inserts in a wall (windows, doors and openings).",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-23T14:42:53.178Z",
          "full_dependency_versions": [ "1.3.3" ],
          "full_dependency_ids": [
            {
              "name": "Modelical",
              "_id": "564c67ee662bf0e90800034f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.3.3",
          "contains_binaries": true,
          "node_libraries": [ "Package.customization, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-05-23T14:42:53.178Z",
      "num_versions": 16,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 2183,
      "repository_url": "",
      "site_url": "http://blog.modelical.com/modelical-package-for-dynamo/",
      "banned": false,
      "deprecated": false,
      "group": "Modelical",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Reviewed for Dynamo 1.3_Set of tools to improve your productivity. From auto finishes generation to improved documentation. You can find the user guide of each node and examples at blog.modelical.com",
      "maintainers": [
        {
          "username": "FrantxoMOD",
          "_id": "560120e6662bf0e9080001b8"
        }
      ],
      "keywords": [ "views", "templates", "productivity", "walls", "finishes", "documentation", "modelical" ],
      "white_list": false
    },
    {
      "_id": "592454c6583778af0f000015",
      "name": "OT_cam",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/af6becd7-63e8-4bdc-bca6-c3e8e57c5f00gregPkg477.zip",
          "contents": "OT_cam - Nessuna descrizione disponibile",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-23T15:27:02.591Z",
          "full_dependency_versions": [ "0.1.0", "1.2.4" ],
          "full_dependency_ids": [
            {
              "name": "OT_cam",
              "_id": "592454c6583778af0f000015"
            },
            {
              "name": "BIM4Struc.Rebar",
              "_id": "5763be8ce70394822f0000c1"
            }
          ],
          "direct_dependency_versions": [ "1.2.4" ],
          "direct_dependency_ids": [
            {
              "name": "BIM4Struc.Rebar",
              "_id": "5763be8ce70394822f0000c1"
            }
          ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-23T15:27:02.591Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 16,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "OT_cam  is a test",
      "maintainers": [
        {
          "username": "davide.madeddu@oneteam.it",
          "_id": "57d92a9ef615e77258000046"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5924b260583778af0f00001b",
      "name": "SoFresh",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/4e30a167-1966-4e3b-9e8f-9a96b1902b9egregPkg564.zip",
          "contents": "renameFiles - Rename files based on a complete file name string and append a prefix and or suffix. , SortByMultipleKeys - Sort a list of lists by mulitiple keys in the list sublist. Provide a list of indexes that represent the key to sort by. , removeControlCharacters - Use to remove control characters from strings.",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-26T23:26:27.040Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "SoFresh",
              "_id": "5924b260583778af0f00001b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-26T23:26:27.04Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 36,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "random scripts and nodes",
      "maintainers": [
        {
          "username": "Donovan.Wilson@crtkl.com",
          "_id": "5924b144583778af0f00001a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55c0e4e3662bf0e908000076",
      "name": "Simple2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7fd387f9-381f-4807-98af-47db86360eadgregPkg469.zip",
          "contents": "Simple - Simple Desc",
          "engine_metadata": "",
          "engine_version": "0.8.2.2155",
          "created": "2015-08-04T16:14:27.002Z",
          "full_dependency_versions": [ "0.0.5" ],
          "full_dependency_ids": [
            {
              "name": "Simple2",
              "_id": "55c0e4e3662bf0e908000076"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-08-04T16:14:27.002Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Simple2 Desc",
      "maintainers": [
        {
          "username": "Sally-prod-enthu",
          "_id": "54bd83fedcee4dfd2600006c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55478245a8367b9861000063",
      "name": "DOHA M2 ",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/948d8219-d897-4a91-afdd-82e9078fc94agregPkg151.zip",
          "contents": "Corian pearlescent  - devides corian and pearlescent faces, Corian pearlescent fatality - corian pearlescent, Corian plaster Fatality - corian plaster, Corian plaster horizontal  - separates materials in the horizontal case, corian plaster separation M2 - give separation as model curve, Crease 3D - creates creases en surface and gives triming tools, Crease final - gives creases on surface, Crease M2 - Crease M2, CURVE REVERSE - REVERSES CURVE, Division corian plaster - gives joint line between corian and plaster, Downlight Legal intersection - allows structure to deploy, Downlight Ref curves 4 apex - Downlight Ref curves 4 apex, Downlight Ref curves 5 apex - Downlight Ref curves 4 apex, downlight spline - spline from 2d guideline, Full Pearlescent surface - gives full pearlescent face from edges and propper vault, Higher lower point - gives higher and lower points, higherlower point from revit curve - gets higher and lower point of a curve, higherlower point - gets higher and lower point of a curve, Highest n points - gives highest n points of a list , Highest point - gest curve lower point, Highest.lowest points - gives curves highest and lowest points, Inside surface - Gets outside surface from solid face, Light geometry pr - tools for light line construction, Light geometry sec - tools for light lines geometry, light line geometry  fatality - light line geometry , Light lines lower part - gives light lines from pearlescent  solid surface, LIght lines partie basse - gives light lines from solid pearlescent surface , Light lines surfaces - gives surfaces , light lines wireframe - gives light line wireframes, LIght lines - gives light lines from solid pearlescent surface , Line + lenth - Line ans length output, list halfing - gives first half and last half of a list, lower parti light lines - name, lowest n points - gets n points from a list with lowest value fo z, Lowest point - gest curve lower point, M1  EL CL - doiwnlight from edges, M1 downlight 3 - doiwnlight from edges, M1 downlight - doiwnlight from edges, M1 EL PL - doiwnlight from edges, M1 si - doiwnlight from edges, M3 downlight 3 - M3 from edges and M1, M3 downlight - M3 from edges and M1, M3 EL PC - M3 from edges and M1, M3 EL PL - M3 from edges and M1, Normale vers exterieur - donne normale dans le bon sens, Offset upwards - Offsets a surface upwards, Outside surface - Gets outside surface from solid face, Pattern 1 - pattern par points, Pattern scale by pourcentage - scales from 15 to 1.5, Pattern scale - scales patern fro 15 to 1.5, Primary light lines  double height final - name, Primary light lines + Pearlescent solid face partie basse - Gives primary light lines and solid surface, Primary light lines + Pearlescent solid face universel - Gives primary light lines and solid surface, Primary light lines + Pearlescent solid face - Gives primary light lines and solid surface, Primary light lines final - name, Primary lights - gives primary lights and trimmed pearlescent surface, Proper solid vault 2  - other means, Proper solid Vault M3 - Makes proper solid vault from vault edges, Remove first last - removes first and last item of a list, SAT to RFA M3 - SAT to RFA M3, socle - vault socle, Solid vault partie basse - gives lower part of vault, Sort curves - sorts a range of curve by distance, structure downlight - structure from guidelines, triangles - triangles from grid, Vertical edges - gives a surface's vertical edges, XY plane at height - gives a XY plane at a given height",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-09-28T08:11:58.513Z",
          "full_dependency_versions": [ "1.2.0" ],
          "full_dependency_ids": [
            {
              "name": "DOHA M2 ",
              "_id": "55478245a8367b9861000063"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-28T08:11:58.513Z",
      "num_versions": 115,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 505,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "Mourrekh",
          "_id": "55b691de662bf0e90800004b"
        },
        {
          "name": "Doha M3 voutes",
          "_id": "55cb52a2662bf0e9080000a1"
        }
      ],
      "num_dependents": 2,
      "description": "functions for M2 modeling",
      "maintainers": [
        {
          "username": "Mchtoufy",
          "_id": "55478244a8367b9861000062"
        }
      ],
      "keywords": [ "package", "passage", "m2", "plus", "fonctions" ],
      "white_list": false
    },
    {
      "_id": "55e96a69662bf0e908000147",
      "name": "QuickGraph for Dynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/77e679c1-bc12-4056-bd1a-feb52aa7ba3agregPkg145.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.3.2457",
          "created": "2015-09-04T09:54:49.249Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "QuickGraph for Dynamo",
              "_id": "55e96a69662bf0e908000147"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-04T09:54:49.249Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 55,
      "repository_url": "",
      "site_url": "https://quickgraph.codeplex.com/",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "QuickGraph for Dynamo ",
          "_id": "55e96dd8662bf0e908000149"
        }
      ],
      "num_dependents": 1,
      "description": "Library for creating Dynamo Graph using quickgraph in https://quickgraph.codeplex.com/. Provides generic directed/undirected graph datastructures and algorithms for .NET. QuickGraph comes with algorithms such as depth first seach, breath first search, A* search, shortest path, k-such as shortest path. In Dynamo these csharp dlls can be used directly to solve problem related to Shortest Path and other graph related problems.",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": [ "shortest", "path" ],
      "white_list": false
    },
    {
      "_id": "560aaaf1662bf0e908000209",
      "name": "Rudy'sRevit",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4c30aed0-9da3-485f-ada3-ecf4aebf4c98gregPkg345.zip",
          "contents": "ElementTypesMatchList - Duplicates an element type",
          "engine_metadata": "",
          "engine_version": "0.8.1.1823",
          "created": "2015-09-29T15:14:57.109Z",
          "full_dependency_versions": [ "0.0.1", "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "Rudy'sRevit",
              "_id": "560aaaf1662bf0e908000209"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "direct_dependency_versions": [ "0.1.5" ],
          "direct_dependency_ids": [
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-29T15:14:57.109Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 167,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "RevitNodesByEricRudisaile",
      "maintainers": [
        {
          "username": "Wynged74",
          "_id": "5609a750662bf0e9080001fc"
        }
      ],
      "keywords": [ "first", "node", "added", "to", "package" ],
      "white_list": false
    },
    {
      "_id": "5613e991662bf0e908000235",
      "name": "Illumyno",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/24626bdc-89a8-4cd9-8e4c-02f8b3f62f6dgregPkg524.zip",
          "contents": "CreateEvaluationPoints - Creates Points to Evaluate Illumination, DiffWindowsFromWall - Returns the wall with removed window surfaces",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-10-15T15:00:56.164Z",
          "full_dependency_versions": [ "0.2.0" ],
          "full_dependency_ids": [
            {
              "name": "Illumyno",
              "_id": "5613e991662bf0e908000235"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-15T15:00:56.164Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 104,
      "repository_url": "https://github.com/redinkinc/Illumyno.git",
      "site_url": "www.redinkinc.de",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "GNU general public licence v3.0",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Some basic RADIANCE functionalities. RADIANCE Version 4 or higher needed. The radiance/bin folder must be added to the windows environment variables.",
      "maintainers": [
        {
          "username": "fabian.ritter@tum.de",
          "_id": "5474bb55b77c84600c000047"
        }
      ],
      "keywords": [ "radiance", "daylighting" ],
      "white_list": false
    },
    {
      "_id": "562b24f6662bf0e908000295",
      "name": "Jthwax",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/22046da8-5a0b-4d7a-95ad-fab0e1de613egregPkg624.zip",
          "contents": "Wall - 建立牆",
          "engine_metadata": "",
          "engine_version": "0.7.4.3245",
          "created": "2015-10-24T06:28:06.299Z",
          "full_dependency_versions": [ "2015.10.1" ],
          "full_dependency_ids": [
            {
              "name": "Jthwax",
              "_id": "562b24f6662bf0e908000295"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2015.10.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-10-24T06:28:06.299Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 16,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "JTHWAX",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "-----自行建立工具包-----",
      "maintainers": [
        {
          "username": "AD8080202",
          "_id": "562b24f4662bf0e908000294"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5647434f662bf0e908000333",
      "name": "Prorubim Grids Renumbering",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/b9e2912f-3aba-4846-a89a-ba04eefc74e9gregPkg651.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-11-14T14:21:03.514Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Prorubim Grids Renumbering",
              "_id": "5647434f662bf0e908000333"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-11-14T14:21:03.514Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 503,
      "repository_url": "",
      "site_url": "http://tools.prorubim.com/en/",
      "banned": false,
      "deprecated": false,
      "group": "Prorubim",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Node set for automatic division grid lines on horisontal and vertical and renumber its in association with grid line names, prefix and postfix",
      "maintainers": [
        {
          "username": "alexey.lobanov",
          "_id": "546cdebcb77c84600c00001c"
        }
      ],
      "keywords": [ "grid", "renumber" ],
      "white_list": false
    },
    {
      "_id": "564947cf662bf0e908000339",
      "name": "DynaMaya Install",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/fb0201f0-576f-4cb9-9290-9762314e7462gregPkg545.zip",
          "contents": "DynaMaya Installer - Download this for info on how to install DynaMaya",
          "engine_metadata": "",
          "engine_version": "0.8.0.1233",
          "created": "2015-11-16T03:04:47.364Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "DynaMaya Install",
              "_id": "564947cf662bf0e908000339"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-11-16T03:04:47.364Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 34,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "(DO NOT INSTALL THIS PACKAGE!) TO  INSTALL DYNAMAYA GO TO http://dynamaya.cerver.org.   ",
      "maintainers": [
        {
          "username": "cerver",
          "_id": "56494509662bf0e908000338"
        }
      ],
      "keywords": [ "dynamaya", "maya" ],
      "white_list": false
    },
    {
      "_id": "564b7db4662bf0e908000349",
      "name": "Revit Slab Division",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0485e05f-9985-477d-a867-9677c09711cfgregPkg369.zip",
          "contents": "Slab Division - The Slab Division custom node explores Revit slab subdivison methods for construction applications.  This node is intended as a general purpose tool that allows users to further customize results after the initial pass helping to expedite an otherwise manual and tedious process.  Divisions are calculated by grids, columns, and expansion joints.",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2015-11-19T22:28:31.873Z",
          "full_dependency_versions": [ "0.6.0" ],
          "full_dependency_ids": [
            {
              "name": "Revit Slab Division",
              "_id": "564b7db4662bf0e908000349"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.6.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-11-19T22:28:31.873Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 67,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Depreciated See \"Revit Slab Subdivision\"",
      "maintainers": [
        {
          "username": "keith.alfaro@mail.citytech.cuny.edu",
          "_id": "564b7546662bf0e908000348"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "566076da0370b0a907000048",
      "name": "BluPrint Nodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0175a10a-60b8-4e8d-ac57-bbf1117e40c5gregPkg985.zip",
          "contents": "BPCustomHome - Create a Custom Home from linework. To Start, Draw Lines on Foundation Plan.",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-12-03T17:41:03.016Z",
          "full_dependency_versions": [ "0.4.1" ],
          "full_dependency_ids": [
            {
              "name": "BluPrint Nodes",
              "_id": "566076da0370b0a907000048"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.4.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-03T17:41:03.016Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 151,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Custom Node Suite for Residential Homes",
      "maintainers": [
        {
          "username": "ddixon@kirkorarchitects.com",
          "_id": "5660767a0370b0a907000047"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5449ac30cc26bfdc5a0000e9",
      "name": "DynaWorks15",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c9169495-e0bc-414d-b53c-3e73d65a5b9dgregPkg698.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.3335",
          "created": "2015-12-07T07:25:48.508Z",
          "full_dependency_versions": [ "1.2.0" ],
          "full_dependency_ids": [
            {
              "name": "DynaWorks15",
              "_id": "5449ac30cc26bfdc5a0000e9"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-07T07:25:48.508Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1412,
      "repository_url": "https://github.com/Gytaco/DynaWorks",
      "site_url": "http://stuffandbims.blogspot.com/2014/10/dynaworks-is-here-navisworks-library.html",
      "banned": false,
      "deprecated": false,
      "group": "Bad Monkey",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        }
      ],
      "num_dependents": 1,
      "description": "Dynamo Library for Navisworks",
      "maintainers": [
        {
          "username": "Gytaco",
          "_id": "542d2401cc26bfdc5a00003e"
        }
      ],
      "keywords": [ "navisworks", "dynaworks", "clashes" ],
      "white_list": false
    },
    {
      "_id": "566909735c568ad00c000010",
      "name": "T-DEX 0.9.0 Rvt2016",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/85093c59-56fb-4092-9dbb-b894389e84fegregPkg698.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-12-14T00:26:24.362Z",
          "full_dependency_versions": [ "2015.12.11" ],
          "full_dependency_ids": [
            {
              "name": "T-DEX 0.9.0 Rvt2016",
              "_id": "566909735c568ad00c000010"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2015.12.11",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-14T00:26:24.362Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 95,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "TDEX",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo Extensions from Taisei Corp.\r\nIncludes Id to Element, Interference Report information extractor, Sum List by Range, Point is Inside Loop, Bridging node, etc...",
      "maintainers": [
        {
          "username": "hps_anave",
          "_id": "55503951a8367b986100008e"
        }
      ],
      "keywords": [ "x", "o", "id", "element", "interference", "report", "extractor", "sum", "list", "range", "point", "inside", "loop" ],
      "white_list": false
    },
    {
      "_id": "56358835662bf0e9080002d0",
      "name": "Des+Fab",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0a0a6ae3-61c1-4440-a618-8aac90c645ebgregPkg332.zip",
          "contents": "Surface.CleanbyTrim - Cleans a surface with bad edge by trimming a off a little bit at the edge, Surface.Frycut.Axis - The axis of a surface by which it will later but cut with the Frycut., Surface.FrycutbyAxis - Frycuts a surface using an axis",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-12-16T07:20:08.144Z",
          "full_dependency_versions": [ "2015.12.162", "2015.11.28" ],
          "full_dependency_ids": [
            {
              "name": "Des+Fab",
              "_id": "56358835662bf0e9080002d0"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "2015.11.28" ],
          "direct_dependency_ids": [
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "2015.12.162",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-16T07:20:08.144Z",
      "num_versions": 9,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 19,
      "repository_url": "",
      "site_url": "desnfab.com",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A collection of custom nodes I use in my graphs regularly which help speed up my process or just to make my life easier.\r\n\r\n**Dependant on LunchBox 2015.11.28",
      "maintainers": [
        {
          "username": "LuebkerJ",
          "_id": "56358520662bf0e9080002cf"
        }
      ],
      "keywords": [ "subcategory" ],
      "white_list": false
    },
    {
      "_id": "5676b36f5c568ad00c000048",
      "name": "Brunell",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/bc4d7a9e-29a9-461a-bb63-4520458017e1gregPkg619.zip",
          "contents": "Building Automation ver01 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2015-12-20T15:02:51.578Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "Brunell",
              "_id": "5676b36f5c568ad00c000048"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-12-20T15:02:51.578Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 70,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "DIGBrunell",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Prototype of Design automation project\r\nMade by Elroy Kim, SA Kim, DJ Jang, JH Jung in SKKU Design Informatics Group",
      "maintainers": [
        {
          "username": "rlawlsdnd412@gmail.com",
          "_id": "5673a1565c568ad00c000042"
        }
      ],
      "keywords": [ "automation", "bim", "design" ],
      "white_list": false
    },
    {
      "_id": "568e5cf15c568ad00c000098",
      "name": "QRCoder 0.9.0",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/79744867-0082-4b6d-9bee-727366023180gregPkg388.zip",
          "contents": "QR.ECClevel - Selects QR-code error correction level, QRCode - Creates a simple QR code based on strings. Accepts single items or lists",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-01-15T19:25:40.686Z",
          "full_dependency_versions": [ "2016.1.15" ],
          "full_dependency_ids": [
            {
              "name": "QRCoder 0.9.0",
              "_id": "568e5cf15c568ad00c000098"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.1.15",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-15T19:25:40.686Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 292,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Dynamite and Ammo",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Package that contains nodes for creating simple QR-codes based on string input. \r\nUpdate 2016.1.15 Error correction level now adjustable by using QR.ECClevel node (Credit to Dimitar Venkov for Ironpython Windows Forms)\r\nUpdate 2016.1.9 : Now in Technicolor.\r\n\r\nBased on the QRCoder project here: https://github.com/codebude/QRCoder\r\nThe QRCoder project is licensed under the MIT license.",
      "maintainers": [
        {
          "username": "josteinolsen7513",
          "_id": "53edcf720e5572016a00018f"
        }
      ],
      "keywords": [ "qr" ],
      "white_list": false
    },
    {
      "_id": "569f74d0c6d90c553d000031",
      "name": "Point.ProjectOnLine",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5aae8b8d-b44f-4656-9578-f772e9a08f17gregPkg998.zip",
          "contents": "Point.ProjectOnLine - Projects a point on a line",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-01-20T11:51:44.175Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Point.ProjectOnLine",
              "_id": "569f74d0c6d90c553d000031"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-20T11:51:44.175Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 62,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Projects a point on a line.",
      "maintainers": [
        {
          "username": "mgo@damgaard-ri.dk",
          "_id": "5532699ca8367b9861000007"
        }
      ],
      "keywords": [ "point;", "line;", "geometry;", "projection;", "vector" ],
      "white_list": false
    },
    {
      "_id": "569fd9bbc3e9ee4a08000006",
      "name": "Excel Sum String",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/77655b18-071c-4ddb-b2c5-9c9c6899f79fgregPkg944.zip",
          "contents": "Excel Sum String - Combine strings to make Sum equation",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-01-20T19:12:28.730Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Excel Sum String",
              "_id": "569fd9bbc3e9ee4a08000006"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-20T19:12:28.73Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 209,
      "repository_url": "",
      "site_url": "http://truevis.com",
      "banned": false,
      "deprecated": false,
      "group": "truevis",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Combine Column Letter, Start, and Stop to make Sum equation for Excel",
      "maintainers": [
        {
          "username": "truevis",
          "_id": "569fd8c3c3e9ee4a08000005"
        }
      ],
      "keywords": [ "excel", "sum" ],
      "white_list": false
    },
    {
      "_id": "56a27b75c3e9ee4a0800001b",
      "name": "Breakslabs with model lines",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3b05652f-1aee-4615-9dab-03ca94050625gregPkg37.zip",
          "contents": "Break.Slabs.at.Modellines - Break.Slabs.at.Modellines",
          "engine_metadata": "",
          "engine_version": "1.0.0.123",
          "created": "2016-01-22T18:56:53.855Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Breakslabs with model lines",
              "_id": "56a27b75c3e9ee4a0800001b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-22T18:56:53.855Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 137,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This custom node breaks up an existing slab into new slabs based on model line locations",
      "maintainers": [
        {
          "username": "msgambelluri",
          "_id": "54b3295bdcee4dfd26000042"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56a6489fc3e9ee4a08000028",
      "name": "List.Append",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/727ff56d-4087-4572-af14-036bf8d02d8fgregPkg587.zip",
          "contents": "List.Append - Add a list to the end of a list",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-01-25T16:09:03.163Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "List.Append",
              "_id": "56a6489fc3e9ee4a08000028"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-25T16:09:03.163Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 60,
      "repository_url": "",
      "site_url": "http://truevis.com",
      "banned": false,
      "deprecated": false,
      "group": "truevis",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Add list2 to to the end of list1",
      "maintainers": [
        {
          "username": "truevis",
          "_id": "569fd8c3c3e9ee4a08000005"
        }
      ],
      "keywords": [ "list", "insert", "append", "last" ],
      "white_list": false
    },
    {
      "_id": "56aa580ac3e9ee4a08000056",
      "name": "AU 2015 BIM Workshop Files",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6fa7c0d0-e979-4726-bb40-273d3fa81ff5gregPkg473.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.264",
          "created": "2016-01-28T18:03:54.823Z",
          "full_dependency_versions": [ "2015.12.1" ],
          "full_dependency_ids": [
            {
              "name": "AU 2015 BIM Workshop Files",
              "_id": "56aa580ac3e9ee4a08000056"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2015.12.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-28T18:03:54.823Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 362,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Workshop files for the 2015 Autodesk University Computational BIM Workshop.  Instructors Andreas Deickmann, Brian Ringley, Nate Miller, Marcello Sgambelluri, Zach Kron, Colin McCrone.",
      "maintainers": [
        {
          "username": "DynamoTeam",
          "_id": "556e21d1888bb8ca03000008"
        }
      ],
      "keywords": [ "data", "dataset", "tutorial", "example", "autodesk", "university" ],
      "white_list": false
    },
    {
      "_id": "56aa8821c3e9ee4a0800005f",
      "name": "Get Levels and Grids",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/bdb55e44-6a9d-4690-9190-bc6b94869bcdgregPkg587.zip",
          "contents": "Get Levels and Grids - Pulls levels and grids from Revit model.\r\nOutputs list:\r\n[0] Levels\r\n   [0] Level Name   # As a string\r\n   [1] Point(X,Y,Z)    # Where Z = elevation\r\n[0] Grids\r\n   [0] Grid Name # As a string\r\n   [1] Curve          # Representing Grid Line",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-01-28T21:29:05.636Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Get Levels and Grids",
              "_id": "56aa8821c3e9ee4a0800005f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-01-28T21:29:05.636Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 171,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Revit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Pulls levels and grids from Revit model.\r\nOutputs list:\r\n[0] Levels\r\n   [0] Level Name   # As a string\r\n   [1] Point(X,Y,Z)    # Where Z = elevation\r\n[0] Grids\r\n   [0] Grid Name # As a string\r\n   [1] Curve          # Representing Grid Line",
      "maintainers": [
        {
          "username": "gtalarico",
          "_id": "56aa7b39c3e9ee4a0800005b"
        }
      ],
      "keywords": [ "level", "levels", "grid", "grids" ],
      "white_list": false
    },
    {
      "_id": "56b06abdc3e9ee4a0800007c",
      "name": "LineGrid",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/45d6dc4e-6d4f-4d70-a8b7-2da34d10de52gregPkg514.zip",
          "contents": "lineGrid - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3966",
          "created": "2016-02-02T08:37:17.311Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "LineGrid",
              "_id": "56b06abdc3e9ee4a0800007c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-02T08:37:17.311Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 26,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "To test upload of a package",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b07634c3e9ee4a0800007e",
      "name": "grid_Test",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6f9afef3-39ea-4121-8017-1a9e7089ac80gregPkg582.zip",
          "contents": "lineGrid - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.2983",
          "created": "2016-02-02T09:26:12.133Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "grid_Test",
              "_id": "56b07634c3e9ee4a0800007e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-02T09:26:12.133Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 7,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing upload of pacakge",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b08358c3e9ee4a08000088",
      "name": "surfwave",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e777cafe-de39-43f4-a06f-d492102e2265gregPkg752.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3965",
          "created": "2016-02-02T10:22:16.919Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "surfwave",
              "_id": "56b08358c3e9ee4a08000088"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-02T10:22:16.919Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing upload of package",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b0911dc3e9ee4a0800008d",
      "name": "testSurf",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/65a6a626-ea45-42d3-9c92-67794e8939aegregPkg476.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.3843",
          "created": "2016-02-02T11:21:01.856Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "testSurf",
              "_id": "56b0911dc3e9ee4a0800008d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-02T11:21:01.856Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 7,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing package",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b2eb90c3e9ee4a080000a3",
      "name": "surfws",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/aef22bcf-c57e-4c81-8dd2-0f2c890cf48fgregPkg3.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.336",
          "created": "2016-02-04T06:11:28.003Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "surfws",
              "_id": "56b2eb90c3e9ee4a080000a3"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-04T06:11:28.003Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "upgrade package",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56b37773c3e9ee4a080000b0",
      "name": "Maher Elkhaldi",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/accae26f-ba35-48b0-bcd1-7bc2fee5091bgregPkg65.zip",
          "contents": "GridShifter0.1 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.8.0.1233",
          "created": "2016-02-04T16:08:19.896Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Maher Elkhaldi",
              "_id": "56b37773c3e9ee4a080000b0"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-04T16:08:19.896Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 50,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Geometry.Point",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a point grid, and provides means to shift its rows and columns by defining steps (pick every nth row/column), and distances.",
      "maintainers": [
        {
          "username": "melkhaldi",
          "_id": "55727871f2ae5a9a07000027"
        }
      ],
      "keywords": [ "gridshifter" ],
      "white_list": false
    },
    {
      "_id": "56b3794ec3e9ee4a080000b2",
      "name": "GridShift",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/41ae9ea2-028d-41c7-986b-124042cf44fegregPkg792.zip",
          "contents": "GridShifter - No description provided",
          "engine_metadata": "",
          "engine_version": "0.8.0.1233",
          "created": "2016-02-04T16:16:14.406Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "GridShift",
              "_id": "56b3794ec3e9ee4a080000b2"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-04T16:16:14.406Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 79,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Geometry.Point",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates a point grid",
      "maintainers": [
        {
          "username": "melkhaldi",
          "_id": "55727871f2ae5a9a07000027"
        }
      ],
      "keywords": [ "point", "grid", "shift" ],
      "white_list": false
    },
    {
      "_id": "568e061f5c568ad00c000094",
      "name": "Rutabaga for Dynamo 0.9.0 Revit 2016",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4260eeef-0018-4395-94d2-ac7c3c1bd6aegregPkg426.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-02-09T07:41:45.589Z",
          "full_dependency_versions": [ "2016.2.9" ],
          "full_dependency_ids": [
            {
              "name": "Rutabaga for Dynamo 0.9.0 Revit 2016",
              "_id": "568e061f5c568ad00c000094"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.2.9",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-09T07:41:45.589Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 236,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "***UPDATE 2016/02/09: Added seven more nodes.***\r\n**ATTENTION: Runs best on Revit 2016 with Dynamo 0.9.0**\r\n\r\nVarious tools for linked model retrieval, Interference Report file data retrieval, Element retrieval from Id and UniqueId, sum list by range, etc.\r\n\r\n***update: added new nodes:\r\nX.Valve : Bridging node with a boolean gate input that controls the flow of values to the output. Recommended for large Dynamo projects.\r\nPoints.Rectangular/ModCylindrical: Converts a point in a rectangular coordinate system to a modified cylindrical coordinate system (radius, arc length, z) and vice versa.\r\nVectors.TurnLeft/TurnRight: Turns a vector to left or right given normal vectors.\r\n \r\nFor bug reports mail to hsavc@msn.com \r\n\r\n**formerly T-DEX\r\n\r\ndeveloped at Taisei Corporation",
      "maintainers": [
        {
          "username": "hps_anave",
          "_id": "55503951a8367b986100008e"
        }
      ],
      "keywords": [ "vector", "turn", "left", "right", "valve", "cartesian", "rectangular", "coordinate", "cylindrical", "link", "model", "element", "id", "uniqueid", "x", "o", "document", "documents", "interference", "report", "file", "sum", "list", "by", "range" ],
      "white_list": false
    },
    {
      "_id": "56ba1815c3e9ee4a080000d1",
      "name": "Trimble.Export",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/cfacfe17-1731-4311-b5a1-0341a123e9e6gregPkg556.zip",
          "contents": "TrimbleExport - Trimble Point Export",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-02-10T08:44:58.670Z",
          "full_dependency_versions": [ "16.2.10" ],
          "full_dependency_ids": [
            {
              "name": "Trimble.Export",
              "_id": "56ba1815c3e9ee4a080000d1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "16.2.10",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-10T08:44:58.67Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 50,
      "repository_url": "https://github.com/natethegrate1/MEPTools/blob/master/TrimbleExport.dyf",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "MEP tools",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Trimble Point Export",
      "maintainers": [
        {
          "username": "natethegrate1@gmail.com",
          "_id": "56ba14e0c3e9ee4a080000d0"
        }
      ],
      "keywords": [ "trimble", "total", "station", "export" ],
      "white_list": false
    },
    {
      "_id": "56bb8f8ec3e9ee4a080000e4",
      "name": "Silman Custom Nodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/07881cb5-8987-4422-9b31-8beef4ccc1e6gregPkg663.zip",
          "contents": "Preview Grids in 3D - Allows for viewing of grids in a 3D View in Revit",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-02-10T21:07:07.453Z",
          "full_dependency_versions": [ "0.0.3", "0.1.1", "2015.11.28" ],
          "full_dependency_ids": [
            {
              "name": "Silman Custom Nodes",
              "_id": "56bb8f8ec3e9ee4a080000e4"
            },
            {
              "name": "Dynamo Text",
              "_id": "54205c0ccc26bfdc5a000022"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "0.1.1", "2015.11.28" ],
          "direct_dependency_ids": [
            {
              "name": "Dynamo Text",
              "_id": "54205c0ccc26bfdc5a000022"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-10T21:07:07.453Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 7,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Silman Nodes",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Custom Nodes for Internal Silman Use",
      "maintainers": [
        {
          "username": "hazell@silman.com",
          "_id": "56bb8e0fc3e9ee4a080000e1"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56c39085c3e9ee4a08000107",
      "name": "Atmos.ElementIsolateByHostLevel",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/495e71a5-88bd-4064-8b49-625766e2657bgregPkg569.zip",
          "contents": "Atmos.ElementIsolateByHostLevel - This definition will group Elements of the 'Room', 'Wall', 'Floor', 'Ceiling' and 'Roof' categories hosted to a chosen level. You can choose to Isolate, Colour or Reset the colour override on aforementioned Elements. ",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-02-16T21:11:33.103Z",
          "full_dependency_versions": [ "0.1.1", "82.2.1", "0.75.47" ],
          "full_dependency_ids": [
            {
              "name": "Atmos.ElementIsolateByHostLevel",
              "_id": "56c39085c3e9ee4a08000107"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "direct_dependency_versions": [ "82.2.1", "0.75.47" ],
          "direct_dependency_ids": [
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-16T21:11:33.103Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 125,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Atmos",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This definition will group Elements of the 'Room', 'Wall', 'Floor', 'Ceiling' and 'Roof' categories hosted to a chosen level. You can choose to Isolate, Colour or Reset the colour override on aforementioned Elements. ",
      "maintainers": [
        {
          "username": "solamour",
          "_id": "55916d4bf2ae5a9a070000f1"
        }
      ],
      "keywords": [ "isolate", "element", "level", "host" ],
      "white_list": false
    },
    {
      "_id": "56c5e687c3e9ee4a08000119",
      "name": "Level.CreateWithSelctionSet",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/78499e55-8431-467e-84fc-6e94a668ca7fgregPkg611.zip",
          "contents": "Level.CreateWithSelectionSet - Creates Levels by (StartLevel,Count, Elevations) and creates a Revit Selection Set for Levels",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-02-18T15:43:03.075Z",
          "full_dependency_versions": [ "0.0.1", "0.1.5", "0.0.1", "0.75.21" ],
          "full_dependency_ids": [
            {
              "name": "Level.CreateWithSelctionSet",
              "_id": "56c5e687c3e9ee4a08000119"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "List.RemoveFirstLast",
              "_id": "55e8bbf0662bf0e908000140"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "direct_dependency_versions": [ "0.75.21", "0.1.5", "0.0.1" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            },
            {
              "name": "Turn Into List",
              "_id": "522cc70f4b31fa536a000014"
            },
            {
              "name": "List.RemoveFirstLast",
              "_id": "55e8bbf0662bf0e908000140"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-18T15:43:03.075Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 74,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates Levels by (StartLevel,Sotries,Elevations) into a Revit Selection Set used to extend levels by a scopebox inorder for them to become visible",
      "maintainers": [
        {
          "username": "jsando",
          "_id": "55e8bb77662bf0e90800013f"
        }
      ],
      "keywords": [ "level", "level", "create" ],
      "white_list": false
    },
    {
      "_id": "56c62f74c3e9ee4a0800011c",
      "name": "Curve Based Truss",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/e0451e51-853a-4999-bfd5-f2673efb63b2gregPkg945.zip",
          "contents": "Curve Based Truss - A truss defined by two curves.",
          "engine_metadata": "",
          "engine_version": "1.0.0.486",
          "created": "2016-02-18T20:54:12.809Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Curve Based Truss",
              "_id": "56c62f74c3e9ee4a0800011c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-18T20:54:12.809Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 147,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Fractal",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A truss defined by a top curve and a bottom curve.",
      "maintainers": [
        {
          "username": "ian.keough@autodesk.com",
          "_id": "528558ee3f7315936f00005d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56ca6d70c3e9ee4a08000128",
      "name": "Rutabaga for Dynamo 0.9.1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1d1abe81-4299-42d7-89be-d4b584cda867gregPkg420.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-02-22T02:07:44.026Z",
          "full_dependency_versions": [ "2016.2.22" ],
          "full_dependency_ids": [
            {
              "name": "Rutabaga for Dynamo 0.9.1",
              "_id": "56ca6d70c3e9ee4a08000128"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.2.22",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-22T02:07:44.026Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 303,
      "repository_url": "",
      "site_url": "https://mathcadbimthingy.wordpress.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "**ATTENTION: Runs best on Revit 2016 with Dynamo 0.9.1**\r\n\r\nVarious tools for linked model retrieval, Interference Report file data retrieval, Element retrieval from Id and UniqueId, sum list by range, etc.\r\n\r\n***update 2016/2/22: added new nodes:\r\nPoints.Rectangular/ModCylindrical: Converts a point in a rectangular coordinate system to a modified cylindrical coordinate system (radius, arc length, z) and vice versa. Details on my blog.\r\nVectors.TurnLeft/TurnRight: Turns a vector to left or right given normal vectors.\r\nVectors.AngleBetween: A derived version of its Dynamo counterpart wherein angle is computed from a base vector and is measured counterclockwise to the other vector. It also returns degree and radians values.\r\n \r\nFor bug reports mail to hsavc@msn.com \r\n\r\nblog: https://matchadbimthingy.wordpress.com\r\n\r\n**formerly T-DEX\r\n\r\ndeveloped at Taisei Corporation",
      "maintainers": [
        {
          "username": "hps_anave",
          "_id": "55503951a8367b986100008e"
        }
      ],
      "keywords": [ "vector", "turn", "left", "right", "id", "elementid", "uniqueid", "interference", "x", "o", "valve", "linked", "documents", "external", "file", "path", "sum", "list", "range", "break", "numbers" ],
      "white_list": false
    },
    {
      "_id": "56c5d474c3e9ee4a08000115",
      "name": "BIMvf",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d9f39b99-e2ed-4767-80a2-853662d3fff7gregPkg17.zip",
          "contents": "list a sous-liste - list a sous-liste, Filtre par valeur  - Filtre par valeur , Filtrer elements par valeur de parametre - Filtrer elements par valeur de parametre, Filtrer liste par valeur - Filtrer liste par valeur, list a sous-liste - list a sous-liste, Liste Bool tri par valeur - Liste Bool tri par valeur, Une occurence par element - Extrait une liste avec une seule occurence par element , repetition elements par longueur de sous-listes - repetition elements par longueur de sous-listes",
          "engine_metadata": "",
          "engine_version": "0.9.1.3067",
          "created": "2016-02-24T15:07:00.190Z",
          "full_dependency_versions": [ "0.0.6" ],
          "full_dependency_ids": [
            {
              "name": "BIMvf",
              "_id": "56c5d474c3e9ee4a08000115"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-24T15:07:00.19Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 70,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "noeuds pour le bim et la gestion de donnees ",
      "maintainers": [
        {
          "username": "Mchtoufy",
          "_id": "55478244a8367b9861000062"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56cf2a2dc3e9ee4a08000154",
      "name": "test_package",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0e418949-5bec-4d92-b240-aee2e82bb71agregPkg326.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.551",
          "created": "2016-02-25T16:22:05.008Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "test_package",
              "_id": "56cf2a2dc3e9ee4a08000154"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-25T16:22:05.008Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "test description",
      "maintainers": [
        {
          "username": "t_syvns",
          "_id": "560bcc81662bf0e908000210"
        }
      ],
      "keywords": [ "test" ],
      "white_list": false
    },
    {
      "_id": "56cf2bf3c3e9ee4a08000156",
      "name": "DEU_test_package",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9b3de554-78bf-4cac-a9d2-508fd71fc789gregPkg550.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.551",
          "created": "2016-02-25T16:29:39.869Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "DEU_test_package",
              "_id": "56cf2bf3c3e9ee4a08000156"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-25T16:29:39.869Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 18,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "test_to_upload",
      "maintainers": [
        {
          "username": "t_syvns",
          "_id": "560bcc81662bf0e908000210"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56d434c4c3e9ee4a08000167",
      "name": "new node for DEU",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/01871ece-ff82-4f3d-8a2c-f8895bec1520gregPkg481.zip",
          "contents": "new node - new node",
          "engine_metadata": "",
          "engine_version": "1.0.0.551",
          "created": "2016-02-29T12:08:36.493Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "new node for DEU",
              "_id": "56d434c4c3e9ee4a08000167"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-02-29T12:08:36.493Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 25,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "new node DEU",
      "maintainers": [
        {
          "username": "t_syvns",
          "_id": "560bcc81662bf0e908000210"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56d5c30c5bee3e2138000004",
      "name": "StructuralFraming.DisallowJoins",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6a25e273-6d10-4923-b5bf-7a4710e9e78fgregPkg80.zip",
          "contents": "StructuralFraming.DisallowJoins - Structural Framing elements are set to dissalow Join on both ends.\r\n\r\nThe code ignores anything but structural framing.\r\nInput may be a singel item or a list of items",
          "engine_metadata": "",
          "engine_version": "0.9.1.3351",
          "created": "2016-03-01T16:27:56.882Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "StructuralFraming.DisallowJoins",
              "_id": "56d5c30c5bee3e2138000004"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-01T16:27:56.882Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 307,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "ABT",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Set both ends of structural framing to disallow join.\r\nThe node takes elements as input, it ignores anything that isnt Structural Framing.\r\nInput can be a singel item or a list of items.\r\nOutput are the changed elements",
      "maintainers": [
        {
          "username": "MartinB2",
          "_id": "54ec7ab5dcee4dfd26000113"
        }
      ],
      "keywords": [ "structural", "framing", "disallow", "join" ],
      "white_list": false
    },
    {
      "_id": "56d8d3225bee3e2138000018",
      "name": "ASK Right of Strings",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/87dfd9cc-207c-4628-87f6-01ba64d91a0cgregPkg515.zip",
          "contents": "String.Right - Get a specified Number of characters from the right side of a string(s) at Position.",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-03-04T08:12:14.114Z",
          "full_dependency_versions": [ "1.1.3" ],
          "full_dependency_ids": [
            {
              "name": "ASK Right of Strings",
              "_id": "56d8d3225bee3e2138000018"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-04T08:12:14.114Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 42,
      "repository_url": "",
      "site_url": "http://askansulting.com",
      "banned": false,
      "deprecated": false,
      "group": "ASK",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Get a specified Number of characters from the right side of a string(s) at Position.",
      "maintainers": [
        {
          "username": "aleksandr.sett",
          "_id": "56d8d11b5bee3e2138000017"
        }
      ],
      "keywords": [ "string", "right" ],
      "white_list": false
    },
    {
      "_id": "56e8057b5bee3e213800005f",
      "name": "Simple STL",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/cb84df67-9e79-4783-96aa-d76a33c1e936gregPkg999.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.492",
          "created": "2016-03-15T12:52:11.047Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Simple STL",
              "_id": "56e8057b5bee3e213800005f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-15T12:52:11.047Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 89,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A utility for loading STL building shells from ASCII and slicing to determine floor outlines.",
      "maintainers": [
        {
          "username": "colin.day@autodesk.com",
          "_id": "56e736805bee3e2138000059"
        }
      ],
      "keywords": [ "stl", "outline" ],
      "white_list": false
    },
    {
      "_id": "56ea645b5bee3e213800006f",
      "name": "MapToSurfaceTesting",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5c7facde-ab27-46cc-8fbe-df40dad2ebe0gregPkg667.zip",
          "contents": "NurbsCrvToSurface - Map Nurbs Curves from Source Surface to Target Surface, OffsetPointsToSurface - Map Points from Source Surface to Target Surface, offset from surface normals, PointsToSurface - Map Points from Source Surface to Target Surface, PolygonsToSurface - Map Polygons from Source Surface to Target Surface, SampleSrf - Just a sample surface for testing map operations",
          "engine_metadata": "",
          "engine_version": "0.9.2.4392",
          "created": "2016-03-17T08:01:31.022Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "MapToSurfaceTesting",
              "_id": "56ea645b5bee3e213800006f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-17T08:01:31.022Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 16,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "DynamoPrimer",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Testing publish online functionality",
      "maintainers": [
        {
          "username": "DynamoTeam",
          "_id": "556e21d1888bb8ca03000008"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56eb7c935bee3e2138000074",
      "name": "package01",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1839db04-731c-4600-ac54-b5ee9aa9ba94gregPkg842.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.2.4416",
          "created": "2016-03-18T03:57:07.661Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "package01",
              "_id": "56eb7c935bee3e2138000074"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-18T03:57:07.661Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 37,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing publishing of pakcages ",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56efcb975bee3e213800007b",
      "name": "test01",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/8caf526d-7b34-46e3-8d4b-1383f35e95bfgregPkg808.zip",
          "contents": "pubtest - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.2.4452",
          "created": "2016-03-21T10:23:19.646Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "test01",
              "_id": "56efcb975bee3e213800007b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-21T10:23:19.646Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "test pacakge upload",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56efd1cf5bee3e213800007d",
      "name": "test02",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/ac3ca53b-6637-4f16-9598-d27b11d20498gregPkg401.zip",
          "contents": "test02 - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.2.4452",
          "created": "2016-03-21T10:49:51.304Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "test02",
              "_id": "56efd1cf5bee3e213800007d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-21T10:49:51.304Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "test publish node ",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "562f323c662bf0e9080002a5",
      "name": "Clockwork for Dynamo 0.8.2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3911cf35-5694-436f-8830-019d48940caagregPkg616.zip",
          "contents": "+1 - Increments a value by 1, -1 - Decrements a value by 1, All Elements of Family Type (Universal) - Unlike the built-in  node, this node retrieves all placed instances of a given loadable *or* system family type, All Families Of Category - Gets all famiies of a given category in the model  (does *not *work for system families), All Family Types Of Category - Gets all family types/symbols of a given category in the model  (does *not *work for system families), All Intersecting Elements Of Category - Finds all elements of a specified category that intersect with a list of vectors, All Placed Family Types of Category - Retrieves all family types of a given category that have *placed* instances, All View-Dependent Family Instances Of Category - Gets all view-dependent family instances in a given view for a given list of categories - useful for finding annotation elements, Angle.ByAngleSum - Computes the missing interior angle of a *planar* polygon based on a given list of all other interior angles. , Angle.ByLawOfCosines - Computes an angle of a triangle using the law of cosines. A is the opposite side of the triangle while B and C are the sides forming the angle., Angle.ByLawOfSines - Determines the angle of a triangle based on the law of sines. (Alpha is the angle opposite side A and beta is the angle opposite side B...), Angle.ExteriorAngle - Computes the exterior angle of a given angle., AngleBisector.ByPoints - Retrieves the vector of an angle bisector at point B based on three points (A, B, C) that define the angle. , Application.Version - Retrieves the name, version and build of the current Revit application., AreaSeparator.FromCurve - Creates area separation lines from geometry curves. , Assembly.AddMembers - Adds any given elements to a given assembly., Assembly.Disassemble - Disassembles an assembly and returns its members, Assembly.FromElements - Creates an assembly from a list of elements, Assembly.Members - Retrieves the members of an assembly, Assembly.RemoveMembers - Removes any given elements to a given assembly., BoundingBox.ByElement - Gets the bounding box of a Revit element, BoundingBox.ByElements - Retrieves a bounding box for a list of elements, BoundingBox.PerimeterCurvesByNormal - Returns the perimeter curve of a bounding box on a plane determined by a given normal and the centroid of the bounding box, BoundingBox.PerimeterCurvesOnPlane - Returns the perimeter curve of a bounding box on a given plane (assuming that the bounding box and plane intersect), Buckyball.ByOriginAndRadius - Returns all the data necessary for modeling a truncated icosahedron (vertices and struts) as well as the surface area and volume. , Category.Subcategories - Retrieves all the subcategories for a given category, Cathetus.ByPythagoras - Computes the length of one of the catheti / legs of a right triangle using the Pythagorean Theorem. B is the other leg / cathetus of the triangle while C is the hypotenuse., Character.FromNumber - Converts a number into a character (where 1 = A, 2 = B, ... , 27 = AA, 28 = AB etc.)., Character.ToNumber - Converts an Excel-style character to a number (e.g. A = 1, AA = 27 etc.)., Clipboard.GetFrom - Gets the content of the clipboard. ATTENTION: Will only work with strings., Clipboard.SendTo - Copies a string to the clipboard. , Color.Aqua - Returns the colour aqua., Color.Black - Returns the colour black., Color.Blue - Returns the colour blue., Color.ByWebColor - Creates a color from a given web color (a hex triplet like #FF9900), Color.Fuchsia - Returns the colour fuchsia a.k.a. magenta., Color.Green - Returns the colour green., Color.Grey - Returns the colour grey., Color.GreyscaleByNormalizedValue - Creates a greyscale color based on a normalized value (0 = black, 1 = white), Color.Lime - Returns the colour lime., Color.Maroon - Returns the colour maroon., Color.Navy - Returns the colour navy., Color.Olive - Returns the colour olive., Color.Purple - Returns the colour purple., Color.Red - Returns the colour red., Color.Silver - Returns the colour silver., Color.Teal - Returns the colour teal., Color.White - Returns the colour white., Color.Yellow - Returns the colour yellow., CurtainPanel.HostPanel - Retrieves the host panel of a given curtain panel. This is typcially needed when wanting to access wall elements used as curtain panels., CurtainSystem.ByFace - Creates a curtain system on top of a face. The face typically needs to be the face of a mass surface in Revit., Curve.ClosedLoopThroughPoints - Creates a *closed* loop of curves based on a given list of points, CustomNode.Info - Extracts information from a custom node., DesignOption.DesignOptionSet - Returns the design option set of a given design option, DetailComponent.ByCurve - Places a line-based detail component in a given view, DetailLine.FromCurve - Creates a detail line based on a given curve, Dimension.AssociatedFamilyParameter - Returns the associated family parameter of a dimension label (if any). PLEASE NOTE: This node will only work in a family document!, Dimension.SetType - Changes the dimension type of a given dimension instance to the specified type, DimensionType.Style - Gets the style of a given Revit dimension type, Directory.ContentsAll - Unlike the built-in node Directory.Contents, this node browses a directory recursively and returns all relevant files contained in subfolders as well., DisplayUnit.ToInternalUnit - Converts a value from a given display unit to Revit's internal unit, DividedSurface.AddIntersect - Adds an intersect to a divided surface, DividedSurface.EvaluateGridNodes - Returns UV and XYZ coordinates as well as surface normals for all grid nodes of a given divided surface. Also returns the underlying face., DividedSurface.HorizontalIntersectsByEndpoints - Creates a number of equally spaced horizontal intersects for a divided surface based on the path between between two points. , DividedSurface.HorizontalIntersectsByEndpointsAndFunction - Creates a number of horizontal intersects (levels)for a divided surface based on the path between two points. The spacing of the intersects can be controlled by a function., DividedSurface.VerticalIntersectsByEndpoints - Creates a number of equally spaced vertical intersects for a divided surface based on the path between between two points. You may need to switch start point and end point., DividedSurface.VerticalIntersectsByEndpointsAndFunction - Creates a number of vertical intersects (reference planes) for a divided surface based on the path between between two points. The spacing can be controlled by a function. You may need to switch start point and end point., Document.ActiveViewFromCurrentDocument - Gets the active view of the current document, Document.ContainsElementsOfCategory - Checks if family instances of specified categories are present in the model., Document.DesignOptions - Returns all design options in the model, grouped by design option set, Document.IsWorkshared - Returns true if the current project is workshared, Document.LinksAndImports - Gets all linked and imported files in the document. NOTE: Does *not* retrieve linked Revit files., Document.ListBuiltInCategories - List all the available BuiltInCategories, Document.ListBuiltInCategoriesByName - Looks up all the built-in categories based on a given name (or part of a name) of the category. Search is case-insensitive., Document.ListBuiltInParameters - List all the available BuiltInParameters, Document.ListBuiltInParametersByName - Looks up all the built-in parameters based on a given name (or part of a name) of the parameters. Search is case-insensitive., Document.LoadFamily - A very crude implementation of family loading. Will *not* reload an already loaded family of the same name., Document.Path - Gets the path and directory of the current Revit document, Document.Phases - Retrieves all phases in the active document in *chronological* order, Document.ProjectInfo - Gets the project information., Document.ProjectPosition - Gets the project's position data relative to the origin. Use the built-in nodes Location.Latitude & Location.Longitude to retrieve latitude and longitude., Document.SaveAs - Saves the active Revit document under the given name., Document.StartingView - Retrieves the starting view of a Project file. Returns null if no starting view is set., Document.SynchronizeWithCentral - Synchronizes a workshared model with the central model., Document.Views - Gets all views in the document - except for 3D view templates (as long as this bug is not fixed: https://github.com/DynamoDS/Dynamo/issues/2970), Document.Worksets - Returns all Worksets in the current document, Door.Rooms - Gets the rooms that are connected by a given door, Element.AllInstances - Retrieves all instances of a given element, Element.AllInstancesAtLevel - Retrieves all instances of an element on a given level, Element.AllViewDependentInstances - Retrieves all instances of a view-dependent element in a given view, Element.Area - Returns the area property of a given element (if that element has such a property), Element.AssociatedFamilyParameters - Returns the associated family parameters of an element in a family (and the respective element parameters). PLEASE NOTE: This node will only work in a family document!, Element.ByID - Gets the Revit element(s) for a list of IDs (or a single ID), Element.ContainsTransparentMaterials - Checks if a given element contains transparent materials., Element.CutGeometry - Adds a solid-solid cut for two model elements (if possible). , Element.ElevationOfHostLevel - Returns the elevation of the level a given element is associated with, Element.ExternalFileReferencePath - Returns the full path of an element's external file reference as as string, Element.FromDynamoSurface - Returns the underlying Revit element of a given face, Element.Group - Retrieves the group an element belongs to (if any), Element.Host - Gets an element's host, Element.ID - Gets the ID(s) for a list of Revit elements (or a single element) - unlike the built-in Element.Id node, this node returns an actual Revit Element ID and *not* a number, Element.Inserts - Gets all the objects inserted into a given element., Element.IsOfCategory - Checks whether an element is of a specified category, Element.IsRelatedToMass - Returns true if an object (wall, roof, floor or curtain system) has been modelled by face and the underlying mass still exists in the project., Element.JoinGeometry - Joins two model elements (if possible). Only works inside the project environment., Element.Level - Gets an element's level, Element.Location - Returns the location of an element as an XYZ (or if it's line-based the start and end point of the line), along with some booleans to help filtering the results. Use this for some element types (e.g. walls or lines) that do not work with the built-in Get Family Instance Location node. , Element.Materials - Retrieves all materials froma given element, Element.Name (Universal) - Gets an element's name (Dynamo's built-in Name nodes don't work for all element types, e.g. worksets...), Element.OverrideTransparencyInView - Overrides the transparency of an element in a given view, Element.OwnerView - Gets the owner view of a given Revit element (if possible), Element.Panels - Retrieves the panels nested in a curtain wall, curtain system or glazed roof., Element.ParameterExists - Checks if an element contains a parameter of a given name, Element.ParameterIsReadOnly - Checks if a parameter of a given element is read-only, Element.PermanentlyIsolateInView - (Permanently) isolates elements in the given view, Element.Phases - Gets the created and demolished phases of an element, Element.ResetOverridesInView - Resets all overrides for an element in a given view, Element.SetMaterialParameterByCategory - Sets a material parameter of a given element to <By Category>, Element.SetName - Gets the name of a given Revit element, Element.SetWorkset - Sets the workset of a given element, Element.TemporarilyIsolateInView - (Temporarily) isolates elements in the given view, Element.Type - Gets the family type of a given element (if applicable). , Element.Workset - Retrieves the workset of a given element, Elements.FilterByName - Retrieves those elements from a collection whose names match the search string, Elements.FilterByParameterValueAndCondition - Keine Beschreibung angegeben, Elements.GroupByHost - Groups a list of Revit elements by their respective hosts (if they have any), ElementType.Duplicate - Duplicates an element type, Family.IsInPlace - Determines if a family is an in-place family, FamilyDocument.CurrentFamilyType - Retrieves the current family type from the active family document. PLEASE NOTE: This node will only work in a family document!, FamilyDocument.FamilyParameters - Retrieves all family parameters from the active family document. PLEASE NOTE: This node will only work in a family document!, FamilyDocument.FamilyTypes - Retrieves all family types from the active family document. PLEASE NOTE: This node will only work in a family document!, FamilyInstance.AddCoping - Adds a coping (cut) to a steel beam, FamilyInstance.ByCurve - Places a line-based family instance on a given level, FamilyInstance.ByPointInView - Places a family instance at a given point in a given view (e.g. a detail component)., FamilyInstance.CopingElements - Returns all elements used as coping cutters for a given element., FamilyInstance.FlipFacingOrientation - Flips the facing orientation of a given family instance, FamilyInstance.FlipFromToRoom - Flips the settings of \"From Room\" and \"To Room\" for any given door or window instance. , FamilyInstance.FlipHandOrientation - Flips the hand orientation of a given family instance, FamilyInstance.HandOrientation - Gets the hand orientation of a hosted object (e.g. a window or a door), FamilyInstance.RemoveCoping - Removes a coping (cut) from a steel beam, FamilyInstance.SetType - Changes the family type of a given family instance to the specified type, FamilyInstance.SubComponents - Retrieves all subcomponents of a given family instance, FamilyInstance.SuperComponent - Retrieves the supercomponent of a given family instance, FamilyParameter.Properties - Retrieves all properties of a given family parameter. PLEASE NOTE: This node will only work in a family document!, FamilyType.CompoundStructureHasVariableLayer - Checks if the compound structure of a given floor or roof type contains a variable layer., FamilyType.CompoundStructureLayers - Retrieves the compound layers of any layered family type (wall types, roof types, floor types etc.), FamilyType.SetCompoundLayerMaterial - Sets the material of a specified compound layer of a given family type (only applies to family types that have a compound structure, e.g. walls, floors etc.)., FamilyType.SetCompoundLayerWidth - Sets the width of a specified compound layer of a given family type (only applies to family types that have a compound structure, e.g. walls, floors etc.)., File.WriteToCSV - Writes data to a CSV file with a custom delimiter. Data inputs needs to contain strings only!, Floor.SlabShapeByPoints - Transform a slab shape based on a list of XYZs. PLEASE NOTE: Will reset any previous edits on the slab shape., Floor.SlabShapeHasBeenModified - Checks if the shape of a floor slab has been modified with the shape editing tools, FootingType.BreaksAtInserts - Determines whether a list of wall footing types break at inserts in their attached walls, Geometry.ClosestTo - Finds the closest entity in a list of geometric entities from another given entity, Geometry.FurthestFrom - Finds the furthest entity in a list of geometric entities from another given entity, GlobalParameter.GetValue - Gets the value of a global parameter (only in Revit 2016 R2 or later)., Group.FromElements - Creates a group from a list of Revit elements, Group.Members - Retrieves the members of a group, Group.Ungroup - Ungroups a group and returns the ungrouped elements., Hypotenuse.ByPythagoras - Computes the length of the hypotenuse of a right triangle using the Pythagorean Theorem. A and B are the legs / catheti of the triangle., InternalUnit.ToDisplayUnit - Converts a value from Revit's internal unit to a given display unit, Level.Plane - Retrieves the plane of a given level, List.AlphabeticalSequence - Creates a list of the first N letters of the alphabet  (where 1 = A, 2 = B, ... , 27 = AA, 28 = AB etc.)., List.AnyFalse - Returns true if any item in a list of booleans is false., List.AnyTrue - Returns true if any item in a list of booleans is true., List.ChopByLength - Turns a list into a list of lists with sublists of varying lengths., List.CountBooleanSequences - Retrieves the lengths of uninterrupted sequences of booleans (true or false) in a given list., List.CountOccurences - Counts the number of occurences of each unique element in a given list, List.DropLastItem - Drops the last item from a given list., List.EqualSublistLengths - Trims all given lists to the length of the shortest list, List.FibonacciFromList - Creates a Fibonacci row from a starting list (last two values) of a given length (starting values do *not* count toward length)., List.FibonacciFromValues - Creates a Fibonacci row from two starting values of a given length (starting values do *not* count toward length)., List.FilterBySublistLength - Filters out all sublists that do not have the specified length, List.FromCSV - Converts the content of a given CSV file to a list, List.FromString - Chops up a string into a list of characters, List.GroupListOfListsByKey - Groups a list of lists by one of its keys, List.IsNotEmpty - Just the inversion of the built-in Is Empty List node., List.MatchWithKeyValues - Matches a list with a given set of keys and returns the values corresponding to the keys, List.NormalizedSequence - Creates a sequence of N values between 0 and 1, List.NormalizedSequenceByFunction - Creates a sequence of N values between 0 and 1 driven by a function, List.RandomElements - Creates a list of random elements based on a given list of elements, List.RepeatItemsByLengths - Repeats a list of items into sublists of given lengths, List.ReplaceEmptyLists - Replaces all empty lists within a given list with a substitute, List.ReplaceItemAtIndex - Replaces the item at a given index (or list of indices) of a list by another item, List.ReplaceNull - Replaces all null values within a given list with a substitute, List.SortListOfLists - Sorts a list of lists by one of its sublists, List.SublistLengths - Gets the lengths of all sublists in a given list of lists., List.SublistsContain - Looks for an item in each sublist of a given list and returns true/false for each sublist., List.WithLeadingZeroes - Adds leading zeros to a sequence of numbers, MassFloor.Mass - Gets the mass a given mass floor belongs to, Material.Duplicate - Duplicates a material, Material.Properties - Retrieves a number of properties froma given material, Math.AlmostZero - Returns a feasable computational tolerance to zero (1.0e-9 or a billionth of 1) for use in calculations. More background info: https://github.com/DynamoDS/Dynamo/issues/879, Math.DecimalToBinary - Converts a number to a string of its binary value, Math.DecimalToHex - Converts a number to a string of its hexadecimal value, Math.InvertNormalized - Inverts a value between 0 and 1 to its opposite (1-x), Math.IsEvenNumber - Checks if a number is even., Math.IsMultipleOf - Checks if A is a multiple of B., Math.IsOddNumber - Checks if a number is odd., Math.Normalize - Converts a value into a normalized value according to a value range, Math.NormalizeRange - Normalizes a range of numbers, Math.RandomIntegerList - Creates a list of random integers between 0 and a given maximum value, Math.RoundDownToPrecision - Rounds a number *down* to a specified precision, Math.RoundToPrecision - Rounds a number to a specified precision, Math.RoundUpToPrecision - Rounds a number *up* to a specified precision, Math.ScaleNormalized - Scales a normalized value according to a given minimum and maximum, Math.Similar - Computes the difference between two values and whether that difference is within a given tolerance factor, Mesh.FaceVertices - Gets the vertices of each face of a given mesh, Mesh.IntersectionWithPlane - Calculates the intersection of a mesh and a plane, Normal.CorrectOrientation - Inverts normal A if its inversion is closer to normal B, Object.Members - Gets a list of all members (properties and methods) of a selected element, Object.MembersByName - Looks up all the members of a given element based on a given name (or part of a name) of the property or method. Search is case-insensitive., OppositeSide.ByLawOfCosines - Computes the length of the missing side of a triangle using the law of cosines. Gamma is the angle between sides A and B., Paneling.BuildTriangularSublists - Creates sublists of three items each from a list based on given indices, shift and reverse settings and offset., Paneling.DropLastRowAndColumn - Drops the last row and column from a UV field, Paneling.GridFromFace - Returns UV coordinates, XYZ coordinates and normals for a face with UV subdivision, Paneling.Hexagonal - Creates groups of points from a list of UVs or XYZs for the placement of hexagonal panels. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.InvertAndMirrorNormalizedValues - Inverts and mirrors (horizontally & vertically) a nested list of normalized values., Paneling.MakeTriangles - Reduces each sublist to a list of three items specified by the indices in the pattern., Paneling.Quadrilateral - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.Quadrilateral2byX - Keine Beschreibung angegeben, Paneling.QuadrilateralAlternatingRows - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels in alternating rows. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.QuadrilateralCheckerboard - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels in a checkerboard pattern. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.ShiftPlacementAndReverse - Shifts (integer) and reverses (bool) a given list, Paneling.TriangularFlatDiagonal - Creates groups of points from a list of UVs or XYZs for the placement of triangular panels. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.TriangularFlatMirrored - Creates groups of points from a list of UVs or XYZs for the placement of triangular (diagrid) panels. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.TriangularSubpattern - Subcomponent of the Triangular Pattern From Grid node., Part.SourceElement - Retrieves the element a given part was made from, PathGraph.AllPaths - Finds all possible paths between two nodes.  The connections input expects a list of value pairs., PathGraph.ByPairs - Builds a path graph (Python dictionary) from a list of value pairs., PathGraph.ShortestPath - Finds the shortest path (fewest steps) between two nodes. The connections input expects a list of value pairs., PerspectiveView.OrientToEyeAndTargetPosition - Sets the orientation of a given perspective view based on a given eye and target position, PlaceholderSheet.ByNumberAndName - Creates placeholder sheets, Plane.ByBestFitFromFace - Creates a plane from face, Plane.ByFirst3Points - Returns a plane, its origin and its normal based on the first three XYZs in a given list, PlanView.Underlay - Returns the view template assigned to a given view (if one is assigned), Point.Average - Determines the average of a list of points, Point.CentralProjectionOnFace - Projects a list of points onto a given face, Point.CentralProjectionOnPlane - Projects a list of points onto a given plane, Point.IsOutOfPlane - Checks a list for XYZs that are not located on a given plane, Point.RoundDownToPrecision - Rounds a point coordinate *down* to a specified precision, Point.RoundToPrecision - Rounds a point coordinate to a specified precision, Point.RoundUpToPrecision - Rounds a point coordinate *up* to a specified precision, PointSequence.AccumulatedDistance - Retrieves the accumulated distances of a sequence of points, PointSequence.ContainsOutOfPlanePoints - Checks a list for XYZs that are not located on a given plane, PointSequence.GreatestDistanceToPoint - Retrieves the furthest point in a sequence of points, PointSequences.ShortestPath - Retrieves the shortest path from a number of point sequences, ReturnListOrSingleValue - If the unknown item is not a list but rather a single item, only the first item of the list (input \"seq\") will be returned., RevisionCloud.FromCurves - Creates a revision cloud from a list of geometry curves. , RevisionCloud.FromElements - Create a revision cloud for a list of Revit elements, RevitBoundingBox.FromDynamoBoundingBox - Turns a Dynamo bounding box into a Revit bounding box., RevitColor.FromDynamoColor - Creates a Revit color from a Dynamo color, RevitColor.ToDynamoColor - Converts Revit colors into Dynamo colors, RevitFace.FromDynamoSurface - Returns the underlying Revit face of a given surface, RevitFaceReference.FromDynamoSurface - Returns the underlying Revit face reference of a given surface, RevitUV.ToDynamoUV - Converts Revit UV coordinates to Dynamo UV coordinates, Roof.CreationMethod - Retrieves the creation method of a given roof, Roof.Kind - Retrieves the roof kind (Basic, Glazed, Other). PLEASE NOTE: Roofs that were created by face will be identified as 'Other', Roof.SlabShapeByPoints - Transform a slab shape based on a list of XYZs. PLEASE NOTE: Will reset any previous edits on the slab shape., Roof.SlabShapeHasBeenModified - Checks if the shape of a roof slab has been modified with the shape editing tools, Room.AtPointInPhase - Tries to retrieve a room element at the given location for the given phase., Room.Boundaries - Gets a list of all boundary elements of a given room or area, Room.Doors - Retrieves all doors that are associated with a room (hosted in walls and roofs)., Room.InsertsOfBoundaries - Retrieves the inserts of the bounding elements of a given room., Room.InsertsOfBoundariesByCategory - Retrieves the inserts of the bounding elements of a given room - filtered by a given category., Room.IsPointInside - Evaluates if a ponti is located inside a given room., Room.IsUnbounded - Checks whether a room is unbounded., Room.UnplacedByNameAndNumber - Creates an unplaced room, Room.Windows - Retrieves all windows that are associated with a room (hosted in walls and roofs)., RoomSeparator.FromCurve - Creates room separation lines from geometry curves. , RoomSequence.ToDoorSequence - Retrieves a sequence of doors connecting a given sequence of rooms (if possible), SelectionSet.ByElements - Creates a selection set of the given elements. Note that if a selection set of the given name already exists in the model, its contents will be replaced. Also, if the selection set is already applied as a view filter, the view filter will have to be manually updated in the visibility / graphic overrides. DO ***NOT*** USE IN AUTOMATIC MODE!, SelectionSet.Elements - Retrieves all elements stored in a selection set, Sheet.Scale - Returns the scale of a given sheet, Sheet.Schedules - Returns all schedules placed on a specified sheet , Side.ByLawOfSines - Determines the length of a side based on the law of sines. (Alpha is the angle opposite side A and beta is the angle opposite side B...), SolarAnalysisType.Average - Returns the key \"Average\" for use with the SurfaceAnalysisData.GetResultByKey node from package Solar Analysis for Dynamo, SolarAnalysisType.Cumulative - Returns the key \"Cumulative\" for use with the SurfaceAnalysisData.GetResultByKey node from package Solar Analysis for Dynamo, SolarAnalysisType.Peak - Returns the key \"Peak\" for use with the SurfaceAnalysisData.GetResultByKey node from package Solar Analysis for Dynamo, SpaceSeparator.FromCurve - Creates space separation lines from geometry curves. , String.AlphanumericToMorse - Converts an alphanumeric string to Morse code, String.BinaryToDecimal - Converts a string of a binary number into a decimal value, String.FindRegularExpression - Returns all occurences of a regular expression within a string (or list of strings). The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, String.HexToDecimal - Converts a string of a hexadecimal value to a number, String.MatchRegularExpression - Determines if a regular expression matches a string (or a list of strings) and returns a boolean value (or a list, depending on the input). The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, String.MorseToAlphanumeric - Converts a string in Morse code to alphanumeric, String.ReplaceRegularExpression - Replaces all occurences of a regular expression within a given string (or list of strings) with another string. The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, String.SplitByRegularExpression - Splits a given string by a regular expression. The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, StructuralFoundation.Kind - Retrieves the kind of a given structural foundation (isolated, wall, slab)., Subcategory.ByName - Creates a new subcategory for a given element category in a *family document* (unless a subcategory of that name already exists - in that case it returns the existing subcategory), Surface.FilterByOrientation - Sorts surfaces in three lists based on their orientation (vertical, horizontal up & horizontal down) and also returns three corresponding lists of booleans., Surface.IsPlanar - Checks whether a face is planar, Switch - Emulates the Switch/Case statement that is  available in multiple programming languages., TextAlignFlags.Bottom - Returns the \"Left\" text align flag., TextAlignFlags.Center - Returns the \"Left\" text align flag., TextAlignFlags.Left - Returns the \"Left\" text align flag., TextAlignFlags.Middle - Returns the \"Left\" text align flag., TextAlignFlags.Right - Returns the \"Left\" text align flag., TextAlignFlags.Top - Returns the \"Left\" text align flag., TextElement.SetText - Sets the text of a given text element (i.e. text note or model text), TextElement.Text - Gets the text stored in a text element (i.e. text note or model text), TextNote.ByStringAndPosition - Creates a text note at a given location, ThirdXYZAxis.ByTwoVectors - Given two main XYZ axes (or vectors pointing more or less in thei general direction), this node will find the third axis., Time.EvaluateLapTimes - Evaluates a list of lap times and returns the overall time, Time.LapTime - Records a timestamp and adds it to a given list of lap times. Also passes through an arbitrary variable for integration into a graph., Topography.IntersectionWithPlane - Calculates the intersection of a toposurface and a plane, Topography.IsSubregion - Filters out everything that is *not* a topo subregion. Needs Revit 2014 or newer to work., Triangle.SolveByPoints - Solves a triangle based on the XYZ coordinates of its vertices., TurnIntoList - Turns an element (or a nested list) into a flat list, UnitType.DisplayUnitType - Retrieves the display unit type for a given unit type. , UV.Average - Determines the average of a list of UVs, UV.ByXY - Creates UVs from the XY components of point coordinates, UV.ConvexHull2D - Computes the convex hull of a given set of UV coordinates based on the monotone chain algorithm, UV.IsInsidePolygon - Determines if a point is inside the space enclosed by a polygon, UV.PruneDuplicates - Prune UVs to exclude duplicates within a given tolerance, UV.RoundDownToPrecision - Rounds a UV coordinate *down* to a specified precision, UV.RoundToPrecision - Rounds a UV coordinate to a specified precision, UV.RoundUpToPrecision - Rounds a UV coordinate *up* to a specified precision, UV.Swap - Swaps U and V coordinates, Vector.AltitudeAndAzimuth - Computes the altitude and azimuth of a given vector, Vector.Average - Determines the average vector of a list of vectors, Vector.IntersectionWithPlane - Finds the intersection point between a plane and a vector, Vector.IntersectionWithVector - Determines if two vectors intersect and returns the closest points of intersection on both vectors., Vector.IsInPlane - Checks if a given vector is located on a given plane, Vector.IsOrthogonalToVector - Checks if two vectors are orthogonal to each other, Vector.IsParallelToPlane - Checks if a given vector is parallel to a given plane, Vector.PruneDuplicates - Prune vectors to exclude duplicates within a given tolerance, Vector.XAxisNegative - Returns an XYZ of -1,0,0, Vector.YAxisNegative - Returns an XYZ of 0,-1,0, Vector.ZAxisNegative - Returns an XYZ of 0,0,-1, VersionNumber.ToInteger - Converts a version number (e.g. a Dynamo version number) to an integer., View.CategoryIsVisible - Checks if a given category is visible in a given view, View.ConvertTemporaryHideIsolateToPermanent - Convert all temporary hidden elements or categories to permanently hidden in the given view., View.DetailLevel - Retrieves the detail level of a given view, View.DisableTemporaryHideIsolate - Disables the temporary hide/isolate for the given view (if set), View.Duplicate - Duplicates a given view, View.DuplicateAsDependent - Duplicates a given view as a dependent view, View.DuplicateWithDetailing - Duplicates a given view with detailing, View.IsPerspective - Checks whether a given view is a perspective view., View.IsViewTemplate - Checks if a given view is a view template, View.Phase - Returns the phase of a given view, View.Plane - Retrieves the plane of a given view, View.ResizeCropBox - Resizes the bounding box of a given Revit element by the specified amount in X, Y and Z direction. May need to be used in conjunction with a Transaction node., View.Scale - Returns the scale of a given view, View.SetDesignOption - Sets the view to a given design option. PLEASE NOTE: This node is kind of hacky. It does not use the design option settings in the visibility / graphic overrides. Instead it sets the view property \"Visible in Option\" to *one* specific design option - which also means that the symbolic representation of this view is only visible in views that display the given design options., View.SetPhase - Sets the phase of a given view, View.SetSolarStudyActiveFrameNumber - Sets the active frame number of the solar study in a given view, View.SolarStudyTotalFrames - Retrieves the number of frames of a solar study for a given view (if the view's sun and shadow settings are indeed set to single or multi day study), View.Type - Returns the type of a given view, View.UsesViewFilters - Checks if a given view has any view filters applied to it., View.ViewTemplate - Returns the view template assigned to a given view (if one is assigned), View3D.IsLocked - Checks if a given view is locked, Wall.ByFace - Creates a wall on top of a face. The face typically needs to be the face of a mass surface in Revit., Wall.CreationMethod - Retrieves the creation method of a given wall, Wall.Flip - Flips the  orientation of a given wall - DO ***NOT*** USE IN AUTOMATIC MODE, Wall.Orientation - Gets the orientation of a given wall instance (normal of the exterior face of the wall). Will *not* work for walls hosted on mass faces or in-place walls., WallLocationLine.CoreCenterline - Returns the WallLocationLine option for CoreCenterLine, WallLocationLine.CoreExterior - Returns the WallLocationLine option for CoreExterior, WallLocationLine.CoreInterior - Returns the WallLocationLine option for CoreInterior, WallLocationLine.FinishFaceExterior - Returns the WallLocationLine option for FinishFaceExterior, WallLocationLine.FinishFaceInterior - Returns the WallLocationLine option for FinishFaceInterior, WallLocationLine.WallCenterline - Returns the WallLocationLine option for WallCenterLine, WallType.Function - Retrieves the Function property of a given wall type, WallType.Kind - Retrieves the wall kind of a given wall type, Window.Rooms - Gets the rooms that are connected by a given window, Workset.Kind - Retrieves the kind of a given workset, XYZAxis.FromVector - Returns whichever main axis (X, Y or Z) is closest to a given vector",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2016-03-21T16:07:13.073Z",
          "full_dependency_versions": [ "0.82.8" ],
          "full_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.8.2",
              "_id": "562f323c662bf0e9080002a5"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.82.8",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-21T16:07:13.073Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 3255,
      "repository_url": "https://github.com/CAAD-RWTH/ClockworkForDynamo",
      "site_url": "https://github.com/CAAD-RWTH/ClockworkForDynamo",
      "banned": false,
      "deprecated": true,
      "group": "Bad Monkeys Inc ",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "Hot Gear",
          "_id": "55e90085662bf0e908000142"
        },
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "NewFamilyType",
          "_id": "592bbccf583778af0f00005b"
        }
      ],
      "num_dependents": 3,
      "description": "Clockwork is a collection of 360+ custom nodes. It contains many Revit-related nodes, but also lots of nodes for various other purposes such as list management, mathematical operations, string operations, geometric operations (mainly bounding boxes, planes, points, surfaces, UVs and vectors) and paneling. More information: https://github.com/andydandy74/ClockworkForDynamo",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "clockwork", "caad", "rwth", "bad", "monkeys" ],
      "white_list": false
    },
    {
      "_id": "56f134485bee3e213800008a",
      "name": "enu_test",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/22d8d938-369f-47fc-8a47-68b4b3dd920cgregPkg673.zip",
          "contents": "1 - 1",
          "engine_metadata": "",
          "engine_version": "1.0.0.802",
          "created": "2016-03-22T12:02:16.851Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "enu_test",
              "_id": "56f134485bee3e213800008a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-22T12:02:16.851Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "for testing",
      "maintainers": [
        {
          "username": "t_syvns",
          "_id": "560bcc81662bf0e908000210"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56f43d7e5bee3e213800009b",
      "name": "asd",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9dbe319e-08bc-4fd4-a462-4b085c439418gregPkg718.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.831",
          "created": "2016-03-24T19:18:22.112Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "asd",
              "_id": "56f43d7e5bee3e213800009b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-24T19:18:22.112Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 14,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "asdasdadadasda",
      "maintainers": [
        {
          "username": "aaron.tang@autodesk.com",
          "_id": "56b0102ac3e9ee4a0800007b"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56fcdba05bee3e21380000be",
      "name": "LunchBox Quad Grid by Face",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/9e218eaf-5776-4ff1-8683-46b9043fabf8gregPkg942.zip",
          "contents": "LunchBox Quad Grid by Face - No description provided",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-03-31T08:11:12.393Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "LunchBox Quad Grid by Face",
              "_id": "56fcdba05bee3e21380000be"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-03-31T08:11:12.393Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 1327,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates Quadrangular XYZ on Surface",
      "maintainers": [
        {
          "username": "rony.ghadban",
          "_id": "56fbd8485bee3e21380000ba"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55cb52a2662bf0e9080000a1",
      "name": "Doha M3 voutes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8942a2b9-0507-4e0f-bc7d-5a844ff2e48egregPkg844.zip",
          "contents": "arrondi par sommet et courbes rayon 100 - arrondi par sommet et courbes, arrondi par sommet et courbes - arrondi par sommet et courbes, BAL large shelter - BAL large shelter, basic cap - basic cap, Basic shelter solid - Basic shelter solid, c - No description provided, Calcul ombres - Calcul ombres, Calepin LES 1-13-16 - Calepin LES 1/13/16, Calepin LES caps - Calepin LES caps, Calepin par surface et trame longitudinale - Calepin par surface et trame longitudinale, calepin shelter - calepin shelter, Calepin step1''' - Calepin step1, Calepin step1'' - Calepin step1, Calepin step1' - Calepin step1, Calepin step1 - Calepin step1, calepinage LES branding plat - calepinage LES branding, calepinage LES branding - calepinage LES branding, carre - carre, cladding popup sans grille - cladding popup, cladding popup - cladding popup, Corian  pearlescent  light lines M3 - Voute M3 , Corian pearlescent cas perpendiculaire - Corian pearlescent cas perpendiculaire, Corian Plaster Crease 2.0 - 2015-08-20, Corian Plaster Crease 2.5 - 2015-08-20, Corian Plaster Crease NON BRANDING - 2015-08-20, Courbe haute socle popup  - Courbe haute socle popup , courbe soubassement 28-01 - courbe soubassement 28-01, courbe sousbassement alternative - courbe sousbassement alternative, Courbes de base toute hauteur - Courbes de base toute hauteur, Courbes soubassement popup - Courbes soubassement popup, Crease M3 Fatality - Crease M3 Fatality, Crease middle line 3D - Crease middle line 3D, Delete null from list - Deletes points from list, Delete points from list - Deletes points from list, Demi plinthe tremie - Demi plinthe tremie, Downlight Str M3 - Downlight Str M3, Frit Patern coordinate system - Frit Pattern coordinate system, Geometrie reelle !! - Geometrie reelle !!, Geometrie Voute Finale  - Geometrie Voute Finale , grill a mapper triangles - grille a mapper, grill a mapper - grille a mapper, grill pop up (triangles) - grill pop up (triangles), grille pop up - grille pop up, grille solide - grille solide, Importer en tant que famille - You must provide a valid family template path that will be used for all input geometry objects. The project units(and not the templates) will be used to determine the size of the output geometry.\r\nThe provided category will be used only if the family template supports it. If not, the default template category will be used instead.\r\nLikewise, the family material(provided as a string) will be set only if a material with that name exists in the template. If not, the default material will be used instead (\"By Category\").\r\nFor void cuts, the material settings will be ignored.\r\nThe output is the resulting family and an instance aligned according to the project document's origin.\r\nThe node expects a unique family name for each geometry object. The rest of the input lists will be processed as if the node lacing is set to longest., LES Light lines by latteral curves - LES Light lines by latteral curves, level of element - level of element, Light line M3 Fatality - Light line M3 Fatality, Light lines shelter dernier - Light lines shelter dernier, Light lines surfaces - Light lines surfaces, Motif carre 1 - Motif carre 1, Motif carre 2 - Motif carre 2, Motif carre pop up 2 - Motif carre pop up 2, Motif Carre pop up - Motif Carre pop up, Motif popup triangle 1 - Motif popup triangle 1, Motif popup triangle 2 - Motif popup triangle 2, Motif popup triangle 3 - Motif popup triangle 3, Motif popup triangle 4 - Motif popup triangle 4, Motif triangle 1 - Motif triangle 1, Motif triangle 2 - Motif triangle 2, Patern ultime a mapper grid 2 - Patern ultim a tramer, Patern ultime a mapper - Patern ultim a tramer, Pick point  - Picks point to select correct trimmed object, Plan coupe lumieres - Plan coupe lumieres, Plane by Curve - Plane by Curve, Plinthe ultime - Plinthe, plinthe voute AQ - plinthe voute AQ, Pop up etoile + degre ouverture (triangles) - Pop up etoile + degre ouverture (triangles), Pop up Etoile + degre ouverture - Pop up Etoile + degre ouverture a partir d'un polygone, pop up patern + raidisseurs sans grille - pop up patern + raidisseurs sans grille, pop up socle - courbe haute a mapper - pop up socle - courbe haute a mapper, popup par face - initialisation  -  pattern toiture panneau central - popup par face - initialisation, popup par face - initialisation  -  pattern toiture - popup par face - initialisation, popup par face - initialisation - pattern - popup par face - initialisation, popup par face - initialisation - toiture DR - popup par face - initialisation, popup par face - initialisation - toiture - popup par face - initialisation, popup par face - initialisation - popup par face - initialisation, popup par face patern - initialisation - toiture DR - popup par face - initialisation, popup par surface - popup par surface, popup patern final - popup patern final, popup RAIDISSEURS - famille final - popup patern final, popup raidisseurs final - popup patern final, Project solid on surface - Project on surface on surface, Projection arbre - Projection arbre, Raidisseurs cladding popup - Raidisseurs cladding popup, RL MEP large entrance - RL MEP large entrance, Scale patern shelter - Scale patern shelter, Secondary lights start point - Secondary lights start point, Secondary lights surfaces - Secondary lights surfaces, Shelter BA - Shelter BA, Skylight module  - Skylight module , solide pour supressions aretes - solide pour supressions aretes, sommet par proximite - sommet par proximite, soubassement final - soubassement final, STR voute M3 - STR voute M3, suppression interieur solid pour shelters epais - suppression interieur solid pour shelters epais, Surface shelter sans trous - a partir de surface avec trous, temes 14 - temes 14, test  - test, Total pearlescent surface - Total pearlescent surface, Transistion to opaque - Transistion to opaque, transition to opaque ultime 2 - transition to opaque ultime, transition to opaque ultime - transition to opaque ultime, tri courbes pop up - tri courbes pop up, Vault Fatality - 2015-08-19, Vide - Geometrie reelle !!, Voute + socle M3 Fatality  - Voute + socle M3 Fatality , Voute M3 2.5 - 2015-08-20, Voute ultime - Voute ultime",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2016-06-23T09:55:48.314Z",
          "full_dependency_versions": [ "0.9.0", "1.2.0" ],
          "full_dependency_ids": [
            {
              "name": "Doha M3 voutes",
              "_id": "55cb52a2662bf0e9080000a1"
            },
            {
              "name": "DOHA M2 ",
              "_id": "55478245a8367b9861000063"
            }
          ],
          "direct_dependency_versions": [ "1.2.0" ],
          "direct_dependency_ids": [
            {
              "name": "DOHA M2 ",
              "_id": "55478245a8367b9861000063"
            }
          ],
          "change_log": "",
          "version": "0.9.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-06-23T09:55:48.314Z",
      "num_versions": 90,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 252,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "Etude Solaire",
          "_id": "56a79ddec3e9ee4a08000034"
        }
      ],
      "num_dependents": 1,
      "description": "Deifinitions Pour Voutes M3",
      "maintainers": [
        {
          "username": "Mchtoufy",
          "_id": "55478244a8367b9861000062"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5700f88e5bee3e21380000d1",
      "name": "Math.Oval",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/5c2ecc5d-9d89-4b90-b5b7-1b297ce3dce8gregPkg279.zip",
          "contents": "Oval - Create A Mathematical Oval",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-04-03T11:03:42.787Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Math.Oval",
              "_id": "5700f88e5bee3e21380000d1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-03T11:03:42.787Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 77,
      "repository_url": "",
      "site_url": "https://twitter.com/a7mdsala7",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creates A Mathematical Oval",
      "maintainers": [
        {
          "username": "a7mdsala72",
          "_id": "5700f7a55bee3e21380000d0"
        }
      ],
      "keywords": [ "oval.math.as" ],
      "white_list": false
    },
    {
      "_id": "570235285bee3e21380000d6",
      "name": "ZeroTouchEssentialsTS",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6d72349b-661a-4753-90d0-184e0298d918gregPkg608.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2016-04-04T09:34:32.601Z",
          "full_dependency_versions": [ "2014.0.1" ],
          "full_dependency_ids": [
            {
              "name": "ZeroTouchEssentialsTS",
              "_id": "570235285bee3e21380000d6"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2014.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-04T09:34:32.601Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 122,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "ZeroTouchEssentialsTS",
      "maintainers": [
        {
          "username": "AD8080202",
          "_id": "562b24f4662bf0e908000294"
        }
      ],
      "keywords": [ "zerotouchessentialsts" ],
      "white_list": false
    },
    {
      "_id": "570515a05bee3e21380000f6",
      "name": "FilledCircle",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/1ea635dc-cbce-48f7-9241-c3d4857ba562gregPkg586.zip",
          "contents": "FilledCircle - No description provided",
          "engine_metadata": "",
          "engine_version": "1.0.0.964",
          "created": "2016-04-06T13:58:16.633Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "FilledCircle",
              "_id": "570515a05bee3e21380000f6"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-06T13:58:16.633Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 42,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "FilledCircle",
      "maintainers": [
        {
          "username": "ilts2",
          "_id": "5704d3dd5bee3e21380000ee"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5591673df2ae5a9a070000ef",
      "name": "Landscaping",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/50f127a8-6f9c-4cff-9d09-0e9578dbd233gregPkg850.zip",
          "contents": "CoordinateSystem.ByTwoLines - No description provided, Create Geometry1&5 - 50% ramdon rotation glimmer tile 1, Create Geometry2&4 - 50% ramdon rotation glimmer tile 1, Create Geometry3&3 - 50% ramdon rotation glimmer tile 1, Create Geometry4&2 - 50% ramdon rotation glimmer tile 1, Create Geometry5&1 - 50% ramdon rotation glimmer tile 1, Create Geometry6 - 50% ramdon rotation glimmer tile 1, Entrance area Region A - 50% ramdon rotation glimmer tile 1, Entrance Area Region - Gives full hexagonal geometry for a entrance area region, FilterByFiveMask - filters a list in up to 5+1 sublists, Focal point areas rotation angle - gives rotation angles for focal point areas, Focal point Subareas rotation angle fatality - gives rotation angles for focal point areas, Focal point Subareas rotation angle - gives rotation angles for focal point areas, Geometries1&5 - 50% ramdon rotation glimmer tile 1, Point grid on surface 2 - Point grid on surface 2, Point grid on surface 3 - Point grid on surface 2, Point grid on surface 4 - Point grid on surface 4, PointGrid.OnSurface - Places a hexagonal point grid on a given surface, ReconductByFiveMask - Replaces a list values by the rules of a mask, Solid hexagon A - Gives solid hexagons from center points and rotation angle, take biggest part - take biggest part, take smallest part - take biggest part, TransitionZoneTiling - Gives full hexagonal geometry for a entrance area region",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2016-04-11T15:28:52.949Z",
          "full_dependency_versions": [ "0.2.2" ],
          "full_dependency_ids": [
            {
              "name": "Landscaping",
              "_id": "5591673df2ae5a9a070000ef"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-11T15:28:52.949Z",
      "num_versions": 22,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 282,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Landscaping definitions",
      "maintainers": [
        {
          "username": "Mchtoufy",
          "_id": "55478244a8367b9861000062"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56f38cc85bee3e2138000099",
      "name": "Coordinates",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/3a318970-ec2e-4cfd-8567-08a5ef0b4d64gregPkg245.zip",
          "contents": "Transfrom_Revit_in - Transform Real world coordinates using Revit Base Point to matrix transform points, Transfrom_Revit_out - Adding Revit Base point coordiantes to point to Transform Real world coordinates using matrix transform.",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-04-12T02:27:40.132Z",
          "full_dependency_versions": [ "0.0.6" ],
          "full_dependency_ids": [
            {
              "name": "Coordinates",
              "_id": "56f38cc85bee3e2138000099"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-12T02:27:40.132Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 205,
      "repository_url": "",
      "site_url": "http://infrabim.blogspot.com.au/",
      "banned": false,
      "deprecated": true,
      "group": "Add Transforamtion of Z from the Base point ",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Reall world Coordinates transformation to Revit  and from Revit.  Using the method of Matrix Transfromation X and Y are transformed using Revit Base Point. Transfrom_Revit_in is used for points into Revit and Transform_Revit_out is used for point out of Revit",
      "maintainers": [
        {
          "username": "dale.harrison@aecom.com",
          "_id": "56c08305c3e9ee4a08000102"
        }
      ],
      "keywords": [ "coordinates", "transformation", "revit", "base", "point" ],
      "white_list": false
    },
    {
      "_id": "56e9f42b5bee3e213800006b",
      "name": "Column.AttachTo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/7eb692a1-42a1-4e64-b0e9-1cc206f79735gregPkg59.zip",
          "contents": "Column.AttachTo - Attaches a column to a target .\r\nInput may be a single item or a list, make sure the lists are the same length.\r\n\r\nInput:\r\nColumn: columns\r\nTargets: elements\r\nTopOrBase: base = 0, top = 1\r\ncutstyle: CutColumn = 0, CutTarget = 1, None = 2\r\njustification:  Minimum = 0,  Midpoint = 1, Maximum = 2, Tangent = 3\r\noffset: positive for shorter length, negative for longer length\r\noverwrite:  bool per item (it can be different for each column), if true current attachment will be ignored, if false current attachment will remain as it is.",
          "engine_metadata": "",
          "engine_version": "0.9.2.4472",
          "created": "2016-04-12T10:08:04.589Z",
          "full_dependency_versions": [ "1.5.0" ],
          "full_dependency_ids": [
            {
              "name": "Column.AttachTo",
              "_id": "56e9f42b5bee3e213800006b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.5.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-12T10:08:04.589Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 98,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "ABT",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Attaches a column to a target .\r\nInput may be a single item or a list, make sure the lists are the same length.\r\n\r\nInput:\r\nColumn: columns\r\nTargets: elements\r\nTopOrBase: base = 0, top = 1\r\ncutstyle: CutColumn = 0, CutTarget = 1, None = 2\r\njustification:  Minimum = 0,  Midpoint = 1, Maximum = 2, Tangent = 3\r\noffset: positive for shorter length, negative for longer length\r\noverwrite:  bool per item (it can be different for each column), if true current attachment will be ignored, if false current attachment will remain as it is.",
      "maintainers": [
        {
          "username": "MartinB2",
          "_id": "54ec7ab5dcee4dfd26000113"
        }
      ],
      "keywords": [ "column", "columns", "attach", "attachment", "top", "base" ],
      "white_list": false
    },
    {
      "_id": "570e31b5287283f90500001f",
      "name": "Get View Worksets",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/f797729d-9e73-4d72-b7cd-46cc955c7fecgregPkg918.zip",
          "contents": "Get View Worksets - Collects all View Worksets",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-04-13T11:47:01.320Z",
          "full_dependency_versions": [ "0.1.0", "2015.9.15" ],
          "full_dependency_ids": [
            {
              "name": "Get View Worksets",
              "_id": "570e31b5287283f90500001f"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "2015.9.15" ],
          "direct_dependency_ids": [
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-13T11:47:01.32Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 313,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "revision",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Revision Clouds on Sheets in Excel",
          "_id": "570e32c5287283f905000021"
        }
      ],
      "num_dependents": 1,
      "description": "List all View Worksets of you current project. ",
      "maintainers": [
        {
          "username": "szilagyi.balazs@kconsult.hu",
          "_id": "570df6d2287283f90500001e"
        }
      ],
      "keywords": [ "revision", "workset", "id", "name", "view" ],
      "white_list": false
    },
    {
      "_id": "570e32c5287283f905000021",
      "name": "Revision Clouds on Sheets in Excel",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/62d56c0d-00cd-45ee-9cbf-7ae281eec868gregPkg171.zip",
          "contents": "Revision Clouds on Sheets in Excel - Collects all Revision Clouds, and matches with their host views",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-04-13T11:51:33.673Z",
          "full_dependency_versions": [ "0.1.0", "0.1.0", "82.3.3", "2015.9.15" ],
          "full_dependency_ids": [
            {
              "name": "Revision Clouds on Sheets in Excel",
              "_id": "570e32c5287283f905000021"
            },
            {
              "name": "Get View Worksets",
              "_id": "570e31b5287283f90500001f"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "82.3.3", "0.1.0", "2015.9.15" ],
          "direct_dependency_ids": [
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "Get View Worksets",
              "_id": "570e31b5287283f90500001f"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-13T11:51:33.673Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 125,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "revision",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Export Revision Cloud properties, with containing View Workset of them to Excel. ",
      "maintainers": [
        {
          "username": "szilagyi.balazs@kconsult.hu",
          "_id": "570df6d2287283f90500001e"
        }
      ],
      "keywords": [ "id", "workset", "view", "excel", "export" ],
      "white_list": false
    },
    {
      "_id": "570367eb5bee3e21380000df",
      "name": "Archi-Nodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/bc05589a-b79f-4d13-a755-29186ad75debgregPkg792.zip",
          "contents": "Group Elements By Parameter value - groups elements by a parameter value, Insert multiple - Inserts multiple items at multiple indices , Multiple Split - splits geometry with several cutting elements, Tween Curves - Gives blending curves between two curves",
          "engine_metadata": "",
          "engine_version": "0.9.2.4472",
          "created": "2016-04-14T07:39:00.265Z",
          "full_dependency_versions": [ "0.0.7" ],
          "full_dependency_ids": [
            {
              "name": "Archi-Nodes",
              "_id": "570367eb5bee3e21380000df"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.7",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-14T07:39:00.265Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 1437,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Nodes for design and BIM/data management",
      "maintainers": [
        {
          "username": "Mchtoufy",
          "_id": "55478244a8367b9861000062"
        }
      ],
      "keywords": [ "design", "bim", "data", "manegement" ],
      "white_list": false
    },
    {
      "_id": "5704eb9c5bee3e21380000f0",
      "name": "Jitendra Test Package",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/36076752-c660-4b5e-8558-57ee684479f0gregPkg384.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.4054",
          "created": "2016-04-18T06:21:58.925Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Jitendra Test Package",
              "_id": "5704eb9c5bee3e21380000f0"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-18T06:21:58.925Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 0,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Jitendra Test Package",
      "maintainers": [
        {
          "username": "jit_tat",
          "_id": "56e2cc5b5bee3e213800004f"
        }
      ],
      "keywords": [ "jitendra" ],
      "white_list": false
    },
    {
      "_id": "54205c0ccc26bfdc5a000022",
      "name": "Dynamo Text",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6adfb8a3-d309-4345-9f39-ab234c07669dgregPkg789.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.1081",
          "created": "2016-04-18T08:03:57.028Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Dynamo Text",
              "_id": "54205c0ccc26bfdc5a000022"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-18T08:03:57.028Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 3316,
      "repository_url": "https://github.com/DynamoDS/DynamoText",
      "site_url": "http://www.dynamobim.org",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Bridge",
          "_id": "5630e58a662bf0e9080002ba"
        },
        {
          "name": "Silman Custom Nodes",
          "_id": "56bb8f8ec3e9ee4a080000e4"
        }
      ],
      "num_dependents": 2,
      "description": "A library for creating text in Dynamo.",
      "maintainers": [
        {
          "username": "DynamoTeam",
          "_id": "556e21d1888bb8ca03000008"
        }
      ],
      "keywords": [ "text" ],
      "white_list": false
    },
    {
      "_id": "57160014287283f90500004c",
      "name": "ASKansulting Kit",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/bb218cd2-3eef-4359-b4e3-d13230315ea3gregPkg926.zip",
          "contents": "GetNumbering - Get numbering List from N to NN., GetRightString - Get a specified Number of characters from the right side of a string(s) at Position., SetParameterValueByINName - Set parameter value by Built-In Name.",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-04-19T09:53:24.414Z",
          "full_dependency_versions": [ "2016.0.100" ],
          "full_dependency_ids": [
            {
              "name": "ASKansulting Kit",
              "_id": "57160014287283f90500004c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.0.100",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-19T09:53:24.414Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 14,
      "repository_url": "",
      "site_url": "http://askansulting.com",
      "banned": false,
      "deprecated": false,
      "group": "ASK",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Main kit from Aleksandr (Sett) Kanivets.",
      "maintainers": [
        {
          "username": "aleksandr.sett",
          "_id": "56d8d11b5bee3e2138000017"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "571d8c4a305bec4d3c000025",
      "name": "ThsiisMyFirstTry",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/d085d6c6-8e0e-41f2-aa4b-98d9a09653dcgregPkg260.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.2.4472",
          "created": "2016-04-25T03:17:30.548Z",
          "full_dependency_versions": [ "0.9.2" ],
          "full_dependency_ids": [
            {
              "name": "ThsiisMyFirstTry",
              "_id": "571d8c4a305bec4d3c000025"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.9.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-25T03:17:30.548Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 17,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "ThisIsMyFirstTryFile",
      "maintainers": [
        {
          "username": "wqinisu@iastate.edu",
          "_id": "571d8acc305bec4d3c000024"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "571df022305bec4d3c00002b",
      "name": "publish_loc",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/89066f1f-d937-42a1-bb02-fa36d9e8becdgregPkg775.zip",
          "contents": "surf - Keine Beschreibung angegeben",
          "engine_metadata": "",
          "engine_version": "1.0.0.1126",
          "created": "2016-04-25T10:23:30.084Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "publish_loc",
              "_id": "571df022305bec4d3c00002b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-25T10:23:30.084Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing publishing of package on german system",
      "maintainers": [
        {
          "username": "loc.dyn",
          "_id": "571def52305bec4d3c00002a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54700efeb77c84600c000031",
      "name": "DynamoUnfold",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/4a6a64a1-ed03-47db-89c8-2b3b0c5fdd1dgregPkg717.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.1.1161",
          "created": "2016-04-26T18:59:10.278Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "DynamoUnfold",
              "_id": "54700efeb77c84600c000031"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-26T18:59:10.278Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1891,
      "repository_url": "https://github.com/holyjewsus/DynamoUnfold",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "DynamoUnfold : Library for building topology from sets of surfaces and unfolding them using Protogeometry tools in Dynamo. \r\n\r\nrelease 0.02 adds:\r\n- tab generation for model making, on non fold edges\r\n- experimental nodes for developable surface ruling line finding and unrolling\r\n- efforts to cleanup intermediate geometry\r\n- fixed a bug where translated or transformed(scaled) surfaces would be incorrectly unfolded\r\n-some internal methods have been removed from search\r\n\r\nPlease see github for more info. For any problems or suggestions please post an issue on the github repository. \r\n\r\n This package includes a few basic samples to get started with. check the packages/DynamoUnfold/extra folder.\r\n",
      "maintainers": [
        {
          "username": "michael.kirschner@autodesk.com",
          "_id": "54700efdb77c84600c000030"
        }
      ],
      "keywords": [ "unfold", "tessellation", "labeling", "text", "unfolded", "graph", "unroll", "developable" ],
      "white_list": false
    },
    {
      "_id": "57207cb9305bec4d3c00003f",
      "name": "testcn07",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/c9feda4d-fedf-48a9-9723-c5b82da49156gregPkg251.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "1.0.0.1172",
          "created": "2016-04-27T08:47:53.360Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "testcn07",
              "_id": "57207cb9305bec4d3c00003f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-27T08:47:53.36Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 12,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "test pubslish on server",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57207eae305bec4d3c000041",
      "name": "test08",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/6915fcf2-7ee4-48c2-b396-d374ccc24bc2gregPkg107.zip",
          "contents": "surf - No description provided",
          "engine_metadata": "",
          "engine_version": "1.0.0.1126",
          "created": "2016-04-27T08:56:14.807Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "test08",
              "_id": "57207eae305bec4d3c000041"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-04-27T08:56:14.807Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 16,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "test on packages on 1126",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5660ffe50370b0a90700004e",
      "name": "Surface.DivideByIsolineGrid",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/21167941-0637-47de-9fe6-5318208464e7gregPkg518.zip",
          "contents": "Surface.DivideByIsolineGrid - Surface subdivided by Isoline Grid.\r\nGrid spacing range can be uniform (0,10,20,30 . . .) or non uniform (0,1,3,6,10 . . .)\r\nThe resulting  surfaces are grouped according to the number of vertices.",
          "engine_metadata": "",
          "engine_version": "1.0.1.1250",
          "created": "2016-05-08T04:13:02.676Z",
          "full_dependency_versions": [ "1.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Surface.DivideByIsolineGrid",
              "_id": "5660ffe50370b0a90700004e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-08T04:13:02.676Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 342,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Testing Waters",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Divide a surface into panels detrmined by the iso line grid",
      "maintainers": [
        {
          "username": "testingwaters",
          "_id": "5232aa726189d12d7e000003"
        }
      ],
      "keywords": [ "surface", "quads" ],
      "white_list": false
    },
    {
      "_id": "56a88d33c3e9ee4a08000040",
      "name": "Prorubim DS Common Kit",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/0641d40a-a5a6-4c69-9f55-92ed8144396cgregPkg600.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-05-08T12:23:48.635Z",
          "full_dependency_versions": [ "0.4.3" ],
          "full_dependency_ids": [
            {
              "name": "Prorubim DS Common Kit",
              "_id": "56a88d33c3e9ee4a08000040"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.4.3",
          "contains_binaries": true,
          "node_libraries": [ "ProrubimDSCommonKitUI.customization, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null", "ProrubimDSCommonKitUI, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-05-08T12:23:48.635Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 812,
      "repository_url": "",
      "site_url": "http://tools.prorubim.com/en/",
      "banned": false,
      "deprecated": false,
      "group": "Prorubim",
      "engine": "dynamo",
      "license": "CC Attribution-NoDerivatives 4.0 International",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Node set with additional app independent universal Dynamo nodes",
      "maintainers": [
        {
          "username": "alexey.lobanov",
          "_id": "546cdebcb77c84600c00001c"
        }
      ],
      "keywords": [ "common", "elements", "execution", "global", "parameters", "force", "restart" ],
      "white_list": false
    },
    {
      "_id": "55f39f99662bf0e908000173",
      "name": "Firefly",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/dba69faa-569a-4390-974a-6295a4f3b6c9gregPkg911.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.1126",
          "created": "2016-05-10T13:29:46.828Z",
          "full_dependency_versions": [ "0.2.0" ],
          "full_dependency_ids": [
            {
              "name": "Firefly",
              "_id": "55f39f99662bf0e908000173"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.0",
          "contains_binaries": true,
          "node_libraries": [ "Firefly, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-05-10T13:29:46.828Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 3,
      "downloads": 637,
      "repository_url": "",
      "site_url": "http://www.fireflyexperiments.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "LICENSE AGREEMENT FOR FIREFLY\r\n\r\nBy downloading or using the software, You (either as an individual or an entity), the End User, acknowledge that you have read and accepted the terms and conditions of this agreement. If you do not agree to the terms and conditions, do not download, install, or attempt to use the software.\r\n\r\nYOU MAY:\r\n(i) use the software for educational purposes in academic, and other non-profit institutions for non-commercial, non-profit internal research purposes.\r\n\r\nYOU MAY NOT:\r\n(i) sublicense, rent, sell, or lease any portion of the software; (ii) reverse engineer, de-compile, disassemble, modify, translate, make any attempt to discover the source code of the software, or create derivative works from the software;\r\n\r\nOwnership of the SOFTWARE.\r\nThe copyright holder retains all right, title, and interest in the software (including all copies), and all worldwide intellectual property rights therein. The copyright holder reserves all rights not expressly granted to Licensee. This License is not a sale of the original software or of any copy.\r\n\r\nTermination.\r\nThe copyright holder may terminate this Agreement immediately if Licensee breaches any provision. Upon notice of termination, all rights granted to Licensee under this Agreement will immediately terminate, and Licensee shall cease using the SOFTWARE and return or destroy all copies (and partial copies) of the SOFTWARE and documentation.\r\n\r\nDisclaimer of Warranty.\r\nLicensee acknowledges that the Software is experimental. This software is provided by the copyright holders and contributors \"as is\" and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. In no event shall the copyright owner or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.\r\n\r\nNo Other Obligations.\r\nThis Agreement creates no obligations on the part of the copyright holders other than as specifically set forth herein.",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Firefly is a set of nodes dedicated to bridging the gap between Dynamo, the Arduino microcontroller, and other input/output devices. It allows near real-time data flow between the digital and physical worlds – enabling the possibility to explore virtual and physical prototypes with unprecedented fluidity.",
      "maintainers": [
        {
          "username": "andyopayne",
          "_id": "55f2330d662bf0e90800016d"
        }
      ],
      "keywords": [ "firefly", "arduino", "osc", "udp", "sensors", "actuator", "microcontroller" ],
      "white_list": false
    },
    {
      "_id": "559e460bf2ae5a9a0700012f",
      "name": "DynamoGIS",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/dcf68aa2-23a3-4c30-a46d-31b35fe9c747gregPkg579.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-05-23T07:37:10.636Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "DynamoGIS",
              "_id": "559e460bf2ae5a9a0700012f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": true,
          "node_libraries": [ "EGIS.DynamoLib, Version=1.0.0.1431, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-05-23T07:37:10.636Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 429,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "GIS",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Shape file reader for Dyanmo 1.0.0",
      "maintainers": [
        {
          "username": "sharadjaiswal",
          "_id": "5539fddba8367b986100002c"
        }
      ],
      "keywords": [ "gis", "shapefile" ],
      "white_list": false
    },
    {
      "_id": "5744f3b8c1a604fb36000030",
      "name": "LEVELGEN",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/45b48601-d26b-4e1b-b739-3206a37b137egregPkg162.zip",
          "contents": "Level Generator-generador de niveles - Generates  levels / genera niveles",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-05-25T00:37:12.279Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "LEVELGEN",
              "_id": "5744f3b8c1a604fb36000030"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-25T00:37:12.279Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 109,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "creates levels from a minimum height , number of levels , and a distance between levels",
      "maintainers": [
        {
          "username": "dipinoch@mit.edu",
          "_id": "53739fdf0e5572016a00005d"
        }
      ],
      "keywords": [ "level", "uai" ],
      "white_list": false
    },
    {
      "_id": "5745289ac1a604fb36000034",
      "name": "Roof Type Duplicate",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/17a3e8c0-3cc3-43bf-9a17-cae649e4b55agregPkg525.zip",
          "contents": "Roof Type Duplicate - Duplicate Roof Type By Roof Type String",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-05-25T07:40:58.320Z",
          "full_dependency_versions": [ "0.0.3", "82.8.2" ],
          "full_dependency_ids": [
            {
              "name": "Roof Type Duplicate",
              "_id": "5745289ac1a604fb36000034"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            }
          ],
          "direct_dependency_versions": [ "82.8.2" ],
          "direct_dependency_ids": [
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            }
          ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-25T07:40:58.32Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 61,
      "repository_url": "",
      "site_url": "http://truevis.com/",
      "banned": false,
      "deprecated": false,
      "group": "truevis",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Duplicates a roof type givien roof type name string and a list of new type name strings",
      "maintainers": [
        {
          "username": "design1@truevis.com",
          "_id": "571b032f305bec4d3c00001c"
        }
      ],
      "keywords": [ "roof", "type", "duplicate" ],
      "white_list": false
    },
    {
      "_id": "574813eee70394822f000014",
      "name": "MapToSurfaceTest",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/04565743-88b6-4800-a802-a065a354969dgregPkg331.zip",
          "contents": "NurbsCrvToSurface - Map Nurbs Curves from Source Surface to Target Surface, OffsetPointsToSurface - Map Points from Source Surface to Target Surface, offset from surface normals, PointsToSurface - Map Points from Source Surface to Target Surface, PolygonsToSurface - Map Polygons from Source Surface to Target Surface, SampleSrf - Just a sample surface for testing map operations",
          "engine_metadata": "",
          "engine_version": "1.0.1.1462",
          "created": "2016-05-27T09:31:26.623Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "MapToSurfaceTest",
              "_id": "574813eee70394822f000014"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-27T09:31:26.623Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 13,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Smoke test for publishing package",
      "maintainers": [
        {
          "username": "a0119383",
          "_id": "574812dfe70394822f000013"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "574c8632e70394822f00002e",
      "name": "EZ-Grids",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/9053cbcc-3b99-4786-b623-9dbd92bfe772gregPkg215.zip",
          "contents": "makeGrids - No description provided",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-05-30T18:28:02.861Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "EZ-Grids",
              "_id": "574c8632e70394822f00002e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-05-30T18:28:02.861Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 160,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "REVIT",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "make grids in horizontal and vertical direction",
      "maintainers": [
        {
          "username": "dipinoch@mit.edu",
          "_id": "53739fdf0e5572016a00005d"
        }
      ],
      "keywords": [ "grids" ],
      "white_list": false
    },
    {
      "_id": "5750a899e70394822f00004f",
      "name": "Polyhedra",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/e512a643-4ac5-43b9-983f-5f8bcbae7c49gregPkg501.zip",
          "contents": "Polyhedron.Icosohedron - Makes an Icosohedron.  Don't open to edit, the node only contains an un-editable data stream, Polyhedron.92-gon - Makes a 92 sided solid.  Don't open to edit, the node only contains an un-editable data stream, Polyhedron.Dodecahedron - Make a a Dodecahedron.  Don't open to edit, the node only contains an un-editable data stream, Polyhedron.TruncatedIcosohedron - Makes a Truncated Icosohedron, or soccerball.  Don't open to edit, the node only contains an un-editable data stream",
          "engine_metadata": "",
          "engine_version": "1.0.1.1517",
          "created": "2016-06-02T21:43:53.999Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Polyhedra",
              "_id": "5750a899e70394822f00004f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-06-02T21:43:53.999Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 148,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Polyhedra",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A collection of nodes for making solids with many planar faces",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "polyhedron" ],
      "white_list": false
    },
    {
      "_id": "55e90085662bf0e908000142",
      "name": "Hot Gear",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/4693ca23-fc41-4d54-a9e5-7029019bc0a0gregPkg823.zip",
          "contents": "Add Filter to View - Add Filter to View, Add Shared Parameter to Family - Add Shared Parameter to family and save to the Directory Path., Set WallJoin - Allow/Disallow Wall Join At End.\r\nTrue=Allow.WallJoinAtEnd\r\nFalse=Disallow.WallJoinAtEnd, And - No description provided, Create Override Graphic Settings - No description provided, Create Pipe - No description provided, Create Wall by Floor Boundaries - Create Wall by Floor Boundaries, Create Wall by Room Boundaries - Create Wall by Room Boundaries, CutGeometry - No description provided, Distance Between Point - Calculate the distance between 2 set of Point., Dynamo Color to Revit Color - No description provided, Dynamo Point To Revit Point - No description provided, Element Parameter To Excel - Export Elements Parameter To Excel, Export Families To RFA - Export Categories Families To Directory Folder, FamilyInstanceParameterToExcel - Export Category Instance Elements Parameter To Excel, FamilyTypeParameterToExcel - Export Category Type Parameter To Excel, Get All Filter - Get all Filter, Get All Instance Element - No description provided, Get Current View Filter - Get Current View Filter, Get Family Document - No description provided, Get Fill Pattern - No description provided, Get Line Pattern - No description provided, Get Revit ActiveView - Active View, Get Revit Selection - No description provided, Get Shared Parameter Definition - No description provided, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), Index of item - Index of Item on List, Join Type (Abut) - No description provided, Join Type (Extension) - No description provided, Join Type (Miter) - No description provided, Join Type (None) - No description provided, Join Type (SquareOff) - No description provided, Join Geometry - Join Selected Geometry, Line is Parallel - Define list of line is Parallel or not and find the angle of it., Or - No description provided, Read Corrdinate Interference Check - Read the Elements Pair of Interference Report\r\nElement.Set1 & 2 = For Current Document\r\nElement.Set3 = For Link Document, ReadExcel - No description provided, ReplaceNumberToString - Int Number To String, Revit Color - Autodesk.Revit.DB.Color, Revit ID to Element - No description provided, Revit ID - No description provided, Save As Document - No description provided, Select in Revit - Select Elements in Revit, SetParameterByExcel - No description provided, SystemInstanceParameterToExcel - Export System Family Instance Parameter To Excel, SystemTypeParameterToExcel - Export System Family Type Parameter To Excel, Unjoin Geometry - Unjoin selected geometry, View Reset Element Overrides - No description provided, View Set Element Overrides - No description provided, View Set Filter Overrides - Set View Filter Overrides, View Set Filter Visibility - Set View Filter Visibility",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-06-03T10:07:15.035Z",
          "full_dependency_versions": [ "2016.6.3" ],
          "full_dependency_ids": [
            {
              "name": "Hot Gear",
              "_id": "55e90085662bf0e908000142"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.6.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-06-03T10:07:15.035Z",
      "num_versions": 28,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 2103,
      "repository_url": "",
      "site_url": "https://revitnamo.wordpress.com/",
      "banned": false,
      "deprecated": false,
      "group": "Hot Gear",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Summerisle",
          "_id": "5835897f7332da0d25000003"
        }
      ],
      "num_dependents": 1,
      "description": "50+ practical node in order to increase Revit workflow.\r\nby Johnes Hou \r\nI clean up the node that should not require to delete onther package.\r\nAnd for those node that i use by onther package i will croup the node give the credit for it.\r\nThanks ClockWork/Archi-lab/Spring for the awesome node.\r\n\r\n(https://hotgearproject.wordpress.com/)\r\n(https://revitnamo.wordpress.com/)",
      "maintainers": [
        {
          "username": "s04049",
          "_id": "54bfd524dcee4dfd26000074"
        }
      ],
      "keywords": [ "hot", "gear", "johnes", "hou" ],
      "white_list": false
    },
    {
      "_id": "5630e58a662bf0e9080002ba",
      "name": "Bridge",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/39b881fd-d7e9-4ca5-ad8f-0ac553691b7cgregPkg364.zip",
          "contents": "01_SplineFromExcel - Creates a Spline from a list of points coming from an Excel data sheet (profile or alignment), 02_TangentAndCoordinateSystem - Creates a tangent in a point of a spline and adds a local coordinate system to it which is normal to the tangent and aligned to global Z-axis, 03_Loft - Reads a Revit profile family; tranfers profile family from ground floor to a coordinate system on a spline, 04_Loft1Parameters - Reads 1 parameter from Excel and adds it to a Revit profile family; tranfers profile family from ground floor to a coordinate system on a spline, 05_Loft2Parameters - Reads 2 parameters from Excel and adds them to a Revit profile family; tranfers profile family from ground floor to a coordinate system on a spline, 06_Loft3Parameters - Reads 3 parameters from Excel and adds them to a Revit profile family; tranfers profile family from ground floor to a coordinate system on a spline, 07_Loft4Parameters - Reads 4 parameters from Excel and adds them to a Revit profile family; tranfers profile family from ground floor to a coordinate system on a spline, 08_Loft5Parameters - Reads 5 parameters from Excel and adds them to a Revit profile family; tranfers profile family from ground floor to a coordinate system on a spline, 09_StationPlane - Creates a vertical plane along a spline at a specific station and a specific anlge, 10_TrimBody - Trims a solid with a (inclinated) plane, 11_SectionElevation - Creates a section with a specific angle at a specific station and adds elevation text to each vertex of the geometry, 12_SectionElevationLabel - Creates a section with a specific angle at a specific station and adds elevation labels to each vertex of the geometry, 13_FaceElevationLabel - Let the user select a face in Revit and adds elevation labels to each vertex of the face, 14_HandrailConstructor - Creates a railing based on RiZ GEL standards by using adaptive components, 15_SectionLines - Creates an intersection with one or more geometries and a reference plane in order to extract the section curves and vertices. Useful workaround for creating sections and dimensioning complex geometries. , 16_Recursion - Designed by Andrzej Samsonowicz!, 17_UnrolledSection - Designed by Andrzej Samsonowicz!\r\nCreates an unrolled section along an (horizontal) alignment and a geometry (ONE SOLID) coming from Dynamo or directly from Revit (SelectModelElement and ElementGeometry). As a result unrolled linework will be created. The output location need to be set by a coordinate system. Resolution of the function is set to \"1\". In case you need more accuracy / precision decrease the value., 18_DrilledPileConstructor - Creates drilled pile familys with an specific overlap ratio between an upper and a lower linework horizon coming via CAD import into Revit (DWG for instance).",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-06-09T14:06:57.978Z",
          "full_dependency_versions": [ "0.0.4", "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Bridge",
              "_id": "5630e58a662bf0e9080002ba"
            },
            {
              "name": "Dynamo Text",
              "_id": "54205c0ccc26bfdc5a000022"
            }
          ],
          "direct_dependency_versions": [ "0.1.1" ],
          "direct_dependency_ids": [
            {
              "name": "Dynamo Text",
              "_id": "54205c0ccc26bfdc5a000022"
            }
          ],
          "change_log": "",
          "version": "0.0.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-06-09T14:06:57.978Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 8,
      "downloads": 2776,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A library for creating and editing solids made of cross sections in terms of bridges and tunnels. See also extra example files (Revit version: 2016, Dynamo version: 1.0)",
      "maintainers": [
        {
          "username": "matthias.stark@autodesk.com",
          "_id": "562f20da662bf0e9080002a2"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "558a1ca0f2ae5a9a070000d4",
      "name": "BecauseWeDynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/a29e4d64-29ee-412e-85b4-7566aa08cdbbgregPkg789.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-06-15T23:27:41.643Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "BecauseWeDynamo",
              "_id": "558a1ca0f2ae5a9a070000d4"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": true,
          "node_libraries": [ "BecauseWeDynamo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-06-15T23:27:41.643Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 318,
      "repository_url": "https://github.com/BecauseWeCan/BecauseWeDynamo",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Because We Can",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "modeling aid for panelization and fabrication of faceted models with planar faces; includes tool set to project panels onto xy-plane  with labels and has dxf export by layer as preparation for 2.5D fabrication. mesh has half-edge topology and allows for three faces joining at an edge if panel thickness is centered at mesh face",
      "maintainers": [
        {
          "username": "be.han",
          "_id": "558a1ca0f2ae5a9a070000d3"
        }
      ],
      "keywords": [ "dxf", "export", "mesh", "topology", "fabrication", "panelization" ],
      "white_list": false
    },
    {
      "_id": "5763bb4be70394822f0000bd",
      "name": "NewSolid",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/4ab8e19d-e2fa-4700-8131-065711c6cb08gregPkg116.zip",
          "contents": "NewSolid - Erstellt einen neuen Solidkörper",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2016-06-17T08:56:43.487Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "NewSolid",
              "_id": "5763bb4be70394822f0000bd"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-06-17T08:56:43.487Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 66,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Erstellt einen neuen Solidkörper",
      "maintainers": [
        {
          "username": "pelle-niklas@t-online.de",
          "_id": "554ddd4aa8367b9861000081"
        }
      ],
      "keywords": [ "newsolid" ],
      "white_list": false
    },
    {
      "_id": "5763bbfce70394822f0000bf",
      "name": "MehPel",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8bd48d9a-e6de-4ac5-8fd3-142c01a4584dgregPkg206.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.2.2392",
          "created": "2016-06-17T08:59:40.551Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "MehPel",
              "_id": "5763bbfce70394822f0000bf"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-06-17T08:59:40.551Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 21,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Erstellt einen neuen Solidkörper",
      "maintainers": [
        {
          "username": "pelle-niklas@t-online.de",
          "_id": "554ddd4aa8367b9861000081"
        }
      ],
      "keywords": [ "newsolid" ],
      "white_list": false
    },
    {
      "_id": "560d34ce662bf0e908000219",
      "name": "RedHotBIM",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/68d193e9-d79d-4896-ae6e-6419391cc4cegregPkg717.zip",
          "contents": "RHB Search.MinMaxOnCurve - Search Min Max Point on a Curve, RHB Search.MinMaxOnSurface - Search Min Max Point on a Surface, RHB BoundingBox.Show - Shows the BoundingBox, RHB Curve.ParametersAtStartEndDistances - From Distances Gives Start Point and Parameter and End Parameter, RHB Point.MoveOnPath - Moves a point on curve by distance, RHB Point.MoveOnPathParameter - Moves a point on curve by distance, RHB Point.SortByAngle - Sorts Points by Angle, RHB Vector.AngleBetween - Angle Between Two Vectors, RHB Vector.Bisector - Normalized Vector of Angle Bisector, RHB Vector.Show - Show Vector, RHB Element.Handling - Writes the Handling to a Parameter",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-06-20T08:26:07.264Z",
          "full_dependency_versions": [ "16.6.22" ],
          "full_dependency_ids": [
            {
              "name": "RedHotBIM",
              "_id": "560d34ce662bf0e908000219"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "16.6.22",
          "contains_binaries": true,
          "node_libraries": [ "RedHotBIM, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "RedHotBIM_UI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-06-20T08:26:07.264Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 138,
      "repository_url": "",
      "site_url": "www.RedHotBIM.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Mehmet Polat Diker",
      "maintainers": [
        {
          "username": "m.p.diker",
          "_id": "548b007afa779c1c1100004c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57187e9e305bec4d3c00000b",
      "name": "Test Package",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/cc65688b-d460-4571-9987-790222ee30f1gregPkg615.zip",
          "contents": "Check for Compliant 3D View - No description provided, Get Shading Mode from Views - using built in parameter name",
          "engine_metadata": "",
          "engine_version": "1.0.1.1611",
          "created": "2016-06-22T05:04:49.084Z",
          "full_dependency_versions": [ "1.1.5", "0.75.47" ],
          "full_dependency_ids": [
            {
              "name": "Test Package",
              "_id": "57187e9e305bec4d3c00000b"
            },
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "direct_dependency_versions": [ "0.75.47" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "change_log": "",
          "version": "1.1.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-06-22T05:04:49.084Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 27,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Test",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Test Package",
      "maintainers": [
        {
          "username": "jit_tat",
          "_id": "56e2cc5b5bee3e213800004f"
        }
      ],
      "keywords": [ "test" ],
      "white_list": false
    },
    {
      "_id": "55842cbaf2ae5a9a070000c2",
      "name": "Zebra",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c9c8c7b5-b8e2-4800-ad1c-9e160cc07162gregPkg81.zip",
          "contents": "Element.GetInstanceOrTypeParameterValueByName - Retrieves both the instance or type parameter from an element, Elements.SortByLevelAndParameter - Feed in a list of elements and sort them first by the elevation of the level they are placed and then by a parameter.\r\n\r\nAs an example if you are sorting doors then feed in a list of door elements and then choose a second parameter such as \"Mark\" as a string., FillPattern.DraftingPatFileImperial - Creates the relevant strings for the .pat file. , FillPattern.DraftingPatFileMetric - Creates the relevant strings for the .pat file. , FillPattern.LinePatternCreation - Creates and visualises the line pattern used in fill patterns. Part of the method of creating a Fill Pattern (.pat) file using the Zebra package., FillPattern.ModelPatFileImperial - Creates the relevant strings for the .pat file. , FillPattern.ModelPatFileMetric - Creates the relevant strings for the .pat file. , FillPattern.PresetBrick - Creates a the string needed for a standard custom brick pattern. Change the height and width of brick to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftingPatFile node., FillPattern.PresetBrickMortar - Creates a string needed for the a standard custom brick pattern with mortar. Change the height and width of the brick, as well as the mortar allowance to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftingPatFile node., FillPattern.PresetCrosshatch - Creates the string needed for a standard crosshatch pattern. Change the width to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftPatFile node., FillPattern.PresetDiagonalCrosshatch - Creates the string needed for a standard diagonal crosshatch pattern. Change the width to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftPatFile node., FillPattern.PresetFlemish - Creates a string needed for the standard flemish bond pattern, with no mortar joints visible. Change the height and width of the brick to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftingPatFile node., FillPattern.PresetFlemishMortar - Creates the string needed for a standard flemish bond pattern with mortar. Change the height and width of the brick, as well as the mortar allowance to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftingPatFile node., FillPattern.PresetFlooringPavers - Creates the string needed for a custom flooring pavers pattern. Change the the width of the squares and diamonds to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftPatFIle node, FillPattern.PresetHerringbone - Creates the string needed for a standard custom herringbone pattern. Change width to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftPatFile node., FillPattern.PresetHollandParquet - Creates the string needed for a standard stone holland parquet pattern. Change the length to toggle the size of the pattern. Feed the ouptut string into a FillPattern.ModelPatFile or FillPattern.DraftPatFile node., FillPattern.PresetOctagon - Creates the string needed for a standard octagon pattern. Change the side length to toggle the size of the pattern. Feed the output string into a FillPattern.ModelPatFile or FillPattern.DraftPatFile node., Logic.If - Retains the old status of the previous built-in IF node., Rooms.SortByLevelAndParameter - Feed in a list of rooms and sort them first by the elevation of the level they are placed and then by a parameter.\r\n\r\nAs an example if you feed in a list of rooms and then choose a second parameter such as \"Number\" as a string., String.AddLeadingZeros - Takes an input of a series of numbers, finds the length of the maximum number and then adds leading zero's to any numbers of less digits til they all match.\r\n\r\nAs an example if you feed in the numbers 1, 10 and 1000, it will give you the following 0001, 0010, 1000. Lists can be in any order as it searches for the maximum item., String.AllIndicesOf - Returns the indices of the given characters. Works on both nested lists of strings and multiple character inputs, String.AlphabetAsList - Creates the alphabet as a list of strings, String.AlphabetAsString - Creates the alphabet as a string, String.AsciiBinaryCode - Creates the binary codes as string, String.AsciiCharactersAsList - Creates the ASCII printable characters excluding letters and digits as a list of strings, String.AsciiCharactersAsString - Creates the ASCII printable characters excluding letters and digits as string, String.AsciiDecimalCode - Creates the decimal codes as string, String.AsciiDescription - Creates the ASCII description as string, String.AsciiHexadecimalCode - Creates the hexadecimal codes as string, String.AsciiOctalCode - Creates the octal codes as string, String.AsciiSymbol - Creates the ASCII symbols as string, String.ChangeAllCharactersTo - Changes all the given characters to the new value, String.ChangeCharacterAtIndexToLower - Changes the character/s at the given index/s to lower, String.ChangeCharacterAtIndexToUpper - Changes the character/s at the given index/s to upper, String.ContainsThisAndThat - Returns true and false based on whether the string contains all the inputs (multiple input as list), String.ContainsThisOrThat - Returns true and false based on whether the string contains either input (multiple input as list), String.ConvertNumberToCharacter - Returns the letter in the alphabet at the desired index. 1 = A, 2 = B, 3 = C ... 26 = Z etc, String.CreateListBasedOnReturns - Creates a list with a new index for each new line (return) within the string, String.DropFirstWord - Removes the set of characters upto the first whitespace in the string, String.DropLastWord - Removes the set of characters after the last whitespace in the string, String.FindIndexOfPhrase - Returns the indices of the entire phrase, String.FromAsciiSymbolTo - Converts the ASCII symbol to its equivalent description, decimal code, hexadecimal code, binary code, and octal code., String.FromBinaryCodeTo - Converts the binary code to its equivalent symbol, description, decimal code, octal code and hexadecimal code. Works with an input of both string or number., String.FromDecimalCodeTo - Converts the decimal code to its equivalent symbol, description, binary code, octal code, and hexadecimal code. Works with an input of both string and number., String.FromHexadecimalCodeTo - Converts the hexadecimal code to its equivalent symbol, description, decimal code, binary code, and octal code. Works with an input of both string and number., String.FromOctalCodeTo - Converts the octal code to its equivalent symbol, description, decimal code, binary code, and hexadecimal code. Works with an input of both string and number., String.NumbersAsList - Creates the numbers 0-9 as a list of strings, String.NumbersAsString - Creates the numbers 0-9 as string, String.Randomise - Returns a random selection of letters, numbers and characters, String.RemoveAfterCharacters - Removes the part of the string after the input character/s, String.RemoveAllWhitespace - Removes all the whitespace within the string, String.RemoveBeforeCharacters - Removes the part of the string before the input character/s, String.RemoveCharacterAtIndices - Removes the characters from the string at the given indices, String.RemoveCharactersBetweenInputs - Removes the part of the string between the two inputs, String.RemoveWordsOfMinimumLength - Removes all the words in the string that are less than the minimum desired length, String.ReturnCharacterAtIndex - Returns the character in the given string at the specified index(s), String.ReturnCharactersBetweenInputs - Returns the part of the string between the two inputs, String.ToCamelCase - Changes the current string to Camel Case. Boolean toogle for the removal of spaces., String.ToList - Convert the given string to a list",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-07-01T13:17:48.942Z",
          "full_dependency_versions": [ "2016.7.2", "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Zebra",
              "_id": "55842cbaf2ae5a9a070000c2"
            },
            {
              "name": "If Equal Return Index",
              "_id": "5297a3ff9de41c8235000018"
            }
          ],
          "direct_dependency_versions": [ "0.1.0" ],
          "direct_dependency_ids": [
            {
              "name": "If Equal Return Index",
              "_id": "5297a3ff9de41c8235000018"
            }
          ],
          "change_log": "",
          "version": "2016.7.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-07-01T13:17:48.942Z",
      "num_versions": 15,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -6,
      "downloads": 1006,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Zebra is a collection of nodes that extend the functionality of strings within dynamo, aid in the creation and visualisation of Revit Fill Patterns (.pat files), and sort elements.\r\n\r\nPlease use with care and always back up work.\r\n\r\nFor further information or requests please contact me on twitter @MarkThorley1 or email mark.thorley@designtech.io",
      "maintainers": [
        {
          "username": "MarkDT",
          "_id": "53ea26640e5572016a00018c"
        }
      ],
      "keywords": [ "string", "list", "index", "upper", "lower", "character", "symbol", "ascii", "input", "remove", "whitespace", "camel", "case", "word", "length", "binary", "code", "pattern", "fill", "model", "drafting", "line", "creation" ],
      "white_list": false
    },
    {
      "_id": "55190c5d5899bb370500001e",
      "name": "Haeahn",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/0a745763-dc9b-495e-ab2c-8605306a8a3egregPkg865.zip",
          "contents": "AffixToParameterValue - Prefix or Suffix  Strings to Parameter Value, NumberingBySequence - Set Parameter By Sequential Numbering, RearrangeByCurve - Rearrange Element List By Selected Curve, Geom.AddDiagonal_Hexagon - Add a Diagonal Line to a Given Hexagon Perimeter, Geom.AddDiagonal_Pentagon - Add a Diagonal Line to a Given Pentagon Perimeter, Geom.AddDiagonal_Quadrangle - Add a Diagonal Line to a Given Quadrangular Perimeter, Geom.AreaByPerimeter_Hexagon - Calculate the Area of a Hextagon by its Perimeter Length, Geom.AreaByPerimeter_Pentagon - Calculate the Area of a Pentagon by its Perimeter Length, Geom.AreaByPerimeter_Quadrangle - Calculate the Area of a Quadrangle by its Perimeter Length, Geom.AreaByPerimeter_Triangle - Calculate the Area of a Triangle by its Perimeter Length, Room.CombineRoomId - Combine two Parameter into  a Room Id, Room.UpdateFromExcel - Create Room From Excel sheet, Room.UpdateFromExcel_R2 - Create Room From Excel sheet (Revit 2015 After), Room.WriteToExcel - Write Room Info To Excel Sheet, Room.WriteToExcel_R2 - Wrte Room Info To Excel Sheet (Revit 2015 After), Schedule.ExportToExcel - Export View Schedule data to Excel Sheet, Schedule.KeyExportToExcel - Export KeySchedule data to Excel Sheet, Schedule.KeyImportFromExcel - Import & Update Key Schedule From Excel Sheet, NumberToStringWithRounding - Convert a Number To String with Rounding, String.ReplaceFirstWith - Replace a first finding with a given String",
          "engine_metadata": "",
          "engine_version": "1.0.0.336",
          "created": "2016-07-19T02:41:27.056Z",
          "full_dependency_versions": [ "2016.7.19" ],
          "full_dependency_ids": [
            {
              "name": "Haeahn",
              "_id": "55190c5d5899bb370500001e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.7.19",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-07-19T02:41:27.056Z",
      "num_versions": 12,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 141,
      "repository_url": "",
      "site_url": "http://bim.sns.haeahn.com/",
      "banned": false,
      "deprecated": false,
      "group": "H5D/BIM",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Package for Haeahn Architecture, Inc.",
      "maintainers": [
        {
          "username": "pers@haeahn.com",
          "_id": "54f3f6a50c7eac9b57000004"
        }
      ],
      "keywords": [ "addition", "geomtry", "area" ],
      "white_list": false
    },
    {
      "_id": "5601b278662bf0e9080001c0",
      "name": "Plissken",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/86db8349-1e1e-40f2-b593-630bfb16f240gregPkg426.zip",
          "contents": "Black - The color black, Blue - The color blue, CollectCADImports - Collect all CAD Imports in the current model., CollectCADLinks - Collect all CAD Links in the current model., CollectDetailGroups - Collect all Detail Groups in the current Model., CollectDimensionStyles - Collect all Dimension Styles in the current model., CollectFillPatterns - Collect all Fill Patterns in the current model., CollectImageInstance - Collect all Instances of Images in the current model., CollectImageType - Collect all ImageType elements in the current model., CollectLinePatterns - Collect all Line Patterns in the current model., CollectMaterials - Collect all Materials in the currect model., CollectModelGroups - Collect all Model Groups in the current model., CollectRevitLinks - Collect all Revit Links in the current model., CollectSheets - Collect all Sheets in the current model for auditing purposes, CollectViews - Collect all Views in the current model., CollectWorksets - Collect names and workset IDs of all User created Worksets in the current model., ColumnstoWorkset - Send all columns not in a group to a given workset, Cyan - The color cyan, DoorstoWorkset - Send all doors not in a group to a given workset., DWGtoWorkset - Send all DWGs not in groups to a given workset., ElementstoWorkset - Send elements not in a group to a given workset., FilledRegionBorderChange - Change the linestyle of all Filled Regions given to a given linestyle., FilledRegionColorChange - Change the color of a given filled region to another color., FilledRegionColortoColor - Change all Filled Regions of a given color to another given color, FloorstoWorkset - Send all Floors not in a group to a given workset, GenerateSheetList - Collect all sheets in a project and extract Parameters needed to generate a Sheet List, Get Element by ID - Get elements by ID, GetLineStyleColor - Get the color of a given LineStyle, GetWorksetIDbyName - Get the ID of a User created Workset by a given Name., GraphicsStylebyName - Retrieve a GraphicsStyle element by a given name., GraphicsStyles - Collect all GraphicsStyles in the file., Green - The color green, Grey 128 - The color grey with an rgb value of 128,128,128, Grey 192 - The color grey with an rgb value of 192,192,192, Grey 65 - The color grey with an rgb value of 65,65,65, GridstoWorkset - Sends all grids not in a group to a given workset, InvisibleLineStyle - The Linestyle for <Invisible Lines> from the Internal Object Styles Category, LevelstoWorkset - Send all levels not in a group to a given workset, LineColortoLineStyle - Change all Lines with a linestyle of a given color to another given linestyle, LinestoLinestyle - Change the Linestyle of  a list of given lines all to a given Linestyle., LineStylebyName - Retrieve a LineStyle by a given name, LineStyles - Collect all LineStyles in the file, LinestyletoLinestyle - Change the Linestyle of input lines from a given Linestyle to another Given Linestyle, Magenta - The color magenta, MassestoWorkset - Send all Masses not in a group to a given workset., Red - The color red, RoomSeperationLinestoWorkset - Send all room seperation lines not in a group to a given workset., RoomstoWorkset - Send all rooms not in a group to a given workset., SATtoWorkset - Send all SATs not in a group to a given workset., ShaftstoWorkset - Send all shafts not in a group to a given workset., SortCADElements - Sort the Element Types Brought in by an exploded CAD file., SpecialtyEquipmenttoWorkset - Send all Specialty Equipment elements not in a group to a given Workset, StairstoWorkset - Send all Stairs not in a group to a given workset, WallstoWorkset - Send all walls not in a group to a given workset., White - The color white, Yellow - The color yellow, CollectLevels - Collect all levels in the current project., CreateAndUpdateLevels - Input a list of Level Names and Elevations, the node looks for level names that already exist and update their elevations, if the level name does not exist it will create a new level with the given elevation., ElementFromListByName - Get the first instance of an element with a given name from a list., GetLevelAbove - Get the nearest level above an element., GetLevelBelow - Find the nearest level below an element.",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-07-19T16:11:43.061Z",
          "full_dependency_versions": [ "2016.7.19" ],
          "full_dependency_ids": [
            {
              "name": "Plissken",
              "_id": "5601b278662bf0e9080001c0"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.7.19",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-07-19T16:11:43.061Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 239,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Now works with Revit 2016, Plissken is a collection of tools used for auditing Revit projects and hunting down rogue elements in a file. And using the inherent information in those elements to properly organize them.",
      "maintainers": [
        {
          "username": "tjhogan2@gmail.com",
          "_id": "5601b1d3662bf0e9080001bf"
        }
      ],
      "keywords": [ "audit", "cad", "organize", "sheets" ],
      "white_list": false
    },
    {
      "_id": "57919bd2535146064800009b",
      "name": "Family Layout",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/832b44cb-d29d-47cc-95df-abf230ff6bb5gregPkg794.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-07-22T04:06:42.369Z",
          "full_dependency_versions": [ "1.0.1180" ],
          "full_dependency_ids": [
            {
              "name": "Family Layout",
              "_id": "57919bd2535146064800009b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1180",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-07-22T04:06:42.369Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 212,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Arraying families",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Array all families of a category in a line",
      "maintainers": [
        {
          "username": "dominic.martens",
          "_id": "57919b0c535146064800009a"
        }
      ],
      "keywords": [ "spacing" ],
      "white_list": false
    },
    {
      "_id": "574d9e59e70394822f000036",
      "name": "SpacePlanning",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/e16e0c37-dde7-4aa3-a300-bb7230a97810gregPkg815.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.1.0.2093",
          "created": "2016-09-23T04:04:44.942Z",
          "full_dependency_versions": [ "1.0.44" ],
          "full_dependency_ids": [
            {
              "name": "SpacePlanning",
              "_id": "574d9e59e70394822f000036"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.44",
          "contains_binaries": true,
          "node_libraries": [ "SpacePlanning, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-09-23T04:04:44.942Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 503,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "space plan layout builder",
      "maintainers": [
        {
          "username": "subhajit.das@autodesk.com",
          "_id": "573f14f2e383e60d6b000006"
        }
      ],
      "keywords": [ "spaceplanning" ],
      "white_list": false
    },
    {
      "_id": "5775c9ab535146064800000d",
      "name": "DynaFabrication2017",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/bb511349-08bb-4029-90c2-4f86c394a3a2gregPkg398.zip",
          "contents": "Align Part By Connectors and Couple - Align parts by specified connectors.  Will couple if Boolean set to True, Application Information - Get information about the current Revit setup, Clear Design Selection - RME to FAB clear design lines.  If node doesnt work execute the button manualy and look in the journal file.  You will see something like this  Jrn.RibbonEvent \"Execute external command:CustomCtrl_%CustomCtrl_%Add-Ins%RME to FAB%Clear Design Selection:RVTFabExchange.ClearDesignLineElementsCmd\". Take inbetween the first : and next : and put in string in node., Clear Graphics Selection - RME to FAB clear graphics.  If node doesnt work execute the button manualy and look in the journal file.  You will see something like this  Jrn.RibbonEvent \"Execute external command:CustomCtrl_%CustomCtrl_%Add-Ins%RME to FAB%Clear Graphics Selection:RVTFabExchange.ClearGraphicsElementsCmd\". Take inbetween the first : and next : and put in string in node., Connector(s) Information - Gets the connector(s) information.  Can be used with both fabrication and non fabrication connector(s).  Owner name and ID only work for non fabrication items., Create Fabrication Part (Button) - Create fabricatin part based off doc, servicebutton, condition and level.  Places at 0,0,0., Design To Fabrication Converter - Convert design elements to fabrication parts, Dropdown List - No description provided, Export Fabrication Job - Export selected items to MAJ , Export - RME to FAB Export. If node doesnt work execute the button manualy and look in the journal file.  You will see something like this   Jrn.RibbonEvent \"Execute external command:CustomCtrl_%CustomCtrl_%Add-Ins%RME to FAB%Out:RVTFabExchange.ExportCmd\". Take inbetween the first : and next : and put in string in node., Fabrication Specification Dropdown List - Dropdown list of all specifications , Get All Fabrication Configuration(s) - Gets all the fabrication configurations in the current document., Get All Fabrication Connector(s) - Gets all the Connector(s) in the configuration, Get All Fabrication Service(s) - Get all fabrication services in loaded configuration, Get All Loaded Fabrication Service(s) - Get all loaded services in document, Get Fabrication Configuration Info - Get loaded fabriation configuration information (Name, Path and Profile), Get Fabrication Insulation Specification(s) - Sets fabrication part bases of connector, Get Fabrication Material Thickness(s) - Get the materials gauge thicknesses, Get Fabrication Material(s) Information - Get fabrication material information, Get Fabrication Service Group Button(s) - Get the button name and identifier of the specific service and group, Get Fabrication Service Group(s) - Gets the group(s) Name and ID associated with the service., Get Fabrication Specification(s) - Get all fabrication specification(s), Import Fabrication Job - Import MAJ file, Journal File Comment - Add a comment to the journal file, Load Fabrication Service(s) - Load fabrication service(s) into document, Loaded Applications - Get all loaded applications, Optimize Fabrication Part(s) Length - Optimize fabrication part(s) Length, Part(s) CID Number - Get the CID number, Part(s) Current Product List Entry - Get the current Product list entry for the part(s), Part(s) Product List Entry(s) - Get the part(s) product list entry index and name, Reposition Fabrication Part - Swaps selected end part with opposite end part., RevitLookup Snoop Active View - Using RevitLookup, snoop Revit's active view.  RevitLookup must be installed for this to work. If node doesnt work execute the button manualy and look in the journal file.  You will see something like this J  Jrn.RibbonEvent \"Execute external command:CustomCtrl_%CustomCtrl_%CustomCtrl_%Add-Ins%Revit Lookup%Options%Snoop Active View...:RevitLookup.CmdSnoopActiveView\". Take inbetween the first : and next : and put in string in node., RevitLookup Snoop Application - Using RevitLookup, snoop Revit's application.  RevitLookup must be installed for this to work. If node doesnt work execute the button manualy and look in the journal file.  You will see something like this J   Jrn.RibbonEvent \"Execute external command:CustomCtrl_%CustomCtrl_%CustomCtrl_%Add-Ins%Revit Lookup%Options%Snoop Current Selection...:RevitLookup.CmdSnoopModScope\". Take inbetween the first : and next : and put in string in node., RevitLookup Snoop Current Selection - Using RevitLookup, snoop Revit's current selection.  RevitLookup must be installed for this to work. If node doesnt work execute the button manualy and look in the journal file.  You will see something like this J    Jrn.RibbonEvent \"Execute external command:CustomCtrl_%CustomCtrl_%CustomCtrl_%Add-Ins%Revit Lookup%Options%Snoop Current Selection...:RevitLookup.CmdSnoopModScope\". Take inbetween the first : and next : and put in string in node., RevitLookup Snoop DB - Using RevitLookup snoop Revit's DB.  RevitLookup must be installed for this to work. If node doesnt work execute the button manualy and look in the journal file.  You will see something like this J Jrn.RibbonEvent \"Execute external command:CustomCtrl_%CustomCtrl_%CustomCtrl_%Add-Ins%Revit Lookup%Options%Snoop Db..:RevitLookup.CmdSnoopDb\". Take inbetween the first : and next : and put in string in node., Rotate Part By Connector - Rotates part about connector a specified angle. Rectangular/Oval angles are limited to 90,180,270. Taps can't be rotated., Rotate Tap By Connector - Rotate a tap about a connector, Set Fabrication Configuration (Global) - Set fabrication configuration with Global profile, Set Fabrication Configuration (Specific) - Sets fabrication configuration with specific profile, Set Fabrication Position By End - Sets fabrication part bases of connector, Set Fabrication Specification - Sets the fabrication specification based on ID, Set Library Path(s) - Set the library path(s), Set Shared Parameter File - Set the shared parameter file, Store Design Line Elements - RME to FAB store design lines.  If node doesnt work execute the button manualy and look in the journal file.  You will see something like this Jrn.RibbonEvent \"Execute external command:CustomCtrl_%CustomCtrl_%Add-Ins%RME to FAB%Store Design Line Elements:RVTFabExchange.StoreDesignLineElementsCmd\". Take inbetween the first : and next : and put in string in node., Store Graphics Elements - RME to FAB graphics elements.  If node doesnt work execute the button manualy and look in the journal file.  You will see something like this  Jrn.RibbonEvent \"Execute external command:CustomCtrl_%CustomCtrl_%Add-Ins%RME to FAB%Store Graphics Elements:RVTFabExchange.StoreGraphicsElementsCmd\". Take inbetween the first : and next : and put in string in node., Unload Fabrication Service(s) - Unload fabrication service(s) from document",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-07-25T19:29:14.313Z",
          "full_dependency_versions": [ "0.1.13" ],
          "full_dependency_ids": [
            {
              "name": "DynaFabrication2017",
              "_id": "5775c9ab535146064800000d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.13",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-07-25T19:29:14.313Z",
      "num_versions": 13,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 3,
      "downloads": 343,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "DynaFabrication2018",
          "_id": "5926f237583778af0f000031"
        }
      ],
      "num_dependents": 1,
      "description": "Nodes for fabrication within Revit.  Requires a fabrication database.  Only been tested in Revit 2017 and Dynamo 1.x.  Check back often as more nodes will get added as time permits.  Please send comments/feedback to nchapman@generalheating.com",
      "maintainers": [
        {
          "username": "nathan.chapman",
          "_id": "57741ab4a8864af46c000009"
        }
      ],
      "keywords": [ "fabrication", "bim", "fab" ],
      "white_list": false
    },
    {
      "_id": "579faa1fa669eab575000005",
      "name": "test_Aaron3",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/ca72b94d-dea2-4281-bc21-8b42513f6e23gregPkg89.zip",
          "contents": "Diagonal Generation - Generate diagonals between two lists of  points",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-08-01T19:59:27.302Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "test_Aaron3",
              "_id": "579faa1fa669eab575000005"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-01T19:59:27.302Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "test_Aaron3test_Aaron3",
      "maintainers": [
        {
          "username": "aaron.tang@autodesk.com",
          "_id": "56b0102ac3e9ee4a0800007b"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "579faa7ce8d2032d77000003",
      "name": "test_Aaron4",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/2ac5ad2b-3fa9-4746-ba74-73ac4a8608bagregPkg941.zip",
          "contents": "PointsToSurface - Map Points from Source Surface to Target Surface",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-08-01T20:01:00.462Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "test_Aaron4",
              "_id": "579faa7ce8d2032d77000003"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-01T20:01:00.462Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 3,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "test_Aaron4test_Aaron4",
      "maintainers": [
        {
          "username": "aaron.tang@autodesk.com",
          "_id": "56b0102ac3e9ee4a0800007b"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "579fab89e8d2032d77000007",
      "name": "testRPoint3",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/5ac72ce8-922b-467b-aa3e-79b193eedadcgregPkg0.zip",
          "contents": "testPoint - test",
          "engine_metadata": "",
          "engine_version": "1.1.1.2130",
          "created": "2016-08-01T20:05:29.698Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "testRPoint3",
              "_id": "579fab89e8d2032d77000007"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-01T20:05:29.698Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 13,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "test adsfasdfasdfa adf ",
      "maintainers": [
        {
          "username": "DynamoTeam",
          "_id": "556e21d1888bb8ca03000008"
        }
      ],
      "keywords": [ "test" ],
      "white_list": false
    },
    {
      "_id": "579fab0de8d2032d77000005",
      "name": "testRPoint2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/7cdb7fec-eb9d-45fb-b490-eb879a127302gregPkg616.zip",
          "contents": "testPoint - test",
          "engine_metadata": "",
          "engine_version": "1.1.1.2130",
          "created": "2016-08-01T20:06:57.175Z",
          "full_dependency_versions": [ "0.0.4" ],
          "full_dependency_ids": [
            {
              "name": "testRPoint2",
              "_id": "579fab0de8d2032d77000005"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-01T20:06:57.175Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "test",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "tad asdfasdfwe wedafa ",
      "maintainers": [
        {
          "username": "DynamoTeam",
          "_id": "556e21d1888bb8ca03000008"
        }
      ],
      "keywords": [ "test" ],
      "white_list": false
    },
    {
      "_id": "5745d707e70394822f000006",
      "name": "WhatTheNode",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/474babf2-dc5a-4465-9497-c3e498b5aeedgregPkg11.zip",
          "contents": "WhatTheNode - This is a duplicate of a node from Rhythm to help figure out what package custom nodes are from. It utilizes dynamonodes.com's database.",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-08-01T20:30:37.991Z",
          "full_dependency_versions": [ "2016.8.1" ],
          "full_dependency_ids": [
            {
              "name": "WhatTheNode",
              "_id": "5745d707e70394822f000006"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.8.1",
          "contains_binaries": true,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-01T20:30:37.991Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 490,
      "repository_url": "",
      "site_url": "sixtysecondrevit.blogspot.com",
      "banned": false,
      "deprecated": false,
      "group": "Breaking CAD",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Contains a node to assist with finding what package custom nodes come in. Made possible with dynamonodes.com",
      "maintainers": [
        {
          "username": "j0hnp",
          "_id": "54943e329508c43706000013"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57340c7eea5c18500800000c",
      "name": "Dialog",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/f198434a-3edc-4fc9-ad44-f9ef156b60f0gregPkg568.zip",
          "contents": "Dialog - Displays an alert box in Revit",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-08-02T01:23:16.327Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Dialog",
              "_id": "57340c7eea5c18500800000c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-02T01:23:16.327Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 172,
      "repository_url": "",
      "site_url": "http://truevis.com",
      "banned": false,
      "deprecated": false,
      "group": "truevis",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Displays an alert box in Revit",
      "maintainers": [
        {
          "username": "design1@truevis.com",
          "_id": "571b032f305bec4d3c00001c"
        }
      ],
      "keywords": [ "dialog", "box", "alaert", "taskdialog", "popup" ],
      "white_list": false
    },
    {
      "_id": "57a0f1f4e8d2032d7700001b",
      "name": "BecauseWeDyanmo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/7817289f-3ff4-4f8d-b309-c2c753c86076gregPkg127.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-08-02T19:18:12.883Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "BecauseWeDyanmo",
              "_id": "57a0f1f4e8d2032d7700001b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": true,
          "node_libraries": [ "BecauseWeDynamo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-08-02T19:18:12.883Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 250,
      "repository_url": "https://github.com/BecauseWeCan/BecauseWeDynamo",
      "site_url": "http://www.becausewecan.org",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "modeling aid for panelization and fabrication of faceted models with planar faces; includes tool set to project panels onto xy-plane with labels and has dxf export by layer as preparation for 2.5D fabrication. mesh has half-edge topology and allows for three faces joining at an edge if panel thickness is centered at mesh face.",
      "maintainers": [
        {
          "username": "be.han",
          "_id": "558a1ca0f2ae5a9a070000d3"
        }
      ],
      "keywords": [ "dxf", "export", "mesh", "topology", "fabrication", "panelization" ],
      "white_list": false
    },
    {
      "_id": "5723e7f4305bec4d3c00005a",
      "name": "Juggernaught",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/72faa717-05e1-4a15-93ef-48847a6dba77gregPkg753.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-08-04T05:50:06.132Z",
          "full_dependency_versions": [ "1.0.8" ],
          "full_dependency_ids": [
            {
              "name": "Juggernaught",
              "_id": "5723e7f4305bec4d3c00005a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.8",
          "contains_binaries": true,
          "node_libraries": [ "JuggernaughtCore.customization, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "JuggernaughtCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "JuggernaughtRevit.customization, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "JuggernaughtRevit, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "JuggernaughtUI.customization, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "JuggernaughtUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-08-04T05:50:06.132Z",
      "num_versions": 9,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 305,
      "repository_url": "",
      "site_url": "www.learndynamo.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A collection of nodes for educational purposes.\r\n\r\nFor more information, please visit www.learndynamo.com. If you have any questions or find any bugs, please let me know at Jeremy@learndynamo.com\r\n\r\nCheers!\r\n\r\n1.0.7 -- Bug fix on SelectItem.ByList; node not updating correctly.",
      "maintainers": [
        {
          "username": "JeremyJamesGraham",
          "_id": "55f7d345662bf0e90800017f"
        }
      ],
      "keywords": [ "juggernaught", "learn", "dynamo" ],
      "white_list": false
    },
    {
      "_id": "57ab31524172a48a35000033",
      "name": "ssaS",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/067c1a00-0e0b-442c-bfa2-e08658a8236bgregPkg415.zip",
          "contents": "Test - Test project",
          "engine_metadata": "",
          "engine_version": "1.1.1.2153",
          "created": "2016-08-10T13:51:14.710Z",
          "full_dependency_versions": [ "6.6.6" ],
          "full_dependency_ids": [
            {
              "name": "ssaS",
              "_id": "57ab31524172a48a35000033"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "6.6.6",
          "contains_binaries": true,
          "node_libraries": [ "ClassLibrary1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-08-10T13:51:14.71Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 10,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "SasaSs fsdf sf",
      "maintainers": [
        {
          "username": "lingkonn@gmail.com",
          "_id": "552d15185899bb3705000075"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57a4e4d84172a48a35000010",
      "name": "Etabs Excel to Revit",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8b7a7d4a-bc86-4665-a32d-8ed2a6fc71acgregPkg169.zip",
          "contents": "Etabs Excel to Revit - Format Etabs Excel \"Joint Coord. Column Conn. Beam Conn. & Framing Assigment Section\" to a new Excel file to be used in Dynamo. ",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-20T16:14:09.457Z",
          "full_dependency_versions": [ "0.0.94", "2016.5.27" ],
          "full_dependency_ids": [
            {
              "name": "Etabs Excel to Revit",
              "_id": "57a4e4d84172a48a35000010"
            },
            {
              "name": "BumbleBee",
              "_id": "5592f3b0f2ae5a9a07000100"
            }
          ],
          "direct_dependency_versions": [ "2016.5.27" ],
          "direct_dependency_ids": [
            {
              "name": "BumbleBee",
              "_id": "5592f3b0f2ae5a9a07000100"
            }
          ],
          "change_log": "",
          "version": "0.0.94",
          "contains_binaries": true,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-20T16:14:09.457Z",
      "num_versions": 22,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 362,
      "repository_url": "https://github.com/dannysbentley/Etabs_ExcelToRevit",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Parachence",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "%Under Construction% Format Etabs Excel Worksheet \"Joint Coord. Column Conn. Beam Conn. & Framing Assigment Section\" to be used in Dynamo and Revit.",
      "maintainers": [
        {
          "username": "danny.bentley@som.com",
          "_id": "574db6e0e70394822f000039"
        }
      ],
      "keywords": [ "etabs", "excel", "structural", "analysis" ],
      "white_list": false
    },
    {
      "_id": "551b2a415899bb370500002e",
      "name": "BlackBox",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/de545f18-ef40-453c-ad6d-3bc1193d96dcgregPkg535.zip",
          "contents": "Collector.Area - Filters for Elements,Levels and Area Types to get the Areas from a Revit Model. I made the Elements as a input so that this can be used across linked files, Collector.RoomFromElements - Feed elements into this node and get the Rooms they are in. This uses the Revit API property of Room that each elemant inherits. , Get.CategoryName - Get the category of an element, Get.CurtainPanelByLevel - Select curtain panels by the level they are on. These panels will look to the wall they are hosted in and use the Base Constraint. This hurdles the difficulties in door and windows not reading the level corectly., Get.ElevationsWithoutMarker - No description provided, Get.FamilyName - Get the Famiily Name of an Element, Get.FlippedWall - This node creates two lists of walls, one in which the wall has been flipped from original position and on that has not been.  It is useful in Curtain Walls that have complicated Curtain Panels, Get.Host - get the host of am element, Get.NestedFamily - This node uses the SuperComponent and SubComponets properties of Revit API to organize the elements into lists based on there make-up. I haven't tested multiple nested families but have found it helpfull esp. on Doors, Plumbing Fixtures, & Casework to find out which family is nested in which parent, PointCloud.CreateFilter - No description provided, PointCloud.GetInstance - No description provided, PointCloud.ReadPoints - No description provided, PointCloud.ToDynamoPoints - No description provided",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2016-08-16T13:25:01.057Z",
          "full_dependency_versions": [ "2016.8.5" ],
          "full_dependency_ids": [
            {
              "name": "BlackBox",
              "_id": "551b2a415899bb370500002e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.8.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-16T13:25:01.057Z",
      "num_versions": 17,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 3348,
      "repository_url": "",
      "site_url": "www.serialnonstandard.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "MEPWORKS",
          "_id": "56446665662bf0e908000324"
        },
        {
          "name": "GuDYNCat Scripts",
          "_id": "56fc70615bee3e21380000bc"
        }
      ],
      "num_dependents": 3,
      "description": "BlackBox is a Dynamo (1.0.0) package. It is is a compilation of nodes that have been built for specific project needs. I find them helpful both in our process and to help teach basic/advanced Dynamo and basic Revit API.  BlackBox is an experimental tool and is provided \"as is\" without warranty. ",
      "maintainers": [
        {
          "username": "anderj24",
          "_id": "5378dd950e5572016a000069"
        }
      ],
      "keywords": [ "area", "room", "nested", "roomfromelement", "parentfamily", "nestedfamily", "point", "cloud", "pointcloud", "haswallbeenflipped", "curtainpanelbylevel" ],
      "white_list": false
    },
    {
      "_id": "57b672e14172a48a3500008d",
      "name": "asdfasdfasdfa",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/431ace04-11e9-4121-a693-62a5761c62b4gregPkg284.zip",
          "contents": "LunchBox Area Element Collector - Collects rooms from the Revit document",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-08-19T02:45:53.810Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "asdfasdfasdfa",
              "_id": "57b672e14172a48a3500008d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-19T02:45:53.81Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 2,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "qersafqwerqwerqwer",
      "maintainers": [
        {
          "username": "leph0002",
          "_id": "57b531cf4172a48a35000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57b677234172a48a3500008f",
      "name": "asdfasdfasdkfj;asdjk",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/5975db4d-53ec-45d7-be40-bc0c5b41c20dgregPkg448.zip",
          "contents": "testingtesting - adsasdsadasdasd",
          "engine_metadata": "",
          "engine_version": "1.1.1.2200",
          "created": "2016-08-19T03:04:03.987Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "asdfasdfasdkfj;asdjk",
              "_id": "57b677234172a48a3500008f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-19T03:04:03.987Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 3,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": ";alskdfj;alskdfj;alksdjf;lkj",
      "maintainers": [
        {
          "username": "leph0002",
          "_id": "57b531cf4172a48a35000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57ba63db4172a48a350000a2",
      "name": "asdfajsdlkfja;sdlkj",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/7aa78f25-e13b-4b2b-a3c2-fb3b95258f6bgregPkg716.zip",
          "contents": "testingCustomNode - a;lskdfja;sdj",
          "engine_metadata": "",
          "engine_version": "1.1.1.2200",
          "created": "2016-08-22T02:30:51.832Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "asdfajsdlkfja;sdlkj",
              "_id": "57ba63db4172a48a350000a2"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-22T02:30:51.832Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -5,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "fa;dslkfajsd;lkj",
      "maintainers": [
        {
          "username": "leph0002",
          "_id": "57b531cf4172a48a35000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57ba67934172a48a350000a4",
      "name": "ja;lsdkfja;lsdkfja;lsdkfja;lskdj",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/67b7e9c2-7042-4223-9134-0ffbe4c21a69gregPkg951.zip",
          "contents": "CustomNode - asdflkajsd;flkasdfhasd;lkj",
          "engine_metadata": "",
          "engine_version": "1.1.1.2200",
          "created": "2016-08-22T02:46:43.137Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "ja;lsdkfja;lsdkfja;lsdkfja;lskdj",
              "_id": "57ba67934172a48a350000a4"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-22T02:46:43.137Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -4,
      "downloads": 4,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "a;lsdkfjas;dlkfjasdl;kj",
      "maintainers": [
        {
          "username": "leph0002",
          "_id": "57b531cf4172a48a35000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57ba68b14172a48a350000a6",
      "name": "afsdfasdf",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c79b5a91-cc19-4c94-a696-e56f092a9c07gregPkg535.zip",
          "contents": "afkajs;dlfkajsd;fkl - fasdfasdf",
          "engine_metadata": "",
          "engine_version": "1.1.1.2200",
          "created": "2016-08-22T02:51:29.129Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "afsdfasdf",
              "_id": "57ba68b14172a48a350000a6"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-22T02:51:29.129Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "adsfasdfasasdf",
      "maintainers": [
        {
          "username": "leph0002",
          "_id": "57b531cf4172a48a35000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57ba6ff94172a48a350000a8",
      "name": "adfasdfasdfadsf",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/5ac51f2d-cf81-49aa-9a32-9f060b5d5ed5gregPkg322.zip",
          "contents": "adsfjahsfdjahsdfjklahs - asdl;kfjas;ldkfja;lksjdf",
          "engine_metadata": "",
          "engine_version": "1.1.1.2200",
          "created": "2016-08-22T03:22:33.924Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "adfasdfasdfadsf",
              "_id": "57ba6ff94172a48a350000a8"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-22T03:22:33.924Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 7,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "asdfasdfadsfasdf",
      "maintainers": [
        {
          "username": "leph0002",
          "_id": "57b531cf4172a48a35000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57ba75284172a48a350000aa",
      "name": "asdfasdfasdfadsfa",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/1f58d3f8-42b4-4616-949f-1595cf859e28gregPkg871.zip",
          "contents": "TestingCustomNode - a;lsdkfajs;dlfkajs;dlfkaj",
          "engine_metadata": "",
          "engine_version": "1.1.1.2200",
          "created": "2016-08-22T03:44:40.496Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "asdfasdfasdfadsfa",
              "_id": "57ba75284172a48a350000aa"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-22T03:44:40.496Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 7,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "adsfadsfasdfadsf",
      "maintainers": [
        {
          "username": "leph0002",
          "_id": "57b531cf4172a48a35000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57bbc7844172a48a350000b7",
      "name": "fadfasdfasdfasdf",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/fde87aff-14c8-4267-85f3-ef556436c211gregPkg763.zip",
          "contents": "testingNode - as;dlkfjads;lkfj",
          "engine_metadata": "",
          "engine_version": "1.1.1.2200",
          "created": "2016-08-23T03:48:20.908Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "fadfasdfasdfasdf",
              "_id": "57bbc7844172a48a350000b7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-23T03:48:20.908Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 7,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "fasdfasdfasdfasdf",
      "maintainers": [
        {
          "username": "leph0002",
          "_id": "57b531cf4172a48a35000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57bd1ade4172a48a350000c4",
      "name": "testing",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c3299f1c-bc96-418a-b03f-f64234241540gregPkg72.zip",
          "contents": "test - as;dlkfjasdl;kfj",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-08-24T03:56:14.699Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "testing",
              "_id": "57bd1ade4172a48a350000c4"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-08-24T03:56:14.699Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 21,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "a;dkfja;sldkfja;sdkj",
      "maintainers": [
        {
          "username": "leph0002",
          "_id": "57b531cf4172a48a35000081"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57cc4bd74172a48a35000122",
      "name": "Robot Link",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/860a76db-af95-4a55-a7ea-30023b9f8ff8gregPkg315.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2016-09-04T16:29:11.841Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Robot Link",
              "_id": "57cc4bd74172a48a35000122"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": true,
          "node_libraries": [ "ClassLibrary5, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-09-04T16:29:11.841Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 95,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Package for linking Dynamo with Robot and Excel",
      "maintainers": [
        {
          "username": "AlexBaalham",
          "_id": "57c9d3e04172a48a35000116"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57cc6e464172a48a35000126",
      "name": "Robot Link 4",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/b89eb591-9291-4569-a023-4c528c86b636gregPkg622.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2016-09-04T18:56:06.784Z",
          "full_dependency_versions": [ "0.0.4" ],
          "full_dependency_ids": [
            {
              "name": "Robot Link 4",
              "_id": "57cc6e464172a48a35000126"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.4",
          "contains_binaries": true,
          "node_libraries": [ "ClassLibrary5, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "RobotLink, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "Microsoft.Office.Interop.Excel, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c" ]
        }
      ],
      "latest_version_update": "2016-09-04T18:56:06.784Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 62,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Link Robot to Dynamo",
      "maintainers": [
        {
          "username": "AlexBaalham",
          "_id": "57c9d3e04172a48a35000116"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57cb06614172a48a3500011d",
      "name": "ExportFBX",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/24ef2e74-b577-479d-a58d-55ebd3634fddgregPkg600.zip",
          "contents": "ExportFBX - Exports all elements in 3D View to separate .fbx files.",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-09-06T07:18:50.450Z",
          "full_dependency_versions": [ "2016.9.4" ],
          "full_dependency_ids": [
            {
              "name": "ExportFBX",
              "_id": "57cb06614172a48a3500011d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.9.4",
          "contains_binaries": true,
          "node_libraries": [ "Archilizer, Version=2016.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-09-06T07:18:50.45Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 143,
      "repository_url": "",
      "site_url": "archilizer.com",
      "banned": false,
      "deprecated": true,
      "group": "Archilizer",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Exports all elements in 3D View to separate .fbx files. Works with \"Current Document\" node from archi-lab.",
      "maintainers": [
        {
          "username": "dnenov",
          "_id": "57cb05fa4172a48a3500011c"
        }
      ],
      "keywords": [ "fbx", "export" ],
      "white_list": false
    },
    {
      "_id": "57d14fc6f615e7725800000b",
      "name": "testung Pakkete",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/27eb880d-9c92-405d-b2cb-0dad01bc196egregPkg861.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2513",
          "created": "2016-09-08T11:47:18.449Z",
          "full_dependency_versions": [ "2.13.26" ],
          "full_dependency_ids": [
            {
              "name": "testung Pakkete",
              "_id": "57d14fc6f615e7725800000b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2.13.26",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-08T11:47:18.449Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 9,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "ne",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Beshriftung)",
      "maintainers": [
        {
          "username": "oleksandr_kordyukov_eleks_com",
          "_id": "57d1469cf615e7725800000a"
        }
      ],
      "keywords": [ "optionalit" ],
      "white_list": false
    },
    {
      "_id": "562f800e662bf0e9080002ab",
      "name": "Clockwork for Dynamo 0.9.x",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/104b6115-6e28-4877-a1a7-6fe1f797b077gregPkg554.zip",
          "contents": "+1 - Increments a value by 1, -1 - Decrements a value by 1, All Elements of Family Type (Universal) - Unlike the built-in  node, this node retrieves all placed instances of a given loadable *or* system family type, All Families Of Category - Gets all famiies of a given category in the model  (does *not *work for system families), All Family Types Of Category - Gets all family types/symbols of a given category in the model  (does *not *work for system families), All Intersecting Elements Of Category - Finds all elements of a specified category that intersect with a list of vectors, All Placed Family Types of Category - Retrieves all family types of a given category that have *placed* instances, All View-Dependent Family Instances Of Category - Gets all view-dependent family instances in a given view for a given list of categories - useful for finding annotation elements, Angle.ByAngleSum - Computes the missing interior angle of a *planar* polygon based on a given list of all other interior angles. , Angle.ByLawOfCosines - Computes an angle of a triangle using the law of cosines. A is the opposite side of the triangle while B and C are the sides forming the angle., Angle.ByLawOfSines - Determines the angle of a triangle based on the law of sines. (Alpha is the angle opposite side A and beta is the angle opposite side B...), Angle.ExteriorAngle - Computes the exterior angle of a given angle., AngleBisector.ByPoints - Retrieves the vector of an angle bisector at point B based on three points (A, B, C) that define the angle. , Application.Version - Retrieves the name, version and build of the current Revit application., AreaSeparator.FromCurve - Creates area separation lines from geometry curves. , Array.AssociatedFamilyParameter - Returns the associated family parameter of an array label (if any). PLEASE NOTE: This node will only work in a family document!, Assembly.AddMembers - Adds any given elements to a given assembly., Assembly.Disassemble - Disassembles an assembly and returns its members, Assembly.FromElements - Creates an assembly from a list of elements, Assembly.Members - Retrieves the members of an assembly, Assembly.RemoveMembers - Removes any given elements to a given assembly., BoundingBox.ByElement - Gets the bounding box of a Revit element, BoundingBox.ByElements - Retrieves a bounding box for a list of elements, BoundingBox.PerimeterCurvesByNormal - Returns the perimeter curve of a bounding box on a plane determined by a given normal and the centroid of the bounding box, BoundingBox.PerimeterCurvesOnPlane - Returns the perimeter curve of a bounding box on a given plane (assuming that the bounding box and plane intersect), Buckyball.ByOriginAndRadius - Returns all the data necessary for modeling a truncated icosahedron (vertices and struts) as well as the surface area and volume. , BuiltInCategory.ByName - Looks up all the built-in categories based on a given name (or part of a name) of the category. Search is case-insensitive., BuiltInParameter.ByName - Looks up all the built-in parameters based on a given name (or part of a name) of the parameters. Search is case-insensitive., Category.Subcategories - Retrieves all the subcategories for a given category, Cathetus.ByPythagoras - Computes the length of one of the catheti / legs of a right triangle using the Pythagorean Theorem. B is the other leg / cathetus of the triangle while C is the hypotenuse., Character.FromNumber - Converts a number into a character (where 1 = A, 2 = B, ... , 27 = AA, 28 = AB etc.)., Character.ToNumber - Converts an Excel-style character to a number (e.g. A = 1, AA = 27 etc.)., Clipboard.GetFrom - Gets the content of the clipboard. ATTENTION: Will only work with strings., Clipboard.SendTo - Copies a string to the clipboard. , Color.Aqua - Returns the colour aqua., Color.Black - Returns the colour black., Color.Blue - Returns the colour blue., Color.ByWebColor - Creates a color from a given web color (a hex triplet like #FF9900), Color.Fuchsia - Returns the colour fuchsia a.k.a. magenta., Color.Green - Returns the colour green., Color.Grey - Returns the colour grey., Color.GreyscaleByNormalizedValue - Creates a greyscale color based on a normalized value (0 = black, 1 = white), Color.Lime - Returns the colour lime., Color.Maroon - Returns the colour maroon., Color.Navy - Returns the colour navy., Color.Olive - Returns the colour olive., Color.Purple - Returns the colour purple., Color.Red - Returns the colour red., Color.Silver - Returns the colour silver., Color.Teal - Returns the colour teal., Color.White - Returns the colour white., Color.Yellow - Returns the colour yellow., CurtainPanel.HostPanel - Retrieves the host panel of a given curtain panel. This is typcially needed when wanting to access wall elements used as curtain panels., CurtainSystem.ByFace - Creates a curtain system on top of a face. The face typically needs to be the face of a mass surface in Revit., Curve.ClosedLoopThroughPoints - Creates a *closed* loop of curves based on a given list of points, CustomNode.Info - Extracts information from a custom node., DesignOption.DesignOptionSet - Returns the design option set of a given design option, DetailComponent.ByCurve - Places a line-based detail component in a given view, DetailLine.FromCurve - Creates a detail line based on a given curve, Dimension.AssociatedFamilyParameter - Returns the associated family parameter of a dimension label (if any). PLEASE NOTE: This node will only work in a family document!, Dimension.SetType - Changes the dimension type of a given dimension instance to the specified type, DimensionType.Style - Gets the style of a given Revit dimension type, Directory.ContentsAll - Unlike the built-in node Directory.Contents, this node browses a directory recursively and returns all relevant files contained in subfolders as well., DisplayUnit.ToInternalUnit - Converts a value from a given display unit to Revit's internal unit, DividedSurface.AddIntersect - Adds an intersect to a divided surface, DividedSurface.EvaluateGridNodes - Returns UV and XYZ coordinates as well as surface normals for all grid nodes of a given divided surface. Also returns the underlying face., DividedSurface.HorizontalIntersectsByEndpoints - Creates a number of equally spaced horizontal intersects for a divided surface based on the path between between two points. , DividedSurface.HorizontalIntersectsByEndpointsAndFunction - Creates a number of horizontal intersects (levels)for a divided surface based on the path between two points. The spacing of the intersects can be controlled by a function., DividedSurface.VerticalIntersectsByEndpoints - Creates a number of equally spaced vertical intersects for a divided surface based on the path between between two points. You may need to switch start point and end point., DividedSurface.VerticalIntersectsByEndpointsAndFunction - Creates a number of vertical intersects (reference planes) for a divided surface based on the path between between two points. The spacing can be controlled by a function. You may need to switch start point and end point., Document.ActiveViewFromCurrentDocument - Gets the active view of the current document, Document.AddLink - Adds a link to a model to the current document, Document.BuiltInCategories - List all the available BuiltInCategories, Document.BuiltInParameters - List all the available BuiltInParameters, Document.ContainsElementsOfCategory - Checks if family instances of specified categories are present in the model., Document.DesignOptions - Returns all design options in the model, grouped by design option set, Document.IsWorkshared - Returns true if the current project is workshared, Document.LinksAndImports - Gets all linked and imported files in the document. NOTE: Does *not* retrieve linked Revit files., Document.LoadFamily - A very crude implementation of family loading. Will *not* reload an already loaded family of the same name., Document.Phases - Retrieves all phases in the active document in *chronological* order, Document.ProjectInfo - Gets the project information., Document.ProjectPosition - Gets the project's position data relative to the origin. Use the built-in nodes Location.Latitude & Location.Longitude to retrieve latitude and longitude., Document.SaveAs - Saves the active Revit document under the given name., Document.StartingView - Retrieves the starting view of a Project file. Returns null if no starting view is set., Document.SynchronizeWithCentral - Synchronizes a workshared model with the central model., Document.Views - Gets all views in the document - except for 3D view templates (as long as this bug is not fixed: https://github.com/DynamoDS/Dynamo/issues/2970), Document.Worksets - Returns all Worksets in the current document, Door.Rooms - Gets the rooms that are connected by a given door, Element.AllInstances - Retrieves all instances of a given element, Element.AllInstancesAtLevel - Retrieves all instances of an element on a given level, Element.AllViewDependentInstances - Retrieves all instances of a view-dependent element in a given view, Element.Area - Returns the area property of a given element (if that element has such a property), Element.AssociatedFamilyParameters - Returns the associated family parameters of an element in a family (and the respective element parameters). PLEASE NOTE: This node will only work in a family document!, Element.ByID - Gets the Revit element(s) for a list of IDs (or a single ID), Element.ContainsTransparentMaterials - Checks if a given element contains transparent materials., Element.CopyByVector - Copies an element or a list of elements by a given vector., Element.CopyToLevel - Copies an element or a list of elements to a given level. Preserves the element's transform. PLEASE NOTE: This node only works for levels that have at least one view (e.g. floor plan) associated with them., Element.CutGeometry - Adds a solid-solid cut for two model elements (if possible). , Element.ElevationOfHostLevel - Returns the elevation of the level a given element is associated with, Element.ExternalFileReferencePath - Returns the full path of an element's external file reference as as string, Element.FromDynamoSurface - Returns the underlying Revit element of a given face, Element.Group - Retrieves the group an element belongs to (if any), Element.Host - Gets an element's host, Element.ID - Gets the ID(s) for a list of Revit elements (or a single element) - unlike the built-in Element.Id node, this node returns an actual Revit Element ID and *not* a number, Element.Inserts - Gets all the objects inserted into a given element., Element.IsOfCategory - Checks whether an element is of a specified category, Element.IsRelatedToMass - Returns true if an object (wall, roof, floor or curtain system) has been modelled by face and the underlying mass still exists in the project., Element.JoinGeometry - Joins two model elements (if possible). Only works inside the project environment., Element.Level - Gets an element's level, Element.Location - Returns the location of an element as an XYZ (or if it's line-based the start and end point of the line), along with some booleans to help filtering the results. Use this for some element types (e.g. walls or lines) that do not work with the built-in Get Family Instance Location node. , Element.Materials - Retrieves all materials froma given element, Element.Name (Universal) - Gets an element's name (Dynamo's built-in Name nodes don't work for all element types, e.g. worksets...), Element.OverrideTransparencyInView - Overrides the transparency of an element in a given view, Element.OwnerView - Gets the owner view of a given Revit element (if possible), Element.Panels - Retrieves the panels nested in a curtain wall, curtain system or glazed roof., Element.ParameterExists - Checks if an element contains a parameter of a given name, Element.ParameterIsReadOnly - Checks if a parameter of a given element is read-only, Element.PermanentlyIsolateInView - (Permanently) isolates elements in the given view, Element.Phases - Gets the created and demolished phases of an element, Element.ResetOverridesInView - Resets all overrides for an element in a given view, Element.SetMaterialParameterByCategory - Sets a material parameter of a given element to <By Category>, Element.SetName - Gets the name of a given Revit element, Element.SetWorkset - Sets the workset of a given element, Element.TemporarilyIsolateInView - (Temporarily) isolates elements in the given view, Element.Type - Gets the family type of a given element (if applicable). , Element.Workset - Retrieves the workset of a given element, Elements.FilterByName - Retrieves those elements from a collection whose names match the search string, Elements.FilterByParameterValueAndCondition - Keine Beschreibung angegeben, Elements.GroupByHost - Groups a list of Revit elements by their respective hosts (if they have any), Family.IsInPlace - Determines if a family is an in-place family, FamilyDocument.CurrentFamilyType - Retrieves the current family type from the active family document. PLEASE NOTE: This node will only work in a family document!, FamilyDocument.FamilyParameters - Retrieves all family parameters from the active family document. PLEASE NOTE: This node will only work in a family document!, FamilyDocument.FamilyTypes - Retrieves all family types from the active family document. PLEASE NOTE: This node will only work in a family document!, FamilyInstance.AddCoping - Adds a coping (cut) to a steel beam, FamilyInstance.ByCurve - Places a line-based family instance on a given level, FamilyInstance.ByPointInView - Places a family instance at a given point in a given view (e.g. a detail component)., FamilyInstance.CopingElements - Returns all elements used as coping cutters for a given element., FamilyInstance.FlipFacingOrientation - Flips the facing orientation of a given family instance, FamilyInstance.FlipFromToRoom - Flips the settings of \"From Room\" and \"To Room\" for any given door or window instance. , FamilyInstance.FlipHandOrientation - Flips the hand orientation of a given family instance, FamilyInstance.HandOrientation - Gets the hand orientation of a hosted object (e.g. a window or a door), FamilyInstance.RemoveCoping - Removes a coping (cut) from a steel beam, FamilyInstance.SetLevel - Sets the level property of a family instance. Family instance will move accordingly., FamilyInstance.SetType - Changes the family type of a given family instance to the specified type, FamilyInstance.SubComponents - Retrieves all subcomponents of a given family instance, FamilyInstance.SuperComponent - Retrieves the supercomponent of a given family instance, FamilyParameter.Properties - Retrieves all properties of a given family parameter. PLEASE NOTE: This node will only work in a family document!, FamilyType.CompoundStructureHasVariableLayer - Checks if the compound structure of a given floor or roof type contains a variable layer., FamilyType.CompoundStructureLayers - Retrieves the compound layers of any layered family type (wall types, roof types, floor types etc.), FamilyType.Duplicate - Duplicates a family type, FamilyType.SetCompoundLayerMaterial - Sets the material of a specified compound layer of a given family type (only applies to family types that have a compound structure, e.g. walls, floors etc.)., FamilyType.SetCompoundLayerWidth - Sets the width of a specified compound layer of a given family type (only applies to family types that have a compound structure, e.g. walls, floors etc.)., File.WriteToCSV - Writes data to a CSV file with a custom delimiter. Data inputs needs to contain strings only!, Floor.SlabShapeByPoints - Transform a slab shape based on a list of XYZs. PLEASE NOTE: Will reset any previous edits on the slab shape., Floor.SlabShapeHasBeenModified - Checks if the shape of a floor slab has been modified with the shape editing tools, FootingType.BreaksAtInserts - Determines whether a list of wall footing types break at inserts in their attached walls, Geometry.ClosestTo - Finds the closest entity in a list of geometric entities from another given entity, Geometry.FurthestFrom - Finds the furthest entity in a list of geometric entities from another given entity, GlobalParameter.GetValue - Gets the value of a global parameter (only in Revit 2016 R2 or later)., Group.FromElements - Creates a group from a list of Revit elements, Group.Members - Retrieves the members of a group, Group.Ungroup - Ungroups a group and returns the ungrouped elements., Hypotenuse.ByPythagoras - Computes the length of the hypotenuse of a right triangle using the Pythagorean Theorem. A and B are the legs / catheti of the triangle., InternalUnit.ToDisplayUnit - Converts a value from Revit's internal unit to a given display unit, Level.Plane - Retrieves the plane of a given level, Level.Views - Returns all views associated with a given level, List.AlphabeticalSequence - Creates a list of the first N letters of the alphabet  (where 1 = A, 2 = B, ... , 27 = AA, 28 = AB etc.)., List.AnyFalse - Returns true if any item in a list of booleans is false., List.AnyTrue - Returns true if any item in a list of booleans is true., List.CountBooleanSequences - Retrieves the lengths of uninterrupted sequences of booleans (true or false) in a given list., List.CountOccurences - Counts the number of occurences of each unique element in a given list, List.DropLastItem - Drops the last item from a given list., List.EqualSublistLengths - Trims all given lists to the length of the shortest list, List.FibonacciFromList - Creates a Fibonacci row from a starting list (last two values) of a given length (starting values do *not* count toward length)., List.FibonacciFromValues - Creates a Fibonacci row from two starting values of a given length (starting values do *not* count toward length)., List.FilterBySublistLength - Filters out all sublists that do not have the specified length, List.FromCSV - Converts the content of a given CSV file to a list, List.FromString - Chops up a string into a list of characters, List.GroupListOfListsByKey - Groups a list of lists by one of its keys, List.IsNotEmpty - Just the inversion of the built-in Is Empty List node., List.MatchWithKeyValues - Matches a list with a given set of keys and returns the values corresponding to the keys, List.NormalizedSequence - Creates a sequence of N values between 0 and 1, List.NormalizedSequenceByFunction - Creates a sequence of N values between 0 and 1 driven by a function, List.RandomElements - Creates a list of random elements based on a given list of elements, List.RepeatItemsByLengths - Repeats a list of items into sublists of given lengths, List.ReplaceEmptyLists - Replaces all empty lists within a given list with a substitute, List.ReplaceItemAtIndex - Replaces the item at a given index (or list of indices) of a list by another item, List.ReplaceNull - Replaces all null values within a given list with a substitute, List.SortListOfLists - Sorts a list of lists by one of its sublists, List.SublistLengths - Gets the lengths of all sublists in a given list of lists., List.SublistsContain - Looks for an item in each sublist of a given list and returns true/false for each sublist., List.WithLeadingZeroes - Adds leading zeros to a sequence of numbers, MassFloor.Mass - Gets the mass a given mass floor belongs to, Material.Duplicate - Duplicates a material, Material.Properties - Retrieves a number of properties froma given material, Math.AlmostZero - Returns a feasable computational tolerance to zero (1.0e-9 or a billionth of 1) for use in calculations. More background info: https://github.com/DynamoDS/Dynamo/issues/879, Math.DecimalToBinary - Converts a number to a string of its binary value, Math.DecimalToHex - Converts a number to a string of its hexadecimal value, Math.InvertNormalized - Inverts a value between 0 and 1 to its opposite (1-x), Math.IsEvenNumber - Checks if a number is even., Math.IsMultipleOf - Checks if A is a multiple of B., Math.IsOddNumber - Checks if a number is odd., Math.Normalize - Converts a value into a normalized value according to a value range, Math.NormalizeRange - Normalizes a range of numbers, Math.RandomIntegerList - Creates a list of random integers between 0 and a given maximum value, Math.RoundDownToPrecision - Rounds a number *down* to a specified precision, Math.RoundToPrecision - Rounds a number to a specified precision, Math.RoundUpToPrecision - Rounds a number *up* to a specified precision, Math.ScaleNormalized - Scales a normalized value according to a given minimum and maximum, Math.Similar - Computes the difference between two values and whether that difference is within a given tolerance factor, Mesh.FaceVertices - Gets the vertices of each face of a given mesh, Mesh.IntersectionWithPlane - Calculates the intersection of a mesh and a plane, Normal.CorrectOrientation - Inverts normal A if its inversion is closer to normal B, Object.Members - Gets a list of all members (properties and methods) of a selected element, Object.MembersByName - Looks up all the members of a given element based on a given name (or part of a name) of the property or method. Search is case-insensitive., OppositeSide.ByLawOfCosines - Computes the length of the missing side of a triangle using the law of cosines. Gamma is the angle between sides A and B., Paneling.BuildTriangularSublists - Creates sublists of three items each from a list based on given indices, shift and reverse settings and offset., Paneling.DropLastRowAndColumn - Drops the last row and column from a UV field, Paneling.GridFromFace - Returns UV coordinates, XYZ coordinates and normals for a face with UV subdivision, Paneling.Hexagonal - Creates groups of points from a list of UVs or XYZs for the placement of hexagonal panels. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.InvertAndMirrorNormalizedValues - Inverts and mirrors (horizontally & vertically) a nested list of normalized values., Paneling.MakeTriangles - Reduces each sublist to a list of three items specified by the indices in the pattern., Paneling.Quadrilateral - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.Quadrilateral2byX - Keine Beschreibung angegeben, Paneling.QuadrilateralAlternatingRows - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels in alternating rows. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.QuadrilateralCheckerboard - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels in a checkerboard pattern. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.ShiftPlacementAndReverse - Shifts (integer) and reverses (bool) a given list, Paneling.TriangularFlatDiagonal - Creates groups of points from a list of UVs or XYZs for the placement of triangular panels. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.TriangularFlatMirrored - Creates groups of points from a list of UVs or XYZs for the placement of triangular (diagrid) panels. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.TriangularSubpattern - Subcomponent of the Triangular Pattern From Grid node., Part.SourceElement - Retrieves the element a given part was made from, Passthrough - Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node., PathGraph.AllPaths - Finds all possible paths between two nodes.  The connections input expects a list of value pairs., PathGraph.ByPairs - Builds a path graph (Python dictionary) from a list of value pairs., PathGraph.ShortestPath - Finds the shortest path (fewest steps) between two nodes. The connections input expects a list of value pairs., PerspectiveView.OrientToEyeAndTargetPosition - Sets the orientation of a given perspective view based on a given eye and target position, PlaceholderSheet.ByNumberAndName - Creates placeholder sheets, Plane.ByBestFitFromFace - Creates a plane from face, Plane.ByFirst3Points - Returns a plane, its origin and its normal based on the first three XYZs in a given list, PlanView.Underlay - Returns the view template assigned to a given view (if one is assigned), Point.Average - Determines the average of a list of points, Point.CentralProjectionOnFace - Projects a list of points onto a given face, Point.CentralProjectionOnPlane - Projects a list of points onto a given plane, Point.IsOutOfPlane - Checks a list for XYZs that are not located on a given plane, Point.RoundDownToPrecision - Rounds a point coordinate *down* to a specified precision, Point.RoundToPrecision - Rounds a point coordinate to a specified precision, Point.RoundUpToPrecision - Rounds a point coordinate *up* to a specified precision, PointSequence.AccumulatedDistance - Retrieves the accumulated distances of a sequence of points, PointSequence.ContainsOutOfPlanePoints - Checks a list for XYZs that are not located on a given plane, PointSequence.GreatestDistanceToPoint - Retrieves the furthest point in a sequence of points, PointSequences.ShortestPath - Retrieves the shortest path from a number of point sequences, ReturnListOrSingleValue - If the unknown item is not a list but rather a single item, only the first item of the list (input \"seq\") will be returned., RevisionCloud.FromCurves - Creates a revision cloud from a list of geometry curves. , RevisionCloud.FromElements - Create a revision cloud for a list of Revit elements, RevitBoundingBox.FromDynamoBoundingBox - Turns a Dynamo bounding box into a Revit bounding box., RevitColor.FromDynamoColor - Creates a Revit color from a Dynamo color, RevitColor.ToDynamoColor - Converts Revit colors into Dynamo colors, RevitFace.FromDynamoSurface - Returns the underlying Revit face of a given surface, RevitFaceReference.FromDynamoSurface - Returns the underlying Revit face reference of a given surface, RevitUV.ToDynamoUV - Converts Revit UV coordinates to Dynamo UV coordinates, Roof.CreationMethod - Retrieves the creation method of a given roof, Roof.Kind - Retrieves the roof kind (Basic, Glazed, Other). PLEASE NOTE: Roofs that were created by face will be identified as 'Other', Roof.SlabShapeByPoints - Transform a slab shape based on a list of XYZs. PLEASE NOTE: Will reset any previous edits on the slab shape., Roof.SlabShapeHasBeenModified - Checks if the shape of a roof slab has been modified with the shape editing tools, Room.AtPointInPhase - Tries to retrieve a room element at the given location for the given phase., Room.Boundaries - Gets a list of all boundary elements of a given room or area, Room.Doors - Retrieves all doors that are associated with a room (hosted in walls and roofs)., Room.InsertsOfBoundaries - Retrieves the inserts of the bounding elements of a given room., Room.InsertsOfBoundariesByCategory - Retrieves the inserts of the bounding elements of a given room - filtered by a given category., Room.IsPointInside - Evaluates if a ponti is located inside a given room., Room.IsUnbounded - Checks whether a room is unbounded., Room.UnplacedByNameAndNumber - Creates an unplaced room, Room.Windows - Retrieves all windows that are associated with a room (hosted in walls and roofs)., RoomSeparator.FromCurve - Creates room separation lines from geometry curves. , RoomSequence.ToDoorSequence - Retrieves a sequence of doors connecting a given sequence of rooms (if possible), RoomTag.Room - Returns the room of a given room tag, RoomTag.SetType - Changes the family type of a given room tag to the specified type, SelectionSet.ByElements - Creates a selection set of the given elements. Note that if a selection set of the given name already exists in the model, its contents will be replaced. Also, if the selection set is already applied as a view filter, the view filter will have to be manually updated in the visibility / graphic overrides. DO ***NOT*** USE IN AUTOMATIC MODE!, SelectionSet.Elements - Retrieves all elements stored in a selection set, Sheet.Scale - Returns the scale of a given sheet, Sheet.Schedules - Returns all schedules placed on a specified sheet , Side.ByLawOfSines - Determines the length of a side based on the law of sines. (Alpha is the angle opposite side A and beta is the angle opposite side B...), SpaceSeparator.FromCurve - Creates space separation lines from geometry curves. , String.AlphanumericToMorse - Converts an alphanumeric string to Morse code, String.BinaryToDecimal - Converts a string of a binary number into a decimal value, String.FindRegularExpression - Returns all occurences of a regular expression within a string (or list of strings). The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, String.HexToDecimal - Converts a string of a hexadecimal value to a number, String.MatchRegularExpression - Determines if a regular expression matches a string (or a list of strings) and returns a boolean value (or a list, depending on the input). The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, String.MorseToAlphanumeric - Converts a string in Morse code to alphanumeric, String.ReplaceRegularExpression - Replaces all occurences of a regular expression within a given string (or list of strings) with another string. The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, String.SplitByRegularExpression - Splits a given string by a regular expression. The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, StructuralFoundation.Kind - Retrieves the kind of a given structural foundation (isolated, wall, slab)., Subcategory.ByName - Creates a new subcategory for a given element category in a *family document* (unless a subcategory of that name already exists - in that case it returns the existing subcategory), Surface.FilterByOrientation - Sorts surfaces in three lists based on their orientation (vertical, horizontal up & horizontal down) and also returns three corresponding lists of booleans., Surface.IsPlanar - Checks whether a face is planar, Switch - Emulates the Switch/Case statement that is  available in multiple programming languages., TextAlignFlags.Bottom - Returns the \"Left\" text align flag., TextAlignFlags.Center - Returns the \"Left\" text align flag., TextAlignFlags.Left - Returns the \"Left\" text align flag., TextAlignFlags.Middle - Returns the \"Left\" text align flag., TextAlignFlags.Right - Returns the \"Left\" text align flag., TextAlignFlags.Top - Returns the \"Left\" text align flag., TextElement.SetText - Sets the text of a given text element (i.e. text note or model text), TextElement.Text - Gets the text stored in a text element (i.e. text note or model text), TextNote.ByStringAndPosition - Creates a text note at a given location, ThirdXYZAxis.ByTwoVectors - Given two main XYZ axes (or vectors pointing more or less in thei general direction), this node will find the third axis., Time.EvaluateLapTimes - Evaluates a list of lap times and returns the overall time, Time.LapTime - Records a timestamp and adds it to a given list of lap times. Also passes through an arbitrary variable for integration into a graph., Topography.IntersectionWithPlane - Calculates the intersection of a toposurface and a plane, Topography.IsSubregion - Filters out everything that is *not* a topo subregion. Needs Revit 2014 or newer to work., Triangle.SolveByPoints - Solves a triangle based on the XYZ coordinates of its vertices., TurnIntoList - Turns an element (or a nested list) into a flat list, UnitType.DisplayUnitType - Retrieves the display unit type for a given unit type. , UV.Average - Determines the average of a list of UVs, UV.ByXY - Creates UVs from the XY components of point coordinates, UV.ConvexHull2D - Computes the convex hull of a given set of UV coordinates based on the monotone chain algorithm, UV.IsInsidePolygon - Determines if a point is inside the space enclosed by a polygon, UV.PruneDuplicates - Prune UVs to exclude duplicates within a given tolerance, UV.RoundDownToPrecision - Rounds a UV coordinate *down* to a specified precision, UV.RoundToPrecision - Rounds a UV coordinate to a specified precision, UV.RoundUpToPrecision - Rounds a UV coordinate *up* to a specified precision, UV.Swap - Swaps U and V coordinates, Vector.AltitudeAndAzimuth - Computes the altitude and azimuth of a given vector, Vector.Average - Determines the average vector of a list of vectors, Vector.IntersectionWithPlane - Finds the intersection point between a plane and a vector, Vector.IntersectionWithVector - Determines if two vectors intersect and returns the closest points of intersection on both vectors., Vector.IsInPlane - Checks if a given vector is located on a given plane, Vector.IsOrthogonalToVector - Checks if two vectors are orthogonal to each other, Vector.IsParallelToPlane - Checks if a given vector is parallel to a given plane, Vector.PruneDuplicates - Prune vectors to exclude duplicates within a given tolerance, Vector.XAxisNegative - Returns an XYZ of -1,0,0, Vector.YAxisNegative - Returns an XYZ of 0,-1,0, Vector.ZAxisNegative - Returns an XYZ of 0,0,-1, VersionNumber.ToInteger - Converts a version number (e.g. a Dynamo version number) to an integer., View.CategoryIsVisible - Checks if a given category is visible in a given view, View.ConvertTemporaryHideIsolateToPermanent - Convert all temporary hidden elements or categories to permanently hidden in the given view., View.DetailLevel - Retrieves the detail level of a given view, View.DisableTemporaryHideIsolate - Disables the temporary hide/isolate for the given view (if set), View.Duplicate - Duplicates a given view, View.DuplicateAsDependent - Duplicates a given view as a dependent view, View.DuplicateWithDetailing - Duplicates a given view with detailing, View.IsPerspective - Checks whether a given view is a perspective view., View.IsViewTemplate - Checks if a given view is a view template, View.Phase - Returns the phase of a given view, View.Plane - Retrieves the plane of a given view, View.ResizeCropBox - Resizes the bounding box of a given Revit element by the specified amount in X, Y and Z direction. May need to be used in conjunction with a Transaction node., View.Scale - Returns the scale of a given view, View.SetDesignOption - Sets the view to a given design option. PLEASE NOTE: This node is kind of hacky. It does not use the design option settings in the visibility / graphic overrides. Instead it sets the view property \"Visible in Option\" to *one* specific design option - which also means that the symbolic representation of this view is only visible in views that display the given design options., View.SetPhase - Sets the phase of a given view, View.SetSolarStudyActiveFrameNumber - Sets the active frame number of the solar study in a given view, View.SolarStudyTotalFrames - Retrieves the number of frames of a solar study for a given view (if the view's sun and shadow settings are indeed set to single or multi day study), View.Type - Returns the type of a given view, View.UsesViewFilters - Checks if a given view has any view filters applied to it., View.ViewTemplate - Returns the view template assigned to a given view (if one is assigned), View3D.IsLocked - Checks if a given view is locked, Wall.ByFace - Creates a wall on top of a face. The face typically needs to be the face of a mass surface in Revit., Wall.CreationMethod - Retrieves the creation method of a given wall, Wall.Flip - Flips the  orientation of a given wall - DO ***NOT*** USE IN AUTOMATIC MODE, Wall.Orientation - Gets the orientation of a given wall instance (normal of the exterior face of the wall). Will *not* work for walls hosted on mass faces or in-place walls., WallLocationLine.CoreCenterline - Returns the WallLocationLine option for CoreCenterLine, WallLocationLine.CoreExterior - Returns the WallLocationLine option for CoreExterior, WallLocationLine.CoreInterior - Returns the WallLocationLine option for CoreInterior, WallLocationLine.FinishFaceExterior - Returns the WallLocationLine option for FinishFaceExterior, WallLocationLine.FinishFaceInterior - Returns the WallLocationLine option for FinishFaceInterior, WallLocationLine.WallCenterline - Returns the WallLocationLine option for WallCenterLine, WallType.Function - Retrieves the Function property of a given wall type, WallType.Kind - Retrieves the wall kind of a given wall type, Window.Rooms - Gets the rooms that are connected by a given window, Workset.Kind - Retrieves the kind of a given workset, XYZAxis.FromVector - Returns whichever main axis (X, Y or Z) is closest to a given vector",
          "engine_metadata": "",
          "engine_version": "0.9.0.3067",
          "created": "2016-09-13T03:04:04.787Z",
          "full_dependency_versions": [ "0.90.8" ],
          "full_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.90.8",
          "contains_binaries": true,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-13T03:04:04.787Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 21177,
      "repository_url": "https://github.com/andydandy74/ClockworkForDynamo",
      "site_url": "https://github.com/andydandy74/ClockworkForDynamo",
      "banned": false,
      "deprecated": true,
      "group": "Bad Monkeys Inc",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "DynamoAutomation",
          "_id": "562f91e4662bf0e9080002af"
        },
        {
          "name": "MEPWORKS",
          "_id": "56446665662bf0e908000324"
        },
        {
          "name": "BVN",
          "_id": "5507ae3e0c7eac9b57000053"
        },
        {
          "name": "Ayuda",
          "_id": "55f84b9e662bf0e908000188"
        },
        {
          "name": "QRCoder",
          "_id": "568e3ce15c568ad00c000096"
        },
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "MOST-BCF2014",
          "_id": "56dadd8e5bee3e2138000025"
        },
        {
          "name": "EthosMEP",
          "_id": "56ab7b47c3e9ee4a0800006b"
        },
        {
          "name": "GuDYNCat Scripts",
          "_id": "56fc70615bee3e21380000bc"
        },
        {
          "name": "Zynka BIM Test",
          "_id": "5717687a3ad9e8713b000004"
        },
        {
          "name": "Names Values Sum",
          "_id": "571b06d7305bec4d3c00001d"
        },
        {
          "name": "Landform",
          "_id": "564dc5a3662bf0e90800035b"
        },
        {
          "name": "Update all Levels and Grids to New Workset",
          "_id": "57b123c44172a48a3500005a"
        },
        {
          "name": "BIM4Struc.BridgeDesign",
          "_id": "57bc2ef24172a48a350000bc"
        },
        {
          "name": "OpenStrc",
          "_id": "57d9f90df615e7725800004f"
        },
        {
          "name": "Silman Custom Nodes - alpha",
          "_id": "56bb8efdc3e9ee4a080000e2"
        },
        {
          "name": "ANDYnamo",
          "_id": "57ea33aeb135d45974000021"
        },
        {
          "name": "PW_Lon_Revit",
          "_id": "57fd20a3d3d589541a00006f"
        },
        {
          "name": "IkLeerBIM",
          "_id": "581855f7f50b17c7200000b5"
        },
        {
          "name": "BIMSYK",
          "_id": "582ed4885af9f3713d0000b6"
        },
        {
          "name": "SYKES",
          "_id": "57dbd203882d868b4200000d"
        },
        {
          "name": "MyVit",
          "_id": "584c2d99fdef23aa6e0000d0"
        },
        {
          "name": "lineal",
          "_id": "58c6bb92f4db78ec010000f2"
        }
      ],
      "num_dependents": 23,
      "description": "Clockwork is a collection of 360+ custom nodes. It contains many Revit-related nodes, but also lots of nodes for various other purposes such as list management, mathematical operations, string operations, geometric operations (mainly bounding boxes, planes, points, surfaces, UVs and vectors) and paneling. More information: https://github.com/andydandy74/ClockworkForDynamo",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "clockwork", "caad", "rwth", "bad", "monkeys" ],
      "white_list": false
    },
    {
      "_id": "57d576e8f615e7725800001d",
      "name": "Synthesize toolkit",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c2f2966b-4af4-4140-9a44-36175514c4b6gregPkg225.zip",
          "contents": "DelaFix - Delaunay Pattern Fix by Karam Baki, DelaFixDesignFace - Delaunay Pattern Fix On Face Design by Karam Baki, ReFusion IT Export - This Node exports the fixed Geometry to a SAT file with Sufix (LinkMeToRevit) (Karam Baki), ReFusion IT Import - This Node Fixes the orientation of the SAT file from Fusion 360 To Revit (Karam Baki), VoroFix - Voronoi Pattern Fix by Karam Baki, VoroFixDesignFace - Voronoi Pattern Fix On Face Design by Karam Baki",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-09-20T23:52:03.327Z",
          "full_dependency_versions": [ "0.0.8" ],
          "full_dependency_ids": [
            {
              "name": "Synthesize toolkit",
              "_id": "57d576e8f615e7725800001d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.8",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-20T23:52:03.327Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1491,
      "repository_url": "",
      "site_url": "http://revitelite.blogspot.com/",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Set of Creative tools by Karam Baki to fix Voronoi and Delaunay patterns, along with importing/exporting nodes for Fusion 360 with Revit to create Fluid and Organic forms from T-Spline ability in Fusion 360.\r\n\r\nGo to this article for Guide :\r\nhttp://autode.sk/2cMWi9X",
      "maintainers": [
        {
          "username": "expertelite",
          "_id": "57c4b43a4172a48a350000f0"
        }
      ],
      "keywords": [ "voronoi", "delaunay", "fusion360", "revit", "organic", "fluid", "parametric" ],
      "white_list": false
    },
    {
      "_id": "57e2773a2107b80223000022",
      "name": "testRacel",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/34345d21-01a4-4dc9-8ede-cb62d7f0817bgregPkg684.zip",
          "contents": "testPoint - test Point",
          "engine_metadata": "",
          "engine_version": "1.2.0.2555",
          "created": "2016-09-21T12:04:10.280Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "testRacel",
              "_id": "57e2773a2107b80223000022"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-21T12:04:10.28Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 12,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testRacel asdasD sd sD",
      "maintainers": [
        {
          "username": "racel",
          "_id": "55d1e1d5662bf0e9080000d2"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57e3ad8b2107b80223000030",
      "name": "sdadaadasdasdadada",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/1efb166b-13bb-45ea-823e-d697eef87af9gregPkg252.zip",
          "contents": "test7 - No description provided, cncrash123 - testing cn , ads - No description provided, InnerCustomNode - No description provided, desc - No description provided, custom node - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.2651",
          "created": "2016-09-22T10:08:11.423Z",
          "full_dependency_versions": [ "5.0.1" ],
          "full_dependency_ids": [
            {
              "name": "sdadaadasdasdadada",
              "_id": "57e3ad8b2107b80223000030"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "5.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-22T10:08:11.423Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "assssssssssssssssss",
      "maintainers": [
        {
          "username": "mo.pr",
          "_id": "57e37e2e2107b8022300002a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57e39bbb2107b8022300002b",
      "name": "test1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/afe937c4-327c-4c3a-8663-f3cbfc9c10b8gregPkg866.zip",
          "contents": "testing1234 - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.2651",
          "created": "2016-09-22T10:21:41.431Z",
          "full_dependency_versions": [ "5.7.0" ],
          "full_dependency_ids": [
            {
              "name": "test1",
              "_id": "57e39bbb2107b8022300002b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "5.7.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-22T10:21:41.431Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 0,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "iyuiyiyiyiyiyiyui",
      "maintainers": [
        {
          "username": "mo.pr",
          "_id": "57e37e2e2107b8022300002a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57e49ff12107b80223000041",
      "name": "PC1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/0517d1a2-bdbc-4453-9f33-de46f09790a1gregPkg624.zip",
          "contents": "testpm - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.2651",
          "created": "2016-09-23T03:22:25.143Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "PC1",
              "_id": "57e49ff12107b80223000041"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-23T03:22:25.143Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 0,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "fdgdgdggggdgdgdgdg",
      "maintainers": [
        {
          "username": "mo.pr",
          "_id": "57e37e2e2107b8022300002a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57e4a0e22107b80223000043",
      "name": "pubnew",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/90c43fc8-67eb-4e8a-aa1d-fd36a7b67c5fgregPkg686.zip",
          "contents": "pubnew - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.2651",
          "created": "2016-09-23T03:26:26.171Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "pubnew",
              "_id": "57e4a0e22107b80223000043"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-23T03:26:26.171Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 0,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "fghfhffhfhfhfhhfh",
      "maintainers": [
        {
          "username": "mo.pr",
          "_id": "57e37e2e2107b8022300002a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57e4abc42107b80223000049",
      "name": "Qa1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/90cfc222-dff6-4744-abd8-6781c3ff3ad3gregPkg929.zip",
          "contents": "cust3 - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.2651",
          "created": "2016-09-23T04:12:52.109Z",
          "full_dependency_versions": [ "1.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Qa1",
              "_id": "57e4abc42107b80223000049"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-23T04:12:52.109Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 0,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Testing published custom node ",
      "maintainers": [
        {
          "username": "mo.pr",
          "_id": "57e37e2e2107b8022300002a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57e4c7652107b8022300004d",
      "name": "test12345",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/570b9918-a06e-483e-9426-b4230020c500gregPkg453.zip",
          "contents": "test1234 - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.2651",
          "created": "2016-09-23T06:10:45.943Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "test12345",
              "_id": "57e4c7652107b8022300004d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-23T06:10:45.943Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 0,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "description 12345",
      "maintainers": [
        {
          "username": "mo.pr",
          "_id": "57e37e2e2107b8022300002a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57e8dfbbb135d4597400000f",
      "name": "Jumper",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/006ab0f1-7df8-4db0-98bc-39290656c17egregPkg25.zip",
          "contents": "Get All Building Parts  - Take All OST catagoryes, that in not a tag, view, sheet, symbol, ect",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-09-26T10:37:05.962Z",
          "full_dependency_versions": [ "2016.10.3" ],
          "full_dependency_ids": [
            {
              "name": "Jumper",
              "_id": "57e8dfbbb135d4597400000f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.10.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-26T10:37:05.962Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 58,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Jumper",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This packages contanis Nodes that will help with quality control",
      "maintainers": [
        {
          "username": "renegsl@hotmail.com",
          "_id": "57e8ddc8b135d4597400000e"
        }
      ],
      "keywords": [ "jumper" ],
      "white_list": false
    },
    {
      "_id": "57ea33aeb135d45974000021",
      "name": "ANDYnamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/e0d4530a-cb4a-4c11-8cb3-4941f7cf6e34gregPkg20.zip",
          "contents": "CeilingPlan.ByRoomNumber - Create a floor plan of a room from the room number, FloorPlan.ByRoomNumber - Create a floor plan of a room from the room number, GetElementInfo.FromElementNameMatch - Gets the element ID from a list by matching a string to the name of the element. (Good to use with Archi-lab_Grimshaw.GetAllViews as an input)",
          "engine_metadata": "",
          "engine_version": "1.0.1.1733",
          "created": "2016-09-27T08:54:06.882Z",
          "full_dependency_versions": [ "0.0.1", "0.90.6", "2016.5.27" ],
          "full_dependency_ids": [
            {
              "name": "ANDYnamo",
              "_id": "57ea33aeb135d45974000021"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "0.90.6", "2016.5.27" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-09-27T08:54:06.882Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 75,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Collection of useful nodes for typical architectural documentation tasks",
      "maintainers": [
        {
          "username": "diego.martinez@au.brookfield.com",
          "_id": "57e4a77a2107b80223000045"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57e993ffb135d4597400001c",
      "name": "RenamePDFs",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/f89db007-878e-4e44-b675-6b5ea99245d9gregPkg799.zip",
          "contents": "Rename PDFs - Rename PDFs using Regular Expressions.  Copy new renamed PDFs to new directory. \r\n\r\nhttp://revitdynamoapi.blogspot.com/2016_09_01_archive.html",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-09-30T19:38:56.701Z",
          "full_dependency_versions": [ "0.0.4" ],
          "full_dependency_ids": [
            {
              "name": "RenamePDFs",
              "_id": "57e993ffb135d4597400001c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.4",
          "contains_binaries": true,
          "node_libraries": [ "RenamePDFs, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-09-30T19:38:56.701Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 262,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Parachence",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Batch Rename PDFs and DWGs using Regular Expression.  Optional replace the dash \"-\".  \r\nCopies new file to a specified directory. ",
      "maintainers": [
        {
          "username": "danny.bentley@som.com",
          "_id": "574db6e0e70394822f000039"
        }
      ],
      "keywords": [ "pdf", "and", "dwg", "rename", "regex" ],
      "white_list": false
    },
    {
      "_id": "57e90783b135d45974000017",
      "name": "TheOmniaFiles",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/6ebf05b3-a9db-45bb-99a4-b45fcf489b65gregPkg624.zip",
          "contents": "Create Sheet and Place View Center - Places a view on a sheet, at the center of the sheet...., Create Sheet and Place View - Places a view on a sheet, at the specified coordinate...., Create Sheet Set - Creates a new Sheet Set with selected Sheets, CurtainPanel Transform X - No description provided, CurtainPanel Transform XYZ - No description provided, CurtainPanel Transform Y - No description provided, CurtainPanel Transform Z - No description provided, Get Viewport Center - Gets the center of a viewport, GetGroupsByName - No description provided, GetParameterValueByLookup - Use the Getparameter.Lookup(string) function in the API, GetParameterX - No description provided, GetParameterY - No description provided, GetParameterZ - No description provided, GetTypeId - Gets the type Id, isGrouped - No description provided, IsPlaceHolder - Checks if a Sheet is a Placeholder, IsTemplateView - Checks if a View is a Template or not..., Key Name - No description provided, PlaceGroup Metrically - No description provided, ReturnListOrSingleValue - If the unknown item is not a list but rather a single item, only the first item of the list (input \"seq\") will be returned., Rooms in View - Finds Rooms in the View, Search Replace Parameter Text - No description provided, Set Built-In Sheet Number - Sets the built-in-number parameter on Sheets, TurnIntoList - Turns an element (or a nested list) into a flat list, Underlay Off - No description provided",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-10-01T12:57:22.182Z",
          "full_dependency_versions": [ "0.0.7" ],
          "full_dependency_ids": [
            {
              "name": "TheOmniaFiles",
              "_id": "57e90783b135d45974000017"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.7",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-01T12:57:22.182Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 91,
      "repository_url": "",
      "site_url": "www.omniarevit.com",
      "banned": false,
      "deprecated": false,
      "group": "Omnia",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Random tools developed by ThorHow",
      "maintainers": [
        {
          "username": "thorbjorn.hoverberg@symetri.com",
          "_id": "57e906cfb135d45974000016"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "544f1c908b802a9427000006",
      "name": "Mantis Shrimp",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/0fe4ba58-6c77-4f6e-a3a3-f49f0e9deef0gregPkg908.zip",
          "contents": "Get Objects by Layer - Queries all Rhino objects on a given layer., Get Objects by Type - This node will retrieve all of the objects of given type from a Rhino model., Get Rhino File - Reads Rhino 3dm file and outputs it as an object., Get Rhino Layers - Queries Rhino file and extracts layers., Get Rhino Mesh Face Center - This node will query a mesh for a face center. , Get Rhino Object GUID - Queries Rhino object for its GUID., Get Rhino Object Layer - This node will return a layer name that object is currently on., Get Rhino Object Name - Queries Rhino Object for its name., Get Rhino Object Type - This node will return an object type (Brep, Extrusion etc)., Get Rhino Object User Strings - This node will query user strings attached to geometry., Get Rhino Object Value by Key - This node retrieves user string value by its key., GH UV String to DS UV - This node converts Grasshopper UV coordinates obtained as a string to Dynamo compatible Design Script UV Coordinate., Read GH File - Reads the file exported from Grasshopper (serializes it back into relevant Rhino geometry such as surfaces, points etc), RH Arc to DS Arc - Converts Rhino arcs to Design Script arcs., RH Brep to DS Polysurface - Converts Rhino breps to Design Script polysurfaces. , RH Circle to DS Circle - Converts Rhino Circle to Design Script circle. Keep in mind that OpenNURBS has limited ability to expose Ellipse and Circle methods so not all \"circles\" will be able to pass this node., RH Ellipse to DS Ellipse - This node converts rhino's open nurbs ellipse (nurbs curve) into design script's ellipse., RH Extrusion to DS Polysurface - This node will convert Rhino extrusion to Design Script polysurface., RH Geometry to DS Geometry - This node will translate all of the compatible Rhino geometry into its equivalent in Design Script., RH Line to DS Line - Converts Rhino Lines to Design Script Lines, RH Mesh to DS Mesh - Converts Rhino meshes to Design Script meshes., RH Nurbs Surface to DS Nurbs Surface - converts rhino nurbs surfaces to design script nurbs surfaces, RH NurbsCurve to DS NurbsCurve - Converts Rhino Nurbs Curves to Design Script Nurbs Curves. , RH Point to DS Point - Converts Rhino point object to Design Script point., RH PolyCurve to DS PolyCurve  - Converts Rhino polycurves to Design Script Polycurves., RH Polyline to DS Polycurve - Converts Rhino polyline curve to Design Script polycurve., Specify RhinoCommon.dll Path - This node needs to be used to specify a valid RhinoCommon.dll path. After it was used for the first time, you will not have to use it again, unless a new version of Mantis Shrimp or Rhino is installed., Write GH File - This node exports Dynamo (Design Script) geometry/data to Grasshopper.",
          "engine_metadata": "",
          "engine_version": "1.2.0.2654",
          "created": "2016-10-03T20:34:49.841Z",
          "full_dependency_versions": [ "2017.12.2" ],
          "full_dependency_ids": [
            {
              "name": "Mantis Shrimp",
              "_id": "544f1c908b802a9427000006"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.12.2",
          "contains_binaries": true,
          "node_libraries": [ "MantisShrimpUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-10-03T20:34:49.841Z",
      "num_versions": 42,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -22,
      "downloads": 4560,
      "repository_url": "https://github.com/ksobon/MantisShrimp",
      "site_url": "www.archi-lab.net",
      "banned": false,
      "deprecated": false,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo 1.0 - Mantis Shrimp is a interoperability project that allows you to easily import Grasshopper and/or Rhino geometry into Dynamo. It is an open source project with all of the source code available on gitHub: https://github.com/ksobon/MantisShrimp. Please visit www.archi-lab.net for instructions on how to get started or follow me Twitter @arch_laboratory",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "mantis", "shrimp", "rhino", "grasshopper", "geometry", "import", "bad", "monkey" ],
      "white_list": false
    },
    {
      "_id": "57f4193fd3d589541a000024",
      "name": "Herramienta Losa",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/e126e3fc-131c-4827-90cc-294fb6441451gregPkg130.zip",
          "contents": "HerramientaLosas - genera nueva losa a partir de muchas otras",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-10-04T21:03:59.698Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Herramienta Losa",
              "_id": "57f4193fd3d589541a000024"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-04T21:03:59.698Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 36,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "crea losa a partir de otras losas",
      "maintainers": [
        {
          "username": "dipinoch@mit.edu",
          "_id": "53739fdf0e5572016a00005d"
        }
      ],
      "keywords": [ "rl", "losas", "slab", "floor" ],
      "white_list": false
    },
    {
      "_id": "57f4bf15d3d589541a000028",
      "name": "List.GetFilter",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/7cba9f4d-4a4f-4088-aca4-bb64c30ce6c0gregPkg435.zip",
          "contents": "List.GetFilter - List.Get with filter of null values",
          "engine_metadata": "",
          "engine_version": "0.8.1.1942",
          "created": "2016-10-05T08:51:33.956Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "List.GetFilter",
              "_id": "57f4bf15d3d589541a000028"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-05T08:51:33.956Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 215,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Pulls from a list like List.GetItemAtIndex and then removes null values",
      "maintainers": [
        {
          "username": "Charles.Stokes",
          "_id": "57f4be43d3d589541a000027"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57f4c4aad3d589541a00002a",
      "name": "Revit.SheetNumber",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/355c4f2c-86d6-43fc-b420-98ed88de6ccfgregPkg857.zip",
          "contents": "Revit.SheetNumber - Combines multiple Strings into one Sheet Number",
          "engine_metadata": "",
          "engine_version": "0.8.1.1942",
          "created": "2016-10-05T09:15:22.776Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Revit.SheetNumber",
              "_id": "57f4c4aad3d589541a00002a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-05T09:15:22.776Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 354,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Combines multiple strings into a single string for use with Sheet.ByNameNumberTitleAndView",
      "maintainers": [
        {
          "username": "Charles.Stokes",
          "_id": "57f4be43d3d589541a000027"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57f4c603d3d589541a00002c",
      "name": "Revit.SheetType",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/ba0cbb56-7ca2-4219-8531-550e183f99a5gregPkg359.zip",
          "contents": "Revit.Sheet.Type - Allows you to select the family type of a title block based on a string code (A0, A1, A2, or A3)",
          "engine_metadata": "",
          "engine_version": "0.8.1.1942",
          "created": "2016-10-05T09:21:07.060Z",
          "full_dependency_versions": [ "0.5.0" ],
          "full_dependency_ids": [
            {
              "name": "Revit.SheetType",
              "_id": "57f4c603d3d589541a00002c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.5.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-05T09:21:07.06Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 304,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Selects a family name based on a particular code for selecting a sheet size (File Path to SheetTypeList.xlsx must be adjusted before function)",
      "maintainers": [
        {
          "username": "Charles.Stokes",
          "_id": "57f4be43d3d589541a000027"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5769a9afe70394822f0000f9",
      "name": "FuzzyDyno",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/fcaa7b13-ca5f-4732-9f1b-db2e71124a3bgregPkg585.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-10-06T03:22:19.739Z",
          "full_dependency_versions": [ "1.5.0" ],
          "full_dependency_ids": [
            {
              "name": "FuzzyDyno",
              "_id": "5769a9afe70394822f0000f9"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.5.0",
          "contains_binaries": true,
          "node_libraries": [ "FuzzyDyno.customization, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "FuzzyDyno, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-10-06T03:22:19.739Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 136,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Fuzzy string comparison.  Icon by: http://cookie-waffle.deviantart.com/ ",
      "maintainers": [
        {
          "username": "erudisaile@microdesk.com",
          "_id": "57274cb5305bec4d3c000061"
        }
      ],
      "keywords": [ "string", "compare" ],
      "white_list": false
    },
    {
      "_id": "55f2f4ad662bf0e908000171",
      "name": "Dynamo for Rebar",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/e013503d-aa4b-4a93-ba8a-5acdc5bc1a4fgregPkg907.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.2854",
          "created": "2016-10-12T13:11:47.618Z",
          "full_dependency_versions": [ "1.2.0" ],
          "full_dependency_ids": [
            {
              "name": "Dynamo for Rebar",
              "_id": "55f2f4ad662bf0e908000171"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.0",
          "contains_binaries": true,
          "node_libraries": [ "DynamoRebar, Version=0.3.1.0, Culture=neutral, PublicKeyToken=null", "DynamoRebarUI.customization, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", "DynamoRebarUI, Version=0.3.0.0, Culture=neutral, PublicKeyToken=null", "DynamoRebar.customization, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-10-12T13:11:47.618Z",
      "num_versions": 24,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 6753,
      "repository_url": "https://github.com/tt-acm/DynamoForRebar",
      "site_url": "http://core.thorntontomasetti.com/dynamo-for-rebar-is-now-available/",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "Foundation Rebar",
          "_id": "565d68e30370b0a907000034"
        },
        {
          "name": "Structural Rebar",
          "_id": "58e4e62db529d0bb2400007d"
        },
        {
          "name": "BS-Rebar-LapSplice",
          "_id": "58e4eba8b529d0bb24000080"
        },
        {
          "name": "BimSolutions.rebar",
          "_id": "58e4ee8fb529d0bb24000084"
        },
        {
          "name": "BS-RebarLabSplice",
          "_id": "58e4fec3b529d0bb24000089"
        }
      ],
      "num_dependents": 5,
      "description": "A Dynamo package for authoring geometrically complex rebar models in Revit 2016.",
      "maintainers": [
        {
          "username": "CORE_studio",
          "_id": "54c69c81dcee4dfd26000090"
        }
      ],
      "keywords": [ "rebar" ],
      "white_list": false
    },
    {
      "_id": "57fd20a3d3d589541a00006f",
      "name": "PW_Lon_Revit",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/e6c6c93e-bc2f-46b2-81db-6701c13e965bgregPkg672.zip",
          "contents": "ChangeAnnotationType.ByCategoryViewTemplateElement - Change annotation type for same view template, RenameFiles.By - No description provided",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-10-13T10:58:12.132Z",
          "full_dependency_versions": [ "1.1.1", "0.90.6", "2016.5.27" ],
          "full_dependency_ids": [
            {
              "name": "PW_Lon_Revit",
              "_id": "57fd20a3d3d589541a00006f"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "2016.5.27", "0.90.6" ],
          "direct_dependency_ids": [
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-13T10:58:12.132Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 10,
      "repository_url": "Mauro.Sabiu@perkinswill.com",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "***test01***Set of nodes in use in PW London",
      "maintainers": [
        {
          "username": "Mauro.Sabiu@perkinswill.com",
          "_id": "57fd1961d3d589541a00006d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57fff5e1d3d589541a000089",
      "name": "RLCREA3DView",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c3f10e4d-440a-49ab-bc5a-d6c7353aed11gregPkg229.zip",
          "contents": "CREATE3DView - crea vista 3d desde bbox",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-10-13T21:00:17.136Z",
          "full_dependency_versions": [ "2.1.0" ],
          "full_dependency_ids": [
            {
              "name": "RLCREA3DView",
              "_id": "57fff5e1d3d589541a000089"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-13T21:00:17.136Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 55,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "crea vista 3d a partir de bbox",
      "maintainers": [
        {
          "username": "dipinoch@mit.edu",
          "_id": "53739fdf0e5572016a00005d"
        }
      ],
      "keywords": [ "rl", "ceachei" ],
      "white_list": false
    },
    {
      "_id": "5805cb46f50b17c720000013",
      "name": "Update",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/06dc1202-92cf-4d4c-b3d7-121e1d0c7d85gregPkg803.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.2910",
          "created": "2016-10-18T07:12:06.657Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Update",
              "_id": "5805cb46f50b17c720000013"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": true,
          "node_libraries": [ "QuickGraph, Version=3.6.61114.0, Culture=neutral, PublicKeyToken=f3fb40175eec2af3" ]
        }
      ],
      "latest_version_update": "2016-10-18T07:12:06.657Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Update package",
      "maintainers": [
        {
          "username": "monika_prabhu",
          "_id": "546adaeeb77c84600c00000d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57d856ebf615e7725800003e",
      "name": "EnergyPredictML",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/81d6984c-0d62-4cca-a97d-0b70b7e6c8f0gregPkg618.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2016-10-18T16:48:20.121Z",
          "full_dependency_versions": [ "1.0.8" ],
          "full_dependency_ids": [
            {
              "name": "EnergyPredictML",
              "_id": "57d856ebf615e7725800003e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.8",
          "contains_binaries": true,
          "node_libraries": [ "EnergyPredictML, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-10-18T16:48:20.121Z",
      "num_versions": 9,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 283,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This project uses machine learning algorithms to train a model on top of Insight360 database to predict energy performance for newly submitted models. ",
      "maintainers": [
        {
          "username": "clsgalvez",
          "_id": "57d8441af615e7725800003b"
        }
      ],
      "keywords": null,
      "white_list": true
    },
    {
      "_id": "58068fdef50b17c720000024",
      "name": "LCA_Aeforos",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/53f6051f-6976-42d8-a44f-2569eaf777a8gregPkg256.zip",
          "contents": "Aeforos - Calculates and reports the Life Cycle environmental impacts of the provided elements according to a given LCI database., DateTime.Numbers - Gives the year, month, day, hour, minute and second as a list of numbers., EmptyIndicesToZero - Replaces all empty indices of a list with 0., FirstLettersFromString - Gets the first requested letters of a string. Works with list of strings., GetStringUntil - Gets the fisrt part of a string until it reaches a specified character. Works with lists., IsDigit - Checks if a given string is made of digits., LCA.All_Elements - Gives a list of all level based elements, foundations, stairs, Generic models, beams and columns, LCA.ColorSet - Gives nine predefined colors suitable for colorcoding, LCA.GetTypeMaterials(ExclEmptyLists&sfb49)Count - Gets the materials, their area and volume in total for each family type. It also gives a list of the families that do not have materials assigned., LCA.MainBuildingElements - Gets all the main building elements (Walls, Floors, Roofs, Ceilings, Windows, Doors, Foundations, Columns, Beams, Stairs and Generic models, SortByTrue - Takes any list and an equal size list of booleans and gives back a new list which containes only the indices that are equal to True in the boolean list., SumList.Sublists - Takes a list of equal sized lists and returns a list with the sum of all sublists' respective indices",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-10-19T20:29:00.944Z",
          "full_dependency_versions": [ "0.0.2", "2015.11.28" ],
          "full_dependency_ids": [
            {
              "name": "LCA_Aeforos",
              "_id": "58068fdef50b17c720000024"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "2015.11.28" ],
          "direct_dependency_ids": [
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-19T20:29:00.944Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 8,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A set of nodes that enables LCA analyses of the Revit models. Download the Database and Results template from https://github.com/MariosTsikos/LCA_Aeforos",
      "maintainers": [
        {
          "username": "tsikosmarios",
          "_id": "56fbc27f5bee3e21380000b8"
        }
      ],
      "keywords": [ "lca", "aeforos", "life", "cycle", "assessment", "impacts" ],
      "white_list": false
    },
    {
      "_id": "5807dd02f50b17c720000038",
      "name": "LCA-Aeforos",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8f0e7154-0081-4d04-8ce0-4c2d0ba3e559gregPkg828.zip",
          "contents": "Aeforos - Calculates and reports the Life Cycle environmental impacts of the provided elements according to a given LCI database., DateTime.Numbers - Gives the year, month, day, hour, minute and second as a list of numbers., EmptyIndicesToZero - Replaces all empty indices of a list with 0., FirstLettersFromString - Gets the first requested letters of a string. Works with list of strings., GetStringUntil - Gets the fisrt part of a string until it reaches a specified character. Works with lists., IsDigit - Checks if a given string is made of digits., LCA.All_Elements - Gives a list of all level based elements, foundations, stairs, Generic models, beams and columns, LCA.ColorSet - Gives nine predefined colors suitable for colorcoding, LCA.GetTypeMaterials(ExclEmptyLists&sfb49)Count - Gets the materials, their area and volume in total for each family type. It also gives a list of the families that do not have materials assigned., LCA.MainBuildingElements - Gets all the main building elements (Walls, Floors, Roofs, Ceilings, Windows, Doors, Foundations, Columns, Beams, Stairs and Generic models, SortByTrue - Takes any list and an equal size list of booleans and gives back a new list which containes only the indices that are equal to True in the boolean list., SumList.Sublists - Takes a list of equal sized lists and returns a list with the sum of all sublists' respective indices, AeforosUserGuide - Run this node prior to Aeforos to show some guidelines for Aeforos' inputs.",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-10-22T19:53:53.246Z",
          "full_dependency_versions": [ "0.0.5" ],
          "full_dependency_ids": [
            {
              "name": "LCA-Aeforos",
              "_id": "5807dd02f50b17c720000038"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-22T19:53:53.246Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 112,
      "repository_url": "https://github.com/MariosTsikos/LCA_Aeforos",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A set of nodes that enables LCA analyses of the Revit models. It uses a specific database structure that can be downloaded from https://github.com/MariosTsikos/LCA_Aeforos\r\nTo achieve the link between tha database and the Revit materials, follow the guidelines given in the github repository. This will be a one time process only. The use of BIM7AA encoding system is needed for the full functionality of color coding but it's not necessary for the analytical results.  Make sure to first run the AeforosUserGuide first to get famiriar with the inputs needed from Aeforos.",
      "maintainers": [
        {
          "username": "tsikosmarios",
          "_id": "56fbc27f5bee3e21380000b8"
        }
      ],
      "keywords": [ "lca", "aeforos", "life", "cycle", "assessment", "impacts" ],
      "white_list": false
    },
    {
      "_id": "58104f29f50b17c720000079",
      "name": "Test Cube for Formit",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/07204181-4d13-4c32-8525-178d0a05662agregPkg56.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.1.0.2093",
          "created": "2016-10-26T06:37:29.928Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Test Cube for Formit",
              "_id": "58104f29f50b17c720000079"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-26T06:37:29.928Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 40,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Test Cube for Formit",
      "maintainers": [
        {
          "username": "gerard.outram@buildingstudio.com.au",
          "_id": "58104e4bf50b17c720000078"
        }
      ],
      "keywords": [ "test", "cube", "for", "formit" ],
      "white_list": false
    },
    {
      "_id": "5766c392e70394822f0000ca",
      "name": "CERVER Tools",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/cd24e37a-c8c5-4c7f-884b-2bd99d5f4aa7gregPkg894.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2016-10-26T13:22:48.368Z",
          "full_dependency_versions": [ "1.0.3" ],
          "full_dependency_ids": [
            {
              "name": "CERVER Tools",
              "_id": "5766c392e70394822f0000ca"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.3",
          "contains_binaries": true,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-26T13:22:48.368Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 200,
      "repository_url": "",
      "site_url": "www.cerver.org",
      "banned": false,
      "deprecated": false,
      "group": "CERVER DS",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A collection of tools including Minimal Surface, mesh tools, and others. ",
      "maintainers": [
        {
          "username": "cerver",
          "_id": "56494509662bf0e908000338"
        }
      ],
      "keywords": [ "minimal", "surface", "fabrication", "mesh", "tools" ],
      "white_list": false
    },
    {
      "_id": "580a0ac5f50b17c720000048",
      "name": "Gorilla17",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/adcffb9c-e1d6-436a-80f8-32017eb7e8c2gregPkg386.zip",
          "contents": "Gorilla Samples - Examples & Samples",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-10-30T05:09:16.573Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "Gorilla17",
              "_id": "580a0ac5f50b17c720000048"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": true,
          "node_libraries": [ "Gorilla, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "GorillaUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-10-30T05:09:16.573Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 336,
      "repository_url": "",
      "site_url": "http://badmonkeys.net/",
      "banned": false,
      "deprecated": false,
      "group": "Badmonkeys",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "MEP Objects, Connectors Placeholders, Systems and Routing.",
      "maintainers": [
        {
          "username": "Gytaco",
          "_id": "542d2401cc26bfdc5a00003e"
        }
      ],
      "keywords": [ "mep", "routing", "placeholders" ],
      "white_list": false
    },
    {
      "_id": "57bc2ef24172a48a350000bc",
      "name": "BIM4Struc.BridgeDesign",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/1f55718f-2e68-4ab8-acca-855c4e010870gregPkg840.zip",
          "contents": "Bridge Section Profile Placement - Generate a form based on profiles along 3 curve references, Road Splines from Excel - Read Excel coordinates and generate the road reference splines for the section profile placement.\r\nThis node will generate the left edge, centerline and right edge of the road.",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-10-30T20:07:58.976Z",
          "full_dependency_versions": [ "1.2.1", "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "BIM4Struc.BridgeDesign",
              "_id": "57bc2ef24172a48a350000bc"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "direct_dependency_versions": [ "1.0.1" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "change_log": "",
          "version": "1.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-10-30T20:07:58.976Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 4,
      "downloads": 1311,
      "repository_url": "",
      "site_url": "www.autode.sk/bridgedesign",
      "banned": false,
      "deprecated": false,
      "group": "BIM4Struc",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This package makes it possible to create complex bridge and tunnel elements based on external data (like Civil 3D Corridor Points, Feature Lines, ...)\r\n\r\nIn the Extra folder of this package you can find two examples of the usage of this package.\r\n\r\nMore information about how to use it, can be found here:\r\nhttps://revitbeyondbim.wordpress.com/2016/08/22/\r\nconcrete-bridge-design-workflow/",
      "maintainers": [
        {
          "username": "dieter.vermeulen@autodesk.com",
          "_id": "54902569fa779c1c1100005c"
        }
      ],
      "keywords": [ "bridge", "design" ],
      "white_list": false
    },
    {
      "_id": "581855f7f50b17c7200000b5",
      "name": "IkLeerBIM",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/63c0cc3b-a34f-4047-b887-9a42ce25f094gregPkg578.zip",
          "contents": "Select_All_Elements_at_1_Level - Select 1 Level and this node will return all the elements hosted on this Level",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-01T08:44:39.413Z",
          "full_dependency_versions": [ "1.1.2", "0.90.7" ],
          "full_dependency_ids": [
            {
              "name": "IkLeerBIM",
              "_id": "581855f7f50b17c7200000b5"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "direct_dependency_versions": [ "0.90.7" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "change_log": "",
          "version": "1.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-01T08:44:39.413Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 24,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Revit + Dynamo = 3",
      "maintainers": [
        {
          "username": "teun_1@hotmail.com",
          "_id": "5818470bf50b17c7200000b2"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "581902a6dbe5183048000006",
      "name": "Frac629",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/05dcb31a-c476-441d-bcbe-ddfa40b1d57cgregPkg405.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3002",
          "created": "2016-11-01T21:05:12.670Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Frac629",
              "_id": "581902a6dbe5183048000006"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": true,
          "node_libraries": [ "CrashReach, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-11-01T21:05:12.67Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 0,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Test Frac-629",
      "maintainers": [
        {
          "username": "siddhartha.mangarole",
          "_id": "580e70b2f50b17c720000061"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "581a07fbdbe5183048000014",
      "name": "Test629",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/0762b43b-2c2b-4366-b292-11af3b8b0548gregPkg815.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3002",
          "created": "2016-11-02T17:00:38.923Z",
          "full_dependency_versions": [ "1.0.7" ],
          "full_dependency_ids": [
            {
              "name": "Test629",
              "_id": "581a07fbdbe5183048000014"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.7",
          "contains_binaries": true,
          "node_libraries": [ "CrashReach, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-11-02T17:00:38.923Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 10,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Checking Reach Crash",
      "maintainers": [
        {
          "username": "siddhartha.mangarole",
          "_id": "580e70b2f50b17c720000061"
        }
      ],
      "keywords": null,
      "white_list": true
    },
    {
      "_id": "546d1cf8b77c84600c000023",
      "name": "Rhynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c9d0ee31-831c-443e-ac92-59accb4eeb2agregPkg383.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-03T02:49:50.842Z",
          "full_dependency_versions": [ "2016.11.2" ],
          "full_dependency_ids": [
            {
              "name": "Rhynamo",
              "_id": "546d1cf8b77c84600c000023"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.11.2",
          "contains_binaries": true,
          "node_libraries": [ "Rhynamo, Version=2016.11.2.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-11-03T02:49:50.842Z",
      "num_versions": 16,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -29,
      "downloads": 17188,
      "repository_url": "https://bitbucket.org/archinate/rhynamo",
      "site_url": "http://provingground.io/tools/rhynamo/",
      "banned": false,
      "deprecated": false,
      "group": "Proving Ground",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "BVN",
          "_id": "5507ae3e0c7eac9b57000053"
        }
      ],
      "num_dependents": 1,
      "description": "Rhynamo is an open source Dynamo (1.2) node library  for reading and writing Rhino 3DM files.  Rhynamo uses McNeel's OpenNURBS library to expose new nodes for translating Rhino geometry for use within Dynamo. In addition, several experimental nodes are provided that allow for 'Live' access to the Rhino command line.  Rhynamo is an experimental tool provided under the MIT open source license.",
      "maintainers": [
        {
          "username": "archinate",
          "_id": "5234d9ab6b18e47916000007"
        }
      ],
      "keywords": [ "interoperability", "rhino", "rhynamo", "nurbs", "grasshopper", "case" ],
      "white_list": false
    },
    {
      "_id": "5710e5d5287283f905000036",
      "name": "Node-Mode",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/af3df518-962c-4613-b78d-d63302bfc7b3gregPkg823.zip",
          "contents": "All Lines of LineStyle - Gets all lines in a project with a giver LineStyle, Create folder - Creates folder with specified location and name, Current document name - gets name of the current document, Duplicate Element - Duplicates all types of elements including view templates, Element(s) cut - Cutting element(s) with element, Export to FBX - Exports 3D views to FBX format, Export Views to NavisWorks - exports 3d views to NavisWorks, Get ViewTemplate By Name - gets view templates by name, Line LineStyle - Gives LineStyle name and element of Lines, RayBounce On Link Category - Same functionality as raybounce but takes laked model elements intoaccount, RayBounce On Linked Model - Same functionality as raybounce but takes laked model elements intoaccount, Remove by condition - Removes elements from list by condition, Replace viewports by center - Replaces vieports on sheets according to list of points. (0,0) is bottom left of sheets, Revit ViewFilters - Retrieves all view filters loaded on a project, Select Face (s) (PickObject) - Same as OOTB Select Faces, but can be used through Dynamo Player, Set Active Family Parameter By Name - Set a parameter inside an active family document, Tag(s) Host(s) - Gets hosts of tag elements, Triangulate surface - approximate a surface with a triangulated polysurface, Tween Curves - Gives blending curves between two curves, Tween PolyCurves - Gives blending curves between two curves, XY Plane At Height - creates an XY plane at given height(s)",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-10T09:28:13.405Z",
          "full_dependency_versions": [ "2016.11.8" ],
          "full_dependency_ids": [
            {
              "name": "Node-Mode",
              "_id": "5710e5d5287283f905000036"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.11.8",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-10T09:28:13.405Z",
      "num_versions": 51,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 282,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Deprecated - moved to Data-Shapes Package",
      "maintainers": [
        {
          "username": "elayoubi.mostafa",
          "_id": "5710e255287283f905000035"
        }
      ],
      "keywords": [ "formfinding", "architectural", "design", "bim", "management", "revit", "filter", "filters" ],
      "white_list": false
    },
    {
      "_id": "581decdc28c433b358000025",
      "name": "Nittygritty",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/9060ce2a-7b36-4673-a7da-435ea3c6d67agregPkg863.zip",
          "contents": "NG Test Node 1 - A Test , NG Test Node 2 - Another Test Node",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2016-11-05T14:44:31.700Z",
          "full_dependency_versions": [ "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "Nittygritty",
              "_id": "581decdc28c433b358000025"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-05T14:44:31.7Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 29,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A host of nodes collated and built by BIMgineers",
      "maintainers": [
        {
          "username": "DwayneNittyGritty",
          "_id": "581de2f528c433b358000024"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5823386b5af9f3713d00001e",
      "name": "FLOORS.BY.ROOMS",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/53df0ace-b1a1-44cd-8907-12b73b9e37dfgregPkg828.zip",
          "contents": "FLOORS BY ROOMS. per level & name getting parameters - Create Floors by Rooms' boundaries, per level and Rooms' Type, outputting parameters value, FLOORS BY ROOMS per Level - Create Floors by Rooms' boundaries, per level, FLOORS FROM ROOMS. type by Floor Finish - Create Floors by Rooms' boundaries, according with it \"Floor Finish\" value, GET FLOOR PARAMETER BY ROOM VALUE PARAMETER - Get the value of a floor's parameter by the correspondent value of a rooms' parameter",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-09T14:53:31.960Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "FLOORS.BY.ROOMS",
              "_id": "5823386b5af9f3713d00001e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-09T14:53:31.96Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 237,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Creating floors by rooms' boundaries, and getting its parameters.",
      "maintainers": [
        {
          "username": "Marco_Scala",
          "_id": "5821fdbb5af9f3713d00000b"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5828c0155af9f3713d000057",
      "name": "FrTe",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/b3951c05-e73f-4e49-ae94-ec210206056bgregPkg129.zip",
          "contents": "FaceFurthestFromInstallationPoint - Gets the face furthest from the installation point, GetCeilingsInProject - Get all ceilings in project, GetElementLength - Get the longest side of the element, GetElementOrientation - Gets the orientation of the element, GetFamilyInstanceRotationDegrees - Get family instance rotation in degrees, GetInsertPointBasedOnLinkedElement - No description provided, GetMidpointOfFace - Gets the midpoint of surface with Z=Level Height, GetSpaceContainingPoint - Gets the space containing a gived point, Hent sengeromspanel - Henter alle sengeromspaneler, SortByDirection - Creates a list where elements are sorted by their angle., SortByDirectionFilterByAnotherList - Creates a list where elements are sorted by their angle.",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-13T19:33:41.967Z",
          "full_dependency_versions": [ "0.1.0", "1.0.0", "82.9.1", "2015.11.28" ],
          "full_dependency_ids": [
            {
              "name": "FrTe",
              "_id": "5828c0155af9f3713d000057"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "1.0.0", "82.9.1", "2015.11.28" ],
          "direct_dependency_ids": [
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-13T19:33:41.967Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 5,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "FrTe's package",
      "maintainers": [
        {
          "username": "frte@cowi.com",
          "_id": "58272d2b5af9f3713d00004e"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "55cd54b0662bf0e9080000b4",
      "name": "UtilityNodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8801fe00-24b8-4bf3-ae9a-6c86b68c7835gregPkg130.zip",
          "contents": "CreatePointGrid - This custom node will created 4point array by providing array of 2 lines., GetMidPoint - Input two points and it will return mid point, GetSharedCord - This will return Start and End point from a family., RecursivePattern - Takes a PolyCurve and returns a smaller PolyCurve in the pattern, RotateAdaptiveComponentDuringPlacement - This will provide you opportunity to rotate Adaptive Componenet while placement.",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-14T08:12:30.446Z",
          "full_dependency_versions": [ "30.11.2016" ],
          "full_dependency_ids": [
            {
              "name": "UtilityNodes",
              "_id": "55cd54b0662bf0e9080000b4"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "30.11.2016",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-14T08:12:30.446Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 371,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "UtilityNodes",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "These are the bunch of Custom Nodes which are useful in many scenarios. Look for description on each custom node about what they do.",
      "maintainers": [
        {
          "username": "critesh",
          "_id": "530da612bfe42595360000b0"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "582b159c5af9f3713d000077",
      "name": "Basic_Python_Template",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/b78c0d28-ae2a-461c-93f7-fc70217fd965gregPkg388.zip",
          "contents": "Python Template - Basic Python Template",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-15T14:17:25.784Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Basic_Python_Template",
              "_id": "582b159c5af9f3713d000077"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-15T14:17:25.784Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 406,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "ABT",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Python Node with basic code for revit interaction",
      "maintainers": [
        {
          "username": "MartinB2",
          "_id": "54ec7ab5dcee4dfd26000113"
        }
      ],
      "keywords": [ "python" ],
      "white_list": false
    },
    {
      "_id": "5488619cfa779c1c11000032",
      "name": "jnb",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/75f344ce-85d1-4a2d-884c-ca98ea705396gregPkg440.zip",
          "contents": "test - No description provided",
          "engine_metadata": "",
          "engine_version": "2.0.0.3185",
          "created": "2016-11-15T18:30:42.771Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "jnb",
              "_id": "5488619cfa779c1c11000032"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": true,
          "node_libraries": [ "DisplayTests, Version=1.2.1.3005, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-11-15T18:30:42.771Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 3,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "jnb test for Monika",
      "maintainers": [
        {
          "username": "jnealb",
          "_id": "546ceba1b77c84600c00001d"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "582b72555af9f3713d000081",
      "name": "TestSolar",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/2aec54a5-fab3-4759-99b9-0ac4ee4b79d6gregPkg642.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2016-11-15T20:38:45.572Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "TestSolar",
              "_id": "582b72555af9f3713d000081"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": true,
          "node_libraries": [ "DynamoSolarAnalysis, Version=0.8.2.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-11-15T20:38:45.572Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 50,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Analyze",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing solar package",
      "maintainers": [
        {
          "username": "clsgalvez",
          "_id": "57d8441af615e7725800003b"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "582b8c165af9f3713d000086",
      "name": "Find DWG ID",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8688faf3-994b-452c-bd68-dc0438800e54gregPkg551.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2016-11-15T22:28:38.804Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Find DWG ID",
              "_id": "582b8c165af9f3713d000086"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-15T22:28:38.804Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 84,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Allow you to find the ID of your DWG to make a find with ID in revit",
      "maintainers": [
        {
          "username": "JPCOURCHESNE_7390",
          "_id": "582b8b455af9f3713d000085"
        }
      ],
      "keywords": [ "dwg", "find", "id" ],
      "white_list": false
    },
    {
      "_id": "582be5855af9f3713d00008b",
      "name": "DynamoSlam2016",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/44872bdc-a79f-456f-a201-394d92f04ecdgregPkg627.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-16T04:50:13.716Z",
          "full_dependency_versions": [ "2016.11.15" ],
          "full_dependency_ids": [
            {
              "name": "DynamoSlam2016",
              "_id": "582be5855af9f3713d00008b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.11.15",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-16T04:50:13.716Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 118,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This is the winning design for the Dynamo Slam 2016",
      "maintainers": [
        {
          "username": "j0hnp",
          "_id": "54943e329508c43706000013"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5826132e5af9f3713d000045",
      "name": "TestSol2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/e54c8ac5-1070-43bf-b9d2-844579a09e41gregPkg977.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2016-11-16T19:18:36.102Z",
          "full_dependency_versions": [ "1.0.5" ],
          "full_dependency_ids": [
            {
              "name": "TestSol2",
              "_id": "5826132e5af9f3713d000045"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.5",
          "contains_binaries": true,
          "node_libraries": [ "DynamoSolarAnalysis, Version=0.8.2.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-11-16T19:18:36.102Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 16,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Analyze",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing sol",
      "maintainers": [
        {
          "username": "clsgalvez",
          "_id": "57d8441af615e7725800003b"
        }
      ],
      "keywords": null,
      "white_list": true
    },
    {
      "_id": "582cca865af9f3713d00009c",
      "name": "TestTrid",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/3b98b409-b1e4-4793-ab18-e13dce7ee12dgregPkg797.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2016-11-16T21:07:18.069Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "TestTrid",
              "_id": "582cca865af9f3713d00009c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": true,
          "node_libraries": [ "DynamoSolarAnalysis, Version=0.8.2.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-11-16T21:07:18.069Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 14,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Analyze",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Test Trident",
      "maintainers": [
        {
          "username": "clsgalvez",
          "_id": "57d8441af615e7725800003b"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57dbd203882d868b4200000d",
      "name": "SYKES",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8bcbb819-cad5-4f44-b238-0f5d3336e90dgregPkg855.zip",
          "contents": "All Model Categories - Gives all categories, All Parameters - Grabs all associated parameters of an element, AutoRenamer - Checks list A against list B.\r\nIf an item of list A is in list B, a number is appended removing all duplicates from A in B., Bools to indicies - Takes a true/false populated list and returns the indicies of true, Clean List - Cleans a list of empties and nulls, Count minus one - Counts from 0 instead of 1, Create Dependent View - Creates a new dependent floor plan from any floor plan., Create Sheet - from http://hastebin.com/udinigurur.hs shamelessly stolen for my own maniacle reasons., Crop plan to room - Crops a floor plan to an input room.\r\nAn altered version of the Archinodes create floor plan from room node., Crop View to Room - Crops a view to a room, Current Revision Properties - Gets all current revision properties, Delete all ViewTemplates - No description provided, Duplicate Schedule - Duplicates a schedule n times, Empty String Check - If a string is empty returns true, Fitted Set - Sets fitted furnitures type, Fitted Type - Fitted type maniuplating node, Get Element info - Gets much of an elements information, Get Elements in Rooms - Obtains a list of all elements in specified room(s), Get sublist item {{A,B}, {A,B}} - Retrieve one sublist downs items, Get Type Parameters - Get type parameters from an element, Get View Crop - Get the view crop of a view, Hide Elements outside room in view - No description provided, IF(x) - Conditinal If statement, Invert booleans - All false become true and all true false!, Is Param Empty - Checks for an empty param (empty string), Link in revit model from file path - Stolen shamelessly from https://forum.dynamobim.com/t/how-to-link-a-revit-file-with-python/3237, Place view on sheet - Placing views on sheets\r\n\r\nShamelessly taken from here http://hastebin.com/wimaquraji.hs and put into a custom node for my own personal use. I DID NOT create this., Remove elements from list based on parameter values search - Removes elements from a list based on search terms, Remove elements from list based on parameter values - Input element list, parameter name to list and parameter values to remove from list, Remove empties - Removes all empty items from a list, Remove str from str - Input string A and B, remove A from B., Replace parameter if empty - Checks to see if parameter is empty before replacing it, good for adding new data to sheets., Return numbers from string - Return any numbers in a string, Revit Sheet Number list - Generates a specified length list of sheet numbers, Revs to Sheets - Input a list of revs and sheets, add rev[i] to sheet[i], Search for and replace - Replace item, Search list and return list - Searches a list for a string and returns all matches or unmatches from that list or another. Good for filtering room names and returning elements, Seperate page sizes - Reads through a list and returns the indicies of each into a seperate list. For use with List.GetItemAtIndex.\r\n(Helpful for sorting sheets into lists based on page sizes), Set empty parameters - Set parameter if empty, Sheet Number List v2 - Generates a specified length list of sheet numbers, SPZ Issue sheet to excel - No description provided, Sublist length - Returns the lengths of the first sublist of every item in a list. Returns 0 for [EMPTY]",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-18T10:19:52.765Z",
          "full_dependency_versions": [ "0.1.5", "1.0.0", "2016.11.1", "0.90.8", "2016.12.1", "100.0.1", "2016.10.31" ],
          "full_dependency_ids": [
            {
              "name": "SYKES",
              "_id": "57dbd203882d868b4200000d"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "100.0.1", "2016.11.1", "2016.12.1", "1.0.0", "0.90.8", "2016.10.31" ],
          "direct_dependency_ids": [
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "0.1.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-18T10:19:52.765Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 34,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A collection of lovingly made nodes.",
      "maintainers": [
        {
          "username": "callum_sykes",
          "_id": "57dbcf3e882d868b4200000c"
        }
      ],
      "keywords": [ "sykes" ],
      "white_list": false
    },
    {
      "_id": "56bf4c5dc3e9ee4a080000fb",
      "name": "Prorubim Common Kit",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/708b0d5d-7ffc-44ab-899b-7b95ce96b71dgregPkg753.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-18T14:00:03.456Z",
          "full_dependency_versions": [ "0.2.1" ],
          "full_dependency_ids": [
            {
              "name": "Prorubim Common Kit",
              "_id": "56bf4c5dc3e9ee4a080000fb"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.1",
          "contains_binaries": true,
          "node_libraries": [ "ProrubimCommonKit.customization, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ProrubimCommonKit, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ProrubimCommonKitUI.customization, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ProrubimCommonKitUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-11-18T14:00:03.456Z",
      "num_versions": 11,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 1002,
      "repository_url": "",
      "site_url": "http://tools.prorubim.com/en/",
      "banned": false,
      "deprecated": false,
      "group": "Prorubim",
      "engine": "dynamo",
      "license": "CC Attribution-NoDerivatives 4.0 International",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Node set with various Dynamo nodes for interacting with Revit",
      "maintainers": [
        {
          "username": "alexey.lobanov",
          "_id": "546cdebcb77c84600c00001c"
        }
      ],
      "keywords": [ "common", "elements", "assembly", "scattering", "image", "legend" ],
      "white_list": false
    },
    {
      "_id": "5820b7a8e13a19935300000e",
      "name": "RevitPythonWrapper",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/adfc2fa6-f637-4e61-bd60-66f0146f762dgregPkg147.zip",
          "contents": "RPW_GetFilepath - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-11-22T00:53:40.882Z",
          "full_dependency_versions": [ "0.0.91" ],
          "full_dependency_ids": [
            {
              "name": "RevitPythonWrapper",
              "_id": "5820b7a8e13a19935300000e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.91",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-22T00:53:40.882Z",
      "num_versions": 12,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 278,
      "repository_url": "https://github.com/gtalarico/revitpythonwrapper",
      "site_url": "http://revitpythonwrapper.readthedocs.io",
      "banned": false,
      "deprecated": false,
      "group": "Python",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Python Wrappers for the Revit API ",
      "maintainers": [
        {
          "username": "gtalarico",
          "_id": "56aa7b39c3e9ee4a0800005b"
        }
      ],
      "keywords": [ "python", "revit", "api", "rpw" ],
      "white_list": false
    },
    {
      "_id": "56aa7950c3e9ee4a08000059",
      "name": "Ladybug",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/d744d6ff-f253-4e27-b7c9-5075a466f8c6gregPkg591.zip",
          "contents": "Analysis Period - Create a Ladybug Analysis Period, Calculate HOY - Calculate hour of year for a month, day and hour, Construct Location - Construct a Ladybug location based on input data, Deconstruct Location - Get different location data from a location string, Filter Sky Matrix - Filter Cumulative Sky for an analysis period. You can also filter diffuse or direct component of the sky, Generate Colors - Color a test surface based on the results of a study. The results structure should match the test points structure to be mapped correctly on the surface., Generate Sky Matrix - Generate sky matrix for a location from epw file, Generate Test Points - Generate test points from a surface based on number of segments and distance from the surface, Import epw - Use this node to import lists of weather data into Dynamo from a standard .epw file.\nFor detailed information about the structure of an epw file, you may want to read the\n\"Weather Converter Program\" section in \"Auxiliary EnergyPlus Programs\" document.\nAll descriptions of importaed data are borrowed from this document.\nThe document is available online at this address:\n\"http://apps1.eere.energy.gov/buildings/energyplus/pdfs/auxiliaryprograms.pdf\", Import Location - Import location data from an epw weather file, LB Color Range - A set of color ranges for coloring analysis results, Legend Parameters - Use legend parameter to set up results visualization setting, Solar Radiation Analysis - Calculate solar radiation for points in wh, Sunlighthours Analysis - Calculate sunlight hours for a list of test points, Sunpath - Use this node to make a 3D sun-path (aka. sun plot) in the Dynamo scene.  The node also outputs sun vectors that can be used for sunlight hours analysis or shading design with the other Ladybug nodes.",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-27T21:17:08.620Z",
          "full_dependency_versions": [ "0.1.6" ],
          "full_dependency_ids": [
            {
              "name": "Ladybug",
              "_id": "56aa7950c3e9ee4a08000059"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-27T21:17:08.62Z",
      "num_versions": 15,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 3,
      "downloads": 4866,
      "repository_url": "https://github.com/ladybug-analysis-tools/ladybug-dynamo",
      "site_url": "https://www.facebook.com/LadybugAnalysisTools",
      "banned": false,
      "deprecated": false,
      "group": "Ladybug Analysis Tools",
      "engine": "dynamo",
      "license": "GPL.V3",
      "used_by": [
        {
          "name": "BVN",
          "_id": "5507ae3e0c7eac9b57000053"
        },
        {
          "name": "Butterfly",
          "_id": "58ac69def4db78ec0100000a"
        }
      ],
      "num_dependents": 2,
      "description": "Ladybug is a plugin for weather data and environmental analysis [Updated for Dynamo 1.3.0].",
      "maintainers": [
        {
          "username": "thisisladybug",
          "_id": "56a911d7c3e9ee4a0800004a"
        }
      ],
      "keywords": [ "ladybug", "environmental", "analysis", "sunpath", "radition", "solar" ],
      "white_list": false
    },
    {
      "_id": "5836cb45fdef23aa6e00000b",
      "name": "Paint Material Info",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/bd6020b2-c942-4cf4-a0f2-8871f2447492gregPkg586.zip",
          "contents": "Paint Material Info - Extract Material ID, Area from element type(s).",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-11-24T11:13:09.308Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Paint Material Info",
              "_id": "5836cb45fdef23aa6e00000b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-11-24T11:13:09.308Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 45,
      "repository_url": "https://github.com/mipadaemon/Mipaython",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "MipadaemoN.Revit.Paint",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Extract Material ID, Area from element type(s).",
      "maintainers": [
        {
          "username": "mikael.vanderwal",
          "_id": "581c8e4728c433b358000021"
        }
      ],
      "keywords": [ "paint", "revit", "information" ],
      "white_list": false
    },
    {
      "_id": "5838c2bcfdef23aa6e000022",
      "name": "onBIM",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/918a4c83-9ca3-44f0-b9d5-29d8467f2badgregPkg72.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-11-25T23:01:16.182Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "onBIM",
              "_id": "5838c2bcfdef23aa6e000022"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": true,
          "node_libraries": [ "Backendless, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ZeroTouchEssentials, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-11-25T23:01:16.182Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 59,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "teste de pacote onBIM",
      "maintainers": [
        {
          "username": "onBIM-Consulting",
          "_id": "5838c238fdef23aa6e000021"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58406426fdef23aa6e000051",
      "name": "Mesh.FaceVertices",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/67395101-ea6d-4e70-bad8-12ffce800a46gregPkg852.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-12-01T17:55:50.325Z",
          "full_dependency_versions": [ "10.10.10" ],
          "full_dependency_ids": [
            {
              "name": "Mesh.FaceVertices",
              "_id": "58406426fdef23aa6e000051"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "10.10.10",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-01T17:55:50.325Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 190,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Mesh.FaceVertices",
      "maintainers": [
        {
          "username": "italo_guedes_@hotmail.com",
          "_id": "5840619ffdef23aa6e000050"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58406a46fdef23aa6e000054",
      "name": "Floor.SlabShapeByPoints",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/7cfc65e8-034f-4139-be84-6a7fdf4665fegregPkg190.zip",
          "contents": "RoofOrFloor.SlabShapeByPoints - Transform a slab shape based on a list of XYZs. PLEASE NOTE: Will reset any previous edits on the slab shape., Floor.SlabShapeByPoints - Transform a slab shape based on a list of XYZs. PLEASE NOTE: Will reset any previous edits on the slab shape.",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-12-01T18:21:58.561Z",
          "full_dependency_versions": [ "0.8.2" ],
          "full_dependency_ids": [
            {
              "name": "Floor.SlabShapeByPoints",
              "_id": "58406a46fdef23aa6e000054"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.8.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-01T18:21:58.561Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 202,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "2392",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Floor.SlabShapeByPoints",
      "maintainers": [
        {
          "username": "italo_guedes_@hotmail.com",
          "_id": "5840619ffdef23aa6e000050"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58417370fdef23aa6e00005d",
      "name": "##Formador de Formas",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/db1fab40-061d-44a7-90e1-1edd580269e8gregPkg526.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.2.4461",
          "created": "2016-12-02T13:13:20.135Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "##Formador de Formas",
              "_id": "58417370fdef23aa6e00005d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-02T13:13:20.135Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 32,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Teste de gerador aleatório",
      "maintainers": [
        {
          "username": "cg.connection@gmail.com",
          "_id": "583c579efdef23aa6e00002e"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5592f3b0f2ae5a9a07000100",
      "name": "BumbleBee",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/5e95cc44-4eb6-41a5-9c59-4db7af9d874dgregPkg774.zip",
          "contents": "(2) Color Scale Format Condition - This node will generate a two (2) color scheme that can be used to format a range of numbers in Excel., (3) Color Scale Format Condition - This node will generate a three (3) color scheme that can be used to format a range of numbers in Excel., BB Data - This node is a building block for different modes of writing to Excel files. You can combines this node into a list to write to multiple sheets or use just one to write to a single sheet. , BB Style - This node is a building block for different modes of formatting an Excel file. You can combines this node into a list to apply formatting to multiple ranges or sheets at the same time. , Border Style - This node can be used to change default formatting of Excel cells using Format Excel of Conditionally Format Excel Nodes. , Cell Index - This node will convert an excel address notation from string format (A1) to index format (1,1)., Cell Value Format Condition - This node creates a format condition based on a cell value. , Chart Style - This node will generate a style that can be used to format a chart., Clear Contents - This node will clear contents or formatting from a range within Excel sheet or an entire sheet. , Conditionally Format Excel - This node will allow you to apply conditional formatting to an Excel document or a specific range within the document., Data Bar Format Condition - This node will generate a Data Bar format condition. Based on range of numbers a small bar will be placed in a cell that graphically represents the value contained within the cell. , Embed Image - This node will embed an image into an Excel document., Expression Format Condition - This node will generate an expression based formatting condition that can be used with Conditionally Format Excel Node., Fill Style - This node generates a Fill Style that can be used for conditional formatting or regular cell formatting., Format Excel - This node will allow you to apply formatting to a specific range within the document. You can format a single range on a single sheet or multiple ranges on multiple sheets at the same time., Get Worksheet Names - This node will query an Excel file and return a list of sheet names that it contains. , Graphic Style - This node will create a graphic style that can be used either for conditional formatting or regular cell formatting. , Image Style - This node generates an image style for images being embedded in a document. , Label Style - This node will generate a style that can be used to format labels on a chart., Legend Style - This node will generate a style to visually format a chart legend. , Line Chart Graph Style - This node controls appearance of the graph area of the chart. In this case it will be the line portion of the Line Chart., Line Chart - This node will generate a Line Chart in Excel., Line Style - This node controls Chart's Line Style ex. Line Chart., Marker Style - This node controls the Marker Style that can be used with charts ex. Line Chart., New File By Template - This node will take a template file and create a new file based on that template. , Pie Chart Graph Style - This node will generate a style that can be used to control appearance of the graph portion of the chart., Pie Chart - This node will generate a new Pie Chart in your currently running session of Excel., Read Excel - This node will read an excel file. You can read an entore sheet contents, read from specific origin cell, read only specific range, or do all of the former for multiple sheets at the same time. , ReadExcel.ByRange - This node allows for reading an Excel file by specifying a Range in A1 formatting style \"A1:X11\" or by using a named range. , Search Value Get Row - This node will search the Excel Spreadsheet for a single string value and return an entire row of data that this value was found in. For example if key was found at A15 then entire row 15 will be returned., Text Style - This node will generate a text style that can be used to format excel or with conditional formatting., Top/Bottom Percentile Format Condition - This node will generate a Formatting Condition based on the top/bottom ranked values. It can either be top percentile (0-100) or number of top/bottom ranked values (top 10 values for example)., Write Excel - This node will write data to Excel file and based on how your BBData nodes are structured it will either override the exsting file, create a new one and write a single worksheet or write multiple worksheets. ",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-07T00:47:07.199Z",
          "full_dependency_versions": [ "2017.13.2" ],
          "full_dependency_ids": [
            {
              "name": "BumbleBee",
              "_id": "5592f3b0f2ae5a9a07000100"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.13.2",
          "contains_binaries": true,
          "node_libraries": [ "bumblebeeTypes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "bumblebeeUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-05-07T00:47:07.199Z",
      "num_versions": 29,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 11731,
      "repository_url": "https://github.com/ksobon/Bumblebee",
      "site_url": "www.archi-lab.net",
      "banned": false,
      "deprecated": false,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "Etabs Excel to Revit",
          "_id": "57a4e4d84172a48a35000010"
        }
      ],
      "num_dependents": 2,
      "description": "Dynamo 1.2 - Dynamo and Excel Interop developed by Konrad K. Sobon. Instructions and totorials can be found at www.archi-lab.net. This is an open source project with GitHub page: https://github.com/ksobon/Bumblebee as well as an open source primer: https://github.com/ksobon/BumblebeePrimer. You can read the primer here: http://konradsobon.gitbooks.io/bumblebee-primer/content/ ",
      "maintainers": [
        {
          "username": "ksobon",
          "_id": "5592f3b0f2ae5a9a070000ff"
        }
      ],
      "keywords": [ "bumblebee", "excel", "bad", "monkeys" ],
      "white_list": false
    },
    {
      "_id": "58456f91fdef23aa6e000076",
      "name": "Adaptive.Component.ByPoints",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/ca016647-3f9c-4a41-9a25-dd4572da936agregPkg166.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-12-05T13:45:53.443Z",
          "full_dependency_versions": [ "0.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Adaptive.Component.ByPoints",
              "_id": "58456f91fdef23aa6e000076"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-05T13:45:53.443Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 50,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Adaptive.Component.ByPoints",
      "maintainers": [
        {
          "username": "italo_guedes_@hotmail.com",
          "_id": "5840619ffdef23aa6e000050"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58457872fdef23aa6e00007a",
      "name": "AdaptiveComponent.ByPoints",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/f1c38dbb-289a-4520-95a9-a8d6aa2d388agregPkg432.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-12-05T14:23:46.619Z",
          "full_dependency_versions": [ "0.7.5" ],
          "full_dependency_ids": [
            {
              "name": "AdaptiveComponent.ByPoints",
              "_id": "58457872fdef23aa6e00007a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-05T14:23:46.619Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 166,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "AdaptiveComponent.ByPoints",
      "maintainers": [
        {
          "username": "italo_guedes_@hotmail.com",
          "_id": "5840619ffdef23aa6e000050"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58459dbbfdef23aa6e00007e",
      "name": "SolarTestTrident",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/055a0b1a-e8f9-4df7-be43-08b6b31e63d7gregPkg417.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2016-12-05T17:07:01.607Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "SolarTestTrident",
              "_id": "58459dbbfdef23aa6e00007e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": true,
          "node_libraries": [ "DynamoSolarAnalysis, Version=0.8.2.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-12-05T17:07:01.607Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 83,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Analyze",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A library for conducting solar insolation analysis in Dynamo. This version of Solar Analysis for Dynamo will timeout on January 1, 2018.\r\nAvailable weather stations are located in USA, UK, Switzerland, South Korea, Saudi Arabia, Russia, Italy, France, Germany, China and Australia",
      "maintainers": [
        {
          "username": "clsgalvez",
          "_id": "57d8441af615e7725800003b"
        }
      ],
      "keywords": null,
      "white_list": true
    },
    {
      "_id": "5845aa9bfdef23aa6e000081",
      "name": "List.Transpose_var",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/618e7168-f595-402c-ac08-5d60dab0676bgregPkg670.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-12-05T17:57:47.382Z",
          "full_dependency_versions": [ "0.8.1" ],
          "full_dependency_ids": [
            {
              "name": "List.Transpose_var",
              "_id": "5845aa9bfdef23aa6e000081"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.8.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-05T17:57:47.382Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 37,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "List.Transpose_var",
      "maintainers": [
        {
          "username": "italo_guedes_@hotmail.com",
          "_id": "5840619ffdef23aa6e000050"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5845b12dfdef23aa6e000083",
      "name": "List.Transpose_",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/4d72547b-359c-46bb-b048-765cf982e211gregPkg115.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2016-12-05T18:25:49.923Z",
          "full_dependency_versions": [ "0.8.1" ],
          "full_dependency_ids": [
            {
              "name": "List.Transpose_",
              "_id": "5845b12dfdef23aa6e000083"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.8.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-05T18:25:49.923Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 73,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "List.Transpose_",
      "maintainers": [
        {
          "username": "italo_guedes_@hotmail.com",
          "_id": "5840619ffdef23aa6e000050"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58488044fdef23aa6e0000a0",
      "name": "Dynamo Manufacturing",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/6dacc406-b8d2-4097-a7cf-8761372deeb6gregPkg131.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.1.0.2093",
          "created": "2016-12-07T21:33:56.033Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Dynamo Manufacturing",
              "_id": "58488044fdef23aa6e0000a0"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": true,
          "node_libraries": [ "DynamoAdditive, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "DynamoServices, Version=1.2.0.2690, Culture=neutral, PublicKeyToken=null", "DynamoTypes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "DynamoUnits, Version=1.1.0.2093, Culture=neutral, PublicKeyToken=null", "ManufacturingAdditiveTypes, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null", "ManufacturingGeneralTypes, Version=1.1.0.5, Culture=neutral, PublicKeyToken=null", "NetfabbAlgorithm, Version=0.1.3.0, Culture=neutral, PublicKeyToken=null", "ProtoGeometry, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-12-07T21:33:56.033Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo manufacturing nodes",
      "maintainers": [
        {
          "username": "thomas.gale2XEQ4",
          "_id": "582db5cc5af9f3713d0000a3"
        }
      ],
      "keywords": [ "manufacturing" ],
      "white_list": false
    },
    {
      "_id": "5848828cfdef23aa6e0000a2",
      "name": "ManufacturingTypes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/6e62f825-6e82-41bd-96d2-379240f036aegregPkg512.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.1.0.2093",
          "created": "2016-12-07T21:43:40.874Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "ManufacturingTypes",
              "_id": "5848828cfdef23aa6e0000a2"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": true,
          "node_libraries": [ "DynamoServices, Version=1.2.0.2690, Culture=neutral, PublicKeyToken=null", "DynamoTypes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "DynamoUnits, Version=1.1.0.2093, Culture=neutral, PublicKeyToken=null", "ManufacturingAdditiveTypes, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null", "ManufacturingGeneralTypes, Version=1.1.0.5, Culture=neutral, PublicKeyToken=null", "Microsoft.Expression.Interactions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "Microsoft.Practices.Prism, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "Microsoft.Practices.Prism.Interactivity, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "Microsoft.Practices.ServiceLocation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "nunit.framework, Version=2.6.3.13283, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77", "ProtoGeometry, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "System.Windows.Interactivity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" ]
        }
      ],
      "latest_version_update": "2016-12-07T21:43:40.874Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 4,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Manufacturing types alpha",
      "maintainers": [
        {
          "username": "thomas.gale2XEQ4",
          "_id": "582db5cc5af9f3713d0000a3"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5848843cfdef23aa6e0000a4",
      "name": "Additive Manufacturing",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/dda90fb0-5074-400f-9412-4010cb120c1agregPkg935.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.1.0.2093",
          "created": "2016-12-07T21:50:52.496Z",
          "full_dependency_versions": [ "0.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Additive Manufacturing",
              "_id": "5848843cfdef23aa6e0000a4"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.0",
          "contains_binaries": true,
          "node_libraries": [ "DynamoAdditive, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "DynamoTypes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-12-07T21:50:52.496Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 3,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Additive manufacturing alpha",
      "maintainers": [
        {
          "username": "thomas.gale2XEQ4",
          "_id": "582db5cc5af9f3713d0000a3"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "584973b8fdef23aa6e0000b3",
      "name": "If Equal Return Index Updated",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/a5389abc-a7f5-4587-906d-d78390abda42gregPkg900.zip",
          "contents": "If Equal Return Index Updated - If element in list A is equal to an element in list B then return index from list B.",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-12-08T14:52:40.577Z",
          "full_dependency_versions": [ "1.2.0" ],
          "full_dependency_ids": [
            {
              "name": "If Equal Return Index Updated",
              "_id": "584973b8fdef23aa6e0000b3"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-08T14:52:40.577Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 107,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "If Equal Return Index Updated",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "If Equal Return Index -If element in list A equal to element in list B then return index from list B. Tested with numbers, strings and xyz.  Node has been updated to work with new versions of Dynamo (test 1.2.0).  Original Credit to mwaraya",
      "maintainers": [
        {
          "username": "josh.moore@perkinswill.com",
          "_id": "54919b459508c43706000007"
        }
      ],
      "keywords": [ "index", "indices", "if", "equal" ],
      "white_list": false
    },
    {
      "_id": "5851308cfdef23aa6e000111",
      "name": "Daniele",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/7d27a87e-26df-40ae-9490-97fdc20dcd2fgregPkg761.zip",
          "contents": "punti su linee - ggggggggggggggggggg, Sort Curtain Panel - Ordina i pannelli basati su motivo",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-12-14T11:44:12.330Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Daniele",
              "_id": "5851308cfdef23aa6e000111"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-14T11:44:12.33Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 8,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Daniele",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "0000000000000000000",
      "maintainers": [
        {
          "username": "danirson",
          "_id": "565c59a90370b0a90700002c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5769f5e4e70394822f0000fe",
      "name": "Dynamic CSharp Interpreter",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c47990ba-b06b-4e12-a660-8d4ebfafb348gregPkg516.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-12-15T14:24:31.371Z",
          "full_dependency_versions": [ "121.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Dynamic CSharp Interpreter",
              "_id": "5769f5e4e70394822f0000fe"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "121.0.0",
          "contains_binaries": true,
          "node_libraries": [ "Core, Version=1.0.0.5, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-12-15T14:24:31.371Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 361,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "Apache 2.0",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "* Alpha Version* Dynamo 1.0 and later\r\n\r\nA dynamic C# interpreter for Dynamo that runs on top of Microsoft's Roslyn platform.\r\nIt currently supports Dynamo and Revit's core libraries and has an optional input for any additional custom libraries. You'll need to wrap all inputs in a single list (named IN) and then re-cast each of them to their appropriate type. The last script statement should be left without a semicolon (;) so that the script engine can pick it up as the result.",
      "maintainers": [
        {
          "username": "dimitar.ven",
          "_id": "5606ce80662bf0e9080001e5"
        }
      ],
      "keywords": [ "cs", "c#", "csharp", "bad", "monkeys" ],
      "white_list": false
    },
    {
      "_id": "584b3244fdef23aa6e0000cb",
      "name": "testeco",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/46f7a7cb-bfd5-4b44-8fa4-68c2fbef4649gregPkg606.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-12-15T15:56:19.407Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "testeco",
              "_id": "584b3244fdef23aa6e0000cb"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": true,
          "node_libraries": [ "TestEco, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-12-15T15:56:19.407Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 12,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "test test eco",
      "maintainers": [
        {
          "username": "clsgalvez",
          "_id": "57d8441af615e7725800003b"
        }
      ],
      "keywords": null,
      "white_list": true
    },
    {
      "_id": "58541777fdef23aa6e00013d",
      "name": "MyDocument Folder",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8bee7915-bbad-48b4-bda0-fe6bf3b88870gregPkg905.zip",
          "contents": "Get MyDocument - gets user's MyDocument on C drive. ",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-12-16T16:33:59.558Z",
          "full_dependency_versions": [ " 0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "MyDocument Folder",
              "_id": "58541777fdef23aa6e00013d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": " 0.0.1",
          "contains_binaries": true,
          "node_libraries": [ "MyDocuments, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-12-16T16:33:59.558Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 50,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Parachence",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Gets my Document Folder",
      "maintainers": [
        {
          "username": "danny.bentley@som.com",
          "_id": "574db6e0e70394822f000039"
        }
      ],
      "keywords": [ "mydocument", "directory", "windows" ],
      "white_list": false
    },
    {
      "_id": "585514d6fdef23aa6e000146",
      "name": "Par.Struc ver.1",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8f6e9f40-0d55-48db-9d03-63540194f381gregPkg497.zip",
          "contents": "Get.Rebar Diameter - Get Rebar Diameter from rebar type",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-12-17T10:35:02.144Z",
          "full_dependency_versions": [ "1.2.0" ],
          "full_dependency_ids": [
            {
              "name": "Par.Struc ver.1",
              "_id": "585514d6fdef23aa6e000146"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-17T10:35:02.144Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 56,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "PARSTRUC",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "structure package",
      "maintainers": [
        {
          "username": "virgilio_benedictos",
          "_id": "585511e2fdef23aa6e000143"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58551a9afdef23aa6e000148",
      "name": "Par.Struc.For.rebar",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/109c7dc5-1f62-423e-83ab-e379230d8a54gregPkg967.zip",
          "contents": "GET.REBAR DIAMETER - GET REBAR DIAMETER FROM REBAR TYPE, MAINBARB1T1 - SAMPLE ONLY",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2016-12-17T10:59:38.776Z",
          "full_dependency_versions": [ "1.2.0" ],
          "full_dependency_ids": [
            {
              "name": "Par.Struc.For.rebar",
              "_id": "58551a9afdef23aa6e000148"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-17T10:59:38.776Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 286,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "ParStruc",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "custom nodes for struc",
      "maintainers": [
        {
          "username": "virgilio_benedictos",
          "_id": "585511e2fdef23aa6e000143"
        }
      ],
      "keywords": [ "par" ],
      "white_list": false
    },
    {
      "_id": "58596206fdef23aa6e000162",
      "name": "SlapsUI (user Interfaces)",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c4ff52f1-d0a0-44f2-885d-7b6935faa9e7gregPkg897.zip",
          "contents": "Slaps UI ComboBox1 - UI one Combo boxes, Slaps UI ComboBox2 - UI two Combo boxes, Slaps UI ComboBox3 - UI three Combo boxes, Slaps UI ComboBox4 - UI four Combo boxes, Slaps UI InputBox1 - UI for one input box. , Slaps UI InputBox2 - UI two input boxes, Slaps UI InputBox3 - UI three input boxes, Slaps UI InputBox4 - UI four input boxes, Slaps UI Open File - UI Open File, Slaps UI Slider1 - UI one Slider, Slaps UI Slider2 - UI two Slider, Slaps UI Slider3 - UI three Sliders, Slaps UI Slider4 - UI four Sliders",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-12-21T22:59:03.392Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "SlapsUI (user Interfaces)",
              "_id": "58596206fdef23aa6e000162"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": true,
          "node_libraries": [ "MahApps.Metro, Version=1.3.0.0, Culture=neutral, PublicKeyToken=f4fb5a3c4d1e5b4f", "SlapsUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-12-21T22:59:03.392Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 11,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "Parachence",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "UNDER CONSTRUCTION (Do Not Use Yet) thank you. ",
      "maintainers": [
        {
          "username": "danny.bentley@som.com",
          "_id": "574db6e0e70394822f000039"
        }
      ],
      "keywords": [ "user", "interface", "ui", "xaml", "c#" ],
      "white_list": false
    },
    {
      "_id": "584e47f6fdef23aa6e0000e0",
      "name": "Kodestruct.ETABS",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/b05d8d8c-b786-4820-8cf6-e24e9d73fdd0gregPkg67.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-12-22T07:08:17.690Z",
          "full_dependency_versions": [ "0.1.3" ],
          "full_dependency_ids": [
            {
              "name": "Kodestruct.ETABS",
              "_id": "584e47f6fdef23aa6e0000e0"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.3",
          "contains_binaries": true,
          "node_libraries": [ "KodestructETABSDynamoUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-12-22T07:08:17.69Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 106,
      "repository_url": "https://github.com/Kodestruct/Kodestruct.ETABS",
      "site_url": "http://www.kodestruct.com/",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "Apache License   Version 2.0",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Interoperability library, enabling force extraction from ETABS. 2016. <beta>",
      "maintainers": [
        {
          "username": "KonstantinUdilovich",
          "_id": "5848ef21fdef23aa6e0000a9"
        }
      ],
      "keywords": [ "etabs;design;structural" ],
      "white_list": false
    },
    {
      "_id": "582ef5635af9f3713d0000ba",
      "name": "J-Nodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/db1c44a4-92ed-4f34-938e-531606ca27d8gregPkg404.zip",
          "contents": "Create.MultipleSheets - Create multple sheets by string inputs. Choose sheet from family type, input number string at list 1, input name string at list 2., Elements.Delete Selected - Delete selected elements, Elements.Renumber by Curve - This node allows you to renumber the \"Mark\" of any selected elements by the selection of an interseting model line., ElementsDimension.Grids - Dimension grid in active view, Get.All Views - Your choice of selection categories, ReflectedCeilingPlan.ByRoom - As per name, Room.Number by Level_Chosen Prefix - No description provided, Sheets.Revisions.By Parameter.Exclude - Add revision to multiple sheets by setting a parameter as to which sheet you would like. Specific sheets may also be excluded from the run sequence.",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-12-22T08:39:32.995Z",
          "full_dependency_versions": [ "2016.12.23", "2016.12.4", "2016.6.15" ],
          "full_dependency_ids": [
            {
              "name": "J-Nodes",
              "_id": "582ef5635af9f3713d0000ba"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            }
          ],
          "direct_dependency_versions": [ "2016.6.15", "2016.12.4" ],
          "direct_dependency_ids": [
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "change_log": "",
          "version": "2016.12.23",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-22T08:39:32.995Z",
      "num_versions": 10,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 247,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Efficiencies",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Useful technical nodes to improve upon project efficiencies. Builds upon the Archi-lab Grimshaw and Rhythm packages.",
      "maintainers": [
        {
          "username": "jarrodryanza@gmail.com",
          "_id": "582ef4715af9f3713d0000b9"
        }
      ],
      "keywords": [ "get", "all", "views", "room", "number", "sheet", "revisions", "number", "by", "curve", "multiple", "sheets" ],
      "white_list": false
    },
    {
      "_id": "585da2bbfdef23aa6e000187",
      "name": "Acronym",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/31e45d8f-1352-427f-9cae-e2f71bf6beb7gregPkg961.zip",
          "contents": "Invert booleans - All false become true and all true false!",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-12-23T22:18:35.249Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "Acronym",
              "_id": "585da2bbfdef23aa6e000187"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-23T22:18:35.249Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 63,
      "repository_url": "",
      "site_url": "sykes.studio",
      "banned": false,
      "deprecated": false,
      "group": "Revit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Freshly baked nodes.",
      "maintainers": [
        {
          "username": "SYKES.BIM",
          "_id": "585d9e39fdef23aa6e000186"
        }
      ],
      "keywords": [ "revit", "bim", "acronym" ],
      "white_list": false
    },
    {
      "_id": "5832c9d65af9f3713d0000d3",
      "name": "LRCZ",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/613ec083-a387-48c6-a50b-9560d50f0944gregPkg755.zip",
          "contents": "Compare Two Lists by Item and Return Same Items - No description provided, CoordinationReport.Parse - Process a Revit error report (HTML file) and extract the error types, all affected elements and the total number of errors. If you are executing from a document different than the one the error report belongs to, be sure to set \"fetch_elements\" to false., Element.CopyMultiple - Copies an element or a list of elements by a given vector., ProjectUnitFactor - Creates a numerical factor to convert between project units bases on Millimater as 1",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-12-26T16:29:28.378Z",
          "full_dependency_versions": [ "1.2.1", "1.0.1", "2016.4.30", "82.8.2", "0.8.43", "2016.2.10", "2015.11.28", "0.90.7", "2014.11.30", "2016.4.4" ],
          "full_dependency_ids": [
            {
              "name": "LRCZ",
              "_id": "5832c9d65af9f3713d0000d3"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "Bakery",
              "_id": "555e8bfea8367b98610000b8"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "Slingshot! for Dynamo",
              "_id": "52bdf30a9de41c8235000081"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            }
          ],
          "direct_dependency_versions": [ "2016.4.30", "1.0.1" ],
          "direct_dependency_ids": [
            {
              "name": "Bakery",
              "_id": "555e8bfea8367b98610000b8"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "change_log": "",
          "version": "1.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-26T16:29:28.378Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 20,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Nodes for parsing Coordination Reports",
      "maintainers": [
        {
          "username": "taurerm",
          "_id": "55152e015899bb370500000f"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58694cc075c961bb1e000005",
      "name": "ORUG_Feb09",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/79078c66-0a66-4c75-bbed-e0ab9ca22077gregPkg221.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-01T18:38:56.352Z",
          "full_dependency_versions": [ "1.2.2" ],
          "full_dependency_ids": [
            {
              "name": "ORUG_Feb09",
              "_id": "58694cc075c961bb1e000005"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-01T18:38:56.352Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 16,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dataset for ORUG Attendees",
      "maintainers": [
        {
          "username": "hiwamura@kpmbarchitects.com",
          "_id": "54773057b77c84600c000055"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "577d73c0535146064800002c",
      "name": "Parametrix",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/70c1d155-a268-4b2a-a379-824b4b6dbe2egregPkg250.zip",
          "contents": "DecimalFeet To Fractional String - Converts Fractional Feet To Decima Feet, GenericAnnotation.PointInView - Place Generic Annotation at Point In View, GenericAnnotation.PointsInViews - Place Generic Annotation at Point In View, Get Element Count By Name - Takes a list of elements and groups them by name and outputs a list of unique names and number of elements with each name, Group Name & Count - Gets Group Names and Counts, List.FilterByParameterValue - Filters a List based on a given Parameter Value, List.Get Element Count By Name - Takes a list of elements and groups them by name and outputs a list of unique names and number of elements with each name, Revit.Areas To Solid - Converts Areas to Solids, Revit.SetParameterValueByElementMirrorState - Sets Parameter values based on whether a family type is mirrored or not. , Save Model Group Names+Count - Extracts Model Group Metrics, String&Fractional Feet To Decimal - Converts Fractional Feet To Decima Feet, List.RegexSearch - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-04T21:36:24.734Z",
          "full_dependency_versions": [ "1.0.8" ],
          "full_dependency_ids": [
            {
              "name": "Parametrix",
              "_id": "577d73c0535146064800002c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.8",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-04T21:36:24.734Z",
      "num_versions": 9,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 224,
      "repository_url": "https://github.com/parametrix/DynamoForRevit-Utilities",
      "site_url": "http://parametrix.blogspot.com/",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Set of Utilities for when I find myself painted into a corner",
      "maintainers": [
        {
          "username": "fsebastian",
          "_id": "572bbda3384037b37e000021"
        }
      ],
      "keywords": [ "utilities", "project", "analytics" ],
      "white_list": false
    },
    {
      "_id": "586de97675c961bb1e000033",
      "name": "boxArea",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/fce0fef7-eeb2-4521-9e10-7953f6335016gregPkg19.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-05T06:36:38.234Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "boxArea",
              "_id": "586de97675c961bb1e000033"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-05T06:36:38.234Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 74,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "create box  with width and area",
      "maintainers": [
        {
          "username": "ThitipatP",
          "_id": "586de8d375c961bb1e000032"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "58305fd45af9f3713d0000c7",
      "name": "DynamoPrimitives",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/31a193ed-cde8-45f0-a047-0f25adfc2923gregPkg634.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2831",
          "created": "2017-01-11T17:04:24.511Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "DynamoPrimitives",
              "_id": "58305fd45af9f3713d0000c7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": true,
          "node_libraries": [ "DynamoPrimitives, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-01-11T17:04:24.511Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 107,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A set of simple data primitives that do not create geometry",
      "maintainers": [
        {
          "username": "colin.day@autodesk.com",
          "_id": "56e736805bee3e2138000059"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5792c16e53514606480000a5",
      "name": "InfraBIM",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/9f73f66d-81f2-4904-927a-32c20a5da6bcgregPkg135.zip",
          "contents": "Formwork_Area - Splits Surface into Top, Bottom and Sides, Get Active Project Location Name - gets the name from the document, List Index Concate - List Index Concate, Point to String 3dm - Point to String with 3dm, Set Project Base Point - Set Project Base Point and True North Angle, Transfrom_Revit_in - Transforms Real world coordinate into Revit by matrix transform rotation about the Project basepoint and True North Rotation.\r\nSubtract points from Revit Project Basepoint. \r\nUsed to import Real World coordinate point into Revit. , Transfrom_Revit_out - Transforms Revit points to Real world coordinate by matrix transform rotation about the Project basepoint and True North Rotation.\r\nAdds Revit Project Basepoint coordinates\r\nUsed to export point from Revit \r\nAdds Revit Project Basepoint coordinates\r\nUsed to export point from Revit \r\n\r\nUsed to export point from Revit , XYZ Parameters - X Y Z and True East and North Parameters",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2017-01-13T06:39:59.465Z",
          "full_dependency_versions": [ "0.0.2", "2016.4.4" ],
          "full_dependency_ids": [
            {
              "name": "InfraBIM",
              "_id": "5792c16e53514606480000a5"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            }
          ],
          "direct_dependency_versions": [ "2016.4.4" ],
          "direct_dependency_ids": [
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-13T06:39:59.465Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 240,
      "repository_url": "",
      "site_url": "https://infrabim.wordpress.com/",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "InfraBIM Workflows",
      "maintainers": [
        {
          "username": "infraBimGis",
          "_id": "5719d882305bec4d3c000016"
        }
      ],
      "keywords": [ "coordiantes" ],
      "white_list": false
    },
    {
      "_id": "587c08aaca6a5edb65000032",
      "name": "RollingPin",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/4b29014b-27bc-487e-8e1f-670ae7aa6722gregPkg932.zip",
          "contents": "Report Dynamo Package Details by Folder - No description provided, List Nested Node Nicknames for Folder - No description provided, List Nodes in DYFs for an Entire Folder - takes Directory Path as input node, Summary and Node Search for a Folder of DYFs - can search for a node and tell you what file it is in, Get DYF Dependencies for One DYF File - also works for DYN files, Show Dependency Nodes for one DYF - rebuilt, Get DYF Dependencies through Recursion v1 - slow to run, repeats for 4 levels deep, Package Folder Details - No description provided, Show Dependency Ids for one DYF - No description provided, Check DYF folder for Dependencies in Package Folders - new package now, Node Names From Directory String - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-15T23:41:30.124Z",
          "full_dependency_versions": [ "0.0.1", "1.0.2", "2017.1.212", "2016.11.11", "2017.1.8", "2016.12.7", "2014.11.30", "110.0.2", "1.2.3" ],
          "full_dependency_ids": [
            {
              "name": "RollingPin",
              "_id": "587c08aaca6a5edb65000032"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "Bakery",
              "_id": "555e8bfea8367b98610000b8"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "Slingshot! for Dynamo",
              "_id": "52bdf30a9de41c8235000081"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            }
          ],
          "direct_dependency_versions": [ "1.0.2", "2017.1.212" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "Bakery",
              "_id": "555e8bfea8367b98610000b8"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-15T23:41:30.124Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 18,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "a package to help you manage packages",
      "maintainers": [
        {
          "username": "luke.johnson",
          "_id": "54e3d829dcee4dfd260000f4"
        }
      ],
      "keywords": [ "packages" ],
      "white_list": false
    },
    {
      "_id": "587d4030ca6a5edb6500003b",
      "name": "RevitFileInfo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/adcf903a-254f-4920-9d6c-5650fe5d7029gregPkg125.zip",
          "contents": "RevitFileInfo - Gets Basic File Info From Revit file.\r\nIncluded info:\r\n- Username\r\n- Revit Build\r\n- Revit Build Year\r\n- Worksharing Status\r\n- Central Model Path\r\n- Last Save Path\r\n- Locale when saved",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-16T21:53:47.158Z",
          "full_dependency_versions": [ "2017.1.1605" ],
          "full_dependency_ids": [
            {
              "name": "RevitFileInfo",
              "_id": "587d4030ca6a5edb6500003b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.1.1605",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-16T21:53:47.158Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 159,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Input",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Retrieve basic information from revit file such as : username, revit build/year, worksharing state, central file path, etc",
      "maintainers": [
        {
          "username": "gtalarico",
          "_id": "56aa7b39c3e9ee4a0800005b"
        }
      ],
      "keywords": [ "python", "revit", "file", "rvt", "build", "year", "version", "username", "central" ],
      "white_list": false
    },
    {
      "_id": "5820f9af5af9f3713d000004",
      "name": "BIM4Struc.CraneAnalysis",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/37ef1f68-1732-4e1e-9482-a20b2b30da85gregPkg755.zip",
          "contents": "Double Crane Analysis - Fitness function for the analysis of the position of two cranes. Ready for use with genetic optimization routines with the \"Optimo\" package., Element.DoubleCraneAnalysis - Analyze the elements to be lifted by a double crane setup, checking a set of requirements and return an array with the sorted list of elements and their assigned Lift Status Value., Element.GroupPerLiftStatus - Group the elements in sublists depending on their Lift Status Value\r\n, Element.SingleCraneAnalysis - Analyze the elements to be lifted by a crane, checking a set of requirements and return an array with the sorted list of elements and their assigned Lift Status Value., LiftScore Calculation - Calculates the Lift Score of a Crane Analysis, depending on the Lift Status of each element., Single Crane Analysis - Fitness function for the optimization analysis of a single crane position. Ready for use with genetic optimization routines with the \"Optimo\" package., Solids.SingleCraneAnalysis - No description provided, Update & Export Double Crane Results - Update the two crane positions and visualization results and exports the current Revit view to an image., Update & Export Single Crane Results - Update the crane position and visualization results and exports the current Revit view to an image., Update Crane Position - Updates the position of the crane to a new location.\r\nThe coordinates of the points are according the Revit Internal Coordinate System (relative).",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-17T18:04:59.566Z",
          "full_dependency_versions": [ "1.2.4" ],
          "full_dependency_ids": [
            {
              "name": "BIM4Struc.CraneAnalysis",
              "_id": "5820f9af5af9f3713d000004"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-17T18:04:59.566Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 428,
      "repository_url": "",
      "site_url": "https://events.au.autodesk.com/connect/sessionDetail.ww?SESSION_ID=21553&tclass=popup",
      "banned": false,
      "deprecated": false,
      "group": "BIM4Struc",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Tools for the analysis of a crane position. Learn more about this on the online class of AU2016:\r\n\"CS21553 - Construction Dynam(o)ite—Explode Productivity with Dynamo.\"\r\n\r\nMore info on : http://revitbeyondbim.wordpress.com\r\n\r\nThe \"Extra\" folder in the installation path of this package contains an example how to use the custom nodes.",
      "maintainers": [
        {
          "username": "dieter.vermeulen@autodesk.com",
          "_id": "54902569fa779c1c1100005c"
        }
      ],
      "keywords": [ "crane", "analysis" ],
      "white_list": false
    },
    {
      "_id": "587ec0a6ca6a5edb6500004a",
      "name": "Dynamo 1.2 Japanese Training",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/aa0cf92b-a879-467e-951c-41361b8c0293gregPkg674.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-18T01:11:02.672Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "Dynamo 1.2 Japanese Training",
              "_id": "587ec0a6ca6a5edb6500004a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-18T01:11:02.672Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 63,
      "repository_url": "",
      "site_url": "https://www.facebook.com/DynamoBIMJapan",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "このパッケージには、Dynamo入門1.2対応版日本語版のテキストとデータセットが含まれています。\r\nThis package contains all the datasets for Dynamo 1.2 Japanese training.",
      "maintainers": [
        {
          "username": "MakotoOhura",
          "_id": "57885aca5351460648000066"
        }
      ],
      "keywords": [ "dynamo", "tutorials", "datasets", "japan" ],
      "white_list": false
    },
    {
      "_id": "5882340aca6a5edb6500006c",
      "name": "DRS2.5.2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/ce09774d-2d90-4fe8-8f1d-50b479955b3fgregPkg817.zip",
          "contents": "pos6familyname - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2017-01-20T16:00:10.145Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "DRS2.5.2",
              "_id": "5882340aca6a5edb6500006c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-20T16:00:10.145Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 48,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Nodes for DRS ",
      "maintainers": [
        {
          "username": "darcy_h@hotmail.com",
          "_id": "58823332ca6a5edb6500006b"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58893196ca6a5edb65000099",
      "name": "Datetime Now Formatting",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/193d47c5-58e5-4300-b873-f0195826ac4cgregPkg402.zip",
          "contents": "Datetime Formatting - Formats datetime.now by formatting string.\r\nString formatting options are listed here:\r\nhttps://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior\r\n\r\nExamples:\r\n%d - %m - %Y  =  01-2-2017\r\n",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2017-01-25T23:15:34.409Z",
          "full_dependency_versions": [ "2017.1.2501" ],
          "full_dependency_ids": [
            {
              "name": "Datetime Now Formatting",
              "_id": "58893196ca6a5edb65000099"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.1.2501",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-25T23:15:34.409Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 38,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Formats datetime.now by formatting string.\r\nString formatting options are listed here:\r\nhttps://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior\r\n\r\nExamples:\r\n%d - %m - %Y  =  01-2-2017\r\n",
      "maintainers": [
        {
          "username": "gtalarico",
          "_id": "56aa7b39c3e9ee4a0800005b"
        }
      ],
      "keywords": [ "python", "datetime", "date", "now", "formatting" ],
      "white_list": false
    },
    {
      "_id": "5889d6dcca6a5edb650000a3",
      "name": "ByStartPointDirectionDistance",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/16968d06-7f37-474a-bbea-72f7a0228cc3gregPkg25.zip",
          "contents": "ByStartPointDirectionDistance - Create a point(s) for a given Vector direction and specified distance",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-26T15:07:04.528Z",
          "full_dependency_versions": [ "2017.1.5" ],
          "full_dependency_ids": [
            {
              "name": "ByStartPointDirectionDistance",
              "_id": "5889d6dcca6a5edb650000a3"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.1.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-26T15:07:04.528Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 83,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Lightos",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create a point(s) for a given Vector direction and specified distance",
      "maintainers": [
        {
          "username": "tom.james@bailygarner.co.uk",
          "_id": "5889cf44ca6a5edb650000a0"
        }
      ],
      "keywords": [ "point", "distance", "direction" ],
      "white_list": false
    },
    {
      "_id": "55c18bf9662bf0e908000079",
      "name": "DynamoTutorial",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/33f4cd11-2535-40f7-bdb9-f8782d96229agregPkg580.zip",
          "contents": "DynamoTutorial_TestOrientation - Test the orientation of two points, DynamoTutorial_Truss - Draw lines for a truss form",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-27T14:45:53.989Z",
          "full_dependency_versions": [ "2017.1.28" ],
          "full_dependency_ids": [
            {
              "name": "DynamoTutorial",
              "_id": "55c18bf9662bf0e908000079"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.1.28",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-27T14:45:53.989Z",
      "num_versions": 13,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2087,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Agendas, files, and resources for learning Dyanmo",
      "maintainers": [
        {
          "username": "DynamoTeam",
          "_id": "556e21d1888bb8ca03000008"
        }
      ],
      "keywords": [ "curriculum", "curricula", "workshop", "agenda", "training", "sample", "example" ],
      "white_list": false
    },
    {
      "_id": "528038ad3f7315936f000058",
      "name": "LunchBox for Dynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/72b4fbae-ec2e-45dd-a0c1-01e8893690d9gregPkg853.zip",
          "contents": "LunchBox Adaptive Component Collector - Gets a list of Adaptive Components from a document using the Family Name., LunchBox Area Element Collector - Collects rooms from the Revit document, LunchBox AreaPlan Element Collector - Collects AreaPlans from the Revit model, LunchBox Attractor Wave - Generates a wave attractor effect using lists of attractors and targets., LunchBox Attractor - Simple distance-based attractor calculation, LunchBox Braced Grid Structure 2D - Creates a braced grid 2D on a surface., LunchBox Braced Grid Stucture 1D - Creates a 1D braced grid structure on a surface, LunchBox Create Room by Name and Number - Creates an unplaced room element using a name and number., LunchBox Curtain Panel Collector - Collects curtain panel instances and references them., LunchBox Curve to Arcs by Division - Converts a curve to tangent arc segments, LunchBox Curve to Arcs by Parameters - Converts a curve to arcs using parameter values, LunchBox Deconstruct Face - Gets the edges and vertices of a face., LunchBox Deconstruct Solid - Deconstructs a Revit solid into faces, edges, and vertices, LunchBox Diagrid Structure - Creates a diagrid structure on a surface., LunchBox Diamond Grid by Face - Create a Diamond XYZ grid on a face.  The face surface must have an untrimmed UV parameter space., LunchBox Domain Variables - Gets the Min and Max variables of a Domain., LunchBox Family Instance Collector - Collects Family Instances from the Revit Doc, LunchBox Floor Element Collector - Collects Floor elements from the current Revit document., LunchBox Get Domain - Gets the domain from a list of numbers., LunchBox Get Parameter Value - Gets parameter values from a Revit element., LunchBox Grid Element Collector - Collects Revit Grids from the current Revit document, LunchBox Grid Structure - Creates a grid wireframe on a surface., LunchBox Helicoid - Creates a parametric Helicoid surface, LunchBox Isovist - Isovist Ray Generation, LunchBox Level Element Collector - Collects Levels from the current Level document, LunchBox List Matcher - Compares a List A against a List B and matches length of List A.  If ListA > ListB, ListB will be extended.  If ListA < ListB, ListB will be truncated., LunchBox Mass Addition - Returns the total value of a list of numbers., LunchBox Mass Multiplication - Returns the total value of a list of numbers., LunchBox MEP Space Collector - Collects MEP Spaces and properties, LunchBox Mobius - Creates a parametric mobius surface., LunchBox Paraboloid - Creates a parametric Hyperbolic Paraboloid surface, LunchBox Placed and Unplaced Rooms - Finds placed and unplaced rooms, LunchBox Planarize Points - Projects a list of a 4 or more points to a common plane., LunchBox Point to String - Converts Point objects to strings., LunchBox Quad Grid by Face - Create a quadrangular XYZ grid on a face.  The face surface must have an untrimmed UV parameter space., LunchBox Random Numbers - Generates a list of Random numbers using a domain, amount, and seed., LunchBox Random Split List - Randomly splits a list of objects into two separate lists., LunchBox Remap Numbers - Remaps a list of numbers to a new domain., LunchBox Remove Null Values - Remove 'null' values from a list., LunchBox Room Element Collector - Collects rooms from the Revit document, LunchBox Sheet Collector - Collects sheets from the current document, WireSpaceTruss - Create a space truss using a surface., LunchBox Staggered Grid by Face  - Create a Staggered XYZ grid on a face.  The face surface must have an untrimmed UV parameter space., LunchBox String to Point - Converts a point string \"x,y,z\" into a true Point., LunchBox Structural Framing Collector - Collects Structural Graming Families from the Revit document., LunchBox Torus - Creates a parametric Torus surface, LunchBox Triangle Grid by Face - Create a Triangular XYZ grid on a face.  The face surface must have an untrimmed UV parameter space., LunchBox Vector Amplitude - Set the amplitude of a vector., LunchBox Vector Angle - Computes the angle between two vectors., LunchBox View Element Collector - Collects views from the active Revit document., LunchBox Wall Element Collector - Collects wall elements from the Revit document., LunchBox Wave - Creates a parametric Wave surface",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-02-13T02:18:20.185Z",
          "full_dependency_versions": [ "2017.2.12" ],
          "full_dependency_ids": [
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.2.12",
          "contains_binaries": true,
          "node_libraries": [ "LunchBox, Version=2017.2.12.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-02-13T02:18:20.185Z",
      "num_versions": 61,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -33,
      "downloads": 58812,
      "repository_url": "",
      "site_url": "http://provingground.io/tools/lunchbox/",
      "banned": false,
      "deprecated": false,
      "group": "Proving Ground",
      "engine": "dynamo",
      "license": "http://provingground.io/tools/lunchbox/",
      "used_by": [
        {
          "name": "Swap UV",
          "_id": "53aa75550e5572016a000116"
        },
        {
          "name": "Simple Patterning",
          "_id": "52adf18e9de41c823500005e"
        },
        {
          "name": "Clockwork for Dynamo 0.6.3",
          "_id": "544730fdcc26bfdc5a0000db"
        },
        {
          "name": "BVN",
          "_id": "5507ae3e0c7eac9b57000053"
        },
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "AdaptiveHangers.OnCableTrays",
          "_id": "560243d9662bf0e9080001c8"
        },
        {
          "name": "ScaleID.MEP",
          "_id": "56031545662bf0e9080001d3"
        },
        {
          "name": "Hot Gear",
          "_id": "55e90085662bf0e908000142"
        },
        {
          "name": "Des+Fab",
          "_id": "56358835662bf0e9080002d0"
        },
        {
          "name": "MEPWORKS",
          "_id": "56446665662bf0e908000324"
        },
        {
          "name": "Brunell",
          "_id": "5676b36f5c568ad00c000048"
        },
        {
          "name": "OblomovNode",
          "_id": "568277405c568ad00c00006a"
        },
        {
          "name": "Dynablaster",
          "_id": "561ed4d4662bf0e90800025b"
        },
        {
          "name": "Silman Custom Nodes - alpha",
          "_id": "56bb8efdc3e9ee4a080000e2"
        },
        {
          "name": "Silman Custom Nodes",
          "_id": "56bb8f8ec3e9ee4a080000e4"
        },
        {
          "name": "Rain Area",
          "_id": "570a4088287283f905000006"
        },
        {
          "name": "Lunchbox Quad Grid By Face Dalian",
          "_id": "57296c3c384037b37e000009"
        },
        {
          "name": "Roof Type Duplicate",
          "_id": "5745289ac1a604fb36000034"
        },
        {
          "name": "MisterMEP",
          "_id": "57e22ae22107b8022300001e"
        },
        {
          "name": "LCA_Aeforos",
          "_id": "58068fdef50b17c720000024"
        },
        {
          "name": "LCA-Aeforos",
          "_id": "5807dd02f50b17c720000038"
        },
        {
          "name": "OpenStrc",
          "_id": "57d9f90df615e7725800004f"
        },
        {
          "name": "FrTe",
          "_id": "5828c0155af9f3713d000057"
        },
        {
          "name": "BIMSYK",
          "_id": "582ed4885af9f3713d0000b6"
        },
        {
          "name": "SYKES",
          "_id": "57dbd203882d868b4200000d"
        },
        {
          "name": "CMs Dope Custom Nodes",
          "_id": "57a141b1e8d2032d77000021"
        },
        {
          "name": "mimimi",
          "_id": "586c888d75c961bb1e00001e"
        },
        {
          "name": "Structural Framing Optimization",
          "_id": "58cf622af4db78ec01000134"
        },
        {
          "name": "Moe's Nodes",
          "_id": "59120bfaababfb4f1700009c"
        }
      ],
      "num_dependents": 29,
      "description": "**Built for Dynamo 1.2 (Revit 2017)** LunchBox is a collection of reusable geometry and data management nodes.  The tools have been tested with Dynamo 1.2 and Revit 2017.  The tool includes nodes for surface paneling, geometry, Revit data collection, and more!.  After installation, search a 'LunchBox' category will appear in Dynamo.  For versions supporting Revit 2015 and 2016, please check an older release. For versions compatible with Dynamo 0.6, please install version 2014.6.5 or earlier.  For more information, visit http://provingground.io/tools/lunchbox/",
      "maintainers": [
        {
          "username": "archinate",
          "_id": "5234d9ab6b18e47916000007"
        }
      ],
      "keywords": [ "parametric", "math", "curtain", "panels", "xyz", "domain", "numbers", "random", "json", "xml", "excel", "revit", "collector" ],
      "white_list": false
    },
    {
      "_id": "588cbe02ca6a5edb650000c1",
      "name": "testHI",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/a32fbaf7-c5bb-43f1-82da-6feddd02b3edgregPkg329.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-28T15:56:02.272Z",
          "full_dependency_versions": [ "1.2.3084" ],
          "full_dependency_ids": [
            {
              "name": "testHI",
              "_id": "588cbe02ca6a5edb650000c1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.3084",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-28T15:56:02.272Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 20,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "this is just a test",
      "maintainers": [
        {
          "username": "hiwamura@kpmbarchitects.com",
          "_id": "54773057b77c84600c000055"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "588cbfbbca6a5edb650000c4",
      "name": "ORUG2017",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c294efdb-7eaa-411c-9df1-593aa3a9009cgregPkg396.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-28T16:12:05.723Z",
          "full_dependency_versions": [ "1.1.3" ],
          "full_dependency_ids": [
            {
              "name": "ORUG2017",
              "_id": "588cbfbbca6a5edb650000c4"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-28T16:12:05.723Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 48,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo graphs to share with attendees",
      "maintainers": [
        {
          "username": "hiwamura@kpmbarchitects.com",
          "_id": "54773057b77c84600c000055"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57bfbe7b4172a48a350000d5",
      "name": "Checking 001",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/d96eab43-ecb7-48c5-93a5-fe7c10c39873gregPkg713.zip",
          "contents": "Embed Image - This node will embed an image into an Excel document.",
          "engine_metadata": "",
          "engine_version": "2.0.0.3854",
          "created": "2017-01-30T05:50:02.362Z",
          "full_dependency_versions": [ "1.1.2" ],
          "full_dependency_ids": [
            {
              "name": "Checking 001",
              "_id": "57bfbe7b4172a48a350000d5"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-30T05:50:02.362Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 1,
      "repository_url": "https://parametrically.com/nodes",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "sdfskldfjklj",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Checking 001 sjdfklljdsklf",
      "maintainers": [
        {
          "username": "jit_tat",
          "_id": "56e2cc5b5bee3e213800004f"
        }
      ],
      "keywords": [ "ksjdksfljsdklf" ],
      "white_list": false
    },
    {
      "_id": "588ff1ccca6a5edb650000e4",
      "name": "TNPM2",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/8015aaaa-5582-45f0-b7b0-a02a24d88b02gregPkg632.zip",
          "contents": "TNPM - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.2.270",
          "created": "2017-01-31T02:09:16.673Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "TNPM2",
              "_id": "588ff1ccca6a5edb650000e4"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-31T02:09:16.673Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 13,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing pm with new server",
      "maintainers": [
        {
          "username": "zx.zx8S6BT",
          "_id": "588ed43eca6a5edb650000d8"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58905b07ca6a5edb650000e7",
      "name": "VectorsAtPoints",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/322f44d6-e6c9-4168-8082-c51c41c5cb44gregPkg334.zip",
          "contents": "VectorsAtPoints - Provides a list a vectors at points along a polycurve in the direction of the curve at that point",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-31T09:38:15.099Z",
          "full_dependency_versions": [ "2017.1.1" ],
          "full_dependency_ids": [
            {
              "name": "VectorsAtPoints",
              "_id": "58905b07ca6a5edb650000e7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-31T09:38:15.099Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 73,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Lightos",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Outputs vectors at specified points along a polyCurve curves, in the direction of the curve at the point",
      "maintainers": [
        {
          "username": "tom.james@bailygarner.co.uk",
          "_id": "5889cf44ca6a5edb650000a0"
        }
      ],
      "keywords": [ "vector", "points" ],
      "white_list": false
    },
    {
      "_id": "58934ae6ca6a5edb650000fd",
      "name": "Custom Filter 112124",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c8d2a7a0-0861-4618-9f9c-e1c56ea385bcgregPkg35.zip",
          "contents": "Filter By Name - No description provided, Filter Concrete, Formwork, Embeds - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-02-02T15:06:14.171Z",
          "full_dependency_versions": [ "1.1.1", "1.0.2" ],
          "full_dependency_ids": [
            {
              "name": "Custom Filter 112124",
              "_id": "58934ae6ca6a5edb650000fd"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "direct_dependency_versions": [ "1.0.2" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-02-02T15:06:14.171Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 32,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Custom Sorting ",
      "maintainers": [
        {
          "username": "zkirkhamAL5U8",
          "_id": "58934aa3ca6a5edb650000fc"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58980dda61de68010800000f",
      "name": "test20",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/80030271-36c4-4358-bb10-786b372eda9agregPkg775.zip",
          "contents": "names - No description provided",
          "engine_metadata": "",
          "engine_version": "2.0.0.3972",
          "created": "2017-02-06T05:47:06.866Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "test20",
              "_id": "58980dda61de68010800000f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-02-06T05:47:06.866Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 19,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "testing package manager",
      "maintainers": [
        {
          "username": "sf.sfFNZPM",
          "_id": "5897e63e61de68010800000c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58989f9961de680108000015",
      "name": "SeparateBeamsAndColumns",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/1bd717b5-ebe0-430f-a2a9-15863f4556cbgregPkg360.zip",
          "contents": "SeparateBeamsAndColumns - Splits lists of curves/lines into separate beam and column lists for element create",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-02-06T16:08:57.959Z",
          "full_dependency_versions": [ "2017.1.1" ],
          "full_dependency_ids": [
            {
              "name": "SeparateBeamsAndColumns",
              "_id": "58989f9961de680108000015"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-02-06T16:08:57.959Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 65,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Lightos",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Separates beams and columns from input curves, reversing columns curves if the start is higher than the end.",
      "maintainers": [
        {
          "username": "tom.james@bailygarner.co.uk",
          "_id": "5889cf44ca6a5edb650000a0"
        }
      ],
      "keywords": [ "separate", "beams", "coumns" ],
      "white_list": false
    },
    {
      "_id": "587546f475c961bb1e00006c",
      "name": "fdg",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/3bda8f6a-8b07-4e1f-b639-c04a1de6de92gregPkg781.zip",
          "contents": "FDG_DYNAMO_GRAPHIC_STANDARD - FDG_DYNAMO GRAPHIC STANDARD V1",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-02-07T12:17:43.142Z",
          "full_dependency_versions": [ "1.0.1" ],
          "full_dependency_ids": [
            {
              "name": "fdg",
              "_id": "587546f475c961bb1e00006c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-02-07T12:17:43.142Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 38,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Just a dynamo graphic standard. For colour coding scripts within our office",
      "maintainers": [
        {
          "username": "lordsummerisle",
          "_id": "5814e5a5f50b17c72000009b"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5899ca2061de680108000026",
      "name": "SYNTESIA",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/fa0af200-bacb-4f53-89f1-b74397fb46cfgregPkg437.zip",
          "contents": "Noeud 1 - Aucune description disponible",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-02-07T13:22:40.863Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "SYNTESIA",
              "_id": "5899ca2061de680108000026"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-02-07T13:22:40.863Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 38,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Noeuds relatifs aux programmes SYA",
      "maintainers": [
        {
          "username": "a.marichal",
          "_id": "5881dcd5ca6a5edb65000069"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57f2c32ad3d589541a000012",
      "name": "Archi-lab_MantisShrimp",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/017154a1-6b1b-4677-b09d-7e47d7f3a266gregPkg152.zip",
          "contents": "Get Objects by Layer - Queries all Rhino objects on a given layer., Get Objects by Type - This node will retrieve all of the objects of given type from a Rhino model., Get Rhino File - Reads Rhino 3dm file and outputs it as an object., Get Rhino Layers - Queries Rhino file and extracts layers., Get Rhino Mesh Face Center - This node will query a mesh for a face center. , Get Rhino Object GUID - Queries Rhino object for its GUID., Get Rhino Object Layer - This node will return a layer name that object is currently on., Get Rhino Object Name - Queries Rhino Object for its name., Get Rhino Object Type - This node will return an object type (Brep, Extrusion etc)., Get Rhino Object User Strings - This node will query user strings attached to geometry., Get Rhino Object Value by Key - This node retrieves user string value by its key., GH UV String to DS UV - This node converts Grasshopper UV coordinates obtained as a string to Dynamo compatible Design Script UV Coordinate., Read GH File - Reads the file exported from Grasshopper (serializes it back into relevant Rhino geometry such as surfaces, points etc), RH Arc to DS Arc - Converts Rhino arcs to Design Script arcs., RH Brep to DS Polysurface - Converts Rhino breps to Design Script polysurfaces. , RH Circle to DS Circle - Converts Rhino Circle to Design Script circle. Keep in mind that OpenNURBS has limited ability to expose Ellipse and Circle methods so not all \"circles\" will be able to pass this node., RH Ellipse to DS Ellipse - This node converts rhino's open nurbs ellipse (nurbs curve) into design script's ellipse., RH Extrusion to DS Polysurface - This node will convert Rhino extrusion to Design Script polysurface., RH Geometry to DS Geometry - This node will translate all of the compatible Rhino geometry into its equivalent in Design Script., RH Line to DS Line - Converts Rhino Lines to Design Script Lines, RH Mesh to DS Mesh - Converts Rhino meshes to Design Script meshes., RH Nurbs Surface to DS Nurbs Surface - converts rhino nurbs surfaces to design script nurbs surfaces, RH NurbsCurve to DS NurbsCurve - Converts Rhino Nurbs Curves to Design Script Nurbs Curves. , RH Point to DS Point - Converts Rhino point object to Design Script point., RH PolyCurve to DS PolyCurve  - Converts Rhino polycurves to Design Script Polycurves., RH Polyline to DS Polycurve - Converts Rhino polyline curve to Design Script polycurve., Specify RhinoCommon.dll Path - This node needs to be used to specify a valid RhinoCommon.dll path. After it was used for the first time, you will not have to use it again, unless a new version of Mantis Shrimp or Rhino is installed., Write GH File - This node exports Dynamo (Design Script) geometry/data to Grasshopper.",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-02-09T14:46:28.882Z",
          "full_dependency_versions": [ "2017.12.5" ],
          "full_dependency_ids": [
            {
              "name": "Archi-lab_MantisShrimp",
              "_id": "57f2c32ad3d589541a000012"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.12.5",
          "contains_binaries": true,
          "node_libraries": [ "MantisShrimp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-02-09T14:46:28.882Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 1800,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo 1.2 Mantis Shrimp is a Rhino/Grasshopper and Dynamo interoperability plug-in. ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "rhino", "grasshopper", "interoperability", "bad", "monkeys" ],
      "white_list": false
    },
    {
      "_id": "589c84a961de68010800003c",
      "name": "BIM4Struc.Productivity",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/e1f73c60-992c-4838-80d3-a6bf380482ddgregPkg814.zip",
          "contents": "Create Element View - No description provided, Element.HandOrientation - Gets the orientation of the family instance hand, Element.LocalCoordinateSystem - Get the insertion point and local axes of an element. , Element.RotationAngle - Get the rotation element of a Revit element. The rotation angle is based on the Location.Rotation property in the RevitAPI. If Location is not equal to a LocationPoint (ie. in case of slanted columns) then the Angle will be set to null., StructuralFraming.LocalCoordinateSystem - Get the insertion point and local axes of a structural framing., Vector Visualizer - Visualize XYZ vectors with RGB colored lines in the Dynamo canvas",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-02-09T15:22:06.716Z",
          "full_dependency_versions": [ "1.2.1" ],
          "full_dependency_ids": [
            {
              "name": "BIM4Struc.Productivity",
              "_id": "589c84a961de68010800003c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-02-09T15:22:06.716Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 631,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "BIM4Struc",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Productivity tools for Revit & Dynamo, such as view generation, vector visualization, ...\r\n\r\nMore information on http://revitbeyondbim.wordpress.com",
      "maintainers": [
        {
          "username": "dieter.vermeulen@autodesk.com",
          "_id": "54902569fa779c1c1100005c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57726bc7e70394822f000121",
      "name": "SwingNodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/dec7e6d5-eaf2-4912-9e65-a4751f199915gregPkg554.zip",
          "contents": "Document.Current.IsWorkshared - True if current document is worshared, ElementResetParameterByName - Reset a parameter by name. String in null, Yes/No in No, and number to 0., Extract.Item - Extract Item(s) from a list. Can apply a function to this extraction like List.Map Node, Function.Pass - To don't apply function with some nodes who need one, Get.Python.Type - Aucune description disponible, List.GetItemAtIndexByList - List and IndexList should have the same length.\r\nUse Boolean to pass if item is not a sublist., List.ItemsOfSameType - Check if items of a list are all of the same type, ListString.Replace - Search in a string or in a list of strings and replace part of string with an another.\r\nThe previous change is use for the next search replacement., Math.RoundDown - Rounddown with digits, Math.RoundUp - Roundup with digits, ResultMessageFromList - Create a result message with Arborescence or Chip from a list or list of list.\r\nCould be push in a Message Box in Revit., Select item in all link files - Select Item by category in RevitInstance(s), Sublists.UniqueItemOrReplace - Check sublists Items: If they're the same, node give a unique item. If not, he give the replace entry., Taskdialog - Create a message pop-up in Revit., Workset.DefaultVisibility - Check default Visibility of Users Worksets, Workset.Rename - Rename Workset DB or Element, Workset.SetDefaultVisibility - Set Default Visibility of Users Worksets, WorksetNames - Get Name of a Workset DB, WorksetsInDocument - Get Names and Ids of User Worksets in the activ document",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-02-14T16:42:07.490Z",
          "full_dependency_versions": [ "1.2.0" ],
          "full_dependency_ids": [
            {
              "name": "SwingNodes",
              "_id": "57726bc7e70394822f000121"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-02-14T16:42:07.49Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 479,
      "repository_url": "",
      "site_url": "www.dgla.net",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Collection of various custom nodes.\r\n\r\nNews: \r\nExtract.Item\r\nList.GetItemAtIndexByList\r\nList.ItemsOfSameType\r\nGet.Python.Type\r\nMath.RoundUp\r\nMath.RoundDown\r\nDocument.Current.IsWorkshared\r\nWorkset.DefaultVisibility\r\nWorkset.Rename\r\nWorkset.SetDefaultVisibility\r\nWorksetsInDocument\r\nTaskdialog\r\nResultMessageFromList\r\nSelect item in all link files\r\nFunction.Pass\r\n\r\nOlds:\r\nSublists.UniqueItemOrReplace\r\nListString.Replace\r\nElementResetParameterByName\r\nWorksetNames",
      "maintainers": [
        {
          "username": "severin.schaefer.architecte",
          "_id": "57726ac9e70394822f000120"
        }
      ],
      "keywords": [ "reset", "parameter", "sublist", "unique", "replace", "item", "stringlist", "worksetnames", "documentworkshared", "extract.item", "function.pass", "python.type", "list.getitematindexbylist", "list.itemsofsametype", "math.rounddown", "math.roundup", "select.item.in.all.link;files", "resultmessagefromlist", "taskdialog", "worksetsindocument", "workset.setdefaultvisibility", "workset.rename", "workset.defaultvisibility" ],
      "white_list": false
    },
    {
      "_id": "58a57bd461de680108000080",
      "name": "app",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/3ce55b0e-7bb7-4411-9cfe-f760b16839f1gregPkg939.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.1.0.2093",
          "created": "2017-02-16T10:15:48.014Z",
          "full_dependency_versions": [ "85.4541.4" ],
          "full_dependency_ids": [
            {
              "name": "app",
              "_id": "58a57bd461de680108000080"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "85.4541.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-02-16T10:15:48.014Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 25,
      "repository_url": "bdf",
      "site_url": "fdbg",
      "banned": false,
      "deprecated": false,
      "group": "gvservg",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "vvbjhfdbgvrdg",
      "maintainers": [
        {
          "username": "ravulakumar",
          "_id": "58a57b7761de68010800007f"
        }
      ],
      "keywords": [ "bvdfgv" ],
      "white_list": false
    },
    {
      "_id": "58aa953e61de6801080000a3",
      "name": "DynamoClipper",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/676469df-3d1a-4cc5-b65f-0c3549cbf7bagregPkg642.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.1.0.2093",
          "created": "2017-02-20T07:05:34.703Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "DynamoClipper",
              "_id": "58aa953e61de6801080000a3"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": true,
          "node_libraries": [ "clipper_library, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "DynamoClipper, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "LibG.Interface, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "ProtoGeometry, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-02-20T07:05:34.703Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 81,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Wraps the clipper library's polygon offset operation",
      "maintainers": [
        {
          "username": "jabaldwin",
          "_id": "57ede1cdb135d4597400004d"
        }
      ],
      "keywords": [ "clipper" ],
      "white_list": false
    },
    {
      "_id": "58ae4f0bf4db78ec01000028",
      "name": "Taiwan No.1 ",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/d1b61c50-d315-48f3-ac4d-7445c8a62332gregPkg463.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2017-02-23T02:55:07.233Z",
          "full_dependency_versions": [ "1.1.0" ],
          "full_dependency_ids": [
            {
              "name": "Taiwan No.1 ",
              "_id": "58ae4f0bf4db78ec01000028"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-02-23T02:55:07.233Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 37,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Taiwan No.1 ",
      "maintainers": [
        {
          "username": "aa6309aa",
          "_id": "57f20dc2d3d589541a000005"
        }
      ],
      "keywords": [ "taiwan", "no.1" ],
      "white_list": false
    },
    {
      "_id": "58b58359f4db78ec01000068",
      "name": "ArePointsCollinear",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/5792cc5c-6740-427b-a9d5-f0aeead1e6a9gregPkg49.zip",
          "contents": "ArePointsCollinear - Tests whether points are collinear in the sequence that they are provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-02-28T14:04:09.801Z",
          "full_dependency_versions": [ "2017.1.1" ],
          "full_dependency_ids": [
            {
              "name": "ArePointsCollinear",
              "_id": "58b58359f4db78ec01000068"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-02-28T14:04:09.801Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 37,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Lightos",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Produces a list a true or false statements testing whether sequential points are collinear",
      "maintainers": [
        {
          "username": "tom.james@bailygarner.co.uk",
          "_id": "5889cf44ca6a5edb650000a0"
        }
      ],
      "keywords": [ "points", "collinear" ],
      "white_list": false
    },
    {
      "_id": "5796bd8c53514606480000b1",
      "name": "Chynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/9950ec72-b75f-4edd-98ad-b6f668def9cfgregPkg395.zip",
          "contents": "AboutChynamo - Popup Chynamo introduction message, Alert - Popup a message dialog in Revit, AutoReturnValue - Return the only item in the list or list itself if more than 1 items are in list, CurtainWall.GetUVGridLines - Get UV grid lines of certain wall system, CurtainWall.ToSolid - Convert curtain wall into a union solid, Curve.Centroid - Get the centroid of a closed curve, Curve.FilterPointOnCurve - Filter out points if they are on the curve, then sort it, Curve.GetIntersectionPoint - Get all intersection points of curves, Curve.GetOutlineBoundary - Get the maximum outline boundary polycurve of input curves, Curve.GetVertices - Get all vertices of a curve, Curve.GroupByIntersect - Group the curves if they are intersected, Curve.Offset - Safe offset curve, minus distance will return a smaller curve or a closer curve to [0,0,0], Curve.SortPointsOnCurve - Project points on curves and sort them by their parameters to curve start point, Curve.SplitByIntersectionPoints - Break curves at their intersection points, Curve.SplitClosedCurve - Split closed curve into two closed polycurves by a split curve, Curve.SuperJoin-ArchiLab - Group and join all end-to-end joinable curves into polycurves, then sort them by their length (from big to small). This is ugraded from ArchiLab node. Closed input curves will be passed directly without being converted into PolyCurves., Curve.TrimTwoEndsByIntersectionPoints - Automatically trim all end segments of cerves by their intersection points, Curve.TrimTwoEndsByPoints - Trim the two end segments by points on curve, Curve.TweenCurves - Generate curves between two curves with same morphing scale, DataType - Get the data type of input data, Element.ByIDString - Get elements by ID or Unique ID, imported from Clockwork, Element.Delete - Delete element from Revit, Element.FilterByBondingBoxIntersect - Filter elements by their intersect status, Element.FilterByCategory - Filter elements by category, Element.FilterByLevel - Filter elements by level, Element.GroupByCategory - Group elements by categories, Element.HostElement-ArchiLab - Get host elements of given nest elements, imported from ArchiLab, Element.Levels - Get the residing and above levels of given element, combined functions from Clockwork and ArchiLab, Element.MassiveProperties-Clockwork - Collection of Clockwork nodes getting elements peorperties, Element.SortByBoundingBox - Sort elements by XYZ coordinates of their BoundingBox MinPoint and MaxPoint, Element.SortByCentroid - Sort element by XYZ coordinates of their centroid point, Floor.GetBoundaryPolyCurves - Get the boundary polycurves of floor, Floor.Merge - Merge floors with base floor if they are connected or mergable, Floor.OpeningByClosedPolyCurve - Create openings on host floor from given internal closed polycurve, Floor.SplitByCurve - Splite one floor into two by a crossed split curve, ForceFlatten - Flatten single item or list into 1D list, Geometry.3DRotateByVectors - Rotate geometry in 3D by base point and two vectors, Geometry.BoundingBoxAll - Get the union BoundingBox of all geometries, Line.AutoExtendAndParallelSort - Modify parallel lines to same maximum length and sort then in sequent order, Line.ByCurve - Create line from curve start and end points, Line.FilterByCollinear - Filter the lines which are coolinear with base line, Line.GroupByParallel - Group lines if they are parallel, Line.Merge - Merge lines with base line, Line.MergeAll - Merge all collinear lines, List.GroupNeighbor - Group neighbor two elements from input list, List.NullIndice - Get all null indice from a list, List.RemoveNull-Lunchbox - Remove null from input list, imported from Lunchbox, Math.Round-Clockwork - Collection of Clockwork round nodes, Opening.ByRoomFinishBoundary - Create Openings from room boundaries, Opening.GetShaftSolidAll - Get all shaft openning solids, Point.Flatten - Project point's Z coordinate to certain number, Point.GetConvexHull - Generate convex hull vertices of group of points, Point.LimitPoints - Get shortest and longest points (in group data) from points list, Point.GetMiddlePoint - Get middle point of two points, Point.GetPerpendicularPoint - Get perpendicular point from one point to another two points , Point.Round - Round point's XYZ coordinates, Point.SortByCircularVector - Sort points on a plane according to their vector angle from circular center with a given base vector, Point.SortByCoordinateX - Group and sort the points on ONE(X or Y or Z) direction, default is X, Point.SortByCoordinateXY - Group and sort the points on TWO(XY or YZ or XZ) direction, default is XY, Point.SortByCoordinateXYZ - Group and sort the points on THREE(XYZ combination) directions, default is XYZ, Point.SortByDistance - Sort points along a line, RemoveIf - Remove certain type of data from input list, Room.FilterByLevel - Filter rooms by level, Room.GetBoundaryPolyCurves - Get room bundary polycurves list, first item is the bigget room boundary, Room.GetBoundingElements-ArchiLab - Get Room bounding walls and floors, imported from ArchiLab, Room.GetFromTo - Get the from and to room of input windows/doors, Room.GetInternalSurface - Get internal wall and column surfaces of rooms, Room.GetRoomTag - Get Roomtags of input rooms, Room.GetTrueSolid - Get the room solid by considering possible openings, Room.GetWainscotSurface - Get the internal wainscot surfaces on walls and columns of given single room, SafeIF - Safe IF to avoid true/false data lost, SlabShape.GetVertices-Landform - Get the vertices of slabshape (roof or floor), Solid.ByProjectSurfaceVector - Create solid by project surface along a normal vector, Solid.ByProjectSurfaceZAxis - Project surfae along ZAxis onto a plane to form solid, Surface.3DOffsetInward - Offset 3D PolySurface inward, Surface.ByPatchHoles - Patch all the inside holes from existing surface\r\n【V0.6】Recoding to support 3D Surface, Surface.ByPatchPolyCurves - Create surface from PolyCurves, first is surface boundary, rest are surface holes inside\r\n【V0.6】Recoding to support 3D Surface, Surface.BySimplifyPolySurface - Generate single surface from polysurface perimeter curves, Surface.BySolidIntersectPlane - Create surfaces by using plane to slice solid via indicated Normal, Surface.BySolidIntersectSolid - Get intersect surfaces between two solid, null for not intersected solids, Surface.BySolidIntersectSurfaces - Get surface from solid intersect surfaces, Surface.Centroid - Get centroid point of closed polysurface\r\n【V0.6】Add AutoFlatSurfaceEdge to control if rotate the surface horizontally to calculate the centroid, or direct project along Z Axis to calculate centroid, Surface.Curves - Get all closed PolyCurves of Surface, first item is the perimeter PolyCurve, rest are the hole edges, Surface.FilterByOrientation-Clockwork - Sorts surfaces in three lists based on their orientation (vertical, horizontal-up and horizontal-down) and also returns three corresponding lists of booleans. Imported from Clockwork., Surface.IsPlanar - Check if the surfsace is planar\r\n【V0.6】Recoding to be more accurate and faster , Surface.Merge - Merge surfaces, Surface.SolidIntersectTools - Get intersect surfaces of one solid with solids, Surface.SplitByCurves - Split surface by curves, Topography.By3DCurves - Generate Revit Topography from a group of 3D curves, Topography.ToNurbsSurfaceByPointsMatrix - Create NurbsSurface from Topography points matrix, Topography.ToPolySurface-SpringNodes - Convert Topography into PolySurface using PythonScript from SpringNodes, Topography.ToSolid - Convert the topography into solid, Topography.ToStepSolids - Convert topography into step solids, View.ExportDWG - Export views to DWG file, View.GetActiveScale - Get scale factor of active view, View.GetAll - Get all views, Wall.FilterByWallType - Filter walls by WallType, Wall.Flip-Clockwork - Flip wall orientation, imported from Clockwork, Wall.GetBoundingRooms - Get list of rooms attached with all walls (No Curtain Walls), Wall.GetMaterialLayers - Get wall material layers, Wall.GetOrientation-Clockwork - Get wall orientation, imported from Clockwork, Wall.GetWallType - Get the walltype of wall, Wall.GetWindowsAndDoors - Get all windows and doors of wall",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-02T01:19:43.938Z",
          "full_dependency_versions": [ "0.8.0" ],
          "full_dependency_ids": [
            {
              "name": "Chynamo",
              "_id": "5796bd8c53514606480000b1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.8.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-02T01:19:43.938Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 558,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "ChynamoApp",
          "_id": "57ae8b874172a48a35000053"
        }
      ],
      "num_dependents": 1,
      "description": "Chynamo provides faster and more efficient ways in BIM data management.\r\nChynamo also has integrated useful nodes from other packages.",
      "maintainers": [
        {
          "username": "kozmos",
          "_id": "570e4462287283f905000024"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57ae8b874172a48a35000053",
      "name": "ChynamoApp",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/10e2b269-79e3-4d5d-bee8-b58295f9694dgregPkg232.zip",
          "contents": "FloorHoleByRoom - Cut holes on floor along rooms boundaries, FloorLevelStructuralByBoundaryWall - Generate structural floor for certain level by giving one exterior wall segment, FloorStructuralDropByRoom - Drop down (or rise up) the structural floor of given rooms, GridByCurves - Create grids and MuitlSegmentGrids from Dynamo curves, GridByJoin - Create MultiSegmentGrid by join existing grids, GridByModelCurves - Create grids and MuitlSegmentGrids from Revit ModelCurves, GridByWalls - Create grids from input walls' location line, GridParallelAlign - Align the two ends of parallel grids to make them same length, GridParallelDimensionMake - Generate four-directions dimensions for selected parallel grids, non parallel grids will be grouped automatically., GridParallelGroup - Group parallel grids from given or all (use TRUE or NULL to input) grids, GridParallelReLabel - Relable the parallel grids sequence based on one given grid, IKEA.PS2014.Lantern - Parametric IKEA PS2014 style lantern simulator, RoomAutoClean - Automatically delete all unplaced and redundant rooms, RoomAutoPlace - Automatically place all possible rooms at current view level using default settings, RoomElevationMake - Generate crop elevation views for all bounding segment walls of rooms. , RoomExportSolid - Generate solid for rooms. If the room gets null from Element.Geometry node, solid will be made by room boundary and unboundheight, RoomFinishFloorAdd - Add finish floor for picked or given rooms.  This node supports three different input: True=Automatically process all rooms; False=Process rooms by picking point inside; Rooms=Input rooms to attach finish floor. The room UniqueID will be written into [Mark] property of the finish floors., RoomFinishFloorCut - Automatically cut holes under inside walls or columns on input room finish floor made by RoomFinishFloorAdd node. This node supports three different input: True=Automatically process all rooms; False=Process rooms by picking point inside; Rooms=Input rooms., RoomFinishFloorDelete - Automateically delete RooFinishFloorAdd created finish floors for all or selected rooms, This node supports three different input: True=Automatically delete all; False=Delete by picking rooms; Rooms=Input rooms to delete finish floors in, RoomFinishWallAttach - Add internal finish walls for rooms, this node can not directly join the finish walls with room boundary walls, need to call RoomJoinFinish node. This node supports three different input: True=Automatically delete all; False=Delete by picking rooms; Rooms=Input rooms to add finish walls. The room UniqueID will be written into [Mark] property of the finish walls., RoomPickAndDelete - Delete picked rooms or all rooms in project, RoomPickAndGo - Using input name string to create Room and RoomTags or modify existing Room and RoomTags by multiple picking points on plan view. All Room and RoomTag locations are reset to room centroid., RoomSuperFilter - Filter rooms by names, level and area ranges, UIChangeColorDialog - Change color by picking from standard color selection dialog, UIYesNo - Prompt users a message with a checkbox for confirm YES, WallSuperFilter - Filter walls by wall types and/or level.",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-02T01:20:32.128Z",
          "full_dependency_versions": [ "0.8.0" ],
          "full_dependency_ids": [
            {
              "name": "ChynamoApp",
              "_id": "57ae8b874172a48a35000053"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.8.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-02T01:20:32.128Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 523,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "ChynamoApp is full PythonScript for faster operation on Revit objects from within Dynamo.\r\nDetail information can be access from http://bimarch.cn/chynamoapp/manual.html.",
      "maintainers": [
        {
          "username": "kozmos",
          "_id": "570e4462287283f905000024"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58ba3478f4db78ec01000088",
      "name": "DynaSlack",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/4bf22f57-0f2d-44cd-98ab-688b23816a0bgregPkg766.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-04T18:05:22.963Z",
          "full_dependency_versions": [ "1.3.6" ],
          "full_dependency_ids": [
            {
              "name": "DynaSlack",
              "_id": "58ba3478f4db78ec01000088"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.3.6",
          "contains_binaries": true,
          "node_libraries": [ "DynaSlack, Version=2017.1.3.6, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-03-04T18:05:22.963Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 108,
      "repository_url": "https://github.com/radumg/DynaSlack/",
      "site_url": "http://www.radugidei.com",
      "banned": false,
      "deprecated": false,
      "group": "DynaSlack",
      "engine": "dynamo",
      "license": "AGPL-3.0",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo package providing integration with Slack, allowing you to post messages to Slack via webhooks currently. Includes support for Slack text formatting, emoji/image icons and setting integration name. \\r\\nSoon to include support for OAuth flow, posting as a bot or as a user.\\r\\n\\r\\nOpen-source package, please visit repository ( https://github.com/radumg/DynaSlack ) to submit improvement requests, bug reports or to contribute. Alternatively, tweet at me @radugidei .",
      "maintainers": [
        {
          "username": "radugidei@gmail.com",
          "_id": "58ba2c42f4db78ec01000087"
        }
      ],
      "keywords": [ "slack;web;webhooks;notification;" ],
      "white_list": false
    },
    {
      "_id": "58bd87faf4db78ec01000096",
      "name": "ZeroTouchTest",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/0f77ac0b-9d05-46cb-b35d-6954d9fdc594gregPkg894.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2017-03-06T16:02:02.480Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "ZeroTouchTest",
              "_id": "58bd87faf4db78ec01000096"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": true,
          "node_libraries": [ "ZeroTouchEssentials, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-03-06T16:02:02.48Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 48,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "ARC6814",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "ZeroTouchProject Test",
      "maintainers": [
        {
          "username": "tswSSoA",
          "_id": "58b5a5b9f4db78ec0100006c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56273e18662bf0e908000278",
      "name": "MeshToolkit",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/221fa841-a90e-419b-9fee-b2d2004b99f8gregPkg802.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.652",
          "created": "2017-03-07T08:03:44.232Z",
          "full_dependency_versions": [ "1.3.1" ],
          "full_dependency_ids": [
            {
              "name": "MeshToolkit",
              "_id": "56273e18662bf0e908000278"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.3.1",
          "contains_binaries": true,
          "node_libraries": [ "MeshToolkit, Version=1.3.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-03-07T08:03:44.232Z",
      "num_versions": 10,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -3,
      "downloads": 5176,
      "repository_url": "https://github.com/DynamoDS/Dynamo/wiki/Dynamo-Mesh-Toolkit",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "MeshToolkit",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        }
      ],
      "num_dependents": 1,
      "description": "Dynamo MeshToolkit backed by AMT. For more information visit github link WARNING: VERY LARGE DOWNLOAD!",
      "maintainers": [
        {
          "username": "DynamoTeam",
          "_id": "556e21d1888bb8ca03000008"
        }
      ],
      "keywords": [ "mesh", "geometry", "obj" ],
      "white_list": false
    },
    {
      "_id": "58bd8d86f4db78ec01000098",
      "name": "Hello Dynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/396de381-ef39-4a82-95f0-400dab5377d2gregPkg217.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "0.8.0.1233",
          "created": "2017-03-07T10:17:30.931Z",
          "full_dependency_versions": [ "2017.3.8" ],
          "full_dependency_ids": [
            {
              "name": "Hello Dynamo",
              "_id": "58bd8d86f4db78ec01000098"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.3.8",
          "contains_binaries": true,
          "node_libraries": [ "ARC6814HelloDynamo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-03-07T10:17:30.931Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 104,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "ARC6814",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Hello Dynamo Project",
      "maintainers": [
        {
          "username": "tswSSoA",
          "_id": "58b5a5b9f4db78ec0100006c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57d9f90df615e7725800004f",
      "name": "OpenStrc",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/a858e7ae-b033-4b07-be6e-fbaeaa32915cgregPkg918.zip",
          "contents": "OpenStrc.AddFamilyTypesFromList - Adds New Family Types  based off a list, OpenStrc.All.Family.Types.Of.Category - Gets all Loadable Family Types in the Document based on the Category Used., OpenStrc.All.Title.Case - Converts items like views, sheets etc to Title Case.  Requires boolean to run., OpenStrc.All.Upper - Converts a bunch of Categories to Uppercase.  Boolean required to run., OpenStrc.Collect.AllViewCropBoxesInDocument - Collects all the View Crop Boxes in a given Document, OpenStrc.Collection.CurrentSelection - Use's Revit's Currentl Selection Method, OpenStrc.Collector.Column - Collects structural column elements from the Revit document., OpenStrc.Collector.Fill.Regions - Collects Fill Region information from model, OpenStrc.Collector.Filters.GetUnused - Gets Unused Filters in a project., OpenStrc.Collector.Level.Elements - Collects all Level Elements in the Current Document, OpenStrc.Collector.LinkedInstanceElements - Collects Elements based on given Category and Element Type - RevitLinkInstance, OpenStrc.Collector.ViewTemplates - Collects the View Templates in a Project, OpenStrc.Collector.Worksets - Gets all the worksets in an Active Document., OpenStrc.Column Start Point - Gets the Column Start Point, OpenStrc.Column.PlaceByCurve - Places a column into the model based on inputs., OpenStrc.Document.Family.Beam.Collector - Gets all Framing Families from Document and their Family Types, OpenStrc.Document.Family.Column.Collector - Collects all Structural Column Families and Types\r\n, OpenStrc.Element.Curve.FromLine - Creates a simple polycurve from a list of curve start and end points., OpenStrc.Element.CurveFromWall - Gets a Curve from a Wall Object and defines it's direction or angle, OpenStrc.Element.Delete - Attempts to delete a Revit Element, OpenStrc.Element.DeleteBool - Deletes Elements but includes a boolean option before it deletes., OpenStrc.Element.Floor.ByOutlineTypeAndLevel - Takes in an array or list of items to create Revit Floors.  Based on Dynamo OOTB Node, but enables list input., OpenStrc.Element.FromID - Takes a Number for ID and gets the Revit Element, OpenStrc.Element.GetHost - Gets a Host Element from an Element.  ie.  Feed in Windows and Get Wall Elements, OpenStrc.Element.Level - Gets the Level of the Current Element, OpenStrc.Element.Location - Gets the Element Location, OpenStrc.Element.Name - No description provided, OpenStrc.Element.OverrideCutLineWeight - Overrides the Selected Elements Line Weight, OpenStrc.Element.ResetOverridesInView - Resets an elements manual Linework Override in the Current View, OpenStrc.Element.Room.Boundaries - Gets the Room Boundary lines, OpenStrc.Element.Room - No description provided, OpenStrc.Element.SetName - Sets the name of a given Revit element, OpenStrc.Element.Type - Gets the family type of a given element (if applicable)., OpenStrc.Element.Walls - Gets Wall Parameter Information for list of inputed walls, OpenStrc.Element.WallType - Gets the Wall Types from a list of inputed walls, OpenStrc.Family.AllFamilyTypesofCategory - Gets All Family Types based on Category, OpenStrc.Family.Rename - Renames Familes inside a project based on Search String, OpenStrc.Family.Rename.StripText - Renames Revit Families in project and stripes text out like a Company Name., OpenStrc.FamilyAddTypesFromList - Adds a List of Strings to Create Family Types, OpenStrc.FamilyDoc.FamilyParameters - Gets the avaiable Parameters in the Current Family Document., OpenStrc.FamilyInstance.ByPointInView - Places a family given Family Type, X,Y Points and View. eg.  Detail Items, OpenStrc.FillPattern.Rename - Collects Fill Patterns and allows you to rename and filter to delete.  Use with Excel and FillRegion Output Node, OpenStrc.FillRegion.Rename - Allows you to change name, type comments and itemeized list for deleting filled regions based on \"yes\" or \"no\" inputs., OpenStrc.Get All Scheduels - Gets all the avaiable Schedules in a document, OpenStrc.Get All Views - Gets all the Views in the Current Document, OpenStrc.Get.All.Elements.From.Linked.Models - Collects Elements from Multiple Linked Models, OpenStrc.Get.Linked.RVT.Docs - Gets Linked Revit Documents, OpenStrc.GetFromMultipleLinkedFiles - Collects Elements from Multiple Linked Files, OpenStrc.Graphics.DecimalTwoColour - No description provided, OpenStrc.List.View.Filter.Information - List View Filter Informatin from Views or Template, OpenStrc.Output.Clean - Cleans Output for Nested Nodes, OpenStrc.Override.Element - Override Settigns for Element in View, OpenStrc.Override.Reset - Reset's the Elements Override, OpenStrc.Parameter.Delete - Delete's Parameters in a Project based on an Input Filter, OpenStrc.Parameter.Get.GlobalParameter - Gets a Global Parameter from the Current Document.  Revit 2016 R2 and higher., OpenStrc.Parameter.Get.ParamTypeorInstance - Gets a current document element Type or Instance Values, OpenStrc.Parameter.Set.ParamTypeorInstance - Sets the current document element Type or Instance Parameter Value, OpenStrc.Rebar.CoverTypes - Collects all the Rebar Cover Types in the Current Document., OpenStrc.Rebar.GetCentrelineCurve - Gets the centreline from the selected set of rebar, OpenStrc.Rebar.GetHost - Get the rebar objects host, OpenStrc.Rebar.GetProperties - Returns the rebar obejcts Properties, OpenStrc.Rebar.SetSolidInView - Sets Rebar Elements to Solid in View Setting, OpenStrc.Rebar.SetUnobscuredInView - Sets Rebar Elements Unobscured in Active View, OpenStrc.Remove.Empty.Strings.From.List - Removes Empty Strings From List, OpenStrc.ReturnListOrSingleValue - Returns a list of Single Value, OpenStrc.Schedule.OnSheet - Collects all Schedules placed onto sheets, OpenStrc.Selection.PickModelElements - Uses Revit's Multiple Click to Pick Model Elements, OpenStrc.SheetViewName.Add.Prefix - Adds a prefix to all views placed onto sheets, OpenStrc.SheetViewName.Copy.TitleOnSheet - Copies the current View Name to the Title on Sheet Parameter, OpenStrc.String to TitleCase - Converts a String to Title Case, OpenStrc.String.Slice - Slices a string based on inputs.  Similar to Excel Left, Right, Mid funciton., OpenStrc.String.ToTitle - Converts String to Tilte Case, OpenStrc.TextElement.ToUpper - Converts Selectable Text Element to Upper Case, OpenStrc.Toggle - Toggle Run, OpenStrc.Turn.Into.List - No description provided, OpenStrc.Utilities.ApplicationVersion - Gets the Active Application Version, OpenStrc.Utilities.ElementEraser - Tries to deleete elements from a Revit Proejct givin an Input., OpenStrc.Utilities.Filter.GetUnused - Gets Unused Filters in a Project, OpenStrc.Utilities.FilterListByList - Filters a List of Items by another List, OpenStrc.Utilities.List.EqualLength - Updates nested list to have the same maximum equal length and enters a empty string for null values., OpenStrc.Utilities.List.EqualSubListLengths - No description provided, OpenStrc.Utilities.List.FilterByInput - Takes a list of items and Filter the list based on the Input Check Values, OpenStrc.Utilities.List.SubListLengths - No description provided, OpenStrc.Utilities.List.SublistsContain - Checkes lists to see if they contain another element., OpenStrc.Utilities.RemoveNulls - Remove Nulls from List, OpenStrc.Utilities.ReplaceNullsBy - Replaces Null values with whatever is entered as an input, OpenStrc.View.DuplicateWithDetailing - Duplicates a View With Detailing, OpenStrc.View.Not.On.Sheet - Collects views that are not placed on sheets., OpenStrc.ViewName.Add.Prefix - Add a Prefix to all Views in the Model, OpenStrc.ViewName.Search.Replace - Searches view names for a string and replaces it with another string.  Use \"\" to remove from view name., OpenStrc.Views.On.Sheet - Provides a list of views that are placed on sheets, OpenStrc.Workset.Create - Creates Worksets from a list, OpenStrc.Workset.From.Element - Gets a Selected Elements Workset, OpenStrc.Workset.Get - Gets Worksets from Inputed Document Node",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-12T00:03:04.416Z",
          "full_dependency_versions": [ "2017.3.11" ],
          "full_dependency_ids": [
            {
              "name": "OpenStrc",
              "_id": "57d9f90df615e7725800004f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.3.11",
          "contains_binaries": true,
          "node_libraries": [ "Open-Structural, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "OpenStructural.customization, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", "Package.customization, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", "ZeroTouchEssentials, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-03-12T00:03:04.416Z",
      "num_versions": 15,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 198,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Common Structural Nodes",
      "maintainers": [
        {
          "username": "mfleming.stantec",
          "_id": "56e5b8275bee3e2138000054"
        }
      ],
      "keywords": [ "open", "structural;", "openstrc" ],
      "white_list": false
    },
    {
      "_id": "58c6bb92f4db78ec010000f2",
      "name": "lineal",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/4c26f94c-447e-4f4e-b5e5-5fc633f529f7gregPkg275.zip",
          "contents": "# de columnas y filas y respectivo rango - Numero de columnas y de filas y su respectivo rango para su uso en recorridos de codigo el rango esta establecido como:\r\nRango Filas = # de filas + 1\r\nRango Columnas = # de columnas + 1, Creación de Planos Horizontales y Verticales - Crea planos verticales y horizonrales a partir de un muro que contenga Ventanas, Geometry.SplitRecursively - Splits a surface or a solid recursively, using the resulting reduced geometry for every consecutive split. Select a point or another geometry to control the direction of the split., Longitud de grupos de trozos horizontales - Saca la longitud de los grupos de los trozos que estan unidos de forma horizontal, Muro fantasma identico a muro real - Crea un muro fantasma con las mismas propiedades del muro real;\r\nCurve\r\nHeight\r\nLevel\r\nWall Type, Puntos recursivos origen y referencia para corte vertical muro - El nodo crea puntos recursivamente para hallar el origen del muro, este se usa para organizar los planos verticales y crea puntos recursivos para el corte recursivo de los Solidos, Referencia para cortes verticales - Dado un grupo de planos verticales y sus debidos origenes, los organiza para el corte recursivo",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-13T15:32:34.542Z",
          "full_dependency_versions": [ "1.1.1", "1.2.2", "0.90.7" ],
          "full_dependency_ids": [
            {
              "name": "lineal",
              "_id": "58c6bb92f4db78ec010000f2"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            }
          ],
          "direct_dependency_versions": [ "0.90.7", "1.2.2" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.9.x",
              "_id": "562f800e662bf0e9080002ab"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            }
          ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-13T15:32:34.542Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 25,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "bolivar",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "lineal cuadrado metros muro",
      "maintainers": [
        {
          "username": "js.galindo1155@uniandes.edu.co",
          "_id": "58c6aaf4f4db78ec010000ef"
        }
      ],
      "keywords": [ "lineal", "cuadrado", "metros", "muro" ],
      "white_list": false
    },
    {
      "_id": "589c6eb861de680108000038",
      "name": "Alvaro",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/5484c26c-1bf0-466b-99a3-0cd1e8099667gregPkg523.zip",
          "contents": "GetValueAsString - Get a parameter value as a string including its units, SaveDocument - Custom node to save the current active document, preventing the lose of work if the process clashes.\r\nIt can be used as final or middle step.\r\n\r\nFile must have been saved before.\r\n\r\nMake sure only one element goes as the input. If list, it will save the document as many times as the length of the list., SetValueAsString - Set a parameter value as a string including its unit, SpatialElementBoundary - It retrieves the boundary of any Revit spatial element (room or space) as polycurves., ToJsonString - Simple node to convert a structured list into a Json string format.\r\nThe list must match a [key, value] format and needs to be formatted prior entering the node.\r\nSee list input examples for more detail., Voxelate - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2017-03-14T00:27:55.850Z",
          "full_dependency_versions": [ "0.0.41" ],
          "full_dependency_ids": [
            {
              "name": "Alvaro",
              "_id": "589c6eb861de680108000038"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.41",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-14T00:27:55.85Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 42,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Tester package.\r\nVoxelate node is still on trial and might not be stable with certain geomteries or big amount of them. Please use carefully.",
      "maintainers": [
        {
          "username": "aortegapickmans@gmail.com",
          "_id": "565364fb0370b0a907000004"
        }
      ],
      "keywords": [ "alvaro", "revit", "dynamo" ],
      "white_list": false
    },
    {
      "_id": "58c9dd8bf4db78ec0100010f",
      "name": "quad points of surface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/29d93f08-88a8-455d-aeaf-2baa46481be6gregPkg171.zip",
          "contents": "quad point listing - seperating points based on uv in quad",
          "engine_metadata": "",
          "engine_version": "0.9.1.4062",
          "created": "2017-03-16T00:34:19.069Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "quad points of surface",
              "_id": "58c9dd8bf4db78ec0100010f"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-16T00:34:19.069Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 133,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "giving points on surface based on given u and v in quad group for panelizing",
      "maintainers": [
        {
          "username": "shabnam_bn",
          "_id": "58c9dcc1f4db78ec0100010e"
        }
      ],
      "keywords": [ "quad", "point" ],
      "white_list": false
    },
    {
      "_id": "57c630b94172a48a350000f7",
      "name": "Rutabaga",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/33467390-cb0f-4ef7-8024-99baa1c01340gregPkg78.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-17T08:52:19.514Z",
          "full_dependency_versions": [ "2017.3.13" ],
          "full_dependency_ids": [
            {
              "name": "Rutabaga",
              "_id": "57c630b94172a48a350000f7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.3.13",
          "contains_binaries": true,
          "node_libraries": [ "MathNet.Numerics, Version=3.17.0.0, Culture=neutral, PublicKeyToken=null", "Rutabaga, Version=2017.3.13.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-03-17T08:52:19.514Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 283,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "**New Version March 17 2017**\r\nCompatible with Dynamo 1.2.1\r\n\r\nNew nodes:\r\nAnalytical Model Stick, Analytical Links, Analytical Node-related nodes\r\n\r\nRelease Notes:\r\n1.) Mathematics nodes not functioning yet. Please stay informed as more nodes will be released on the next release. \r\n\r\nAlso try the new package Celery.\r\n\r\nPlease report bugs and suggest improvements to this Twitter account: @houmanave",
      "maintainers": [
        {
          "username": "hps_anave",
          "_id": "55503951a8367b986100008e"
        }
      ],
      "keywords": [ "analytical", "model", "link", "stick", "interference", "check", "file", "x", "o", "math", "vector", "revit", "element", "id", "connect", "curves", "uv", "xyz", "coordinate", "exclude", "last", "item", "list" ],
      "white_list": false
    },
    {
      "_id": "58cc9783f4db78ec01000125",
      "name": "Diagonales_Cercha",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/a96c5220-8d24-408b-8ef6-84fe8a5eee38gregPkg35.zip",
          "contents": "Diagonales Cercha_w - Genera las diagonales para una Cercha",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2017-03-18T02:12:19.645Z",
          "full_dependency_versions": [ "1.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Diagonales_Cercha",
              "_id": "58cc9783f4db78ec01000125"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-18T02:12:19.645Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 44,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Revit",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Genera las diagonales y verticales para una cercha.\r\nRealizado por: Ing. Wilbert Estevez",
      "maintainers": [
        {
          "username": "wilbertstevez@gmail.com",
          "_id": "58cc96e9f4db78ec01000124"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "58c968c2f4db78ec0100010b",
      "name": "Dynamo User Interface",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/2f80bcba-4953-4d4c-9a2c-5bfff937fedagregPkg909.zip",
          "contents": "UI_ComboBox1 - one ComboBox (dropdown llist), UI_ComboBox2 - two ComboBox (dropdown 2 list), UI_ComboBox3 - three ComboBox (dropdown 3 list), UI_ComboBox4 - four ComboBox (dropdown 4 list), UI_Slider1 - one Slider, UI_Slider2 - two Slider, UI_Slider3 - three Slider, UI_Slider4 - four Slider, UI_Textbox1 - one Textbox (1 input box), UI_Textbox2 - two Textbox (2 input boxes), UI_Textbox3 - three Textbox (3 input box), UI_Textbox4 - four Textbox (4 input box)",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-21T16:13:16.403Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "Dynamo User Interface",
              "_id": "58c968c2f4db78ec0100010b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": true,
          "node_libraries": [ "SlapsUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-03-21T16:13:16.403Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 214,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Parachence",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "collection of user interface to help with Dynamo Player ",
      "maintainers": [
        {
          "username": "danny.bentley@som.com",
          "_id": "574db6e0e70394822f000039"
        }
      ],
      "keywords": [ "user", "interface", "ui", "xmal" ],
      "white_list": false
    },
    {
      "_id": "57294551384037b37e000005",
      "name": "Universo_BIM",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/d27232a2-718b-4c1a-b903-5674726e3cf7gregPkg614.zip",
          "contents": "GetCurves - Get the Horizontal and Vertical Curves from BoundingBox, SurfacesFromBoundingBox - Obtain the TopBottom / Lateral surfaces from Bounding Box, SurfacesFromElement - Obtain BottomTop / Lateral surfaces from objects, Vertical.IsoSurfacesAtParameter - Get the Vertical IsoSurfaces from BoundingBox. Parameter 0 = Bottom / Parameter 1 = Top",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-21T23:38:10.309Z",
          "full_dependency_versions": [ "17.3.21" ],
          "full_dependency_ids": [
            {
              "name": "Universo_BIM",
              "_id": "57294551384037b37e000005"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "17.3.21",
          "contains_binaries": true,
          "node_libraries": [ "Universo_BIM, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-03-21T23:38:10.309Z",
      "num_versions": 10,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 827,
      "repository_url": "",
      "site_url": "www.universobim.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "ARCH and MEP Nodes. For Revit 2017 and Dynamo 1.2.x",
      "maintainers": [
        {
          "username": "GoroVT",
          "_id": "56024190662bf0e9080001c7"
        }
      ],
      "keywords": [ "mep", "pipe", "duct", "cabletray", "conduit", "wall", "opening", "collision", "report" ],
      "white_list": false
    },
    {
      "_id": "54740c03b77c84600c000040",
      "name": "Solar Analysis for Dynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/a4a06507-a4f3-44be-ae12-8b2f35b46680gregPkg736.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.1.0.2093",
          "created": "2017-03-23T18:55:15.180Z",
          "full_dependency_versions": [ "1.2.2" ],
          "full_dependency_ids": [
            {
              "name": "Solar Analysis for Dynamo",
              "_id": "54740c03b77c84600c000040"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.2",
          "contains_binaries": true,
          "node_libraries": [ "DynamoSolarAnalysis, Version=0.8.2.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-03-23T18:55:15.18Z",
      "num_versions": 10,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2215,
      "repository_url": "",
      "site_url": "http://www.autodesk.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "Copyright ©, 2015. Autodesk, Inc.",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A library for conducting solar insolation analysis in Dynamo. This version of Solar Analysis for Dynamo will timeout on January 1, 2016.",
      "maintainers": [
        {
          "username": "DynamoTeam",
          "_id": "556e21d1888bb8ca03000008"
        }
      ],
      "keywords": [ "solar", "analysis", "insolation" ],
      "white_list": true
    },
    {
      "_id": "546b8e83b77c84600c000011",
      "name": "Structural Analysis for Dynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/3bb66562-5a0e-46b2-965d-00037973f403gregPkg387.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.792",
          "created": "2017-03-24T11:47:33.393Z",
          "full_dependency_versions": [ "0.2.7" ],
          "full_dependency_ids": [
            {
              "name": "Structural Analysis for Dynamo",
              "_id": "546b8e83b77c84600c000011"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.2.7",
          "contains_binaries": true,
          "node_libraries": [ "DynamoSimulationRSA, Version=0.2.7.1, Culture=neutral, PublicKeyToken=null", "DynamoSimulationRSAUI, Version=0.2.7.1, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-03-24T11:47:33.393Z",
      "num_versions": 11,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 5753,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "OptimaX",
          "_id": "5582bdd4f2ae5a9a070000b5"
        }
      ],
      "num_dependents": 1,
      "description": "Structural Analysis for Dynamo allows for parametric modeling and structural analysis workflows in Dynamo 1.2 and 1.3\r\nStructural Analysis for Dynamo allows the user to configure the structural model in Dynamo, submit to Autodesk Robot Structural Analysis 2017 or 2018 for calculation and dig into the results returned from the analysis. \r\nPlease sign in to Dynamo forum to get more information, provide your feedback and report any issues (https://forum.dynamobim.com/)",
      "maintainers": [
        {
          "username": "_ew",
          "_id": "546b8e81b77c84600c000010"
        }
      ],
      "keywords": [ "analyze", "structural", "analysis", "rsa", "robot", "simulation", "structures" ],
      "white_list": false
    },
    {
      "_id": "57ddac02882d868b42000012",
      "name": "Clockwork for Dynamo 1.x",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/bffcbd6a-ffea-4e09-b157-deff5516c6bdgregPkg665.zip",
          "contents": "PointSequence.GreatestDistanceToPoint - Retrieves the furthest point in a sequence of points, Document.BuiltInParameters - List all the available BuiltInParameters, XYZAxis.FromVector - Returns whichever main axis (X, Y or Z) is closest to a given vector, Object.Members - Gets a list of all members (properties and methods) of a selected element, PathGraph.ShortestPath - Finds the shortest path (fewest steps) between two nodes. The connections input expects a list of value pairs., Room.Boundaries - Gets a list of all boundary elements of a given room or area, Paneling.Quadrilateral - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels. The placement pattern can be reversed (boolean) and shifted (integer)., Vector.Average - Determines the average vector of a list of vectors, Math.Similar - Computes the difference between two values and whether that difference is within a given tolerance factor, All Intersecting Elements Of Category - Finds all elements of a specified category that intersect with a list of vectors, UV.ByXY - Creates UVs from the XY components of point coordinates, PointSequence.ContainsOutOfPlanePoints - Checks a list for XYZs that are not located on a given plane, Document.StartingView - Retrieves the starting view of a Project file. Returns null if no starting view is set., View.DuplicateWithDetailing - Duplicates a given view with detailing, RevitFaceReference.FromDynamoSurface - Returns the underlying Revit face reference of a given surface, Element.Host - Gets an element's host, Room.UnplacedByNameAndNumber - Creates an unplaced room, RevitFace.FromDynamoSurface - Returns the underlying Revit face of a given surface, Room.IsPointInside - Evaluates if a ponti is located inside a given room., Color.ByWebColor - Creates a color from a given web color (a hex triplet like #FF9900), Object.MembersByName - Looks up all the members of a given element based on a given name (or part of a name) of the property or method. Search is case-insensitive., Vector.AltitudeAndAzimuth - Computes the altitude and azimuth of a given vector, List.DropLastItem - Drops the last item from a given list., Wall.Orientation - Gets the orientation of a given wall instance (normal of the exterior face of the wall). Will *not* work for walls hosted on mass faces or in-place walls., DisplayUnit.ToInternalUnit - Converts a value from a given display unit to Revit's internal unit, View.SetPhase - Sets the phase of a given view, Elements.FilterByParameterValueAndCondition - Keine Beschreibung angegeben, TurnIntoList - Turns an element (or a nested list) into a flat list, Group.Ungroup - Ungroups a group and returns the ungrouped elements., Math.IsOddNumber - Checks if a number is odd., FamilyInstance.AddCoping - Adds a coping (cut) to a steel beam, Family.IsInPlace - Determines if a family is an in-place family, Group.Members - Retrieves the members of a group, Math.Ceiling+ - Rounds a number *up* to a specified precision, Element.Group - Retrieves the group an element belongs to (if any), BoundingBox.PerimeterCurvesOnPlane - Returns the perimeter curve of a bounding box on a given plane (assuming that the bounding box and plane intersect), Element.Type - Gets the family type of a given element (if applicable). , Color.GreyscaleByNormalizedValue - Creates a greyscale color based on a normalized value (0 = black, 1 = white), TextNote.ByStringAndPosition - Creates a text note at a given location, Element.Location - Returns the location of an element as an XYZ (or if it's line-based the start and end point of the line), along with some booleans to help filtering the results. Use this for some element types (e.g. walls or lines) that do not work with the built-in Get Family Instance Location node. , Assembly.Members - Retrieves the members of an assembly, Window.Rooms - Gets the rooms that are connected by a given window, Topography.IsSubregion - Filters out everything that is *not* a topo subregion. Needs Revit 2014 or newer to work., AreaSeparator.FromCurve - Creates area separation lines from geometry curves. , PointSequences.ShortestPath - Retrieves the shortest path from a number of point sequences, TextAlignFlags.Middle - Returns the \"Left\" text align flag., Math.NormalizeRange - Normalizes a range of numbers, FamilyInstance.RemoveCoping - Removes a coping (cut) from a steel beam, DividedSurface.VerticalIntersectsByEndpoints - Creates a number of equally spaced vertical intersects for a divided surface based on the path between between two points. You may need to switch start point and end point., Element.ResetOverridesInView - Resets all overrides for an element in a given view, List.AnyFalse - Returns true if any item in a list of booleans is false., FamilyType.SetCompoundLayerWidth - Sets the width of a specified compound layer of a given family type (only applies to family types that have a compound structure, e.g. walls, floors etc.)., UnitType.DisplayUnitType - Retrieves the display unit type for a given unit type. , View.Scale - Returns the scale of a given view, Element.Phases - Gets the created and demolished phases of an element, Document.AddLink - Adds a link to a model to the current document, UV.Swap - Swaps U and V coordinates, Color.Purple - Returns the colour purple., TextAlignFlags.Bottom - Returns the \"Left\" text align flag., Angle.ExteriorAngle - Computes the exterior angle of a given angle., List.NormalizedSequence - Creates a sequence of N values between 0 and 1, List.SublistsContain - Looks for an item in each sublist of a given list and returns true/false for each sublist., Color.Red - Returns the colour red., VersionNumber.ToInteger - Converts a version number (e.g. a Dynamo version number) to an integer., Vector.YAxisNegative - Returns an XYZ of 0,-1,0, Color.Maroon - Returns the colour maroon., RoomTag.Room - Returns the room of a given room tag, TextAlignFlags.Center - Returns the \"Left\" text align flag., Math.IsEvenNumber - Checks if a number is even., WallType.Function - Retrieves the Function property of a given wall type, Color.Fuchsia - Returns the colour fuchsia a.k.a. magenta., Element.Panels - Retrieves the panels nested in a curtain wall, curtain system or glazed roof., WallLocationLine.CoreInterior - Returns the WallLocationLine option for CoreInterior, Element.ContainsTransparentMaterials - Checks if a given element contains transparent materials., Math.AlmostZero - Returns a feasable computational tolerance to zero (1.0e-9 or a billionth of 1) for use in calculations. More background info: https://github.com/DynamoDS/Dynamo/issues/879, View.SetDetailLevel - Sets the detail level of a given view, List.FibonacciFromList - Creates a Fibonacci row from a starting list (last two values) of a given length (starting values do *not* count toward length)., Color.Black - Returns the colour black., Clipboard.GetFrom - Gets the content of the clipboard. ATTENTION: Will only work with strings., List.WithLeadingZeroes - Adds leading zeros to a sequence of numbers, Category.Subcategories - Retrieves all the subcategories for a given category, Paneling.GridFromFace - Returns UV coordinates, XYZ coordinates and normals for a face with UV subdivision, List.RandomElements - Creates a list of random elements based on a given list of elements, FamilyType.SetCompoundLayerMaterial - Sets the material of a specified compound layer of a given family type (only applies to family types that have a compound structure, e.g. walls, floors etc.)., UV.RoundUpToPrecision - Rounds a UV coordinate *up* to a specified precision, RoomTag.SetType - Changes the family type of a given room tag to the specified type, DividedSurface.AddIntersect - Adds an intersect to a divided surface, Vector.IntersectionWithVector - Determines if two vectors intersect and returns the closest points of intersection on both vectors., DetailLevel.Fine - Returns the fine detail level, Geometry.FurthestFrom - Finds the furthest entity in a list of geometric entities from another given entity, WallLocationLine.CoreCenterline - Returns the WallLocationLine option for CoreCenterLine, Dimension.SetType - Changes the dimension type of a given dimension instance to the specified type, Wall.ByFace - Creates a wall on top of a face. The face typically needs to be the face of a mass surface in Revit., Color.White - Returns the colour white., View.SolarStudyTotalFrames - Retrieves the number of frames of a solar study for a given view (if the view's sun and shadow settings are indeed set to single or multi day study), Time.EvaluateLapTimes - Evaluates a list of lap times and returns the overall time, Schedule.KeyScheduleParameterName - If the schedule is a key schedule, the node returns the name of the key schedule parameter. , PointSequence.AccumulatedDistance - Retrieves the accumulated distances of a sequence of points, Document.ProjectParameters - Retrieves all project parameters and the categories they have been assigned to, Door.Rooms - Gets the rooms that are connected by a given door, View.SetDesignOption - Sets the view to a given design option. PLEASE NOTE: This node is kind of hacky. It does not use the design option settings in the visibility / graphic overrides. Instead it sets the view property \"Visible in Option\" to *one* specific design option - which also means that the symbolic representation of this view is only visible in views that display the given design options., Paneling.ShiftPlacementAndReverse - Shifts (integer) and reverses (bool) a given list, Hypotenuse.ByPythagoras - Computes the length of the hypotenuse of a right triangle using the Pythagorean Theorem. A and B are the legs / catheti of the triangle., TextElement.SetText - Sets the text of a given text element (i.e. text note or model text), CurtainPanel.HostPanel - Retrieves the host panel of a given curtain panel. This is typcially needed when wanting to access wall elements used as curtain panels., List.SortListOfLists - Sorts a list of lists by one of its sublists, Document.ProjectInfo - Gets the project information., Math.Normalize - Converts a value into a normalized value according to a value range, Color.Olive - Returns the colour olive., Elements.FilterByName - Retrieves those elements from a collection whose names match the search string, View.ConvertTemporaryHideIsolateToPermanent - Convert all temporary hidden elements or categories to permanently hidden in the given view., FamilyInstance.SuperComponent - Retrieves the supercomponent of a given family instance, ViewSheetSet.Views - Retrieves all the views/sheets in a given view/sheet set., WallLocationLine.CoreExterior - Returns the WallLocationLine option for CoreExterior, View.ViewTemplate - Returns the view template assigned to a given view (if one is assigned), Array.AssociatedFamilyParameter - Returns the associated family parameter of an array label (if any). PLEASE NOTE: This node will only work in a family document!, Element.Name+ - Gets an element's name (Dynamo's built-in Name nodes don't work for all element types, e.g. worksets...), Assembly.Disassemble - Disassembles an assembly and returns its members, View.CategoryIsVisible - Checks if a given category is visible in a given view, View.DetailLevel - Retrieves the detail level of a given view, Element.ByID - Gets the Revit element(s) for a list of IDs (or a single ID), View.DisableTemporaryHideIsolate - Disables the temporary hide/isolate for the given view (if set), View.Type - Returns the type of a given view, View.SetSolarStudyActiveFrameNumber - Sets the active frame number of the solar study in a given view, Document.ContainsElementsOfCategory - Checks if family instances of specified categories are present in the model., Color.Navy - Returns the colour navy., Point.Average - Determines the average of a list of points, Geometry.ClosestTo - Finds the closest entity in a list of geometric entities from another given entity, String.AlphanumericToMorse - Converts an alphanumeric string to Morse code, View.ResizeCropBox - Resizes the bounding box of a given Revit element by the specified amount in X, Y and Z direction. May need to be used in conjunction with a Transaction node., FamilyType.Duplicate - Duplicates a family type, Element.Workset - Retrieves the workset of a given element, PlaceholderSheet.ByNumberAndName - Creates placeholder sheets, DetailLevel.Medium - Returns the medium detail level, List.FromCSV - Converts the content of a given CSV file to a list, Workset.Kind - Retrieves the kind of a given workset, DirectShape.FromRevitGeometry - Creates a DirectShape from native Revit geometry objects, String.ReplaceIllegalFilenameCharacters - Replaces all characters in a string that are illegal characters for filenames, Element.Materials - Retrieves all materials froma given element, Element.OwnerView - Gets the owner view of a given Revit element (if possible), Element.Geometry+ - Returns Dynamo AND native Revit geometry of a given element, All View-Dependent Family Instances Of Category - Gets all view-dependent family instances in a given view for a given list of categories - useful for finding annotation elements, CustomNode.Info - Extracts information from a custom node., Room.InsertsOfBoundariesByCategory - Retrieves the inserts of the bounding elements of a given room - filtered by a given category., String.ReplaceRegularExpression - Replaces all occurences of a regular expression within a given string (or list of strings) with another string. The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, All Placed Family Types of Category - Retrieves all family types of a given category that have *placed* instances, FamilyInstance.ByCurve - Places a line-based family instance on a given level, DividedSurface.HorizontalIntersectsByEndpoints - Creates a number of equally spaced horizontal intersects for a divided surface based on the path between between two points. , Color.Lime - Returns the colour lime., File.WriteToCSV - Writes data to a CSV file with a custom delimiter. Data inputs needs to contain strings only!, Side.ByLawOfSines - Determines the length of a side based on the law of sines. (Alpha is the angle opposite side A and beta is the angle opposite side B...), Subcategory.ByName - Creates a new subcategory for a given element category in a *family document* (unless a subcategory of that name already exists - in that case it returns the existing subcategory), Roof.SlabShapeHasBeenModified - Checks if the shape of a roof slab has been modified with the shape editing tools, Assembly.FromElements - Creates an assembly from a list of elements, Paneling.TriangularFlatDiagonal - Creates groups of points from a list of UVs or XYZs for the placement of triangular panels. The placement pattern can be reversed (boolean) and shifted (integer)., Wall.Flip - Flips the  orientation of a given wall - DO ***NOT*** USE IN AUTOMATIC MODE, Assembly.RemoveMembers - Removes any given elements to a given assembly., RevitUV.ToDynamoUV - Converts Revit UV coordinates to Dynamo UV coordinates, Directory.Contents+ - Unlike the built-in node Directory.Contents, this node browses a directory recursively and returns all relevant files contained in subfolders as well., SelectionSet.Elements - Retrieves all elements stored in a selection set, View.IsPerspective - Checks whether a given view is a perspective view., Part.SourceElement - Retrieves the element a given part was made from, UV.RoundToPrecision - Rounds a UV coordinate to a specified precision, SelectionSet.ByElements - Creates a selection set of the given elements. Note that if a selection set of the given name already exists in the model, its contents will be replaced. Also, if the selection set is already applied as a view filter, the view filter will have to be manually updated in the visibility / graphic overrides. DO ***NOT*** USE IN AUTOMATIC MODE!, Document.SynchronizeWithCentral - Synchronizes a workshared model with the central model., DesignOption.DesignOptionSet - Returns the design option set of a given design option, PerspectiveView.OrientToEyeAndTargetPosition - Sets the orientation of a given perspective view based on a given eye and target position, List.GroupListOfListsByKey - Groups a list of lists by one of its keys, Group.FromElements - Creates a group from a list of Revit elements, Paneling.QuadrilateralAlternatingRows - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels in alternating rows. The placement pattern can be reversed (boolean) and shifted (integer)., RoomSeparator.FromCurve - Creates room separation lines from geometry curves. , Paneling.QuadrilateralCheckerboard - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels in a checkerboard pattern. The placement pattern can be reversed (boolean) and shifted (integer)., Element.Level - Gets an element's level, All Family Types Of Category - Gets all family types/symbols of a given category in the model  (does *not *work for system families), Element.SetName - Gets the name of a given Revit element, FamilyInstance.SetType - Changes the family type of a given family instance to the specified type, View.Duplicate - Duplicates a given view, Room.IsUnbounded - Checks whether a room is unbounded., List.FilterBySublistLength - Filters out all sublists that do not have the specified length, Roof.SlabShapeByPoints - Transform a slab shape based on a list of XYZs. PLEASE NOTE: Will reset any previous edits on the slab shape., ReturnListOrSingleValue - If the unknown item is not a list but rather a single item, only the first item of the list (input \"seq\") will be returned., Level.Plane - Retrieves the plane of a given level, List.NormalizedSequenceByFunction - Creates a sequence of N values between 0 and 1 driven by a function, Elements.GroupByHost - Groups a list of Revit elements by their respective hosts (if they have any), DetailComponent.ByCurve - Places a line-based detail component in a given view, Point.RoundToPrecision - Rounds a point coordinate to a specified precision, InternalUnit.ToDisplayUnit - Converts a value from Revit's internal unit to a given display unit, All Families Of Category - Gets all famiies of a given category in the model  (does *not *work for system families), View.Direction - Returns the direction of a view, View.DuplicateAsDependent - Duplicates a given view as a dependent view, MassFloor.Mass - Gets the mass a given mass floor belongs to, TextAlignFlags.Right - Returns the \"Left\" text align flag., Triangle.SolveByPoints - Solves a triangle based on the XYZ coordinates of its vertices., TextAlignFlags.Top - Returns the \"Left\" text align flag., Angle.ByAngleSum - Computes the missing interior angle of a *planar* polygon based on a given list of all other interior angles. , Sheet.Scale - Returns the scale of a given sheet, Color.Silver - Returns the colour silver., Wall.CreationMethod - Retrieves the creation method of a given wall, UV.ConvexHull2D - Computes the convex hull of a given set of UV coordinates based on the monotone chain algorithm, BoundingBox.ByElement - Gets the bounding box of a Revit element, Element.FromDynamoSurface - Returns the underlying Revit element of a given face, PathGraph.ByPairs - Builds a path graph (Python dictionary) from a list of value pairs., RevitColor.FromDynamoColor - Creates a Revit color from a Dynamo color, Element.AssociatedFamilyParameters - Returns the associated family parameters of an element in a family (and the respective element parameters). PLEASE NOTE: This node will only work in a family document!, Surface.IsPlanar - Checks whether a face is planar, Application.Version - Retrieves the name, version and build of the current Revit application., FamilyDocument.CurrentFamilyType - Retrieves the current family type from the active family document. PLEASE NOTE: This node will only work in a family document!, SpotElevation.ByFloorPlanAndPoint - Places a spot elevation at a given point in a given floor plan., WallLocationLine.FinishFaceExterior - Returns the WallLocationLine option for FinishFaceExterior, Color.Grey - Returns the colour grey., DividedSurface.HorizontalIntersectsByEndpointsAndFunction - Creates a number of horizontal intersects (levels)for a divided surface based on the path between two points. The spacing of the intersects can be controlled by a function., List.MatchWithKeyValues - Matches a list with a given set of keys and returns the values corresponding to the keys, Math.IsMultipleOf - Checks if A is a multiple of B., Document.LoadFamily - A very crude implementation of family loading. Will *not* reload an already loaded family of the same name., RevisionCloud.FromElements - Create a revision cloud for a list of Revit elements, Document.Worksets - Returns all Worksets in the current document, RevitColor.ToDynamoColor - Converts Revit colors into Dynamo colors, Level.Views - Returns all views associated with a given level, Angle.ByLawOfCosines - Computes an angle of a triangle using the law of cosines. A is the opposite side of the triangle while B and C are the sides forming the angle., Material.Duplicate - Duplicates a material, TextAlignFlags.Left - Returns the \"Left\" text align flag., Element.AllInstancesAtLevel - Retrieves all instances of an element on a given level, FamilyInstance.ByPointInView - Places a family instance at a given point in a given view (e.g. a detail component)., String.MorseToAlphanumeric - Converts a string in Morse code to alphanumeric, BuiltInCategory.ByName - Looks up all the built-in categories based on a given name (or part of a name) of the category. Search is case-insensitive., All Elements of Family Type+ - Unlike the built-in  node, this node retrieves all placed instances of a given loadable *or* system family type, View.Phase - Returns the phase of a given view, FamilyInstance.CopingElements - Returns all elements used as coping cutters for a given element., Document.ActiveViewFromCurrentDocument - Gets the active view of the current document, Mesh.FaceVertices - Gets the vertices of each face of a given mesh, List.FibonacciFromValues - Creates a Fibonacci row from two starting values of a given length (starting values do *not* count toward length)., Vector.ZAxisNegative - Returns an XYZ of 0,0,-1, Paneling.BuildTriangularSublists - Creates sublists of three items each from a list based on given indices, shift and reverse settings and offset., Document.SaveAs - Saves the active Revit document under the given name., DividedSurface.VerticalIntersectsByEndpointsAndFunction - Creates a number of vertical intersects (reference planes) for a divided surface based on the path between between two points. The spacing can be controlled by a function. You may need to switch start point and end point., CurtainSystem.ByFace - Creates a curtain system on top of a face. The face typically needs to be the face of a mass surface in Revit., Math.Round+ - Rounds a number to a specified precision, String.FindRegularExpression - Returns all occurences of a regular expression within a string (or list of strings). The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, FamilyType.CompoundStructureHasVariableLayer - Checks if the compound structure of a given floor or roof type contains a variable layer., FamilyParameter.Properties - Retrieves all properties of a given family parameter. PLEASE NOTE: This node will only work in a family document!, StructuralFoundation.Kind - Retrieves the kind of a given structural foundation (isolated, wall, slab)., FamilyType.CompoundStructureLayers - Retrieves the compound layers of any layered family type (wall types, roof types, floor types etc.), Point.IsOutOfPlane - Checks a list for XYZs that are not located on a given plane, Element.Category - Returns the category of a given element, List.ReplaceEmptyLists - Replaces all empty lists within a given list with a substitute, Element.JoinGeometry - Joins two model elements (if possible). Only works inside the project environment., Element.ParameterExists - Checks if an element contains a parameter of a given name, Room.Windows - Retrieves all windows that are associated with a room (hosted in walls and roofs)., FamilyInstance.FlipFromToRoom - Flips the settings of \"From Room\" and \"To Room\" for any given door or window instance. , Element.SetMaterialParameterByCategory - Sets a material parameter of a given element to <By Category>, List.CountOccurences - Counts the number of occurences of each unique element in a given list, FamilyInstance.FlipHandOrientation - Flips the hand orientation of a given family instance, RevitBoundingBox.FromDynamoBoundingBox - Turns a Dynamo bounding box into a Revit bounding box., String.MatchRegularExpression - Determines if a regular expression matches a string (or a list of strings) and returns a boolean value (or a list, depending on the input). The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, Math.DecimalToHex - Converts a number to a string of its hexadecimal value, Time.LapTime - Records a timestamp and adds it to a given list of lap times. Also passes through an arbitrary variable for integration into a graph., Element.CopyByVector - Copies an element or a list of elements by a given vector., Floor.SlabShapeByPoints - Transform a slab shape based on a list of XYZs. PLEASE NOTE: Will reset any previous edits on the slab shape., String.CompileRegularExpression - This is a helper node for setting certain flags for the Regular Expresssion nodes.\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, Document.Default3DView - Returns the default 3D view of the current model (if there is such a view), Cathetus.ByPythagoras - Computes the length of one of the catheti / legs of a right triangle using the Pythagorean Theorem. B is the other leg / cathetus of the triangle while C is the hypotenuse., Assembly.AddMembers - Adds any given elements to a given assembly., Point.RoundDownToPrecision - Rounds a point coordinate *down* to a specified precision, String.HexToDecimal - Converts a string of a hexadecimal value to a number, FamilyInstance.HandOrientation - Gets the hand orientation of a hosted object (e.g. a window or a door), Vector.IntersectionWithPlane - Finds the intersection point between a plane and a vector, Math.Floor+ - Rounds a number *down* to a specified precision, List.EqualSublistLengths - Trims all given lists to the length of the shortest list, WallLocationLine.FinishFaceInterior - Returns the WallLocationLine option for FinishFaceInterior, Roof.CreationMethod - Retrieves the creation method of a given roof, View.UsesViewFilters - Checks if a given view has any view filters applied to it., Buckyball.ByOriginAndRadius - Returns all the data necessary for modeling a truncated icosahedron (vertices and struts) as well as the surface area and volume. , Point.CentralProjectionOnFace - Projects a list of points onto a given face, Vector.XAxisNegative - Returns an XYZ of -1,0,0, Grid.Plane - Retrieves the plane of a grid, Clipboard.SendTo - Copies a string to the clipboard. , GlobalParameter.GetValue - Gets the value of a global parameter (only in Revit 2016 R2 or later)., Element.Inserts - Gets all the objects inserted into a given element., Vector.IsOrthogonalToVector - Checks if two vectors are orthogonal to each other, Element.IsRelatedToMass - Returns true if an object (wall, roof, floor or curtain system) has been modelled by face and the underlying mass still exists in the project., DetailLine.FromCurve - Creates a detail line based on a given curve, BoundingBox.PerimeterCurvesByNormal - Returns the perimeter curve of a bounding box on a plane determined by a given normal and the centroid of the bounding box, List.SublistLengths - Gets the lengths of all sublists in a given list of lists., WallType.Kind - Retrieves the wall kind of a given wall type, List.FromString - Chops up a string into a list of characters, FamilyType.FamilyName - Returns the *family* name of a given family *type*, FamilyDocument.FamilyTypes - Retrieves all family types from the active family document. PLEASE NOTE: This node will only work in a family document!, String.BinaryToDecimal - Converts a string of a binary number into a decimal value, Paneling.Quadrilateral2byX - Keine Beschreibung angegeben, Room.AtPointInPhase - Tries to retrieve a room element at the given location for the given phase., List.JoinByKey - Joins two lists by common keys., Room.InsertsOfBoundaries - Retrieves the inserts of the bounding elements of a given room., Point.RoundUpToPrecision - Rounds a point coordinate *up* to a specified precision, Color.Green - Returns the colour green., Dimension.AssociatedFamilyParameter - Returns the associated family parameter of a dimension label (if any). PLEASE NOTE: This node will only work in a family document!, Element.CutGeometry - Adds a solid-solid cut for two model elements (if possible). , Room.Doors - Retrieves all doors that are associated with a room (hosted in walls and roofs)., Character.ToNumber - Converts an Excel-style character to a number (e.g. A = 1, AA = 27 etc.)., Passthrough - Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node., Math.RandomIntegerList - Creates a list of random integers between 0 and a given maximum value, View3D.IsLocked - Checks if a given view is locked, List.AlphabeticalSequence - Creates a list of the first N letters of the alphabet  (where 1 = A, 2 = B, ... , 27 = AA, 28 = AB etc.)., FamilyInstance.FlipFacingOrientation - Flips the facing orientation of a given family instance, List.CountBooleanSequences - Retrieves the lengths of uninterrupted sequences of booleans (true or false) in a given list., Element.ID - Gets the ID(s) for a list of Revit elements (or a single element) - unlike the built-in Element.Id node, this node returns an actual Revit Element ID and *not* a number, DividedSurface.EvaluateGridNodes - Returns UV and XYZ coordinates as well as surface normals for all grid nodes of a given divided surface. Also returns the underlying face., PathGraph.AllPaths - Finds all possible paths between two nodes.  The connections input expects a list of value pairs., Paneling.InvertAndMirrorNormalizedValues - Inverts and mirrors (horizontally & vertically) a nested list of normalized values., Document.Views - Gets all views in the document - except for 3D view templates (as long as this bug is not fixed: https://github.com/DynamoDS/Dynamo/issues/2970), Paneling.TriangularSubpattern - Subcomponent of the Triangular Pattern From Grid node., Angle.ByLawOfSines - Determines the angle of a triangle based on the law of sines. (Alpha is the angle opposite side A and beta is the angle opposite side B...), SpaceSeparator.FromCurve - Creates space separation lines from geometry curves. , List.AnyTrue - Returns true if any item in a list of booleans is true., Element.AllViewDependentInstances - Retrieves all instances of a view-dependent element in a given view, Math.ScaleNormalized - Scales a normalized value according to a given minimum and maximum, Element.IsOfCategory - Checks whether an element is of a specified category, Math.InvertNormalized - Inverts a value between 0 and 1 to its opposite (1-x), View.IsViewTemplate - Checks if a given view is a view template, Color.Aqua - Returns the colour aqua., View.Plane - Retrieves the plane of a given view, Element.ElevationOfHostLevel - Returns the elevation of the level a given element is associated with, TextElement.Text - Gets the text stored in a text element (i.e. text note or model text), List.RepeatItemsByLengths - Repeats a list of items into sublists of given lengths, Color.Blue - Returns the colour blue., -1 - Decrements a value by 1, Plane.ByBestFitFromFace - Creates a plane from face, Document.ProjectParametersByCategory - Retrieves all project parameters for a given category, Plane.ByFirst3Points - Returns a plane, its origin and its normal based on the first three XYZs in a given list, Element.TemporarilyIsolateInView - (Temporarily) isolates elements in the given view, RevisionCloud.FromCurves - Creates a revision cloud from a list of geometry curves. , ModelCurve.Type - Gets the type of a given model curve, Element.Area - Returns the area property of a given element (if that element has such a property), List.ReplaceItemAtIndex+ - Replaces the item at a given index (or list of indices) of a list by another item, Mesh.IntersectionWithPlane - Calculates the intersection of a mesh and a plane, Topography.IntersectionWithPlane - Calculates the intersection of a toposurface and a plane, +1 - Increments a value by 1, Document.IsWorkshared - Returns true if the current project is workshared, List.Chop+ - Turns a list into a list of lists with sublists of varying lengths., Character.FromNumber - Converts a number into a character (where 1 = A, 2 = B, ... , 27 = AA, 28 = AB etc.)., Element.OverrideTransparencyInView - Overrides the transparency of an element in a given view, Sheet.Schedules - Returns all schedules placed on a specified sheet , Vector.IsInPlane - Checks if a given vector is located on a given plane, Document.BuiltInCategories - List all the available BuiltInCategories, Vector.PruneDuplicates - Prune vectors to exclude duplicates within a given tolerance, Switch - Emulates the Switch/Case statement that is  available in multiple programming languages., Element.ExternalFileReferencePath - Returns the full path of an element's external file reference as as string, OppositeSide.ByLawOfCosines - Computes the length of the missing side of a triangle using the law of cosines. Gamma is the angle between sides A and B., BuiltInParameter.ByName - Looks up all the built-in parameters based on a given name (or part of a name) of the parameters. Search is case-insensitive., FamilyInstance.SetLevel - Sets the level property of a family instance. Family instance will move accordingly., DetailLevel.Coarse - Returns the coarse detail level, Paneling.Hexagonal - Creates groups of points from a list of UVs or XYZs for the placement of hexagonal panels. The placement pattern can be reversed (boolean) and shifted (integer)., FamilyInstance.SubComponents - Retrieves all subcomponents of a given family instance, Material.Properties - Retrieves a number of properties froma given material, List.IsNotEmpty - Just the inversion of the built-in Is Empty List node., Document.LinksAndImports - Gets all linked and imported files in the document. NOTE: Does *not* retrieve linked Revit files., UV.RoundDownToPrecision - Rounds a UV coordinate *down* to a specified precision, Color.Teal - Returns the colour teal., Curve.ClosedLoopThroughPoints - Creates a *closed* loop of curves based on a given list of points, FootingType.BreaksAtInserts - Determines whether a list of wall footing types break at inserts in their attached walls, Math.DecimalToBinary - Converts a number to a string of its binary value, String.Replace+ - Replaces multiple items in a given string. Items in the string have to be denoted as {0], {1}, ..., {n} - corresponding to the respective list index of the replacement string., Document.ProjectPosition - Gets the project's position data relative to the origin. Use the built-in nodes Location.Latitude & Location.Longitude to retrieve latitude and longitude., UV.PruneDuplicates - Prune UVs to exclude duplicates within a given tolerance, Color.Yellow - Returns the colour yellow., UV.Average - Determines the average of a list of UVs, Element.SetWorkset - Sets the workset of a given element, AngleBisector.ByPoints - Retrieves the vector of an angle bisector at point B based on three points (A, B, C) that define the angle. , List.ReplaceNull - Replaces all null values within a given list with a substitute, Element.CopyToLevel - Copies an element or a list of elements to a given level. Preserves the element's transform. PLEASE NOTE: This node only works for levels that have at least one view (e.g. floor plan) associated with them., Document.DesignOptions - Returns all design options in the model, grouped by design option set, Normal.CorrectOrientation - Inverts normal A if its inversion is closer to normal B, Roof.Kind - Retrieves the roof kind (Basic, Glazed, Other). PLEASE NOTE: Roofs that were created by face will be identified as 'Other', Point.CentralProjectionOnPlane - Projects a list of points onto a given plane, UV.IsInsidePolygon - Determines if a point is inside the space enclosed by a polygon, DimensionType.Style - Gets the style of a given Revit dimension type, BoundingBox.ByElements - Retrieves a bounding box for a list of elements, RoomSequence.ToDoorSequence - Retrieves a sequence of doors connecting a given sequence of rooms (if possible), Element.AllInstances - Retrieves all instances of a given element, Vector.IsParallelToPlane - Checks if a given vector is parallel to a given plane, String.SplitByRegularExpression - Splits a given string by a regular expression. The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, WallLocationLine.WallCenterline - Returns the WallLocationLine option for WallCenterLine, Element.ParameterIsReadOnly - Checks if a parameter of a given element is read-only, Surface.FilterByOrientation - Sorts surfaces in three lists based on their orientation (vertical, horizontal up & horizontal down) and also returns three corresponding lists of booleans., Element.PermanentlyIsolateInView - (Permanently) isolates elements in the given view, FamilyDocument.FamilyParameters - Retrieves all family parameters from the active family document. PLEASE NOTE: This node will only work in a family document!, ThirdXYZAxis.ByTwoVectors - Given two main XYZ axes (or vectors pointing more or less in thei general direction), this node will find the third axis., Floor.SlabShapeHasBeenModified - Checks if the shape of a floor slab has been modified with the shape editing tools, Document.Phases - Retrieves all phases in the active document in *chronological* order, Paneling.DropLastRowAndColumn - Drops the last row and column from a UV field",
          "engine_metadata": "",
          "engine_version": "1.0.0.1180",
          "created": "2017-03-27T06:33:57.722Z",
          "full_dependency_versions": [ "1.0.3" ],
          "full_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.3",
          "contains_binaries": true,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-27T06:33:57.722Z",
      "num_versions": 4,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 9,
      "downloads": 20389,
      "repository_url": "https://github.com/andydandy74/ClockworkForDynamo",
      "site_url": "https://github.com/andydandy74/ClockworkForDynamo",
      "banned": false,
      "deprecated": false,
      "group": "Bad Monkeys",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "DynamoAutomation",
          "_id": "562f91e4662bf0e9080002af"
        },
        {
          "name": "TheOmniaFiles",
          "_id": "57e90783b135d45974000017"
        },
        {
          "name": "BIM4Struc.BridgeDesign",
          "_id": "57bc2ef24172a48a350000bc"
        },
        {
          "name": "Landform",
          "_id": "564dc5a3662bf0e90800035b"
        },
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "Summerisle",
          "_id": "5835897f7332da0d25000003"
        },
        {
          "name": "LRCZ",
          "_id": "5832c9d65af9f3713d0000d3"
        },
        {
          "name": "RollingPin",
          "_id": "587c08aaca6a5edb65000032"
        },
        {
          "name": "Custom Filter 112124",
          "_id": "58934ae6ca6a5edb650000fd"
        },
        {
          "name": "CheapWine",
          "_id": "58a1da1361de68010800005a"
        },
        {
          "name": "Conco Custom",
          "_id": "58bed0cef4db78ec010000ad"
        },
        {
          "name": "Structural Framing Optimization",
          "_id": "58cf622af4db78ec01000134"
        },
        {
          "name": "KC Star",
          "_id": "57ebcea9b135d45974000031"
        },
        {
          "name": "BesideTheCursor",
          "_id": "559c28d4f2ae5a9a0700011e"
        },
        {
          "name": "LRCZ_Elements.Bake",
          "_id": "58ef59b719da52d31a00001c"
        },
        {
          "name": "BVN",
          "_id": "5507ae3e0c7eac9b57000053"
        },
        {
          "name": "family By point in view",
          "_id": "590e7c13ababfb4f17000077"
        },
        {
          "name": "Moe's Nodes",
          "_id": "59120bfaababfb4f1700009c"
        },
        {
          "name": "DuyVB",
          "_id": "592d17ba583778af0f000069"
        }
      ],
      "num_dependents": 19,
      "description": "Clockwork is a collection of 380+ custom nodes. It contains many Revit-related nodes, but also lots of nodes for various other purposes such as list management, mathematical operations, string operations, geometric operations (mainly bounding boxes, planes, points, surfaces, UVs and vectors) and paneling. More information: https://github.com/andydandy74/ClockworkForDynamo ",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "clockwork", "bad", "monkeys" ],
      "white_list": false
    },
    {
      "_id": "58da726ab529d0bb24000018",
      "name": "My Nodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/beaac125-16d0-4fb4-97b6-b96dbdc1219dgregPkg2.zip",
          "contents": "In.Element - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-28T14:25:46.614Z",
          "full_dependency_versions": [ "1.0.2" ],
          "full_dependency_ids": [
            {
              "name": "My Nodes",
              "_id": "58da726ab529d0bb24000018"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-28T14:25:46.614Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 95,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Created by me for everyone!",
      "maintainers": [
        {
          "username": "jordan5M5W9",
          "_id": "58da5b9ab529d0bb24000013"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58dfe925b529d0bb2400004d",
      "name": "Simplex",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c56dc83f-7f7b-48a5-a1bd-4d0c4ae10c62gregPkg590.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.3.592",
          "created": "2017-04-03T15:26:30.542Z",
          "full_dependency_versions": [ "2017.1.3" ],
          "full_dependency_ids": [
            {
              "name": "Simplex",
              "_id": "58dfe925b529d0bb2400004d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.1.3",
          "contains_binaries": true,
          "node_libraries": [ "Simplex, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-04-03T15:26:30.542Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 206,
      "repository_url": "",
      "site_url": "www.simplycomplex.org",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A package with Simple nodes (for practical use) and complex nodes (for less practical fun use) from the Simply Complex Family (simplycomplex.org)",
      "maintainers": [
        {
          "username": "msgambelluri",
          "_id": "54b3295bdcee4dfd26000042"
        }
      ],
      "keywords": [ "word", "cow", "marcello", "simplycomplex", "practical", "pinned" ],
      "white_list": false
    },
    {
      "_id": "563e9f57662bf0e9080002fc",
      "name": "SketchUpForDynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/240a972b-300d-4212-a245-09166c9fa718gregPkg161.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-04-04T16:36:25.010Z",
          "full_dependency_versions": [ "1.2.5" ],
          "full_dependency_ids": [
            {
              "name": "SketchUpForDynamo",
              "_id": "563e9f57662bf0e9080002fc"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.5",
          "contains_binaries": true,
          "node_libraries": [ "SketchUpForDynamo.customization, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", "SketchUpForDynamo, Version=1.4.2.0, Culture=neutral, PublicKeyToken=null", "SketchUpNET, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-04-04T16:36:25.01Z",
      "num_versions": 11,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 740,
      "repository_url": "https://github.com/moethu/SketchUpNET",
      "site_url": "https://github.com/moethu/SketchUpNET",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Read/Write SketchUp Models with Dynamo. This package requires Visual C++ Redistributable Packages 2013 (vcredist_x64.exe)",
      "maintainers": [
        {
          "username": "h-mt",
          "_id": "55dad3ba662bf0e908000103"
        }
      ],
      "keywords": [ "sketchup" ],
      "white_list": false
    },
    {
      "_id": "58e4eba8b529d0bb24000080",
      "name": "BS-Rebar-LapSplice",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/86eaa77f-d49f-4e00-a9f6-009647889661gregPkg95.zip",
          "contents": "BS-Rebar-LabSplice - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-04-05T13:05:44.688Z",
          "full_dependency_versions": [ "0.0.1", "1.2.0", "1.2.4", "1.2.1" ],
          "full_dependency_ids": [
            {
              "name": "BS-Rebar-LapSplice",
              "_id": "58e4eba8b529d0bb24000080"
            },
            {
              "name": "Dynamo for Rebar",
              "_id": "55f2f4ad662bf0e908000171"
            },
            {
              "name": "BIM4Struc.Rebar",
              "_id": "5763be8ce70394822f0000c1"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            }
          ],
          "direct_dependency_versions": [ "1.2.4", "1.2.1", "1.2.0" ],
          "direct_dependency_ids": [
            {
              "name": "BIM4Struc.Rebar",
              "_id": "5763be8ce70394822f0000c1"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Dynamo for Rebar",
              "_id": "55f2f4ad662bf0e908000171"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-05T13:05:44.688Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 13,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "BimSolutions",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Create rebar sets  with lap splice based on rebar set and max length and overlap length",
      "maintainers": [
        {
          "username": "mahmoudsamir1@gmail.com",
          "_id": "58e4e16eb529d0bb2400007c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58e51600b529d0bb2400008d",
      "name": "PDUG",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/3350cf9e-9b36-4c5a-b343-49befbe20e05gregPkg924.zip",
          "contents": "PerspectiveView.ByEyePositionTarget - Create perspective view ",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-04-05T16:06:24.469Z",
          "full_dependency_versions": [ "0.0.1" ],
          "full_dependency_ids": [
            {
              "name": "PDUG",
              "_id": "58e51600b529d0bb2400008d"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-05T16:06:24.469Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 29,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Paris Dynamo User Group",
      "maintainers": [
        {
          "username": "elayoubi.mostafa",
          "_id": "5710e255287283f905000035"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58e7a39ab529d0bb240000ac",
      "name": "DirectionAtCurvePoint",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/9a8a868f-111a-4642-baf2-978f910e2bb3gregPkg689.zip",
          "contents": "DirectionAtCurvePoint - Get the vector direction of a curve at points along that curve",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-04-07T14:35:06.155Z",
          "full_dependency_versions": [ "2017.1.1" ],
          "full_dependency_ids": [
            {
              "name": "DirectionAtCurvePoint",
              "_id": "58e7a39ab529d0bb240000ac"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-07T14:35:06.155Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 52,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Lightos",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Provides the curve direction at points on that curve as a normalized vector",
      "maintainers": [
        {
          "username": "tom.james@bailygarner.co.uk",
          "_id": "5889cf44ca6a5edb650000a0"
        }
      ],
      "keywords": [ "normalized", "vector", "curve", "direction", "point" ],
      "white_list": false
    },
    {
      "_id": "559c28d4f2ae5a9a0700011e",
      "name": "BesideTheCursor",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/e54fb656-b63e-4a16-be39-7b39e844f420gregPkg410.zip",
          "contents": "BesideTheCursor Point2String Z Override - Pass in Point and Z Override, BTC_DIM_STYLE_TYPES - Delivers list of Dimension style typesnames, BTC_TextNote_Types - Outpus a list of TextNote.Types, BTC_Text_Exact_Match - Pass in searchstring and list get a bool list of exact matches, Get Rooms by Level_mod - Filters Rooms by level., View.IsGraphicView - True if graphic view, false if viewtemplate, browser, sheet, schedule, etc.",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-04-10T18:08:58.346Z",
          "full_dependency_versions": [ "0.1.4", "1.0.2", "2016.12.1" ],
          "full_dependency_ids": [
            {
              "name": "BesideTheCursor",
              "_id": "559c28d4f2ae5a9a0700011e"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "1.0.2", "2016.12.1" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "change_log": "",
          "version": "0.1.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-10T18:08:58.346Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 98,
      "repository_url": "",
      "site_url": "INTEGR-8.COM",
      "banned": false,
      "deprecated": false,
      "group": "BTC TOOLS",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Miscellaneous Utility Nodes",
      "maintainers": [
        {
          "username": "RichardBinning2010",
          "_id": "551d4a895899bb370500003d"
        }
      ],
      "keywords": [ "point", "string", "z", "zero", "dim", "style", "types", "textnote", "types", "exact", "match", "isgraphicview" ],
      "white_list": false
    },
    {
      "_id": "58ececf9b529d0bb240000e4",
      "name": "Kevin MySQL Application",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/d1e28eab-714f-4da1-84f7-3bc34cddf8e5gregPkg408.zip",
          "contents": "Connect to server - No description provided, Query for a Component - No description provided, Query in Database - No description provided, Query the Date - 搜尋動工日程, Query the LWH - 搜尋三維資料, Query the Name - 搜尋元件名稱, Query the Tools - 搜尋工具資料, Query with condition - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-04-11T14:49:29.969Z",
          "full_dependency_versions": [ "1.2.1", "2014.11.30" ],
          "full_dependency_ids": [
            {
              "name": "Kevin MySQL Application",
              "_id": "58ececf9b529d0bb240000e4"
            },
            {
              "name": "Slingshot! for Dynamo",
              "_id": "52bdf30a9de41c8235000081"
            }
          ],
          "direct_dependency_versions": [ "2014.11.30" ],
          "direct_dependency_ids": [
            {
              "name": "Slingshot! for Dynamo",
              "_id": "52bdf30a9de41c8235000081"
            }
          ],
          "change_log": "",
          "version": "1.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-11T14:49:29.969Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 17,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "justforTest",
      "maintainers": [
        {
          "username": "kevin801006",
          "_id": "58ecec74b529d0bb240000e3"
        }
      ],
      "keywords": [ "connecttoserver" ],
      "white_list": false
    },
    {
      "_id": "58ef59b719da52d31a00001c",
      "name": "LRCZ_Elements.Bake",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/ef721642-1b36-40ce-a025-6c9e5b61cf6bgregPkg265.zip",
          "contents": "Elements.Bake - Bakes elements so that they do not get deleted after rerunning the node",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-04-13T10:57:59.471Z",
          "full_dependency_versions": [ "1.3.0", "1.0.2", "2016.12.10" ],
          "full_dependency_ids": [
            {
              "name": "LRCZ_Elements.Bake",
              "_id": "58ef59b719da52d31a00001c"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "1.0.2", "2016.12.10" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "change_log": "",
          "version": "1.3.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-13T10:57:59.471Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 12,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Avoids deletion of elements when rerunning the graph",
      "maintainers": [
        {
          "username": "taurerm",
          "_id": "55152e015899bb370500000f"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57fa8b79d3d589541a000048",
      "name": "bimorphNodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/851b497c-3a66-4574-a60c-c66a5eb0743dgregPkg25.zip",
          "contents": "bimorph.CADLayerNames - Get the full list of layer names from a CAD Link or Import\r\n\r\nVisit bimorph.co.uk/bimorph-nodes for support, bimorph.CADLayersInUse - Get the list of layer names from a CAD link or import that are in use and contain curves\r\n\r\nVisit bimorph.co.uk/bimorph-nodes for support, bimorph.GetScheduleData - Gets all the table data from a given schedule as strings\r\n\r\nVisit bimorph.co.uk/bimorph-nodes for support, bimorph.GetScheduleDataColumns - Get the specified column data from a given schedule as strings\r\n\r\nColumn indexes start at 0\r\n\r\nVisit bimorph.co.uk/bimorph-nodes for support, bimorph.GetScheduleDataRows - Get the specified row data from a given schedule as strings\r\n\r\nSchedules have a blank row after the headings. Row indexes start at 0\r\n\r\nVisit bimorph.co.uk/bimorph-nodes for support, bimorph.LineStylesAttributes - Gets all the Revit Line Styles in the document and reports their Line Style Name, Weight and Colour as strings and integers. The Revit GraphicsStyle (Category) element for each Line Style is also output.\r\n\r\nVisit bimorph.co.uk/bimorph-nodes for support, bimorph.NewLineStyles - Create single or multiple new Line Styles in a Revit document from name, line weight and RGB values\r\n\r\nVisit bimorph.co.uk/bimorph-nodes for support, bimorph.RenumberRenameSheets - Renumber and/or rename Revit sheets. To renumber or rename only, leave the other input empty. Sheets and newNumbers list's must be equal in length to run.\r\n\r\nThe node uses an algorithm that handles common Revit sheet renumber warnings for more consistent results.\r\n\r\nVisit bimorph.co.uk/bimorph-nodes for support, bimorph.ReportCADLinks - Generates a report of all CAD links and imports in the document with key metrics. Linked and Imported CAD links are output into lists to aid with CAD link management.\r\n\r\nVisit bimorph.co.uk/bimorph-nodes for support, bimorph.SheetsFromSchedule - Collects and returns all Revit sheets from a Sheet List Schedule\r\n\r\nEnsure the Sheet Number field is included in the Schedule. \r\n\r\nVisit bimorph.co.uk/bimorph-nodes for support, SetCADObjectStyles - Set weight and colour of CAD link or import layers Object Styles. Enter the layers to set as strings. The layer names are case-sensitive. The line weight and colour lists are mapped to the layerNames list using longest lacing\r\n\r\nVisit bimorph.co.uk/bimorph-nodes for support",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-04-20T12:24:07.781Z",
          "full_dependency_versions": [ "2.0.8" ],
          "full_dependency_ids": [
            {
              "name": "bimorphNodes",
              "_id": "57fa8b79d3d589541a000048"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2.0.8",
          "contains_binaries": true,
          "node_libraries": [ "BimorphNodes.customization, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "BimorphNodes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-04-20T12:24:07.781Z",
      "num_versions": 23,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2627,
      "repository_url": "https://github.com/ThomasMahon/bimorphNodes",
      "site_url": "www.bimorph.co.uk",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "BimorphNodes are a collection of powerful utility nodes that extend Dynamo for Revit.\r\n\r\nThis is the first set of nodes in Dynamo for Revit capable of converting curves from CAD links or imports using Layer Names as filters. Converted cures are organised into sublists based on their layer. The node can be used to convert the sets of curves into Revit Model Lines without introducing unwanted CAD LineStyles into your project. For enhanced workflows, each set of curves can be mapped to a LineStyle of your choice using the lineStyleMap input. The node also circumvents the 10,000 Revit element limit for even greater flexibility.\r\n\r\nIf Revit Detail Lines are needed from a CAD link, there is the DetailLinesFromCADLayers node which provides the same level of functionality to suit detailing workflows.\r\n\r\nBoth of these nodes are optimised to convert more curve types than is currently possible with Explode in Revit or Revit.Elements.Element.Curves in Dynamo. Compatible with DWG or DGN Links and Imports.\r\n\r\nAnother first, introduced in v2.0 of BimorphNodes, is the ability to remove duplicate curves using the RemoveDuplicateCurves node. It works on Dynamo curves or Revit Model or Detail curves. Revit curves have optional inputs to deleted duplicates from the document with the ability to select which curves are preserved based on their LineStyle. \r\n\r\nThe package includes nodes to: \r\n- Extract curves from CAD Links or Imports using layer names as filters\r\n- Extract Detail Lines from CAD Links or Imports using layer names as filters\r\n- Remove duplicate curves\r\n- Query layers in CAD Links or Imports\r\n- Report all CAD Links and Imports in a Revit or Family document\r\n- Set the colour and line weight of CAD (layer) Object Styles\r\n- Duplicate Sheets and placed Views \r\n- Renumber and/or rename Sheets \r\n- Extract table data from Schedules \r\n- Create and query LineStyles\r\n\r\nVisit bimorph.co.uk/bimorph-nodes for instructions on how to use bimorphNodes and downlaodable example graphs.\r\n\r\nIf you want to be the first to hear about the latest news and upcoming releases of bimorphNodes, you can follow us here:\r\n\r\nFacebook:  facebook.com/bimorphBIM\r\nLinkedin:  linkedin.com/company/bimorph-bim\r\nTwitter:  @bimorphBIM\r\n\r\nCompatible with Revit 2015+ and Dynamo v1.0+. Get in touch with us to report bugs or suggest improvements or new features at: @thomas__mahon, github.com/ThomasMahon/bimorphNodes or bimorph.co.uk/bimorph-nodes",
      "maintainers": [
        {
          "username": "thomas@bimorphBIM",
          "_id": "57e448e12107b80223000040"
        }
      ],
      "keywords": [ "bimorphnodes", "bimorph", "bi", "bim", "nodes", "cad", "layer", "names", "curves", "filter", "dgn", "dwg", "layers", "duplicate", "sheets", "views", "line", "styles", "new", "linestyles", "spring", "attributes", "category", "categories", "lunchbox", "get", "schedule", "table", "work", "data", "column", "row", "lab", "sheet", "list", "lunch", "renumber", "rename", "re-number", "re-name", "importinstance", "import", "instance", "link", "clock", "model", "lines", "use", "modellines", "delete", "report", "object", "box", "style", "set", "thomas", "mahon", "remove", "detail", "dynamo", "re", "name", "number", "audit", "links", "imports" ],
      "white_list": false
    },
    {
      "_id": "58ff5cb019da52d31a00009a",
      "name": "Bang!",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/ff6141ec-c90c-4ddc-9e0d-afca8ff392d0gregPkg331.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-04-25T14:26:56.092Z",
          "full_dependency_versions": [ "2017.4.25" ],
          "full_dependency_ids": [
            {
              "name": "Bang!",
              "_id": "58ff5cb019da52d31a00009a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.4.25",
          "contains_binaries": true,
          "node_libraries": [ "Bang, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-04-25T14:26:56.092Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 77,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "BreakingCAD",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This package provides access to Revit warnings utilizing the new methods available in the Revit 2018 API. That being said, these nodes will only work in Revit 2018. This is the reason I chose to publish this as its own package instead of in Rhythm. Why Bang? Bang stands for the \"!\" symbol and appears on warning signs. :)",
      "maintainers": [
        {
          "username": "j0hnp",
          "_id": "54943e329508c43706000013"
        }
      ],
      "keywords": [ "warnings", "revit2018", "failing" ],
      "white_list": false
    },
    {
      "_id": "5763be8ce70394822f0000c1",
      "name": "BIM4Struc.Rebar",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/1811c6be-9d14-447a-a61c-de37f7897a2egregPkg952.zip",
          "contents": "AreaReinforcement.CreateFromHost - Create Area Reinforcement in a wall or floor according to the wall/floor sketch geometry. The exterior and interior reinforcement are the same by default., Element.GetRebarCover - Get the rebar cover dimensions for a selected element., Layout.DistributionRange - Defines the distribution ranges for rebar sets based on absolute or relative values., PathReinforcement.CreateByCurveAndShapeCode - Create a path reinforcement based on a list of curves and a predefined Rebar Shape Code., PathReinforcement.GetRebar - Get the Rebar objects hosted by a Path Reinforcment, Perpendicular distribution - Node that distributes curves along selected transversal curves (e.g. distribution of longitudinal rebar along transversal rebar segments.), Rebar.CopyByVector - Copy a selected rebar object and copy it according to a list of vectors., Rebar.GetCenterlineCurve - Get the centerline curves from a selected set of rebars, Rebar.GetFullGeometryForView - Generates full geometry for the Rebar for a specific view., Rebar.GetHost - Get the family instance and ID from the host of the selected rebar., Rebar.GetProperties - Get the main properties of a selected array of rebars: Style, Bar Type, Hook Type, Hook Orientation., Rebar.SetDistributionType - Toggle to set the distribution type of a rebar set to \"Varying Length\" (True) or \"Uniform\" (False), Rebar.SetLayoutAsFixedNumber - Sets the Layout Rule property of rebar set to FixedNumber., Rebar.SetLayoutAsMaximumSpacing - Sets the Layout Rule property of rebar set to Maximum Spacing, Rebar.SetLayoutAsMinimumClearSpacing - Sets the Layout Rule property of rebar set to MinimumClearSpacing., Rebar.SetLayoutAsNumberWithSpacing - Sets the Layout Rule property of rebar set to NumberWithSpacing, Rebar.SetLayoutAsSingle - Sets the Layout Rule property of rebar set to Single., Rebar.SetSolidInView - Sets this rebar element to be shown solidly in a 3D view., Rebar.SetUnobscuredInView - Sets this rebar element to be shown unobscured in a view., RebarShape.ByName - Get the Rebar Shape object from Revit, based on the given name., RebarType.GetBarDiameter - Get the diameter of a given Rebar Bar Type, Split curve with overlap - Splits a curve into multiple segments with a maximum length and a gap between two consecutive ones, and create a second curve next to it with similar division and overlap.\r\nThis node is to prepare rebars centerlines with splice lengths. , Trim curves by Surfaces - Trim curves by 2 faces and keep the internal part. ",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-04-26T14:33:05.889Z",
          "full_dependency_versions": [ "1.2.5" ],
          "full_dependency_ids": [
            {
              "name": "BIM4Struc.Rebar",
              "_id": "5763be8ce70394822f0000c1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-26T14:33:05.889Z",
      "num_versions": 10,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -5,
      "downloads": 2654,
      "repository_url": "",
      "site_url": "http://revitbeyondbim.wordpress.com",
      "banned": false,
      "deprecated": false,
      "group": "BIM4Struc",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "Structural Rebar",
          "_id": "58e4e62db529d0bb2400007d"
        },
        {
          "name": "BS-Rebar-LapSplice",
          "_id": "58e4eba8b529d0bb24000080"
        },
        {
          "name": "BimSolutions.rebar",
          "_id": "58e4ee8fb529d0bb24000084"
        },
        {
          "name": "BS-RebarLabSplice",
          "_id": "58e4fec3b529d0bb24000089"
        },
        {
          "name": "BS.Rebar",
          "_id": "58e5188fb529d0bb2400008f"
        },
        {
          "name": "OT_cam",
          "_id": "592454c6583778af0f000015"
        }
      ],
      "num_dependents": 6,
      "description": "The BIM4Struc.Rebar package offers nodes that increase your productivity for Rebar modelling in Revit.\r\nThe nodes don’t only allow you to get data from existing rebar such as sketch lines, geometrical properties, … but they also give access to automation of Rebar tasks (from the API) such as representation settings of rebar, rebar layout rules setting...\r\nCombining these nodes with the rebar creation nodes (from the Dynamo for Rebar package) make it possible to create almost any complex rebar model.\r\n\r\nLook at the \"Extra\" folder for some examples that can be used with the Dynamo Player.\r\n\r\nLearn more at http://revitbeyondbim.wordpress.com",
      "maintainers": [
        {
          "username": "dieter.vermeulen@autodesk.com",
          "_id": "54902569fa779c1c1100005c"
        }
      ],
      "keywords": [ "rebar", "reinforcement", "bim4struc" ],
      "white_list": false
    },
    {
      "_id": "57e179052107b80223000010",
      "name": "Archi-lab_Mandrill",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/59819fdf-410c-4655-89d1-01ab3a99c0dfgregPkg913.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-04-28T01:16:13.401Z",
          "full_dependency_versions": [ "2017.12.4" ],
          "full_dependency_ids": [
            {
              "name": "Archi-lab_Mandrill",
              "_id": "57e179052107b80223000010"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.12.4",
          "contains_binaries": true,
          "node_libraries": [ "Archi-lab_Mandrill, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "Mandrill_Types, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "Mandrill_UI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-04-28T01:16:13.401Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 3,
      "downloads": 3233,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Dynamo 1.2. Data visualization package for Dynamo. It uses the d3.js library to generate all charts and then serve then via a web browser. GitHub page here: https://github.com/ksobon/Mandrill more info and contact info: http://archi-lab.net/\r\n\r\n2017.12.4 Changes:\r\nArea Chart  has a new line/label input for target/average mark. \r\nFix to Image node.\r\nFix to text wrapping in Horizontal Bar Chart. \r\nAdditional inputs for Scatter plot allowing to define dot size and color. ",
      "maintainers": [
        {
          "username": "ksobon",
          "_id": "5592f3b0f2ae5a9a070000ff"
        }
      ],
      "keywords": [ "archi-lab", "mandrill", "bad", "monkeys", "d3", "data", "visualization" ],
      "white_list": false
    },
    {
      "_id": "54f9396c0c7eac9b5700001a",
      "name": "Ampersand",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/82b64034-ae84-4d9a-8340-1e01d04541e4gregPkg454.zip",
          "contents": "[&] Arc.AngleFromChordLength - No description provided, [&] Arc.CenterPoint - Works with a list of arcs.  Returns the center point for an arc or null if the item is not an arc., [&] Arc.LengthFromAngle - No description provided, [&] Arc.LengthFromChordLength - No description provided, [&] Categories.ListAll - List of all Revit Categories, [&] ColumnGrid.Line - Extract the placement curve from a Grid Element, [&] Curve.ChainOfCircles - Find a series of tangent circles with the given radii whose centers lie along a curve., [&] Geometry.SplitByTools - Split one piece of geometry (other than a polysurface) by multiple tools, [&] List.ChopByLengths - Chop a list into sublists given a series of sizes.  Remaining list items after the sublists have been filled are discarded.  Remaining sublist capacity after list items are exhausted is ignored., [&] List.ContainsList - Check if a 2-dimensional list contains a 1-dimensional list., [&] List.GroupByKey - Sort the items of a list into groups (sublists) based on the corresponding items of a reference list.  Example: The list {A,B,C,D,E} with the reference list {1,anyWord,4,anyWord,1} will be grouped into lists as { {A,E}, {B,D}, {C} } and the unique references will be {1, anyWord, 4}., [&] List.PickByKey - Take items from a list whose keys match a given set of choose values. Items and their corresponding keys are output in the order in which they are requested by the set of choose values.  As needed, items may appear multiple times in the output list or not at all.  Choose values that do not correspond to a key value produce a null selection, and all values not matched to a key are given as a third output., [&] List.PickByKeyUnique - Pick items from a list using a set of keys values.  Items and their key values will either be picked or excluded, and they can only be picked once.  Pick keys that do not match any of the list key values will be listed as keysNotMatched., [&] List.SortByKey - Sort a list (or lists) according to the order specified by the key list., [&] List.SplitOddEven - No description provided, [&] List.ToDesignScriptString - Convert a list of strings to a single string in DS format that would produce the same string, [&] List.WrappingCouplets - Divide a list into overlapping couplets, connecting the first to the last items., [&] Math.PartialSums - Find the sum of a set of numbers and a list of the partial sums., [&] ObjectList.GroupByContainer - Sort a set of objects into groups using their location points by their inclusion in a set of given list of containers.  Containters must be solids, closed polygons, polycurves.  Objects and points not included are returned separately., [&] ObjectList.SortAzimuthally - Sort objects azimuthally (like sorting numbers around a clock face) in a plane.  Objects are ordered about the origin of the plane according the position of their representative point (\"locations\" input).  Ordering proceeds from the positive x-axis of the plane in a counter-clockwise direction about the plane normal vector., [&] PointGrid.ToDiagrid - Create a diagrid point patterns from a rectangular grid of points.  Change the switchSet Boolean value to swith which set of checker-board points is selected., [&] PointGrid.ToQuadSets - Create groups of 4 items describing the \"cells\" of a rectangular grid of data.  In the case of a grid of points, the output will be the set of points describing the corners of 4-pointed panels., [&] PointGrid.ToTriSets - Construct three-point sets describing panels from a rectangular grid of points.  May use a grid of points in the form of a diagrid.  Boolean values \"swapDiagDirection\" and \"alternateDiagsByRow\" control how triangles are formed from the points.  Boolean value \"wrap\" , [&] PointList.IsCollinear - Whether a set of points is collinear., [&] PointList.SortAzimuthally - Sort points azimuthally (like sorting numbers around a clock face) in a plane.  Points are ordered about the origin of the plane, proceeding from the positive x-axis of the plane in a counter-clockwise direction about the plane normal vector., [&] PolyCurve.ByCurves - Create polycurves from an unordered list of curves., [&] PolyCurve.IsClockwise - For closed polycurves with reasonably straight segments, return true if the curve is clockwise relative to the plane, false otherwise., [&] PolyCurve.Pentagram - Closed polycurve in the shape of a 5-pointed star., [&] PolyCurve.VariablyOffsetTriangle - For a triangle vertices ABC, specify the points {A, B, C}, and the offset distance in the order {AB, BC, CA}.  Use (+) for inside offset, (-) for outside offset.  Output is a new set of points {A', B', C'}., [&] PolyCurve.Vertices - Find the points at vertices for a closed polycurve and indicates whether the vertices are concave (-1), straight (0), or convex (+1)., [&] PolySurface.Split - Split a polysurface and return organized polysurfaces., [&] PolySurface.SplitByTools - Split a single polysurface with multiple tools., [&] Surface.TrimMultiple - Trim a single surface with a list of closed curves and pick points (to designate the region to be subtracted), [&] Vector.ByAltitudeAzimuth - Create a unit vector by its altitude and azimuth.  The positive Y axis is taken as north and the positive Z axis is taken as up.\r\n\r\nAltitudinal convention is:\r\n90° = straight up (+Z axis),\r\n0° = horizontal,\r\n-90° = straight down (-Z axis).\r\n\r\nAzimuthal convention is:\r\n0° = North (+Y axis),\r\n90° = East (+X axis),\r\n180° = South (-Y axis),\r\n270° = West (-X axis)., [&] Vector.ProjectToPlane - Find the projection of the vector to the specified plane., [&] View.SetPerspectiveCamera - Set the camera for a perspective view., [&] PointList.VisualizePanels - No description provided",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-01T15:25:39.112Z",
          "full_dependency_versions": [ "2017.4.26" ],
          "full_dependency_ids": [
            {
              "name": "Ampersand",
              "_id": "54f9396c0c7eac9b5700001a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.4.26",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-01T15:25:39.112Z",
      "num_versions": 26,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 4,
      "downloads": 3025,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "Clockwork for Dynamo 0.8.2",
          "_id": "562f323c662bf0e9080002a5"
        },
        {
          "name": "Landform",
          "_id": "564dc5a3662bf0e90800035b"
        }
      ],
      "num_dependents": 2,
      "description": "Collection of nodes for lists, geometry, and paneling",
      "maintainers": [
        {
          "username": "colin.mccrone",
          "_id": "5304ea65bfe425953600008a"
        }
      ],
      "keywords": [ "altitude", "aziumth", "azimuthally", "group", "sort", "key", "vector", "project", "angle", "select", "set", "pick", "partial", "panel", "paneling", "offset", "triangular", "rectangular", "convex", "concave" ],
      "white_list": false
    },
    {
      "_id": "590829aaababfb4f1700003e",
      "name": "MIS_SJ",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/f05ee466-0379-4d6d-aad9-a0d44372d5efgregPkg86.zip",
          "contents": "Isolering for brugsvandrør varmt - Ændre isolering iht. rørstørrelser, Isolering for brugsvandsrør kold. - Ændre isolering iht. rørstørrelser, Isolering for Fjernvarmerør - Ændring af isoleringstykkelser, Isolering for kølerør - Ændre isolering iht. rørstørrelser, Isolering for Varmerør - Ændring af isolering tykkelser , Systemfordeler  - Fordeling af liste med systemer",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-05-02T06:39:38.467Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "MIS_SJ",
              "_id": "590829aaababfb4f1700003e"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-02T06:39:38.467Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 20,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Lidt af hvert. ",
      "maintainers": [
        {
          "username": "mis@sj.dk",
          "_id": "58c0544df4db78ec010000c2"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "59099b1eababfb4f1700004b",
      "name": "HB_BIM",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/794016b1-e97a-4986-b4ca-2d8b5a63af3fgregPkg371.zip",
          "contents": "HB_1 - Set parameter for Category",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-05-05T02:17:30.023Z",
          "full_dependency_versions": [ "17.0.1" ],
          "full_dependency_ids": [
            {
              "name": "HB_BIM",
              "_id": "59099b1eababfb4f1700004b"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "17.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-05T02:17:30.023Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 56,
      "repository_url": "",
      "site_url": "http://hbcr.vn/site/index.php?route=common/home",
      "banned": false,
      "deprecated": false,
      "group": "General",
      "engine": "dynamo",
      "license": "hb2017",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Hoa Binh Construction & Real Estate Group",
      "maintainers": [
        {
          "username": "hainhanxd",
          "_id": "59098bc4ababfb4f17000049"
        }
      ],
      "keywords": [ "hoa", "binh", "hoabinh", "hb" ],
      "white_list": false
    },
    {
      "_id": "57a141b1e8d2032d77000021",
      "name": "CMs Dope Custom Nodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/058db354-bac9-4670-b97d-7387cd1fd183gregPkg784.zip",
          "contents": "Active View - Gets active view or sheet, AdaptiveComponents.UpdatePts - Update points of adaptive components, BBCentroid - Bounding box centroid of geo, BetterSortByKey - Sorts list by key and works on nested list as it should :), Convert.StringToParamType - Converts a string to  a corresponding object type for setting parameters., CreateCSV - Create a csv, CurtianPanelPts - Gets vertices of curtian panel, getItemBasedOnRefPts - No description provided, getParamFromSerializedData - No description provided, Interop.Dynamo.GetParam - Gets parameter from serialized param string, Interop.Dynamo.ReadFromCSV - Reads csv to update elements, Interop.Dynamo.WriteToCSV - take adaptive components and create a serialized csv for interoperability, ptsFromCSVPtFile - Gets points from a points file (csv)",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-09T02:02:34.984Z",
          "full_dependency_versions": [ "0.0.701" ],
          "full_dependency_ids": [
            {
              "name": "CMs Dope Custom Nodes",
              "_id": "57a141b1e8d2032d77000021"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.701",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-09T02:02:34.984Z",
      "num_versions": 11,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 66,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Nodes created by cm",
      "maintainers": [
        {
          "username": "chrisishere",
          "_id": "57a1415de8d2032d77000020"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5911a3b6ababfb4f1700008e",
      "name": "kodbim",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/870eebbf-0f2a-4082-b47f-00fee387ce81gregPkg848.zip",
          "contents": "Elements.Filter.byParamValue - Regarding to relevant parameter value, all elements can be filtered.",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-05-09T11:10:46.179Z",
          "full_dependency_versions": [ "1.2.1", "110.0.2", "2016.13.3", "2017.1.8" ],
          "full_dependency_ids": [
            {
              "name": "kodbim",
              "_id": "5911a3b6ababfb4f1700008e"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            }
          ],
          "direct_dependency_versions": [ "2017.1.8", "110.0.2", "2016.13.3" ],
          "direct_dependency_ids": [
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "change_log": "",
          "version": "1.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-09T11:10:46.179Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 6,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "CustomNodes",
      "maintainers": [
        {
          "username": "kemal.ozkoseli",
          "_id": "589b4ece61de680108000033"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58ed6682b529d0bb240000e7",
      "name": "HA-Node",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/ca15378d-e987-4a23-922a-44697e0e1d70gregPkg912.zip",
          "contents": "Center of BoundingBox - No description provided, HA-GetRebarLine - No description provided, HA-Safe2Pile - No description provided, HA-Surface.Filter - No description provided, HA-Vector.AngleAboutAxis.Filter - No description provided, Slabs TB Face - No description provided, HA-Project2Survey - No description provided",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-09T14:59:07.563Z",
          "full_dependency_versions": [ "2017.5.9" ],
          "full_dependency_ids": [
            {
              "name": "HA-Node",
              "_id": "58ed6682b529d0bb240000e7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.5.9",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-09T14:59:07.563Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 40,
      "repository_url": "",
      "site_url": "www.hocketcau.com",
      "banned": false,
      "deprecated": false,
      "group": "HA-Node",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "www.hocketcau.com\r\nwww.fb.com/HAStructuralSolutions",
      "maintainers": [
        {
          "username": "kstheanhdo@gmail.com",
          "_id": "5703cf1f5bee3e21380000e4"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57bcd5ba4172a48a350000c1",
      "name": "Flux",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/88182ae9-7554-4890-98e1-4e0ffe90c03fgregPkg401.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-09T19:27:41.650Z",
          "full_dependency_versions": [ "2.1.22646" ],
          "full_dependency_ids": [
            {
              "name": "Flux",
              "_id": "57bcd5ba4172a48a350000c1"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2.1.22646",
          "contains_binaries": true,
          "node_libraries": [ "Flux.Dynamo.NodeModels, Version=2.1.22.646, Culture=neutral, PublicKeyToken=null", "Flux.Dynamo.NodeModelsWpf, Version=2.1.22.646, Culture=neutral, PublicKeyToken=null", "Flux.Dynamo.ZeroTouch, Version=2.1.22.646, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-05-09T19:27:41.65Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 1864,
      "repository_url": "",
      "site_url": "https://flux.io/downloads",
      "banned": false,
      "deprecated": false,
      "group": "Flux",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Exchange geometry with SketchUp, Grasshopper, Rhino, Excel, Google Sheets, AutoCAD, 3ds Max or other Dynamo/Revit users over the web. Access and transform your data on-the-fly using https://flux.io.",
      "maintainers": [
        {
          "username": "flux.io",
          "_id": "579fce3ee8d2032d7700000c"
        }
      ],
      "keywords": [ "flux", "flux.io", "dynamo", "revit", "sketchup", "grasshopper", "excel", "rhino", "interoperability", "share", "collaborate", "collaboration", "cloud", "3ds", "max", "autocad", "google", "sheets" ],
      "white_list": false
    },
    {
      "_id": "5912b4f1ababfb4f170000a0",
      "name": "ILKER KELES",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/bfc2b201-738c-40ce-b0da-e465610bdadfgregPkg876.zip",
          "contents": "IsPrimeNumber - Defines if an integer is a Prime Number or not",
          "engine_metadata": "",
          "engine_version": "1.2.2.373",
          "created": "2017-05-10T06:36:33.478Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "ILKER KELES",
              "_id": "5912b4f1ababfb4f170000a0"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-10T06:36:33.478Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 21,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Ilker Keles's Custom Nodes",
      "maintainers": [
        {
          "username": "keleskeles@hotmail.com",
          "_id": "5911ccd3ababfb4f17000094"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5916cc8aababfb4f170000c7",
      "name": "sequence",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/109fbbf6-4b6a-42c4-96d1-ea0aeb2ad32bgregPkg403.zip",
          "contents": "sequence - 未提供说明",
          "engine_metadata": "",
          "engine_version": "1.1.0.2094",
          "created": "2017-05-13T09:06:18.066Z",
          "full_dependency_versions": [ "1.0.0" ],
          "full_dependency_ids": [
            {
              "name": "sequence",
              "_id": "5916cc8aababfb4f170000c7"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.0.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-13T09:06:18.066Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 17,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "sequence of familyinstance",
      "maintainers": [
        {
          "username": "sg289",
          "_id": "5916c82bababfb4f170000c6"
        }
      ],
      "keywords": [ "sequence" ],
      "white_list": false
    },
    {
      "_id": "5848fe9efdef23aa6e0000ab",
      "name": "Kodestruct",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/7fc9ff81-0f28-4ff0-b67b-8c1e782796c5gregPkg922.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.2.373",
          "created": "2017-05-18T12:11:40.239Z",
          "full_dependency_versions": [ "0.7.3" ],
          "full_dependency_ids": [
            {
              "name": "Kodestruct",
              "_id": "5848fe9efdef23aa6e0000ab"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.7.3",
          "contains_binaries": true,
          "node_libraries": [ "Kodestruct, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "KodestructDynamoUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-05-18T12:11:40.239Z",
      "num_versions": 23,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 261,
      "repository_url": "https://github.com/Kodestruct/Kodestruct.Dynamo",
      "site_url": "www.kodestruct.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "Apache License  Version 2.0",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Structural engineering calculations per AISC 360-10, ACI318-14, NDS 2015, AA 2015, ASCE7-10 and other codes. Hundreds of nodes allow you to check steel wood, aluminum and concrete beams, columns, composite members, steel connections, calculate loads, section properties and stresses. These nodes can be used to replace Excel and Mathcad calculations.  Make sure to send an email to Konstantin@kodestruct.com to get updates on the latest features and bug fixes. <beta version>",
      "maintainers": [
        {
          "username": "KonstantinUdilovich",
          "_id": "5848ef21fdef23aa6e0000a9"
        }
      ],
      "keywords": [ "structural;design;steel;concrete;wood;connection" ],
      "white_list": false
    },
    {
      "_id": "58d91637f4db78ec01000195",
      "name": "DexysMidnightFunctions",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/f4dddb05-b1b8-461c-85f2-06f50a3947fagregPkg195.zip",
          "contents": "Compare.MatchedValues - Compares two lists and returns the matched and unmatched values , Compare.UniqueMatchedValues - Compares two lists and returns the unique matched and unmatched values, ConcatenateValues.ByParameterName - Concatenates the parameters of a list of elements by parameter name seperated by single suffix. Note any fields that are not required should have an empty string connected, Convert.ToBoolean - Converts a list of two values to boolean values, Excel.ListPerColumn - Creates a list for each coloumn in the listed excel file removes headers, Filter.ByParameterValue - Filters elements by a given parameter value, Filter.ByRule - Filters elements by a given parameter value, MapToParameter - Maps one parameter to another of the same element, Sort.ByPhase - Sorts all the electrical circuits by phase",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-15T12:19:23.745Z",
          "full_dependency_versions": [ "0.0.41" ],
          "full_dependency_ids": [
            {
              "name": "DexysMidnightFunctions",
              "_id": "58d91637f4db78ec01000195"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.41",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-15T12:19:23.745Z",
      "num_versions": 22,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 40,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "DexysMidnightFunctions",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Useful functions that can be used to create custom nodes, consisting of list management and parameter manipulation compare unique  ",
      "maintainers": [
        {
          "username": "dexter78WHC",
          "_id": "58d91222f4db78ec01000193"
        }
      ],
      "keywords": [ "electrical", "circuits", "map", "parameter", "list", "management", "concatnate", "value" ],
      "white_list": false
    },
    {
      "_id": "59180379ababfb4f170000cd",
      "name": "Dynabridge",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/147b4c39-fa2d-43cb-9529-124d058924aegregPkg45.zip",
          "contents": "Adjust Piers - Adjusts piers' heights , Barrier - No description provided, Bridge Body - No description provided, Calculate rot_XY parameter - Calculates rotation parmeter for 2 profile bridge body adaptive component familty, Create Corridors - No description provided, Extension to abutment END - No description provided, Extension to abutment START - No description provided, Local Coordinate Systems  - Makes local CS's out of Aligment as points, Multi pier bridge - No description provided, Pairs - No description provided, Read Alignment From Excel - Reads the coordinates from the excel sheet. Sheet name is needed",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-16T15:16:27.799Z",
          "full_dependency_versions": [ "0.0.4" ],
          "full_dependency_ids": [
            {
              "name": "Dynabridge",
              "_id": "59180379ababfb4f170000cd"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.4",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-16T15:16:27.799Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 154,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Bridge or tunnel design with adaptive components and excel sheet. Check this YouTube tutorial to learn how to use it: https://www.youtube.com/watch?v=ThsiKB8rOHg\r\n\r\nby Andrzej Samsonowicz ",
      "maintainers": [
        {
          "username": "andrzej.samsonowicz",
          "_id": "54647bafb77c84600c000004"
        }
      ],
      "keywords": [ "bridge", "tunnel", "design", "adaptive", "components", "excel" ],
      "white_list": false
    },
    {
      "_id": "562f91e4662bf0e9080002af",
      "name": "DynamoAutomation",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/e33bae07-da32-44f8-ba2e-74547e99bef1gregPkg987.zip",
          "contents": "JournalFiles.Cleanup - Moves all journal files created during a batch-processing operation to a specified directory, RevitAddinsPath.ByVersion - Returns the path of Revit Addins folder based on a given Revit version, RevitExecutablePath.ByVersion - Returns the path of Revit.exe based on a given Revit version",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-18T04:06:35.434Z",
          "full_dependency_versions": [ "1.3.0", "1.0.3" ],
          "full_dependency_ids": [
            {
              "name": "DynamoAutomation",
              "_id": "562f91e4662bf0e9080002af"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "direct_dependency_versions": [ "1.0.3" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "change_log": "",
          "version": "1.3.0",
          "contains_binaries": true,
          "node_libraries": [ "DynamoAutomation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-05-18T04:06:35.434Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 768,
      "repository_url": "https://github.com/andydandy74/DynamoAutomation",
      "site_url": "https://github.com/andydandy74/DynamoAutomation",
      "banned": false,
      "deprecated": false,
      "group": "Bad Monkeys",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Batch process Revit models by driving Revit (and the Dynamo addin) from the outside using the Dynamo sandbox.",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "automation", "batch", "processing", "bad", "monkeys" ],
      "white_list": false
    },
    {
      "_id": "590e7c13ababfb4f17000077",
      "name": "family By point in view",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/079b5ee0-c1cd-4da8-8e65-c20ea1278979gregPkg52.zip",
          "contents": "Family By Point In View - family",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-19T03:38:34.328Z",
          "full_dependency_versions": [ "0.0.3", "1.0.3" ],
          "full_dependency_ids": [
            {
              "name": "family By point in view",
              "_id": "590e7c13ababfb4f17000077"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "direct_dependency_versions": [ "1.0.3" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-19T03:38:34.328Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 32,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "family",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "family By point in view",
      "maintainers": [
        {
          "username": "pvhuyg@gmail.com",
          "_id": "57e7bf82b135d4597400000a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "59088fccababfb4f17000044",
      "name": "KitchenSink",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/1cad9cdb-5956-4db6-8e0f-8e09ec70f2e5gregPkg155.zip",
          "contents": "ConvertNumberToLengthString - Converts a number to length string by Document settings, CreateColumnsInTableSection - Created the desired number of columns, CreateRowsInTableSection - Makes a schedule title have the desired number of rows, DetailLine.InActiveView.FromCurve - Draws lines in the active view given a curve.  Only curve endpoints are used, this draws lines., FBXExport.IsolateElements - Isolate Specific Elements in a view before exporting to a specified FBX filepath., GetHeaderSectionData - Get the header data object of the table data, GetTableData - Get the table from a schedule view, ImportDWG - Import a dwg into a drafting view, LoadFamilyPath - Load families from a file path and overwrite, NumberOfRowsInTableSection - Get the number of rows, Point Set Z - Set the Z value of a point, Remove Rows and Columns - Remove all rows and/or columns from the table section, SelectPoint - Select multiple edges from inside the Revit UI. Be sure to press \"Finish\" once done. You can use a Boolean toggle to refresh your selection., SetCellText - Set the cell text of the TableSection cell specified, SetViewScale - Set a given views view scale, TableOfIndices - Get row/column indices, as well as row and column counts for a 2D array",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-19T13:52:16.883Z",
          "full_dependency_versions": [ "0.0.3" ],
          "full_dependency_ids": [
            {
              "name": "KitchenSink",
              "_id": "59088fccababfb4f17000044"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-19T13:52:16.883Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 30,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "All the nodes that don't belong.",
      "maintainers": [
        {
          "username": "erudisaile@microdesk.com",
          "_id": "57274cb5305bec4d3c000061"
        }
      ],
      "keywords": [ "schedule", "table", "misc", "export" ],
      "white_list": false
    },
    {
      "_id": "591f3f544f57b8e07000003a",
      "name": "Collector.OfKeynotes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/17ae91d6-cd9f-49f4-aa40-75979f8081dfgregPkg39.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-19T18:54:12.977Z",
          "full_dependency_versions": [ "2017.5.19" ],
          "full_dependency_ids": [
            {
              "name": "Collector.OfKeynotes",
              "_id": "591f3f544f57b8e07000003a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.5.19",
          "contains_binaries": true,
          "node_libraries": [ "KeynoteCollector, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-05-19T18:54:12.977Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 19,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A sample node that collects keynotes. Built as a test for Revit server",
      "maintainers": [
        {
          "username": "j0hnp",
          "_id": "54943e329508c43706000013"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58d4167bf4db78ec01000167",
      "name": "Beaker",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/3ef93c16-0081-4025-8cf8-a65980314ec4gregPkg55.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-22T22:20:33.999Z",
          "full_dependency_versions": [ "2017.5.22" ],
          "full_dependency_ids": [
            {
              "name": "Beaker",
              "_id": "58d4167bf4db78ec01000167"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.5.22",
          "contains_binaries": true,
          "node_libraries": [ "Beaker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-05-22T22:20:33.999Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 579,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "EvolveLAB",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "KC Star",
          "_id": "57ebcea9b135d45974000031"
        }
      ],
      "num_dependents": 1,
      "description": "Revit 2017 + Dynamo 1.3.0 | Beaker for Dynamo is built by EvolveLAB, (www.evolvebim.com). Beaker is a collection of nodes that enhance the Dynamo and Revit experience.  This includes everything from workflow to UI enhancements for Dynamo player.",
      "maintainers": [
        {
          "username": "john.pierson@evolvelab-inc.com",
          "_id": "58d41592f4db78ec01000166"
        }
      ],
      "keywords": [ "dynamoplayer", "wpf", "interface", "filter", "collection", "evolve" ],
      "white_list": false
    },
    {
      "_id": "586c888d75c961bb1e00001e",
      "name": "mimimi",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/cca0721c-5d78-4601-9718-b763c232bbd6gregPkg663.zip",
          "contents": "ArraytoListofIndividualItems - Takes a string of location data from the ConnectorManager and cuts it up so it can be used as point data, CollectDiffusers.Left - This collects the diffusers from the Excel file, outputting them as a Diffuser Count and a Diffuser Type, CollectDiffusers.Right - This collects the diffusers from the Excel file, outputting them as a Diffuser Count and a Diffuser Type, CreateDiffuserPoints - This node takes the Riser Points and Diffuser Count and creates the Points for placing the Diffuser Families, CreatePoints.ForAllLevels - This takes the number of levels and the floor to floor heights from the excel, and creates points for placing all of the level lines, CreatesAllPoints.ForAllRisers - This takes the points input from the levels, and the riser count and floor to floor height, and creates the base points for all of the risers - for every level, Get Connector.CoordinateSystem - No description provided, Get ConnectorManager - Get the connector manager object from Revit, Get Connectors from ConnectorManager - No description provided, Get Transform Properties from Revit Transform Object - No description provided, Id to Element - Selects elements in a model from id input (ElementId, string, integer or GUID), List.FromString - Chops up a string into a list of characters, MakeNewDuctFittings1 - Given an input of vertical and horizontal ducts, this node will find the connector locations and apply the correct Elbow, Tee or Cross Fitting. The Tee branch must be the second connection on the Input, MakeNewDuctFittings2 - This creates new Elbows, Tees or Crosses for horizontal ducts with vertical ducts meeting as the branch, TurnIntoList - Turns an element (or a nested list) into a flat list, GetEquipmentConnectorManager - Get the connector manager object from Revit",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-27T20:26:43.317Z",
          "full_dependency_versions": [ "0.0.2", "2016.11.11" ],
          "full_dependency_ids": [
            {
              "name": "mimimi",
              "_id": "586c888d75c961bb1e00001e"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "2016.11.11" ],
          "direct_dependency_ids": [
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-27T20:26:43.317Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 22,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "This (hopefully) contains all of the nodes required to run AutoRiserDiagrams",
      "maintainers": [
        {
          "username": "lalsop",
          "_id": "583bb09dfdef23aa6e000028"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "57619b51e70394822f0000a9",
      "name": "Honeybee",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/4b2fcb9a-3a85-491f-94f3-3a166e5cf61cgregPkg75.zip",
          "contents": "CIE Standard Sky - Generate Radiance's CIE Standard sky (aka. gensky)., Collect Rooms and Spaces - Collect rooms and MEP spaces in the Revit document.\r\n\r\nUse \"Rooms to HBZones\" node to convert them to Honeybee zones., Generate Test Points by Grid Size - Generate test points from Dynamo surfaces based on grid size., Generate Test Points from HBZones - Generate test points from Honeybee zones based on grid size., Grid-based Analysis Recipe - Create an analysis recipe for a grid-based daylight or radiation analysis., Honeybee Surface - Create a Honeybee surface, which can be plugged into the \"Run Daylight Sumilation\" component.\r\nNot available in the currant version for Dynamo but this surface can be combined with other surfaces to make HBZones with the \"Create Honeybee Zone\" node., Radiance Glass Material by Single Value - Create a Radiance material by a single value for visible transmittace of the glass., Radiance Parameters - Radiance Parameters\r\nCheck here for more details about default values at (http://radsite.lbl.gov/radiance/refer/Notes/rpict_options.html) or read more at: (http://daysim.ning.com/) and check this presentation by John Mardaljevic: (http://radiance-online.org/community/workshops/2011-berkeley-ca/presentations/day1/JM_AmbientCalculation.pdf), Rooms to HBZones - Create Honeybee zones from Revit Rooms or MEPSpaces.\r\nThis node currently ONLY collects geometrical data from Revit. In the future it will import constructions, materials and MEP data (e.g lighting power density)., Run Radiance Simulation - Write and run radiance simulations from Radiance recipes., Sky with Certain Illuminance - Genrate a uniform CIE sky from an illuminace value, Sunlighthours Analysis Recipe - Calculate number of direct sunlight hours.",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-27T21:16:36.542Z",
          "full_dependency_versions": [ "0.1.1" ],
          "full_dependency_ids": [
            {
              "name": "Honeybee",
              "_id": "57619b51e70394822f0000a9"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-27T21:16:36.542Z",
      "num_versions": 11,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 1438,
      "repository_url": "https://github.com/ladybug-analysis-tools/honeybee-plus",
      "site_url": "ladybug.tools",
      "banned": false,
      "deprecated": false,
      "group": "Ladybug Analysis Tools",
      "engine": "dynamo",
      "license": "GPL V 3.0",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Honeybee connects Revit and DynamoBIM to Radiance and OpenStudio (EnergyPlus) for daylight and energy simulation.\r\n\r\nThis version supports point in time daylight and sunlight hours analysis. Annual daylight analysis will be added soon.",
      "maintainers": [
        {
          "username": "thisisladybug",
          "_id": "56a911d7c3e9ee4a0800004a"
        }
      ],
      "keywords": [ "radiance", "energyplus", "openstudio", "environmental", "analysis" ],
      "white_list": false
    },
    {
      "_id": "5822b2b65af9f3713d000017",
      "name": "Celery",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/b6438bf7-1b99-458f-bde4-9b1641243092gregPkg580.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-29T04:07:06.424Z",
          "full_dependency_versions": [ "2017.5.290" ],
          "full_dependency_ids": [
            {
              "name": "Celery",
              "_id": "5822b2b65af9f3713d000017"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.5.290",
          "contains_binaries": true,
          "node_libraries": [ "Celery, Version=2017.5.25.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-05-29T04:07:06.424Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 218,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "UPDATE (Pre-BETA 4)\r\n\r\nMinor Update: 2017-05-25\r\nUpdated for Dynamo version 1.3.0\r\n\r\nPrevious Updates:\r\nAdded the UVPointer node (2017-3-13).\r\nAdded the new GraphMap node (2017-2-27).\r\nCurrently with three graphs to choose from: Linear Curve, Bezier Curve and Sine Wave (to be expanded soon).\r\n\r\nOther updates (2017-3-13):\r\nLinear Curve points are now free to move inside the canvas.\r\n\r\nRemoved the Revit Parameter Selector node.\r\nThis node will be transferred to another custom UI package dedicated only for Revit.\r\n\r\nFixed bugs:\r\n(2017-5-13): Disabled the \"ERROR!\" prompt when GraphMap node has no connected inputs.\r\n(2017-3-13): Bezier Curve returns more proper values.\r\n(2017-2-27): Now able to save the settings in the nodes after closing the file.\r\nRewrote the List Item Selector node.\r\n\r\n------------------------------------------------------------\r\nA package of custom UI nodes:\r\nInput-bounded Number Slider, List Item Selector, Graph Map, UV Pointer (otherwise known as MD Slider)\r\n\r\nDescriptions:\r\n\r\nInput-bounded Number Slider: A number slider switchable between integer and floating-point number setting. Assign bounds to the node using two numbers, regardless of which is greater to which. Number of decimal places can be assigned when Number option is selected.\r\n\r\nListItemSelector: An item selector custom node using a drop-down control to select an item from an input list (but not a list from a list).\r\n\r\nGraphMap: Enables users to create a sequence of numbers with the help of configured graphs. Needs a low limit, a high limit and the quantity for producing mapped numbers.\r\n\r\nUV Pointer: A UI node resembling a two-dimensional pointer returning u and v values from 0 to 1.\r\n\r\nPlease report bugs and suggest improvements at my Twitter account: @houmanave\r\n\r\nfrom the maker of Rutabaga. ",
      "maintainers": [
        {
          "username": "hps_anave",
          "_id": "55503951a8367b986100008e"
        }
      ],
      "keywords": [ "input", "bound", "number", "slider", "list", "item", "selector", "select", "graph", "map", "graphmap", "uv", "pointer", "u", "v", "md", "slider" ],
      "white_list": false
    },
    {
      "_id": "592bbccf583778af0f00005b",
      "name": "NewFamilyType",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/688fbe2c-940d-4217-b391-8cbdb28b46d9gregPkg167.zip",
          "contents": "ElementTypesMatchList - Duplicates an element type",
          "engine_metadata": "",
          "engine_version": "0.8.0.950",
          "created": "2017-05-29T06:16:47.356Z",
          "full_dependency_versions": [ "11111.11.11", "0.82.8" ],
          "full_dependency_ids": [
            {
              "name": "NewFamilyType",
              "_id": "592bbccf583778af0f00005b"
            },
            {
              "name": "Clockwork for Dynamo 0.8.2",
              "_id": "562f323c662bf0e9080002a5"
            }
          ],
          "direct_dependency_versions": [ "0.82.8" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.8.2",
              "_id": "562f323c662bf0e9080002a5"
            }
          ],
          "change_log": "",
          "version": "11111.11.11",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-29T06:16:47.356Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 19,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Add.To.Family",
      "maintainers": [
        {
          "username": "islam-salah",
          "_id": "592bbccf583778af0f00005a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "591e174c4f57b8e070000025",
      "name": "Konstru for Dynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/a1ae0fd2-bb25-42af-bac2-824493dcc6eagregPkg478.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-05-29T10:51:29.897Z",
          "full_dependency_versions": [ "1.2.2" ],
          "full_dependency_ids": [
            {
              "name": "Konstru for Dynamo",
              "_id": "591e174c4f57b8e070000025"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.2",
          "contains_binaries": true,
          "node_libraries": [ "KonstruDynamo.customization, Version=1.5.5.0, Culture=neutral, PublicKeyToken=null", "KonstruDynamo, Version=1.5.5.0, Culture=neutral, PublicKeyToken=null", "KonstruDynamoUI.customization, Version=1.5.5.0, Culture=neutral, PublicKeyToken=null", "KonstruDynamoUI, Version=1.5.5.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-05-29T10:51:29.897Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 20,
      "repository_url": "",
      "site_url": "https://konstru.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Konstru Interoperability and Version Control for BIM",
      "maintainers": [
        {
          "username": "h-mt",
          "_id": "55dad3ba662bf0e908000103"
        }
      ],
      "keywords": [ "konstru", "bim", "change", "interoperability", "version" ],
      "white_list": false
    },
    {
      "_id": "592d17ba583778af0f000069",
      "name": "DuyVB",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/4b78bd26-203a-4d23-84d9-30ff746d27d0gregPkg562.zip",
          "contents": "AutoJoin - No description provided, AutoJoin.List - No description provided, Door.Mark - No description provided, List.By.Element.Intersects - No description provided, SwitchJoin - No description provided",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-30T06:56:58.091Z",
          "full_dependency_versions": [ "0.0.1", "1.0.3" ],
          "full_dependency_ids": [
            {
              "name": "DuyVB",
              "_id": "592d17ba583778af0f000069"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "direct_dependency_versions": [ "1.0.3" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            }
          ],
          "change_log": "",
          "version": "0.0.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-30T06:56:58.091Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 8,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "DuyVB",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Join Element",
      "maintainers": [
        {
          "username": "vubaduy",
          "_id": "58411b92fdef23aa6e00005a"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "592d9c89583778af0f000072",
      "name": "fanoos",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/1402c6f5-e6ba-4351-b129-90d56581f933gregPkg460.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-30T16:23:37.013Z",
          "full_dependency_versions": [ "30.5.17" ],
          "full_dependency_ids": [
            {
              "name": "fanoos",
              "_id": "592d9c89583778af0f000072"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "30.5.17",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-30T16:23:37.013Z",
      "num_versions": 1,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 13,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "fanoos for ramadan",
      "maintainers": [
        {
          "username": "karim.3la2",
          "_id": "592d9bdb583778af0f000071"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5853196efdef23aa6e000132",
      "name": "MEPover",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/d52cab18-d98f-4b6f-b216-1841ee912856gregPkg785.zip",
          "contents": "All categories in document - Retrieves all categories from the current document and splits them up in Model, Annotation, Analytic and Internal Categories, CableTray.ByLines - Creates CableTray by Lines, CableTrayType, Level, Width and Height, Conduit.ByLines - Creates conduits by Line, ConduitType, Level and Diameter, Copy element to location - This node will copy level-hosted elements to the given locations and rehost to the nearest level.(does not work for curve based elements) , Duct or pipe systems all elements - Returns all the elements in the provided systems, Duct upstream components by category - This node will try to return the connected elements in the upstream network. It will stop once it encounters an element twice or encounters a different system classification or cannot find a connector with an opposing direction. The output can be filtered by input Categories, Duct upstream components - This node will try to return the connected elements in the upstream network. It will stop once it encounters an element twice or encounters a different system classification or cannot find a connector with an opposing direction., DuctRectangular.ByLines - Create ducts by Lines, DuctType, MechanicalFittingType, Level, Width and Height, DuctRound.ByLines - Create round Ducts by Lines, DuctType, SystemType, Level and Diameter, Elbow.ByMEPCurves - Takes in a list of MEPCurves (pipe, duct, cable tray, conduit)  and will attempt to create elbows where possible. A margin can be entered for max distance between connectors, ElectricalCircuit Get Panels and Elements - Returns the Panels and Elements belonging to the given electrical circuits, ElectricalFitting connector count - Returns the number of connectors on the cable tray or conduit fitting, Element.ConnectInto - Connects terminal elements into pipes or ducts. An optional margin value can be given to define the curve offset length from the terminal if applicable., Element.ConnectorSystemType - Returns the MEP System Type of the connectors of the element, Element.Domain - Returns the domain of connectors on the element i.e. (domainHvac, domainPiping etc.), Element.ElectricalCircuit - Returns the electrical circuit of the element, Element.System - Returns the mechanical or plumbing system of the element, Elements in connected network - Returns all elements that are physically connected to the input element, Elements in view by category - Returns all the elements in the selected view(s) by the selected categor(y)(ies), Family types of family - Returns every family type of the given Family, FlexCurve.ByElements - Creates a flex duct or flex pipe between 2 elements. Input IN[2] expects a FlexDuctType or FlexPipeType, FlexCurve.ByPoints - Create a flex pipe or duct by a list of points, system type, flex duct type or flex pipe type, level and diameter., GetParameterAsProjectUnits - Returns the parameter value in the same unit type as the project settings, GetParameterAsValueString - Returns the parameter values without conversion to the revit internal unit system. The suffix boolean toggles the project units on or off, Linked file info by filepath - Returns linked file info: filepath, link type and link status, Mechanical System Graphic Override set LineColor - Sets the linecolor of the mechanical system graphic override, Mechanical System Graphic Override set LinePattern - Sets the line pattern in the mechanical system type's graphic override, Mechanical System Graphic Override set LineWeight - This will change the lineweight override of the mechanical system type, MechanicalFitting info - Gets the fitting Part Type and number of connectors, MEP connector info - Returns location, connector info and connected elements, MEP Curve connected fittings - Returns the fittings, ducts accessories and terminals connected to the given duct, cable tray, pipe or conduit. Also return air terminals on Ducts, MEP Fitting connected MEPCurves - Returns the pipes, ducts, conduits or cable trays that are connected to the given fittings, MEPFitting.ByMEPCurves - Creates a UnionFitting or ElbowFitting by 2 MEPCurves (Ducts, Cable Trays, Pipes or Conduits). The output may not always be all the fittings created as Revit sometimes creates extra transition fittings outside of the node transactions., Pipe.ByLines - Creates a pipe by Line, PipeType, SystemType, Level and Diameter, Room or Space reset center location - This node will attempt to reset the location of the room or space to its default center location, RoomAtPoint - Returns the room at the location of the point. Returns null if no room is there, Rooms place automatically for all levels - This node will attempt to create rooms automatically for every level, SetParameterAsProjectUnits - Sets the parameters by project unit inputs, no need to convert to Revit internal units first., SetParameterSetValueString - Sets the parameters by strings. Useful for setting numerical values that are affected by Revit's internal  unit conversion. Does not work for parameters that are stored as elementId, Space number to duct network concatenate - This node will attempt to write the space numbers to connected duct objects in the network. Input AirTerminals need to be placed in spaces. ParameterName is the parameter to write the space number to. Numbers will be concatenated if they serve multiple spaces. Multiple Categories supported, Space number to duct network - This node will attempt to write the space number to connected duct objects in the network. Input AirTerminals need to be placed in spaces. ParameterName is the parameter to write the space number to. Numbering stops when it encounters an element from another space. Multiple Categories supported, SpaceAtPoint - Returns the space at the location of the point. Returns null if no space is there, SpaceCoordination create new spaces - Creates a new space for every room with a new room number from the linked document, SpaceCoordination delete redundant spaces - Will delete spaces for which no matching room number can be found in the given linked document, SpaceCoordination Manager - This node will align all spaces in the model to the rooms from a linked model. It will delete spaces that can't find a corresponding room number, move spaces to rooms with the same number and create new spaces for rooms with new room numbers., SpaceCoordination move to associated room - Will move the space to the room with the same space/room number (if a room with the same number exists), Spaces place automatically for all levels - This node will attempt to create spaces automatically for every level, Tag Get Location - Returns the location of the tags, Tag Get View - Return the view on which the tag is placed, Tap.By2MEPCurves - Create a new TakeoffFitting or Tap by takeoff pipe and through pipe, Tee.By2MEPCurves - Creates a tee by a main curve and a branch MEP curve (duct, pipe, conduit, cable tray). Only works with perpendicular brand curves, Tee.By3MEPCurves - Creates a new Tee fitting for the 3 input MEP curves (conduit, cable tray, duct or pipe). Only works with a perpendicular branch MEPCurve, View.GetCropBoxCurves - returns the curves of a view crop box, even irregular shapes. Returns an empty list if the crop view is not active for a given view, View.SetCategoryVisibility - Will set the category visibility for the view. Does not work if a view template dictates the category visibility, View.SetCropBoxCurves - Input views and lists of curves to set the view crop regions, View.ViewRange absolute - Returns the 4 view range values relative in absolute Z values, View.ViewRange relative - Returns the 4 view range values relative to the view's level",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-05-31T07:27:04.645Z",
          "full_dependency_versions": [ "2017.5.2" ],
          "full_dependency_ids": [
            {
              "name": "MEPover",
              "_id": "5853196efdef23aa6e000132"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.5.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-31T07:27:04.645Z",
      "num_versions": 37,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 1051,
      "repository_url": "",
      "site_url": "https://bimstallatie.sites.google.com/site/bimstallatie/dynamo/mepover-package",
      "banned": false,
      "deprecated": false,
      "group": "MEPover",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A package that focuses on adding some nodes for MEP, but also a few nodes useful for everyone",
      "maintainers": [
        {
          "username": "bimstallatie@gmail.com",
          "_id": "568544545c568ad00c000073"
        }
      ],
      "keywords": [ "mep" ],
      "white_list": false
    },
    {
      "_id": "591eb95c4f57b8e07000002c",
      "name": "WhiteHorse",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/5163eabb-e6ae-4e23-bfeb-28a9a38ce655gregPkg321.zip",
          "contents": "WH_BoolBox - 布尔值，配合WH_Form使用, WH_CheckListBox - 多选框，配合WH_Form使用, WH_DropDownBox - 用于生成下拉列表，配合WH_Form, WH_FileBox - 文件路径对话框，配合WH_Form使用, WH_FolderBox - 文件夹路径对话框，配合WH_Form使用, WH_Form - 主窗口，用于存放各种控件, WH_TextBox - 文本框，配合WH_Form使用, 新版UI.主窗口 - 将控件输入端连入, 关于 - WhiteHorse简介及版本更新说明",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-06-01T02:25:10.571Z",
          "full_dependency_versions": [ "0.1.5" ],
          "full_dependency_ids": [
            {
              "name": "WhiteHorse",
              "_id": "591eb95c4f57b8e07000002c"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.1.5",
          "contains_binaries": true,
          "node_libraries": [ "WhiteHorse, Version=1.0.6358.29817, Culture=neutral, PublicKeyToken=null", "WhiteHorseRebar, Version=1.0.6358.29940, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-06-01T02:25:10.571Z",
      "num_versions": 15,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 193,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "BIM",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "壹匹BIM（白马）工具集，Q群：580176296",
      "maintainers": [
        {
          "username": "sakeranan",
          "_id": "591eb82b4f57b8e07000002b"
        }
      ],
      "keywords": [ "ui", "wh", "whitehorse", "horse", "dynamobim", "yipi" ],
      "white_list": false
    },
    {
      "_id": "5507ae3e0c7eac9b57000053",
      "name": "BVN",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/19a670bd-daea-4749-9a38-bac0a4dd3a60gregPkg352.zip",
          "contents": "AdaptiveComponent.FromExcel - Places an adaptive component family from a excel spreadsheet with comma separated points. Requires the adaptive component to be loaded into the project first., Area.ImportInstance - Places 3D import instance masses based on areas, Door.RenumberByRoom - Renumbers a door's mark value based on the room it is located in. If there is no 'To' room, it will default to the 'From' room, Family.FromExcel - Places a family by point and level from an excel file. Families will only be placed on a level if the Z value matches an existing Revit level , FilledRegion.ByIsovist - No description provided, FilledRegion.Perimeter - Returns the perimeter of a filled region. Note <Invisible lines> line style is automatically be filtered out., Filter.GetUnused - Returns all unused filters in the project so that they can be used. Use in conjunction with 'Tool.Eraser' from the SteamNodes package or 'Delete.Elements' from Grimshaw package., GoldenMean - Calculates the goldern mean of a rectangle (width and length) given an area input., Grid.FromExcel - Reads an excel file to generate grids, Group.ByTypeAndLocation - Places a model or detail group based on group time and a location (point), IsInteger - Checks a list for input types and returns boolean value based on an integer, IsNumber - Checks a list for input types and returns boolean value based on a number (float), IsString - Checks a list for input types and returns boolean value based on a string, Level.Plane - Creates a plane from level(s), Levels.FromExcel - Generates levels from an excel spreadsheet, List.SortSublists - Sorts sublists, ModelGroup.TypeCollector - Returns all the types (not instances) from all model groups in the project, Point.FromExcel - Creates a Dynamo XYZ point from an comma separated string, usually imported from Excel to minimising having 9 columns to import, Room.AdjustUpperLimit - Extracts all rooms and adjusts their upper limit parameter so that its limit is the level above with a zero limit offset., Room.CentreLocation - Moves room to the centroid of the room. If the centroid is outside of the room boundary, the room will remain in its current position. Based on the custom node by Modelical., Room.CreateUnplaced - Creates a list of unplaced rooms., Room.ExportToRhino - Collects all rooms in the project and exports polycurves to a Rhino file. Ensure Rhino file is closed in order to write to it. WARNING: WHEN EXPORTING, RHYNAMO WILL OVER-WRITE THE RHINO FILE. ENSURE YOU WRITE TO A BLANK DOCUMENT., Room.ImportInstance - Searches for rooms by a name (string) and places import instances volumes. The import instance are named the same as the room number it originated from., Room.RenameByArea - Renames apartment rooms (1Bed, 2Bed, etc) based on room area thresholds., Room.RenameByModelGroup - Renames rooms based on the model group placed inside it. Useful for residential projects where model groups are used and the room name needs to be in sync with the model group. Also updates the Occupant parameter in the room with the model group's name., Room.RenumberByModelCurve - Renumber rooms based on a (spline) model line drawn through rooms. Will only renumber rooms that intersect with the model line so that batch processing (e.g. level by level) can be done with a prefix (\"1.\"). Precision should be between 1 and 3. If a room has a self-intersecting boundary it will be excluded from the process. In this scenario, amend the room boundaries and re-run the script. Will only run on rooms in the current view's phase., Room.SetBalconyCompliance - Collects and groups apartments and balconies to determine if the balcony meets the minimum size requirement based on the dwelling type (1 bed, 2 Bed, etc) and writes to a shared parameter., Room.SetSepp65Parameter - Reads an Excel file containing a list of complying SEPP65 apartment room numbers and then sets the Revit 'SEPP65_2 Hrs min' shared parameter to True, with the rest False. The script will remove the first line from the Excel spreadsheet, i.e. the heading., RoomTag.MoveToRoomLocation - Moves room tags to the room location point. Use the Room.CentreLocation node first before using this node. Based on the script by Modelical., Stadium.Cvalue - Calculates the riser heigh for a stadium sighline (C-Value) using the formula (((R+C)*(D+T))/D)-R = N., Stadium.ModelCurve - Generates a model line profile (within a Project) for a stadium setaing bowl based on 'N' inputs. , Stadium.ProfileCurve - Generates a profile curve (within a Profile family) for a stadium setaing bowl based on 'N' inputs. , SunSettings.GetTimesAndSunDirections - Get times and sun directions from the input SunSettings, SunSettings.TimeZone - Extracts the current time zone in hours relative to UTC, View.FromSun - Creates axonometric views from sun vectors based on an analysis period., View.FromWorksets - Creates an axonometric view with only a single workset visible, View.Phase - Returns the current view's phase , View.SetUnderlayToNone - Sets a view's underlay parameter to none, View.SwitchTitleblock - Switches the titleblock family type located on a sheet. Sheet number series is a string which is the prefix of the sheets names to be modified, e.g. \"B\"., Workset.CreateAndRenameDefault - Creates new worksets from a list as well as renaming the default worksets (Shared levels and grids, and Workset 1), Elements.AssignToWorkset - Automatically assigns various model elements to worksets defined by BVN standards. ",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-06-01T06:30:01.057Z",
          "full_dependency_versions": [ "1.2.8", "1.0.3", "110.2.0", "2016.13.3", "2017.2.12", "2016.11.2", "0.1.5", "1.2.3" ],
          "full_dependency_ids": [
            {
              "name": "BVN",
              "_id": "5507ae3e0c7eac9b57000053"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "Rhynamo",
              "_id": "546d1cf8b77c84600c000023"
            },
            {
              "name": "Ladybug",
              "_id": "56aa7950c3e9ee4a08000059"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            }
          ],
          "direct_dependency_versions": [ "2017.2.12", "1.0.3", "110.2.0", "0.1.5", "1.2.3", "2017.2.12", "2016.11.2", "2016.13.3" ],
          "direct_dependency_ids": [
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "Ladybug",
              "_id": "56aa7950c3e9ee4a08000059"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "Rhynamo",
              "_id": "546d1cf8b77c84600c000023"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "change_log": "",
          "version": "1.2.8",
          "contains_binaries": true,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-06-01T06:30:01.057Z",
      "num_versions": 52,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 2552,
      "repository_url": "",
      "site_url": "http://www.bvn.com.au/",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "**Updated for Dynamo 1.3.0 and Revit 2018**. A collection of over 30+ Dynamo utility nodes developed by BVN Architecture with an emphasis on the interoperability between Revit, Rhino and Excel.",
      "maintainers": [
        {
          "username": "winston1980",
          "_id": "5507ae3e0c7eac9b57000052"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "591b1d834f57b8e070000005",
      "name": "Zhukoven.com",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/1907c0f3-2068-4736-8090-c90c7e7eeaa5gregPkg401.zip",
          "contents": "Element.GetRotation - This node calculates rotation angle between selected element's vector and Y axis. Vector Z is used as rotation axis. Use resulting degree as an input to the FamilyInstance.SetRotation node., FamilyInstance.VisualizeOrientation - This little node shows selected elements' orientation with Dynamo lines. The line starts from element location point, and indicates its facing orientation. Resulting lines could then be used to place elements or set rotation angles.\r\n*NOTE* This node may not work with some system families., Insert.LinkRevit - Link Revit model into your current document, Navisworks.CreateSearchSet - Based on original code by Luke Johnson, this node gives the freedom in Navisworks XML file creation. You're able to specify the Navisworks Search Set name & group, and choose which Navisworks parameter you're going to use. Don't use this node in Auto mode. Be careful to backup your XML files before each run, if you're not going to overwrite them., Railing.CountBalusters - *NOTE* Processes only one railing instance at a time. Don't feed it with multiple elements!\r\nBased on the \"Railing.BalusterCount\" node from the Rhythm package, this custom node removes false positives that resulted in incorrect number of balusters., RevitLinks.Reload - Reload all linked Revit links loaded into the current document",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-06-01T16:06:31.919Z",
          "full_dependency_versions": [ "2017.6.2" ],
          "full_dependency_ids": [
            {
              "name": "Zhukoven.com",
              "_id": "591b1d834f57b8e070000005"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.6.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-06-01T16:06:31.919Z",
      "num_versions": 5,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 65,
      "repository_url": "",
      "site_url": "https://zhukoven.com",
      "banned": false,
      "deprecated": false,
      "group": "Zhukoven.com",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A small set of useful Dynamo tools for Dynamo 1.3.0+ & Revit 2016+ that will help you boost your productivity: get element rotation, visualize instance orientation, insert and reload Revit links, correctly count railing balusters, create Navisworks search set. Please note: although these nodes were tested live in the real project environment, there may be different results depending on your project. Make sure to save your file(s) before running anyone's nodes. And if you've found any issues in my package, please contact me @ https://zhukoven.com\r\n",
      "maintainers": [
        {
          "username": "@zhukoven",
          "_id": "586224c1fdef23aa6e000192"
        }
      ],
      "keywords": [ "element", "get", "rotation", "insert", "link", "reload", "revit", "file", "count", "balusters", "navisworks", "search" ],
      "white_list": false
    },
    {
      "_id": "54b13f7adcee4dfd26000039",
      "name": "DanEDU Dynamo",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/0451605b-ed3e-4511-b8a9-7150a9d0f324gregPkg765.zip",
          "contents": "DanEDU.Directory.ContentsAll - Get the files in a directory or a directory and its subdirectories (use bool value for deepsearch). Does not include hidden or readonly files (and thereby system files). Use string for extension type or * for all filetypes!, DanEDU.Element.FaceFlipped - Determines if element is flipped. Input takes familyinstance, output return two lists., DanEDU.Element.Flipped - Determines if element is flipped (hand and/or facing). Input takes familyinstance, output return four lists., DanEDU.Element.HandFlipped - Determines if element is flipped. Input takes familyinstance, output return two lists (flipped or not)., DanEDU.Element.HasMaterialQuantities - Retrieve elements that has material quantities, return elements grouped by categories and the category list, DanEDU.FamilyInstance.ByFamilyName - Obtain a collection of FamilyInstances loaded into the Revit Document and use them in the Dynamo graph, DanEDU.File.LoadFamily - Load family by path, existing families will be overwritten, and families is upgraded if needed., DanEDU.File.Rename - Rename files in a directory, takes two list of identical length. Existing file names must be exact names. Use string for extension type or * for all filetypes!, DanEDU.List.Clean - Remove empty list, null and blank values\r\n- former named as RemoveNull, DanEDU.List.FilterByKey - Filter two list items based on common key values, DanEDU.List.Replace - Replace empty list, null and blank values\r\n- former named as ReplaceNull, DanEDU.List.SortByReferenceLevel - Sort items by reference level, DanEDU.List.SummationByKey - Summation of values and group items into sub-lists based on their like key values, DanEDU.MaterialDensity - Get material density, return physical and thermal values in SI unit (kg/m3), DanEDU.Sigma.Component.ByQuantity - Creates list containing a Sigma Component by Quantity, DanEDU.Sigma.Component - Creates list containing a Sigma Component, DanEDU.Sigma.WriteData - Writes data from Revit to Sigma (.sig) fileformat.",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-06-02T15:23:17.166Z",
          "full_dependency_versions": [ "1.3.0" ],
          "full_dependency_ids": [
            {
              "name": "DanEDU Dynamo",
              "_id": "54b13f7adcee4dfd26000039"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.3.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-06-02T15:23:17.166Z",
      "num_versions": 21,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -4,
      "downloads": 744,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "DanEDU Dynamo",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A set of various nodes to implement a Dynamo workflow, primarily used for educational purpose.",
      "maintainers": [
        {
          "username": "erfajo",
          "_id": "54313d2fcc26bfdc5a000041"
        }
      ],
      "keywords": [ "danedu", "element", "list", "logic", "pattern", "family", "type", "instance" ],
      "white_list": false
    },
    {
      "_id": "54477068cc26bfdc5a0000de",
      "name": "Clockwork for Dynamo 0.7.x",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-dev/0e7d6d2b-37f5-42d1-bb4b-380a71e32423gregPkg378.zip",
          "contents": "+1 - Increments a value by 1, -1 - Decrements a value by 1, All Elements of Family Type (Universal) - Unlike the built-in  node, this node retrieves all placed instances of a given loadable *or* system family type, All Families Of Category - Gets all famiies of a given category in the model  (does *not *work for system families), All Family Types Of Category - Gets all family types/symbols of a given category in the model  (does *not *work for system families), All Intersecting Elements Of Category - Finds all elements of a specified category that intersect with a list of vectors, All Placed Family Types of Category - Retrieves all family types of a given category that have *placed* instances, All View-Dependent Family Instances Of Category - Gets all view-dependent family instances in a given view for a given list of categories - useful for finding annotation elements, Angle.ByAngleSum - Computes the missing interior angle of a *planar* polygon based on a given list of all other interior angles. , Angle.ByLawOfCosines - Computes an angle of a triangle using the law of cosines. A is the opposite side of the triangle while B and C are the sides forming the angle., Angle.ByLawOfSines - Determines the angle of a triangle based on the law of sines. (Alpha is the angle opposite side A and beta is the angle opposite side B...), Angle.ExteriorAngle - Computes the exterior angle of a given angle., AngleBisector.ByPoints - Retrieves the vector of an angle bisector at point B based on three points (A, B, C) that define the angle. , Application.Version - Retrieves the name, version and build of the current Revit application., AreaSeparator.FromCurve - Creates area separation lines from geometry curves. , BoundingBox.ByElement - Gets the bounding box of a Revit element, BoundingBox.ByNestedListOfElements - Retrieves a bounding box for each sublist of elements, BoundingBox.PerimeterCurvesByNormal - Returns the perimeter curve of a bounding box on a plane determined by a given normal and the centroid of the bounding box, BoundingBox.PerimeterCurvesOnPlane - Returns the perimeter curve of a bounding box on a given plane (assuming that the bounding box and plane intersect), Buckyball.ByOriginAndRadius - Returns all the data necessary for modeling a truncated icosahedron (vertices and struts) as well as the surface area and volume. , Buckyball.Coordinates - Returns the coordinates of all the vertices of an (unscaled) truncated icosahedron., Buckyball.Struts - Parses the vertices of an (unscaled) truncated icosahedron and returns a pair of points for each strut., Buckyball.Surfaces - Parses the vertices and struts of an (unscaled) truncated icosahedron and returns a list of vrtices for each surface., Cathetus.ByPythagoras - Computes the length of one of the catheti / legs of a right triangle using the Pythagorean Theorem. B is the other leg / cathetus of the triangle while C is the hypotenuse., Centimeters.ToFeet - Converts centimeters into feet, Character.FromNumber - Converts a number into a character (where 1 = A, 2 = B, ... , 27 = AA, 28 = AB etc.)., Clipboard.GetFrom - Gets the content of the clipboard. ATTENTION: Will only work with strings and on top of Revit (not in sandbox mode)., Clipboard.SendTo - Copies a string to the clipboard. ATTENTION: Will only work with strings and on top of Revit (not in sandbox mode)., Color.Aqua - Returns the colour aqua., Color.Black - Returns the colour black., Color.Blue - Returns the colour blue., Color.ByWebColor - Creates a color from a given web color (a hex triplet like #FF9900), Color.Fuchsia - Returns the colour fuchsia a.k.a. magenta., Color.Green - Returns the colour green., Color.Grey - Returns the colour grey., Color.GreyscaleByNormalizedValue - Creates a greyscale color based on a normalized value (0 = black, 1 = white), Color.Lime - Returns the colour lime., Color.Maroon - Returns the colour maroon., Color.Navy - Returns the colour navy., Color.Olive - Returns the colour olive., Color.Purple - Returns the colour purple., Color.Red - Returns the colour red., Color.Silver - Returns the colour silver., Color.Teal - Returns the colour teal., Color.White - Returns the colour white., Color.Yellow - Returns the colour yellow., CubicFeet.ToCubicMeters - Converts cubic feet into cubic meters, CubicMeters.ToCubicFeet - Converts cubic meters into cubic feet, CurtainPanel.HostPanel - Retrieves the host panel of a given curtain panel. This is typcially needed when wanting to access wall elements used as curtain panels., CurtainSystem.ByFace - Creates a curtain system on top of a face. The face typically needs to be the face of a mass surface in Revit., Curve.ClosedLoopThroughPoints - Creates a *closed* loop of curves based on a given list of points, CustomNode.Info - Extracts information from a custom node., DesignOption.DesignOptionSet - Returns the design option set of a given design option, DetailComponent.ByCurve - Places a line-based detail component in a given view, DetailCurve.FromCurve - Creates a detail line based on a given curve, Dimension.SetType - Changes the dimension type of a given dimension instance to the specified type, DimensionType.Style - Gets the style of a given Revit dimension type, Directory.ContentsAll - Unlike the built-in node Directory.Contents, this node browses a directory recursively and returns all relevant files contained in subfolders as well., DisplayUnit.ToInternalUnit - Converts a value from a given display unit to Revit's internal unit, DividedSurface.AddIntersect - Adds an intersect to a divided surface, DividedSurface.EvaluateGridNodes - Returns UV and XYZ coordinates as well as surface normals for all grid nodes of a given divided surface. Also returns the underlying face., DividedSurface.HorizontalIntersectsByEndpoints - Creates a number of equally spaced horizontal intersects for a divided surface based on the path between between two points. , DividedSurface.HorizontalIntersectsByEndpointsAndFunction - Creates a number of horizontal intersects (levels)for a divided surface based on the path between two points. The spacing of the intersects can be controlled by a function., DividedSurface.VerticalIntersectsByEndpoints - Creates a number of equally spaced vertical intersects for a divided surface based on the path between between two points. You may need to switch start point and end point., DividedSurface.VerticalIntersectsByEndpointsAndFunction - Creates a number of vertical intersects (reference planes) for a divided surface based on the path between between two points. The spacing can be controlled by a function. You may need to switch start point and end point., Document.ActiveViewFromCurrentDocument - Gets the active view of the current document, Document.ContainsElementsOfCategory - Checks if family instances of specified categories are present in the model., Document.DesignOptions - Returns all design options in the model, grouped by design option set, Document.DimensionTypes - Retrieves all dimension types from the document, Document.IsWorkshared - Returns true if the current project is workshared, Document.LinksAndImports - Gets all linked and imported files in the document. NOTE: Does *not* retrieve linked Revit files., Document.ListBuiltInCategories - List all the available BuiltInCategories, Document.ListBuiltInCategoriesByName - Looks up all the built-in categories based on a given name (or part of a name) of the category. Search is case-insensitive., Document.ListBuiltInParameters - List all the available BuiltInParameters, Document.ListBuiltInParametersByName - Looks up all the built-in parameters based on a given name (or part of a name) of the parameters. Search is case-insensitive., Document.Path - Gets the path and directory of the current Revit document, Document.Phases - Retrieves all phases in the active document in *chronological* order, Document.ProjectInfo - Gets the project information., Document.ProjectPosition - Gets the project's position data relative to the origin. Use the built-in nodes Location.Latitude & Location.Longitude to retrieve latitude and longitude., Document.SaveAs - Saves the active Revit document under the given name., Document.StartingView - Retrieves the starting view of a Project file. Returns null if no starting view is set., Document.Views - Gets all views in the document - except for 3D view templates (as long as this bug is not fixed: https://github.com/DynamoDS/Dynamo/issues/2970), DoorOrWindow.ExitsToOneRoomOnly - Evaluates if a door or window has only set one of the ToRoom / FromRoom properties. This may help to determine whether a door/window is external., DoorOrWindow.FromRoomAndToRoom - Gets the rooms that are connected by a given door or a window, Element.AllInstances - Retrieves all instances of a given element, Element.AllInstancesAtLevel - Retrieves all instances of an element on a given level, Element.AllViewDependentInstances - Retrieves all instances of a view-dependent element in a given view, Element.Area - Returns the area property of a given element (if that element has such a property), Element.ByID - Gets the Revit element(s) for a list of IDs (or a single ID), Element.ContainsTransparentMaterials - Checks if a given element contains transparent materials., Element.ElevationOfHostLevel - Returns the elevation of the level a given element is associated with, Element.ExternalFileReferencePath - Returns the full path of an element's external file reference as as string, Element.FromDynamoSurface - Returns the underlying Revit element of a given face, Element.Group - Retrieves the group an element belongs to (if any), Element.Host - Gets an element's host, Element.ID - Gets the ID(s) for a list of Revit elements (or a single element) - unlike the built-in Element.Id node, this node returns an actual Revit Element ID and *not* a number, Element.Inserts - Gets all the objects inserted into a given element., Element.IsOfCategory - Checks whether an element is of a specified category, Element.IsRelatedToMass - Returns true if an object (wall, roof, floor or curtain system) has been modelled by face and the underlying mass still exists in the project., Element.Level - Gets an element's level, Element.Location - Returns the location of an element as an XYZ (or if it's line-based the start and end point of the line), along with some booleans to help filtering the results. Use this for some element types (e.g. walls or lines) that do not work with the built-in Get Family Instance Location node. , Element.Materials - Retrieves all materials froma given element, Element.Name (Universal) - Gets an element's name (Dynamo's built-in Name nodes don't work for all element types, e.g. worksets...), Element.OverrideTransparencyInView - Overrides the transparency of an element in a given view, Element.OwnerView - Gets the owner view of a given Revit element (if possible), Element.Panels - Retrieves the panels nested in a curtain wall, curtain system or glazed roof., Element.ParameterExists - Checks if an element contains a parameter of a given name, Element.ParameterIsReadOnly - Checks if a parameter of a given element is read-only, Element.PermanentlyIsolateInView - (Permanently) isolates elements in the given view, Element.Phases - Gets the created and demolished phases of an element, Element.ResetOverridesInView - Resets all overrides for an element in a given view, Element.SetMaterialParameterByCategory - Sets a material parameter of a given element to <By Category>, Element.SetName - Gets the name of a given Revit element, Element.SetWorkset - Sets the workset of a given element, Element.TemporarilyIsolateInView - (Temporarily) isolates elements in the given view, Element.Type (LinkedFile) - Gets the family type of a given element (if applicable) that is located in a linked project file. , Element.Type - Gets the family type of a given element (if applicable). , Element.Workset - Retrieves the workset of a given element, Elements.FilterByName - Retrieves those elements from a collection whose names match the search string, Elements.FilterByParameterValueAndCondition - No description provided, Elements.GroupByHost - Groups a list of Revit elements by their respective hosts (if they have any), ElementType.Duplicate - Duplicates an element type, Family.IsInPlace - Determines if a family is an in-place family, FamilyInstance.AddCoping - Adds a coping (cut) to a steel beam, FamilyInstance.ByCurve - Places a line-based family instance on a given level, FamilyInstance.ByPointInView - Places a family instance at a given point in a given view (e.g. a detail component)., FamilyInstance.CopingElements - Returns all elements used as coping cutters for a given element., FamilyInstance.FlipFacingOrientation - Flips the facing orientation of a given family instance, FamilyInstance.FlipHandOrientation - Flips the hand orientation of a given family instance, FamilyInstance.RemoveCoping - Removes a coping (cut) from a steel beam, FamilyInstance.SetType - Changes the family type of a given family instance to the specified type, FamilyInstance.SubComponents - Retrieves all subcomponents of a given family instance, FamilyInstance.SuperComponent - Retrieves the supercomponent of a given family instance, FamilyType.CompoundStructureLayers - Retrieves the compound layers of any layered family type (wall types, roof types, floor types etc.), FamilyType.SetCompoundLayerMaterial - Sets the material of a specified compound layer of a given family type (only applies to family types that have a compound structure, e.g. walls, floors etc.)., Feet.ToCentimeters - Converts feet into centimeters, Feet.ToMeters - Converts feet into meters, Feet.ToMillimeters - Converts feet into millimeters, File.WriteToCSV - Writes data to a CSV file with a custom delimiter. Data inputs needs to contain strings only!, FootingType.BreaksAtInserts - Determines whether a list of wall footing types break at inserts in their attached walls, Geometry.ClosestTo - Finds the closest entity in a list of geometric entities from another given entity, Geometry.FurthestFrom - Finds the furthest entity in a list of geometric entities from another given entity, Group.Members - Retrieves the members of a group, HostedObject.FacingOrientation - Gets the facing orientation of a hosted object (e.g. a window or a door), HostedObject.HandOrientation - Gets the hand orientation of a hosted object (e.g. a window or a door), Hypotenuse.ByPythagoras - Computes the length of the hypotenuse of a right triangle using the Pythagorean Theorem. A and B are the legs / catheti of the triangle., InternalUnit.ToDisplayUnit - Converts a value from Revit's internal unit to a given display unit, Level.Plane - Retrieves the plane of a given level, List.AlphabeticalSequence - Creates a list of the first N letters of the alphabet  (where 1 = A, 2 = B, ... , 27 = AA, 28 = AB etc.)., List.AnyFalse - Returns true if any item in a list of booleans is false., List.AnyTrue - Returns true if any item in a list of booleans is true., List.ChopByLengths - Turns a list into a list of lists with sublists of varying lengths., List.CountBooleanSequences - Retrieves the lengths of uninterrupted sequences of booleans (true or false) in a given list., List.CountOccurences - Counts the number of occurences of each unique element in a given list, List.EqualSublistLengths - Trims all given lists to the length of the shortest list, List.FibonacciFromList - Creates a Fibonacci row from a starting list (last two values) of a given length (starting values do *not* count toward length)., List.FibonacciFromValues - Creates a Fibonacci row from two starting values of a given length (starting values do *not* count toward length)., List.FilterBySublistLength - Filters out all sublists that do not have the specified length, List.FromCSV - Converts the content of a given CSV file to a list, List.FromString - Chops up a string into a list of characters, List.GroupListOfListsByKey - Groups a list of lists by one of its keys, List.IsNotEmpty - Just the inversion of the built-in Is Empty List node., List.MatchWithKeyValues - Matches a list with a given set of keys and returns the values corresponding to the keys, List.NormalizedSequence - Creates a sequence of N values between 0 and 1, List.NormalizedSequenceByFunction - Creates a sequence of N values between 0 and 1 driven by a function, List.RandomElements - Creates a list of random elements based on a given list of elements, List.RepeatItemsByLengths - Repeats a list of items into sublists of given lengths, List.ReplaceEmptyLists - Replaces all empty lists within a given list with a substitute, List.ReplaceItemAtIndex - Replaces the item at a given index (or list of indices) of a list by another item, List.ReplaceNull - Replaces all null values within a given list with a substitute, List.SortListOfLists - Sorts a list of lists by one of its sublists, List.SublistLengths - Gets the lengths of all sublists in a given list of lists., List.SublistsContain - Looks for an item in each sublist of a given list and returns true/false for each sublist., List.WithLeadingZeroes - Adds leading zeros to a sequence of numbers, MassFloor.Mass - Gets the mass a given mass floor belongs to, Material.Duplicate - Duplicates a material, Material.Properties - Retrieves a number of properties froma given material, Math.AlmostZero - Returns a feasable computational tolerance to zero (1.0e-9 or a billionth of 1) for use in calculations. More background info: https://github.com/ikeough/Dynamo/issues/879, Math.DecimalToBinary - Converts a number to a string of its binary value, Math.DecimalToHex - Converts a number to a string of its hexadecimal value, Math.InvertNormalized - Inverts a value between 0 and 1 to its opposite (1-x), Math.IsEvenNumber - Checks if a number is even., Math.IsMultipleOf - Checks if A is a multiple of B., Math.IsOddNumber - Checks if a number is odd., Math.Normalize - Converts a value into a normalized value according to a value range, Math.NormalizeRange - Normalizes a range of numbers, Math.RandomIntegerList - Creates a list of random integers between 0 and a given maximum value, Math.RoundDownToPrecision - Rounds a number *down* to a specified precision, Math.RoundToPrecision - Rounds a number to a specified precision, Math.RoundUpToPrecision - Rounds a number *up* to a specified precision, Math.ScaleNormalized - Scales a normalized value according to a given minimum and maximum, Math.Similar - Computes the difference between two values and whether that difference is within a given tolerance factor, Mesh.FaceVertices - Gets the vertices of each face of a given mesh, Mesh.IntersectionWithPlane - Calculates the intersection of a mesh and a plane, Meters.ToFeet - Converts meters into feet, Millimeters.ToFeet - Converts millimeters into feet, Normal.CorrectOrientation - Inverts normal A if its inversion is closer to normal B, Object.Members - Gets a list of all members (properties and methods) of a selected element, Object.MembersByName - Looks up all the members of a given element based on a given name (or part of a name) of the property or method. Search is case-insensitive., OppositeSide.ByLawOfCosines - Computes the length of the missing side of a triangle using the law of cosines. Gamma is the angle between sides A and B., Paneling.BuildTriangularSublists - Creates sublists of three items each from a list based on given indices, shift and reverse settings and offset., Paneling.DropLastRowAndColumn - Drops the last row and column from a UV field, Paneling.GridFromFace - Returns UV coordinates, XYZ coordinates and normals for a face with UV subdivision, Paneling.Hexagonal - Creates groups of points from a list of UVs or XYZs for the placement of hexagonal panels. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.InvertAndMirrorNormalizedValues - Inverts and mirrors (horizontally & vertically) a nested list of normalized values., Paneling.MakeTriangles - Reduces each sublist to a list of three items specified by the indices in the pattern., Paneling.Quadrilateral - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.Quadrilateral2byX - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels that consist of 2 by X placement points. The panel's placement points need to be consecutively numbered per row of points (i.e. do not use the half-step or third-step pattern family templates and create a family from an adaptive component template instead). The placement pattern can be reversed (boolean) and shifted (integer) and the entire grid can be rotated by 90 degrees (boolean)., Paneling.QuadrilateralAlternatingRows - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels in alternating rows. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.QuadrilateralCheckerboard - Creates groups of points from a list of UVs or XYZs for the placement of quadrilateral panels in a checkerboard pattern. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.ShiftPlacementAndReverse - Shifts (integer) and reverses (bool) a given list, Paneling.TriangularFlatDiagonal - Creates groups of points from a list of UVs or XYZs for the placement of triangular panels. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.TriangularFlatMirrored - Creates groups of points from a list of UVs or XYZs for the placement of triangular (diagrid) panels. The placement pattern can be reversed (boolean) and shifted (integer)., Paneling.TriangularSubpattern - Subcomponent of the Triangular Pattern From Grid node., Part.SourceElement - Retrieves the element a given part was made from, PerspectiveView.OrientToEyeAndTargetPosition - Sets the orientation of a given perspective view based on a given eye and target position, PlaceholderSheet.ByNumberAndName - Creates placeholder sheets, Plane.ByBestFitFromFace - Creates a plane from face, Plane.ByFirst3Points - Returns a plane, its origin and its normal based on the first three XYZs in a given list, PlanView.Underlay - Returns the view template assigned to a given view (if one is assigned), Point.Average - Determines the average of a list of points, Point.CentralProjectionOnFace - Projects a list of points onto a given face, Point.CentralProjectionOnPlane - Projects a list of points onto a given plane, Point.IsOutOfPlane - Checks a list for XYZs that are not located on a given plane, Point.RoundDownToPrecision - Rounds a point coordinate *down* to a specified precision, Point.RoundToPrecision - Rounds a point coordinate to a specified precision, Point.RoundUpToPrecision - Rounds a point coordinate *up* to a specified precision, PointSequence.AccumulatedDistance - Retrieves the accumulated distances of a sequence of points, PointSequence.ContainsOutOfPlanePoints - Checks a list for XYZs that are not located on a given plane, PointSequence.GreatestDistanceToPoint - Retrieves the furthest point in a sequence of points, PointSequences.ShortestPath - Retrieves the shortest path from a number of point sequences, ReturnListOrSingleValue - If the item in input #1 is not a list, only the first item of the list in input #2 will be returned., RevisionCloud.FromCurves - Creates revision clouds from nested lists of geometry curves. , RevisionCloud.FromNestedListOfElements - Create a revision cloud for each nested list of Revit elements, RevitBoundingBox.FromDynamoBoundingBox - Turns a Dynamo bounding box into a Revit bounding box., RevitColor.FromDynamoColor - Creates a Revit color from a Dynamo color, RevitColor.ToDynamoColor - Converts Revit colors into Dynamo colors, RevitFace.FromDynamoSurface - Returns the underlying Revit face of a given surface, RevitFaceReference.FromDynamoSurface - Returns the underlying Revit face reference of a given surface, RevitUV.ToDynamoUV - Converts Revit UV coordinates to Dynamo UV coordinates, Roof.CreationMethod - Retrieves the creation method of a given roof, Roof.CreationMethodIsByExtrusion - Checks whether the creation method of a given roof is 'By Extrusion', Roof.CreationMethodIsByFace - Checks whether the creation method of a given roof is 'By Face', Roof.CreationMethodIsByFootprint - Checks whether the creation method of a given roof is 'By Footprint', Roof.CreationMethodIsInPlace - Checks whether the creation method of a given roof is 'In-Place', Roof.Kind - Retrieves the roof kind (Basic, Glazed, Other). PLEASE NOTE: Roofs that were created by face will be identified as 'Other', Roof.KindIsBasic - Checks whether a given roof is a Basic Roof. PLEASE NOTE: Does not work correctly for roofs that were created by face, Roof.KindIsGlazed - Checks whether a given roof is a Glazed Roof. PLEASE NOTE: Does not work correctly for roofs that were created by face, RoofOrFloor.SlabShapeByPoints - Transform a slab shape based on a list of XYZs. PLEASE NOTE: Will reset any previous edits on the slab shape., RoofOrFloor.SlabShapeHasBeenModified - Checks if the shape of a roof or floor slab has been modified with the shape editing tools, RoofOrFloorType.CompoundStructureHasVariableLayer - Checks if the compound structure of a given floor or roof instance contains a variable layer., Room.Boundaries - Gets a list of all boundary elements of a given room or area, Room.DoorsOrWindows - Retrieves all doors or windows that are associated with a room (hosted in walls and roofs)., Room.InsertsOfBoundaries - Retrieves the inserts of the bounding elements of a given room., Room.InsertsOfBoundariesByCategory - Retrieves the inserts of the bounding elements of a given room - filtered by a given category., Room.IsPointInside - Evaluates if a ponti is located inside a given room., Room.IsUnbounded - Checks whether a room is unbounded., Room.UnplacedByNameAndNumber - Creates an unplaced room, RoomSeparator.FromCurve - Creates room separation lines from geometry curves. , RoomSequence.ToDoorSequence - Retrieves a sequence of doors connecting a given sequence of rooms (if possible), SelectionSet.ByElements - Creates a selection set of the given elements. Note that if a selection set of the given name already exists in the model, its contents will be replaced. Also, if the selection set is already applied as a view filter, the view filter will have to be manually updated in the visibility / graphic overrides., SelectionSet.Elements - Retrieves all elements stored in a selection set, Sheet.Scale - Returns the scale of a given sheet, Sheet.Schedules - Returns all schedules placed on a specified sheet , Side.ByLawOfSines - Determines the length of a side based on the law of sines. (Alpha is the angle opposite side A and beta is the angle opposite side B...), SolarAnalysisType.Average - Returns the key \"Average\" for use with the SurfaceAnalysisData.GetResultByKey node from package Solar Analysis for Dynamo, SolarAnalysisType.Cumulative - Returns the key \"Cumulative\" for use with the SurfaceAnalysisData.GetResultByKey node from package Solar Analysis for Dynamo, SolarAnalysisType.Peak - Returns the key \"Peak\" for use with the SurfaceAnalysisData.GetResultByKey node from package Solar Analysis for Dynamo, SpaceSeparator.FromCurve - Creates space separation lines from geometry curves. , SquareFeet.ToSquareMeters - Converts square feet into square meters, SquareMeters.ToSquareFeet - Converts square meters into square feet, String.AlphanumericToMorse - Converts an alphanumeric string to Morse code, String.BinaryToDecimal - Converts a string of a binary number into a decimal value, String.FindRegularExpression - Returns all occurences of a regular expression within a string (or list of strings). The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, String.HexToDecimal - Converts a string of a hexadecimal value to a number, String.MatchRegularExpression - Determines if a regular expression matches a string (or a list of strings) and returns a boolean value (or a list, depending on the input). The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, String.MorseToAlphanumeric - Converts a string in Morse code to alphanumeric, String.ReplaceRegularExpression - Replaces all occurences of a regular expression within a given string (or list of strings) with another string. The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, String.SplitByRegularExpression - Splits a given string by a regular expression. The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html, StructuralFoundation.Kind - Retrieves the kind of a given structural foundation (isolated, wall, slab)., StructuralFoundation.KindIsIsolated - Checks whether a given structural foundation is an isolated foundation, StructuralFoundation.KindIsSlab - Checks whether a given structural foundation is a slab, StructuralFoundation.KindIsWallFooting - Checks whether a given structural foundation is a wall footing, Subcategory.ByName - Creates a new subcategory for a given element category (unless a subcategory of that name already exists - in that case it returns the existing subcategory), Surface.FilterByOrientation - Sorts surfaces in three lists based on their orientation (vertical, horizontal up & horizontal down) and also returns three corresponding lists of booleans., Surface.IsPlanar - Checks whether a face is planar, Surface.Vertices - Returns all vertices of a given surface, Switch - Emulates the Switch/Case statement that is  available in multiple programming languages., TextElement.SetText - Sets the text of a given text element (i.e. text note or model text), TextElement.Text - Gets the text stored in a text element (i.e. text node or model text), TextNote.ByStringAndPosition - Creates a text note at a given location, ThirdXYZAxis.ByTwoVectors - Given two main XYZ axes (or vectors pointing more or less in thei general direction), this node will find the third axis., Time.EvaluateLapTimes - Evaluates a list of lap times and returns the overall time, Time.LapTime - Records a timestamp and adds it to a given list of lap times. Also passes through an arbitrary variable for integration into a graph., Topography.IntersectionWithPlane - Calculates the intersection of a toposurface and a plane, Topography.IsSubregion - Filters out everything that is *not* a topo subregion. Needs Revit 2014 or newer to work., Triangle.SolveByPoints - Solves a triangle based on the XYZ coordinates of its vertices., Turn Into List - Turns an element (or a nested list) into a flat list, UnitType.DisplayUnitType - Retrieves the display unit type for a given unit type. , UnitType.FromDynamoUnitType - Retrieves the corresponding Revit UnitType from a Dynamo UnitType, UV.Average - Determines the average of a list of UVs, UV.ByXY - Creates UVs from the XY components of point coordinates, UV.ConvexHull2D - Computes the convex hull of a given set of UV coordinates based on the monotone chain algorithm, UV.IsInsidePolygon - Determines if a point is inside the space enclosed by a polygon, UV.PruneDuplicates - Prune UVs to exclude duplicates within a given tolerance, UV.RoundDownToPrecision - Rounds a UV coordinate to a specified precision, UV.RoundToPrecision - Rounds a UV coordinate to a specified precision, UV.RoundUpToPrecision - Rounds a UV coordinate *up* to a specified precision, UV.Swap - Swaps U and V coordinates, Vector.AltitudeAndAzimuth - Computes the altitude and azimuth of a given vector, Vector.Average - Determines the average vector of a list of vectors, Vector.IntersectionWithPlane - Finds the intersection point between a plane and a vector, Vector.IntersectionWithVector - Determines if two vectors intersect and returns the closest points of intersection on both vectors., Vector.IsInPlane - Checks if a given vector is located on a given plane, Vector.IsOrthogonalToVector - Checks if two vectors are orthogonal to each other, Vector.IsParallelToPlane - Checks if a given vector is parallel to a given plane, Vector.PruneDuplicates - Prune vectors to exclude duplicates within a given tolerance, Vector.XAxisNegative - Returns an XYZ of -1,0,0, Vector.YAxisNegative - Returns an XYZ of 0,-1,0, Vector.ZAxisNegative - Returns an XYZ of 0,0,-1, View.CategoryIsVisible - Checks if a given category is visible in a given view, View.ConvertTemporaryHideIsolateToPermanent - Convert all temporary hidden elements or categories to permanently hidden in the given view., View.DetailLevel - Retrieves the detail level of a given view, View.DetailLevelIsCoarse - Checks whether the detail level of a given view is 'Coarse', View.DetailLevelIsFine - Checks whether the detail level of a given view is 'Fine', View.DetailLevelIsMedium - Checks whether the detail level of a given view is 'Medium', View.DisableTemporaryHideIsolate - Disables the temporary hide/isolate for the given view (if set), View.Duplicate - Duplicates a given view, View.DuplicateAsDependent - Duplicates a given view as a dependent view, View.DuplicateWithDetailing - Duplicates a given view with detailing, View.IsPerspective - Checks whether a given view is a perspective view., View.IsViewTemplate - Checks if a given view is a view template, View.Phase - Returns the phase of a given view, View.Plane - Retrieves the plane of a given view, View.ResizeCropBox - Resizes the bounding box of a given Revit element by the specified amount in X, Y and Z direction. May need to be used in conjunction with a Transaction node., View.Scale - Returns the scale of a given view, View.SetDesignOption - Sets the view to a given design option. PLEASE NOTE: This node is kind of hacky. It does not use the design option settings in the visibility / graphic overrides. Instead it sets the view property \"Visible in Option\" to *one* specific design option - which also means that the symbolic representation of this view is only visible in views that display the given design options., View.SetPhase - Sets the phase of a given view, View.SetSolarStudyActiveFrameNumber - Sets the active frame number of the solar study in a given view, View.SolarStudyTotalFrames - Retrieves the number of frames of a solar study for a given view (if the view's sun and shadow settings are indeed set to single or multi day study), View.Type - Returns the type of a given view, View.TypeIs3D - Checks whether a given view is a 3D view., View.TypeIsAreaPlan - Checks whether a given view is an area plan., View.TypeIsCeilingPlan - Checks whether a given view is a ceiling plan., View.TypeIsDetail - Checks whether a given view is a detail., View.TypeIsDraftingView - Checks whether a given view is a drafting view., View.TypeIsElevation - Checks whether a given view is an elevation., View.TypeIsFloorPlan - Checks whether a given view is a floor plan., View.TypeIsLegend - Checks whether a given view is a legend., View.TypeIsRendering - Checks whether a given view is a rendering., View.TypeIsSchedule - Checks whether a given view is a schedule., View.TypeIsSection - Checks whether a given view is a section., View.TypeIsWalkthrough - Checks whether a given view is a walkthrough., View.UsesViewFilters - Checks if a given view has any view filters applied to it., View.ViewTemplate - Returns the view template assigned to a given view (if one is assigned), View3D.IsLocked - Checks if a given view is locked, Wall.ByFace - Creates a wall on top of a face. The face typically needs to be the face of a mass surface in Revit., Wall.CreationMethod - Retrieves the creation method of a given wall, Wall.CreationMethodIsByFace - Checks if a given wall was created by face, Wall.CreationMethodIsInPlace - Checks if a given wall was created as an in-place family, Wall.CreationMethodIsStandard - Checks if a given wall was created using the standard wall tool, Wall.Flip - Flips the  orientation of a given wall, Wall.Orientation - Gets the orientation of a given wall instance (normal of the exterior face of the wall). Will *not* work for walls hosted on mass faces or in-place walls., WallLocationLine.CoreCenterline - Returns the WallLocationLine option for CoreCenterLine, WallLocationLine.CoreExterior - Returns the WallLocationLine option for CoreExterior, WallLocationLine.CoreInterior - Returns the WallLocationLine option for CoreInterior, WallLocationLine.FinishFaceExterior - Returns the WallLocationLine option for FinishFaceExterior, WallLocationLine.FinishFaceInterior - Returns the WallLocationLine option for FinishFaceInterior, WallLocationLine.WallCenterline - Returns the WallLocationLine option for WallCenterLine, WallType.Function - Retrieves the Function property of a given wall type, WallType.FunctionIsCoreShaft - Checks if the Function property of a wall type is set to \"Core Shaft\", WallType.FunctionIsExterior - Checks if the Function property of a wall type is set to \"Exterior\", WallType.FunctionIsFoundation - Checks if the Function property of a wall type is set to \"Foundation\", WallType.FunctionIsInterior - Checks if the Function property of a wall type is set to \"Interior\", WallType.FunctionIsRetaining - Checks if the Function property of a wall type is set to \"Retaining\", WallType.FunctionIsSoffit - Checks if the Function property of a wall type is set to \"Soffit\", WallType.Kind - Retrieves the wall kind of a given wall type, WallType.KindIsBasicWall - Checks whether a given walltype is a basic wall, WallType.KindIsCurtainWall - Checks whether a given walltype is a curtain wall, WallType.KindIsStackedWall - Checks whether a given walltype is a stacked wall, XYZAxis.FromVector - Returns whichever main axis (X, Y or Z) is closest to a given vector",
          "engine_metadata": "",
          "engine_version": "0.7.5.3566",
          "created": "2015-09-24T04:12:27.135Z",
          "full_dependency_versions": [ "0.75.47" ],
          "full_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 0.7.x",
              "_id": "54477068cc26bfdc5a0000de"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.75.47",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2015-09-24T04:12:27.135Z",
      "num_versions": 54,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -18,
      "downloads": 12821,
      "repository_url": "https://github.com/CAAD-RWTH/ClockworkForDynamo/tree/master/nodes/0.7.x",
      "site_url": "https://github.com/CAAD-RWTH/ClockworkForDynamo",
      "banned": false,
      "deprecated": true,
      "group": "Bad Monkeys Inc",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Topography.Surface",
          "_id": "547dcacafa779c1c11000006"
        },
        {
          "name": "Set Element Param By Host Param",
          "_id": "54891323fa779c1c1100003a"
        },
        {
          "name": "Hollandaise",
          "_id": "54affe45dcee4dfd26000035"
        },
        {
          "name": "Remove Items that Also Appear in Other List",
          "_id": "54e3d82bdcee4dfd260000f5"
        },
        {
          "name": "BVN",
          "_id": "5507ae3e0c7eac9b57000053"
        },
        {
          "name": "Dynanimator",
          "_id": "55378307a8367b986100001e"
        },
        {
          "name": "Report Build Number and Worksharing Status of RVT file",
          "_id": "553d9514a8367b986100003c"
        },
        {
          "name": "C.F. Moller",
          "_id": "553f7ce2a8367b9861000041"
        },
        {
          "name": "Mirror Element Using Origin and Normal Vector",
          "_id": "554b3a30a8367b9861000077"
        },
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "Hot Gear",
          "_id": "55e90085662bf0e908000142"
        },
        {
          "name": "BNIM Tools",
          "_id": "56099113662bf0e9080001f8"
        },
        {
          "name": "PZP",
          "_id": "56b3c312c3e9ee4a080000b7"
        },
        {
          "name": "Atmos.ElementIsolateByHostLevel",
          "_id": "56c39085c3e9ee4a08000107"
        },
        {
          "name": "Atmos",
          "_id": "55916d4bf2ae5a9a070000f2"
        },
        {
          "name": "Level.CreateWithSelctionSet",
          "_id": "56c5e687c3e9ee4a08000119"
        },
        {
          "name": "LionsDen",
          "_id": "56fa23aa5bee3e21380000a8"
        },
        {
          "name": "Test Package",
          "_id": "57187e9e305bec4d3c00000b"
        }
      ],
      "num_dependents": 18,
      "description": "Clockwork is a collection of 370+ custom nodes. It contains many Revit-related nodes, but also lots of nodes for various other purposes such as list management, mathematical operations, string operations, unit conversions, geometric operations (mainly bounding boxes, meshes, planes, points, surfaces, UVs and vectors) and paneling. More information: https://github.com/CAAD-RWTH/ClockworkForDynamo ",
      "maintainers": [
        {
          "username": "andydandy",
          "_id": "51fa7982e2f476ca0500000f"
        }
      ],
      "keywords": [ "clockwork", "caad", "rwth", "bad", "monkeys" ],
      "white_list": false
    },
    {
      "_id": "584cd9eefdef23aa6e0000d6",
      "name": "Synthetic",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/5e46649f-5343-4f5e-a05a-97b3dc1f87a9gregPkg469.zip",
          "contents": "Json.Decode - Input a text string formated in JSON, return a nested list., Json.Encode - Input a title and list of list pairs, node encodes the lists into JSON., RoundInches - Round a number to the nearest inch or fractional inch.",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-12-12T03:43:10.240Z",
          "full_dependency_versions": [ "1.2.161211" ],
          "full_dependency_ids": [
            {
              "name": "Synthetic",
              "_id": "584cd9eefdef23aa6e0000d6"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.161211",
          "contains_binaries": true,
          "node_libraries": [ "Synthetic.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "Synthetic.Revit, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "Synthetic.UI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2016-12-12T03:43:10.24Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 236,
      "repository_url": "https://github.com/amcgoey/Synthetic",
      "site_url": "https://github.com/amcgoey/Synthetic",
      "banned": false,
      "deprecated": false,
      "group": "Synthetic",
      "engine": "dynamo",
      "license": "The MIT License (MIT) Copyright (c) 2016 Arthur McGoey.  Refer to repository for full license info.",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Synthetic provides Dynamo nodes for manipulating data, and accessing Revit API objects.  Includes nodes for documents, worksets, view templates, dictionary data types, and Enum (enumerations).  Please refer to the example definitions in the extra folder.  The examples show how to use many of the included nodes.\n\nUPDATED: Reorganized all the UI nodes into their own section.  This may break the past nodes.  Significantly updated the DialogRevitTask class.  My apologies for any nodes that break due to the changes.  The package organization should be settled now.",
      "maintainers": [
        {
          "username": "mcgoey.unm",
          "_id": "54e2cfe2dcee4dfd260000f3"
        }
      ],
      "keywords": [ "document", "workset", "view", "template", "dictionary", "enum", "enumeration", "dialog", "form", "color" ],
      "white_list": false
    },
    {
      "_id": "545a51aa893c653357000008",
      "name": "SteamNodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/cfb06597-8a51-4dd8-8f4b-c97366cf95ddgregPkg533.zip",
          "contents": "Analytical.CreateLineBoundaryCondition - Create Line Boundary Condition from Analytical Line, Analytical.CreateLineLoadBeta - beta 1, Area.CreateAtPoint - create Area from center points at Level, Area.CreateAtUV - create Area from center points at Level, Area.CreateFromPlanCircuit - Place new Areas in Plan Circuit, Element.3DCropViewTopBaseOffset - create 3d view for each element and crop view, Element.Create 3D Cropped view - create 3d view for each element and crop view, Element.GetFromLinkedFile - Get elements from link document instance based on category, Element.GetParts - Get parts for the elements from Input. Returns Parts and Parent elements, Element.IsTagged - Checks if all Elements are tagged in the project, Element.MakeParts - Create Parts from valid elements, Element.SelectInView - Select the input elements in active view. Disconnect / Connect to refresh., Element.TypeName - Get Type Name as string, List.FilterByString - Filter a list by a string match, List.Operations - List A-B / List Intersection / List symmetric difference, List.SortByFunctionGetNmaxvalues - Get N max values from a sorted list, Parts.ElementsAreValidToCreateParts - Filter Elements to create Parts from, Parts.Genealogy - Get Parent, Childs and PartMaker for any Part, Parts.Getparents - Returns parents of selected Parts, Parts.IsFromLinkedElement - Check if Parts are derived from linked elements, PointCloud.GetPointsFromBoxSelection - WIP: collects the points from a point cloud instance by using a box shape collector (aka a Revit element such as a Mass). Mass geometry has to be a box (parallel faces).\r\nThe number of points read must range from 1 to 1000000. Default 50000.\r\nAverage Distance is a setting for PC density. Less distance increases the number of points.\r\n, Schedule.GetCalculatedValues - Get Schedule Calculated Values from name input, Schedule.GetTextFromHeader - from Viewschedule input, returns columns header values as text, Tool.AddVoidCut - Add void cut for a Set of elements. In combination with Get surrounding elements node., Tool.AlignSheetViewsFromTemplateSheet - Align views and schedules from a sheet template, Tool.AssemblyViews - Create Sheet and Views for Assembly instances, Tool.CreateAssembly - Create an Assembly for each element, Tool.CreateEmptySheet - Add the amount of sheets from titleblock type. numbers and names are set from lists, Tool.CreateRoomAtPointAndLevel - create rooms from center points at Level, Tool.CropViewFromRoomShapeWithOffset - Crop the floor plan view according to the room shape with an offset value., Tool.ElementsInGroup - returns elements from a given group, selected by his name, Tool.Eraser - Try to delete any element from project, Tool.EraserByName - erase things in a list, selected by the name, Tool.ExportDWF - Export Views to DWF file, Tool.GetFillPatternTarget - Returns the target (drafting-model-none) from a FillPatternElement, Tool.GetLineStyleByName - Collects LineStyle from string.contains, Tool.GetPhaseByName - Get Document Phases by String, Tool.GetRevitSelection - Get the selection from the Revit UI, use boolean action to refresh when selection must be updated, Tool.GetSurroundingElements - Get Surrounding Elements by Categories, group them  as  List. Tolerance distance available., Tool.IntersectionChecker - Checks if elements have a geometrical intersection. The result is a list of list, with First Element is checked against the others., Tool.PhysicalBeamToAnalytical - **MANUAL MODE ONLY**\r\nMove Physical Beam to his Analytical model location, Tool.PlaceGroupAtPoint - place a given group at given points, Tool.PlaceViewsOnExistingSheets - Place the views on the sheets at the points you provide., Tool.PlaceViewsOnSheets - Places existing views on existing sheets, Tool.PointComponents - X Y Z of points, Tool.RemoveVoidCut - Add void cut for a Set of elements. In combination with Get surrounding elements node., Tool.RenameAssembly - Rename Existing Assembly - doesn't work yet at Assembly creation (transaction related, WIP)\r\nBeware: same length Lists, Tool.RunMe - Use Boolean to perform an action, Tool.Toggle - Offers 2 ways for output, Tool.UnusedTypes - collects unused types in model before deletion, Tool.UpdateString - Replace a Parameter string value by another one, Tool.WeightedAverage - Calculate Weigted Average of 2 lists, View.ApplyViewTemplate - Applies a view template to any given view(s). Supply a string with a view template name., View.CropView - Crop a 3D view, View.GetViewport - Get Vieworts from Views, View.ViewPortBoxCenter - Get ViewPort Box center point, Viewport.SetBoxCenter - API class, ViewSchedule.GetColumnWidth - ViewSchedule.GetColumnWidth, ViewSchedule.SetColumnWidth - ViewSchedule.SetColumnWidth, Wall.GetTotalWidth - Get Wall's  Total Width parameter",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2016-12-15T20:56:49.583Z",
          "full_dependency_versions": [ "1.2.3" ],
          "full_dependency_ids": [
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.2.3",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2016-12-15T20:56:49.583Z",
      "num_versions": 36,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -4,
      "downloads": 18363,
      "repository_url": "",
      "site_url": "https://aecuandme.wordpress.com/",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "BVN",
          "_id": "5507ae3e0c7eac9b57000053"
        },
        {
          "name": "MOST-BCF2014",
          "_id": "56dadd8e5bee3e2138000025"
        },
        {
          "name": "FrTe",
          "_id": "5828c0155af9f3713d000057"
        },
        {
          "name": "BIMSYK",
          "_id": "582ed4885af9f3713d0000b6"
        },
        {
          "name": "SYKES",
          "_id": "57dbd203882d868b4200000d"
        },
        {
          "name": "Summerisle",
          "_id": "5835897f7332da0d25000003"
        },
        {
          "name": "MyVit",
          "_id": "584c2d99fdef23aa6e0000d0"
        },
        {
          "name": "lineal",
          "_id": "58c6bb92f4db78ec010000f2"
        },
        {
          "name": "Structural Rebar",
          "_id": "58e4e62db529d0bb2400007d"
        },
        {
          "name": "BS-Rebar-LapSplice",
          "_id": "58e4eba8b529d0bb24000080"
        },
        {
          "name": "BimSolutions.rebar",
          "_id": "58e4ee8fb529d0bb24000084"
        },
        {
          "name": "KC Star",
          "_id": "57ebcea9b135d45974000031"
        },
        {
          "name": "BS-RebarLabSplice",
          "_id": "58e4fec3b529d0bb24000089"
        },
        {
          "name": "BS.Rebar",
          "_id": "58e5188fb529d0bb2400008f"
        }
      ],
      "num_dependents": 15,
      "description": "A set of various nodes to implement a Dynamo workflow in your job. contact: @jbenoit44",
      "maintainers": [
        {
          "username": "julien_benoit",
          "_id": "530f6303bfe42595360000b3"
        }
      ],
      "keywords": [ "steamnodes", "bad", "monkeys" ],
      "white_list": false
    },
    {
      "_id": "555e8bfea8367b98610000b8",
      "name": "Bakery",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/fd60059c-0def-4d75-81f3-a90e1eb49741gregPkg354.zip",
          "contents": "Add Most Recent Revision to Sheet - No description provided, Add One Point to Slabshape - No description provided, Add Prefix to Items in String List - No description provided, Add View Filters to View - No description provided, All Directory Contents of Specific Filetype - from clockwork, All Sheet Names to Upper Case - No description provided, Always Give Point List of Length - No description provided, Any Null in List - returns boolean true if a null is found, AutoModeller for Civil Data v1 - No description provided, Batch Export Revit Views to IFC - No description provided, Batch Modify Workset of All Elements - for all elements in current model, Boolean Input to Variable String Output - you choose what you want to convert true / false to, good for validation, Boolean to Int - 0 false, 1 true, Bruteforce Get Elem ID and Two Parameters and Make List of Strings - takes list of elements, Bruteforce Get Parameter Value by Name - If Element.Parameters shows a value, this node will search for it and return the value or an optional empty value replacement., Bruteforce Get Parameter Values when Multiple Entries - No description provided, Bruteforce Get Parameter via String Split for Single element - Returns a String. Use ListMap for multiple elements. This node uses Element.Parameters node to get all values, then look for first occurrence of the selected parameter name, then gives that value. Beta... single is faster than the other one., Bruteforce Get Parameter via String Split V2 - BETTER, Bruteforce Get Two Parameters and Join to One String - The first value is Element ID. use with List.Map, Build New Order of Headings by Search - No description provided, Build NW Search String v1 - No description provided, Built In Name Lister - lists BuiltInNames (Built In Category Names), bv All Indices Of that can handle Nulls - forked from spring nodes, bv All Indices Of - forked from Rhythm, bv Collector for Sheets - forked from spring nodes, bv Collector for Viewports - forked from Rhythm, bv Create Element View - for structural, from RevitBeyondBim, bv Document Worksets - clockwork node without the toggle, bv Element Add Void Cut - No description provided, bv Element Material Properties - No description provided, bv Elements in Views - forked, bv Elements to IDs - forked from CAAD_RWTH, bv Erase or Delete from Model - forked from SteamNodes, bv Filter List by Mask - can be used as a toggle switch to output empty list with false, bv Get All Views in Document - takes doc as an input, bv Get Category Name - forked from Blackbox, bv Get Character from String at Index - forked from Rhythm, bv Get Element Rotation - No description provided, bv Get Nested and Parent Family Relationships - forked from Blackbox, bv Get Parameter Value as String - forked from Rhythm, bv Get Parameter value from Type or Instance - forked from Rhythm, bv Get Revit Selection - forked from SteamNodes package, bv Get Wall Width - from steam nodes, bv IDs to Elements - forked from CAAD_RWTH, bv If Equal Return Index - forked, bv List Chop by Lengths - No description provided, bv List Contains - forked from Rhythm, bv List.RemoveEmpty - No description provided, bv Merge Sublists with a separator - forked from Rhythm, bv Output Clean - forked from Rhythm, bv Remove from String after Character - forked from Rhythm, bv Remove from String Prior to Character - forked from Rhythm, bv Remove Nulls - forked from Lunchbox, bv Replace Nulls - Python version, bv Select in Revit - No description provided, bv Select Linked Elements - Dimitar original code. I modded with a Try/Except because it was failing on me., bv Send to Clipboard from Revit - No description provided, bv Slice String - standalone, Category Id to BuiltInCategory - No description provided, Change Value If Matches - No description provided, Check Assembly Code Settings - and report bool and path, Check Common Items between Two Lists and Get From One - No description provided, Check Family Prefix for Model Elements - and returns statistics, Check Flex Ducts for Geometry Errors - No description provided, Check for Compliant 3D View - No description provided, Check for Duplicate Parameter Values and Make Selection Set - will take Parameter name, list of Elements and output to desired Selection Set, Check for IFC Links and Point Clouds - uses element type reporting node, Check For Instance Parameter and Return Stats - check through all elements if a given instance parameter 'exists', Check for SetParameter Nulls and Report Info on Elements - No description provided, Check For Type Parameter and Return Stats - will check for a given parameter against all available types in document, Check if Elements are Inplace ( In-place Families ) - will take list of elements and return true if inplace, Check Imported Object Styles for Entries - this one reports two bools, and two lists, Check Levels Grids on Wrong Workset - only Shared Levels And Grids Allowed, Check Point Intersects Geometry and Get Revit Parameter - No description provided, Check Project Shared Parameter against benchmark GUID - and report results, Check Reference Level Offsets against a Tolerance Input - No description provided, Check Specific Shared Parameter has correct GUID - use with List.map, Chooser - No description provided, Circle Sweep along NURBS path with smoothing - No description provided, Civil Data to Direct Shape Guide Curves - No description provided, Clean Link Name List - No description provided, Clean List of Indices to Remove Negative Values - No description provided, Clean Solid List by using Simplified Form as Replacement - No description provided, Clean String by UTF8 to Unicode roundtrip - No description provided, Clean Warning Types from Error Report HTML - working with error report html parsing, Clear Rules from View Filter - wipes rules leaving only category selection, Collect All Elements in Model faster - does not report count or categories, Collect All Elements in Model - No description provided, Collect all FamilyInstance using Element Types - should get model family instances, Collect All Tags in Project - No description provided, Collect All View Crop Boxes in Document - No description provided, Collect Elements by Parameter Value - No description provided, Collect Elements from List of Category Names - No description provided, Collect Elements in Rooms and Show Detailed List - Allows you to generate various lists of elements in rooms. Can get two parameters for Rooms, and two for Elements. Based on Family.InRoom work by Konrad, which was built on others., Collect from Link using Category and Parameter Value - works by name search of single link, Collect Tag Elements in Specific View and Send Ids to Clipboard - No description provided, Combine Column from Three Excel Files into One Long Column - uses Sheet1, Comma Separated Point Value to Point Object - No description provided, Comma Separated Revit Data to XYZ Values - No description provided, Common Architectural Model Categories - No description provided, Compare Contents of Two Directories - No description provided, Compare Two Columns From Excel and Report Differences - No description provided, Compare Two IFCs by GUIDs - this version makes Guids 'unique' so only reports completely new or deleted, not when items are 'split'., Compare Two Line Breaked Strings and Return Differences - No description provided, Compare Two Lists by Item and Return Item Differences - No description provided, Compare View Filters added to Two Views or Templates - takes input from Views dynamo node, Convert .NET Guid to IFC Guid - No description provided, Convert Builtin Category Name to Normal Name - No description provided, Convert Category Name to Built In Category Name - You must use List.Map to convert list of Category Names to list of Built In Names, Convert IFC Guid to .NET Guid - trying to adapt https://github.com/hakonhc/IfcGuid/blob/master/IfcGuid/IfcGuid.cs, Convert List into List of Strings with Line Breaks - No description provided, Convert List to Comma Delimited String - No description provided, Convert String with Line Breaks into List of Strings - No description provided, Copy Elements To Same Place - No description provided, Copy File List to New Directory - takes list of file paths and a Directory Path, Copy Parameter to Parameter in List of Elements - has to have a Text parameter as the target, Copy Parameters Node for Nesting Process - copy param, Copy Property to Parameter for List of Elements - Uses bruteforce get parameter which works for Worksets etc, Copy Section Box to List of 3D Views - No description provided, Copy to Level and Delete - combined Clockwork and SteamNodes code, Copy Type Parameter to Type Parameter for All Family Types - No description provided, Copy Type Parameter to Type Parameter for Elements - No description provided, Copy Workset Name to Target Parameter - uses archi-lab, Create Floors From Rooms v1 - this version uses only the outermost boundary, does not detect cutout or openings (yet), Create Floors From Rooms v2 - No description provided, Create Floors from Rooms v3.0 - No description provided, Create Floors from Rooms v4 - No description provided, Create Floors from Rooms v5 - No description provided, Create Navisworks Search Set XML for Element Ids - No description provided, Create NurbsCurves from Sublists of Points - No description provided, Create Parent Child Dictionary using XML ElementTree - No description provided, Create Parts for Linked Elements - currently does not handle multiple instances of Link, Create Plan View for Room v1 - originally from Brian Myers. Doesn't work yet., Create View Filter - uses Contains rule, Create Worksets for Revit Link Filenames - No description provided, Create Worksets for Some Revit Links - input clean link names, Curve to Point based Nurbs Curve - No description provided, Curves to Circle Lofted Solids - No description provided, Cycle Entries of one List by List of Lengths - No description provided, Cycle One Item Into List to Match Length of Other List - No description provided, Delete All Elements of Category - be careful!, Design Option Summary - using Archi-lab, Design Option and Design OptionSet - taken originally from Clockwork, Display Parent Child Pairs as Hierarchy - No description provided, Document Design Option Sets - taken originally from Clockwork, Document Design Options - taken originally from Clockwork, Document Phases - Retrieves all phases in the active document in *chronological* order, Does this Document Contain Category - This iterates all BuiltInNames searching for elements on those categories. output CategoryList shows categories in this document., Draw Revit Model Lines From Point - places model lines from a point to show its location in Revit, Duplicate View and Isolate Elements - No description provided, Duplicate View and Rename and Isolate Elements - No description provided, Duplicate View and Rename and Isolate for System Types - No description provided, Duplicate Views - No description provided, Dynamo Curves to Revit Curves - No description provided, Dynamo Lesson 1 - No description provided, Element List check for Inplace Families - pythonic, Element Name Universal - Modified for 0.8.1, Element Type for Element Lists  - No description provided, Element Type for Linked File Element Lists - No description provided, Element Type for Linked File Large Lists - No description provided, Element Type Reporting - searches element types for strings and gives data, Element.Geometry with Try - No description provided, Enumerate Parameter Types - No description provided, Enumerate Text Align Flags - No description provided, Enumerate View Discipline - No description provided, Enumerate View Duplicate Options - No description provided, Enumerate Worksharing Display Modes for Document - No description provided, Example FFE Category List for a project - No description provided, Export Element Details and Room Number to Excel - No description provided, Export Element Details and Room Number using Element Input - No description provided, Export Family and Type Name with One Type Parameter to Excel - Uses Bumblebee, Export Images using many input variables - code originally from Konrad, Export Linked Tag Values to Excel by Sheet - No description provided, Export to Image using Directory and View Parameter - No description provided, Export Views to Navisworks NWC - this node needs work - need to define view scope and set up the list cycling http://www.revitapidocs.com/2016/3a7ffc07-bd02-39c2-1846-865973db8d7f.htm, Extract Nested Families from Parent Families - with category filter, Extract Specific Tag Entries from XML as Unique List - No description provided, Family Instance By Point in Transaction - this is to skip binding problems with the core node, it was based on a clockwork node\r\n, FamilyInstance.ByGeometry for List.Map - No description provided, File List from File Path showing Files in SubDirs - No description provided, File List from File Path - No description provided, File Path from Directory and String - No description provided, File Size in MB from File Path - Input a File Path node, and this will do a ReadText to calculate approximate, rounded file size in MB. Also reports the string length if you want more granularity., Filter a List by a Given Value with second list passthrough - No description provided, Filter a List by Comparison with Benchmark Date - No description provided, Filter Element List by Parameter Value Wildcard Search - No description provided, Filter Element List by Parameter Value - No description provided, Filter Element List by Revit Z Value - No description provided, Filter Element List by Type Parameter Value - No description provided, Filter Element List by Workset Name - No description provided, Filter Elements by Family Name - No description provided, Filter Elements by Intersection with Element - uses Element.Geometry and Geometry.DoesIntersect, Filter Elements by Intersection with Specific Linked Floor Element - No description provided, Filter Elements by Workset Name - No description provided, Filter Family Instances by View Specific Property - No description provided, Filter Floors by Comments and Level and Make Section Box View - No description provided, Filter Items in List by String Contains and Return List and Unmatched - the two lists are items that contain the string, and everything that is left, Filter List by List - filters a source list by a list of 'approved' values, and gives those that pass the test, Filter List By Removing Certain Category Names - No description provided, Filter One List by String Search in Another List - No description provided, Filter Revit Selection to View Crop Elements and Names - No description provided, Filter Sublist Items by Values and Replace if None Found - No description provided, Filter Text Notes by Search - No description provided, Filter Views with Two Criteria and Return Views - No description provided, Find Characters in Square Brackets and Merge to String - No description provided, Find Empty Parameter and Populate with Other - also has some other string operations, Find Empty Worksets and List Names - search through given elements for empty worksets, Find Index in One List and Get From Other Sublists - No description provided, Find Maximum in List and Get From Other List - No description provided, Find Nearest Revit Level for a Given Z value - No description provided, Find Pipe Insulation on Workset - Get Host Pipes - Save to Selection - No description provided, Find Revit Level for Points by Elevation - requires exact elevation match, Find Sheets and Views Where an Element is Visible - doesn't work yet, Find Worksets that contain Revit Link Instances - Audit, First Three Rows into a Single Header List - this climbs from row 3 to row 1 replacing nulls, Flat List to List of Strings - using python methods, Flatten List and Replace Null with NULL VALUE - No description provided, Flex Duct Geometry Check - No description provided, Flip Facing Orientation - No description provided, From File Path into RVT Build Information - No description provided, Generate Family--Type Name String From Types - No description provided, Get Active Project Location Name - gets the name from the document, Get Active Project Place Name - from city list etc, Get Actual Elements from Linked Tag Ids - very slow for the elements..., Get All Elevations View Name and Sheet Number for Document - No description provided, Get All Family Instances From Link Doc - No description provided, Get All Revisions - using python api, get IDs of Revisions, Get All Revit Links as Element List - No description provided, Get All Views - taken from archi-lab, Get Attribute from ElementTree by Name - No description provided, Get BCF Data from unzipped BCFZIP folder - No description provided, Get BCF files from unzipped BCFZIP - No description provided, Get Boundary Curve for One Room by Perimeter - No description provided, Get Boundary Curves from Room List - use this one, Get Build Number and Worksharing from RVT file - uses read.text and string split methods, from Marcello, Get Build Number from All RVTs in a Folder - No description provided, Get Categories from Elements - \"List Unique Categories Present in Set of Elements\" is better. This one uses Blackbox Get.CategoryName and Get Categories (designed to use document category list), Get Categories with Builtins - Lists: Category Names, internal api definition, Built In Category Names, Ids, Get Categories - Lists: Category Name, Category internal api definition, Clean Name (no spaces), Ids, Get Characters at End of Strings - No description provided, Get Characters at Start of Strings - No description provided, Get Checkout Status for All Elements - No description provided, Get Checkout Status with Time Trigger - No description provided, Get Children using Key Value list - No description provided, Get Column as List from Excel - No description provided, Get Connector.CoordinateSystem - No description provided, Get ConnectorManager - Get the connector manager object from Revit, Get Connectors from ConnectorManager - No description provided, Get Crop Box List from View List - No description provided, Get Current Model Datum Information - including base points, grids, levels, Get Date for Given Number of Days in the Past - No description provided, Get Date Modified From File Path List - list of paths to files, Get Design Option Element by Set Name and Option Name - No description provided, Get Element from Doc using Element Id - slow way to go, Get Element Parameters and Split to Names and Values - as per title, output is strings, Get Element Position Rotate Mirror - details to various outputs, Get Element Room parameter from API - No description provided, Get Elements and Types for Certain Categories in Links - No description provided, Get Elements By Workset Id - No description provided, Get Elements from Documents by Id - requires 1:1 input, Get Elements from Link Document Using Category - No description provided, Get Elements in Link using Name Search and Category - link name search, Get Elements in Links For Multiple Categories - takes list of category names and a link name wildcard, Get Elements in View in Document by Category - No description provided, Get Elements Parameter List and Show Unique Values - designed to work with Revit Links and return the link name, Get Elements Tagged on Sheet - No description provided, Get ElementTree object from XML File Path - this may break with utf8, Get External File References and Details - including date modified, Get Family and Type List for Project - No description provided, Get Family from Element - NOT WORKING, Get Family Instance Properties - No description provided, Get Family List for this project - No description provided, Get File Size and Date Modified using RVT Link Filename - No description provided, Get File Sizes from File Path List - No description provided, Get First Geometry Element with Type Name - No description provided, Get Floor Type By Thickness - No description provided, Get From Sublists using matching List of Indices - No description provided, Get from Sublists using One Index - No description provided, Get Grid Extents - No description provided, Get Grids and Save to Selection Set - No description provided, Get Host Pipe ID from Pipe Insulation - takes a list of elements (such as Pipe Insulations) and returns a list of their Hosts. Works for a variety of element types, not just Pipes :), Get Host System Type Lists - \"Get System Types as List\" is more complete..., Get Imported Object Styles - original code by Konrad, Get Indices of Null Values - ., Get Info from a Linked Element Tag - use with List.Map, Get Link Document from Link Instance Id - No description provided, Get Link Document from Link Name - No description provided, Get Link Instance and Element Ids from LinkElementId Object - No description provided, Get Link Names and Link Docs by Name Search - No description provided, Get Linked Element by Link Name Search and Element GUID - No description provided, Get Linked Element by Link Search and GUID string - No description provided, Get Linked Element from Element Id and Doc - uses name string, Get Linked Element Type from Mapped doc element lists - No description provided, Get Linked Elements by Id and Doc - No description provided, Get Linked RVT Documents - No description provided, Get LinkElementIds from Parts - No description provided, Get List of Elements at OriginalNestingLevel - sdf, Get list of GUIDs for a Specific Shared Parameter Name - iterates through model elements, Get List of Linked Elements from Id and Doc - No description provided, Get List of Open Revit Documents - BETA!! crashes next dynamo instance. https://github.com/DynamoDS/Dynamo/issues/6083, Get Loaded RVT Links - No description provided, Get Location Point and add Z offset - No description provided, Get Matching Items from List with String Conversion - No description provided, Get Matching Tag Info from single BCF file - No description provided, Get Open Worksets and Write to View Parameter - No description provided, Get Open Worksets - as sorted list, Get Parameter Element by Name - No description provided, Get Parameter Value from Bounding Element - No description provided, Get Parameter Value from First Item in List - takes parameter name and an element list, also checks if original list was empty, Get Parents for Parts from Host and One Linked Document - can be extended to handle multiple links, Get Percentage as String given Value and Total - No description provided, Get Points from MEP Element List - works for flex ducts, Get Points of Interest Using Chainage - No description provided, Get Project Location Details - query built-in category, Get Pure Filename from Revit Link Name String - No description provided, Get Revit Link File Path Information - for current doc, Get Revit Link Names from an Element List - No description provided, Get Revit Selection and Delete - uses Eraser and Steamnodes, for deployment, Get Room Geometry and Filter by Level Elevation - No description provided, Get RVT Link Filenames with Element and Type Workset Info - No description provided, Get Shading Mode from Views - using built in parameter name, Get Sheet Element from View - No description provided, Get Standard Views as single list - No description provided, Get Starting View Details - like name etc, Get Sublist and Make Curve - No description provided, Get System Related Properties of Element - use with List.Map, Get System Type List by Category Name - takes category name as string, Get System Types as List - uses HostObjAttributes parent class to collect, Get Tagged Linked Element Id - No description provided, Get Text by View Workset and Value - model must be workshared, Get This Dynamo Version - No description provided, Get Transform CoordinateSystem from Link Instance - No description provided, Get Transform Properties from Revit Transform Object - No description provided, Get Transform Properties of Elements - No description provided, Get Two Parameters and Join to One String - uses getparameter node to get two values and return one string. Use with List.Map for list of elements., Get Type Element by Category and Type Name - No description provided, Get Type List for this project - No description provided, Get Type Parameter for Tagged Linked Element - and show empty tags, Get Unique GUIDs from IFC File - input is File Path to IFC, Get View Dependency as Internal not String - No description provided, Get View Dependent Elements from Linked Document - No description provided, Get View Discipline Code By Name - No description provided, Get View Discipline Name by Code - No description provided, Get View Parameter and Check for File Dates and Sizes - No description provided, Get View Parameter and Parse for Locate32 Search - No description provided, Get View Template for View - doesn't really work, Get Viewport Elements Using View Name Search - No description provided, Get Views by Sheet Number Search - No description provided, Get Workset Info for RVT files without opening - thanks to dimven for the assist., Get Worksets with all Properties - based on Konrad's, added some more properties of Worksets, Get XML Children Texts and Tags from XML Elements - No description provided, Get XML Element Names and Attributes - No description provided, Get XYZ Values by String Name from Lists - No description provided, GetElementsContaining - This node search the selected element type for a inputvalue(string) and returns a list of the elements containing the given input., Group Elements by Parameter Value - gives a number of list outputs, If Equal Return Index using IndexOf - No description provided, If Equal Return Index - No description provided, ImageSettings Export Ranges - No description provided, ImageSettings File Types - No description provided, ImageSettings Fit Direction Type - No description provided, ImageSettings Image Resolution - No description provided, ImageSettings Zoom Fit Type - No description provided, Inplace Family Check Faster - No description provided, Inplace Family Check - this is adapted from clockwork, Is Family Instance InPlace - takes FamilyInstance, returns bool, Iterate through BCF files and Get Combined List - No description provided, Iterate through XML ElementTree - No description provided, Join Two single Strings to One single String - use with list.map, Keep First Matching Result After Search - No description provided, Line Break String with Ids to Revit Elements - No description provided, Linear Search List with Shift Indices and Count Summary - No description provided, Lines Between Start and End Points - No description provided, Linked Filled Region Boundaries to Curves - No description provided, List All View Filters in Current Document - uses ParameterFilterElement type selection, List All Views - not including sheets, List Design Option Information - doesn't work that well, try Archi-lab \"Get Design Options\", List Detail Lines by using View Workset Filter - only works on workshared projects, List Detailed View Information for a List of Views - No description provided, List Duct and Pipe Related Elements - No description provided, List DWG Link Information - shows element IDs, DWG name and Workset, List Elements in View across Revit Links - not working yet, List Groups - No description provided, List Import Information - shows Element ID, import name and Workset, List Length Validator - No description provided, List of Categories Used in a Linked Revit File - this will take a link Name (without extension) and query it for categories containing elements, List of Curves to Circle Lofted Solids - also returns circle lists, List of Curves to Point based NURBs Curves - No description provided, List of Curves to Room Separation Lines in Active View - No description provided, List of Duct and Pipe Categories as Built in names - can be fed into \"Select based on a single builtin name\" node, List of File Paths to List of ElementTree objects - No description provided, List of float double to list of Int - no decimals, List of Model Elements simplified with Annotation removed - also reports categories included and excluded. Only works on Workshared models..., List of Model Elements simplified - uses familyinstance select now, so doesn't include system families, List of Model Elements - refined, removes tags, systems etc, List of System Related Categories - No description provided, List of View Related Categories - No description provided, List Parameter Info with Shared Parameter GUIDs - works for Element list or Type list, List Phase Information - uses Clockwork, List Revit Link Instances Visible in Active View - No description provided, List Revit Links Visible in View - use with list.map, List Room and Space Elements - with a general bool test too, List Room Names from API and show failures - No description provided, List Sectors for Given Elements - uses a model with 'floors' and comments parameter, List Shared Parameter GUIDs only - faster, List the View Worksets of All Tags in Project - in other words, tell you what views they can be found in..., List to Single String - renamed fork of \"Convert List into List of Strings with Line Breaks\", List Unique Categories Present in Set of Elements - uses Bruteforce, returns sorted list, List View Filter Information for View or Template - use with List.Map, List Views and View Templates v2 - uses other nodes, null handling, List Views not on Sheets - also give Views On Sheets as other output, List.RemoveItemsFromOtherList - This will take long list A, remove entries that appear in short list B, and give you list C. (JBE List Operations are probably more robust)., LISTCLEAN Flatten_ReplaceNulls_ConvertToStrings - No description provided, Load Selection Set as Elements - No description provided, LSJ MySql at localhost connection string - No description provided, Make 3D Views in Rooms v1 - No description provided, Make a Banana - No description provided, Make Floor using NURBS from Point Lists - No description provided, Make Openings in Walls - No description provided, Make Parameter Filter for Equals Rule - No description provided, Make Perspective 3D View at Element Location - No description provided, Make Points From Point Cloud File - No description provided, Make Unique Identifier and Set it to Parameter - uses Family Name, Type Name and Location to make a pseudo-unique ID, Make View Filters for Multiple Categories - No description provided, Match Link Level with Level in Host using Elevation - No description provided, MEP Elements to Geometry using NURBS - No description provided, Merge Sublists to Strings - No description provided, Mirror an Element - using python, Mirror Element Using Origin and Normal Vector - No description provided, Modify Floor Element with Slab Shape Points - No description provided, mysql Create Database by Name - No description provided, mysql Create Table by Name - No description provided, mysql Default Connection String - No description provided, mysql Export Template for Multiple Parameters - No description provided, mysql Insert Data into New Row - No description provided, mysql Insert Data into New Rows for Multiple Columns - No description provided, mysql Make New Column - No description provided, mysql Send List to Db for Multiple Columns - No description provided, mysql Send List to Db - No description provided, Name Unnamed Reference Planes - if there is no name, it will apply a new GUID name to the reference plane, Natural Sort List of Strings - No description provided, NURBS Curve and Diameter List to NURBS Surfaces - No description provided, Nurbs Curve to Solid via Cross Section Loft - No description provided, Offset Point Z Value - No description provided, Offset Points By PolyCurve and Distance - No description provided, One Face to Polycurve Outline - No description provided, One Filled Region to Room Separation Lines in Active View - No description provided, one Revit Element to a Best Fit Line - No description provided, one Room to its PolyCurves - for list.map, nested, Output One GUID String - No description provided, Override Projection Lineweight in View - No description provided, Parse and Split String to a List - takes input String, split options, returns list or String, Parse CSV Text of Elem IDs to Actual Revit Elements - input file path, Parse Error Report and Provide Summary List - this version is intended to be faster, Parse IFC File - very basic implementation at this stage, Parse Revit Error Report HTML and Output Summary - this version gives more detail, slower, Parse Revit Journal File - very basic implementation at this stage..., Parse XYZ from Delimited String List - No description provided, Percentage of False Values in Sublists - No description provided, Perpendicular Curves at Spacing - No description provided, Pile Column Layout Tool - uses a list of points and various offsets, Place Family at Points and Set Parameter Values - No description provided, Place Family by Point Cloud - allows dropitems from 0 to 4 (discards half of the points at each drop level). Needs XYZ space or comma delimited text file. The Topography creation option does not seem to work well with huge numbers of points...\r\nRefer to What Revit Wants post for more details., Place Free Instances to Match Project by Category - place instances and make a list. Needs OriginalElementID Instance Text parameter available in project., Place Soil Anchors at Spacing - No description provided, Point and Tangent Lists to Nurbs and Polycurves - No description provided, Point Lists to Shape Edited Floors - Can use one or two point 'strings', Point Sublists to DirectShape Ruled Loft Vertical Guide Curves - No description provided, Points to PolyCurve with PruneDuplicates - No description provided, Polycurve to Nearest Revit Level by Elevation - No description provided, Popup Message Box - from Dynamo Player samples, Preflight for Section View Creation - No description provided, Preflight to Make Revit Section Views from Lines - No description provided, Process Family Type Excel Sheet and Get a Value To Write - column 1 - Family, column 2 - Type, column 3 - Value, Project Base Point Details - some lists and details of project base point, Quick Text Note in View - hard coded at 0,0 point and with left alignment, Read Civil CSV Into Lists - No description provided, Read CSV to Flat List - No description provided, Read Excel Into Lists - No description provided, Read File Path to ElementTree with UTF8 roundtrip - to clean unsupported characters..., Read From IFC - adapted by me from original code at https://github.com/mvaerle/python-ifc, Read Room Numbers and Location Points to Excel - No description provided, Read Text from File Path - No description provided, Reduce Text File Data - No description provided, Remove Characters from end of single String - No description provided, Remove Chars from End of Single String - use list.map for multiple, Remove Empty Strings from List - No description provided, Remove Equal Items from List and Preserve Counts - this is a function version of similar Python node, created by Vikram Subbaiah, Remove First and Last Characters from String - No description provided, Remove First Revision from Each Sheet - No description provided, Remove From List by Revit Element Name Search - No description provided, Remove List from List by Item not Value - remove the items in ListA from the items in ListB and return whats left, Remove Points with Duplicate XY Values - cleanup tool for points into Revit topography, Remove Revision From Sheet subnode for listMap - No description provided, Remove StringList from List with String Conversion - No description provided, Rename All Elements by Adding Prefix - Send any wrapped element to this node to add the desired prefix to its name, Rename All Fill Patterns with a Prefix - No description provided, Rename Families by Replacing Prefix - No description provided, Rename Families with a Prefix - No description provided, Rename View by Replacing Prefix - replaces the same number of characters as the input string, Rename Views by Appending Selected Suffix - No description provided, Replace Item if True - takes two lists, plus a boolean list. If the boolean list says True, list1 item is replaced by list2 item, Replace Point Z Value - No description provided, Report Category Summary - for BEP compliance, Report Import Summary - No description provided, Report on Detail Lines and Detail Groups - No description provided, Report on DWG Links - No description provided, Report on Groups - No description provided, Report on Inplace Families - No description provided, Report Revit Link Worksets - for instance and type, Report RVT Links Visible in Views on Sheets - No description provided, Revit Element Clash Detection v1 - No description provided, Revit Element Clash Detection v2 - with transform, Revit Model Cleaner - No description provided, Revit Section View at Line - No description provided, Revit Unit Values to Length Display Unit - No description provided, Revit Vector Parameter to Dynamo Vector Element - No description provided, Revit Vectors to Dynamo Vectors - No description provided, Room List with Enclosure Tests - also includes some bools to handle empty / null lists. returns one large nested list., Room to Element Geometry Test for Preflight - No description provided, Rooms to Closed Polycurves without Nulls - No description provided, Rooms to PolyCurves - deeply nested, could be hidden, Rotate Families Around Origin by Angle - this will take Family Instance and angles as list inputs, and rotate Families around their origin. Outputs provide feedback on information used., RVT Information for All RVTs in a Folder - including worksharing status, Sample Curve By Divisions - No description provided, Sample Two Curves to a Loft - No description provided, Sampled Ruled Lofts Between Two Point Lists - No description provided, Search by Workset and return Items - also has a bool result, FALSE if it contains items, TRUE if empty, Search for Certain Build Number in Folder of RVTs - No description provided, Search for DWGs in Document Link List - returns true if they exist, and then lists parameters, Search for Generic Annotation on Sheet and Copy Id to Clipboard - uses Workset to get Sheet, file must be workshared, Search for Matching Value and Summarise - No description provided, Search for Type Parameter Value in List of Elements and Return Elements - No description provided, Search Items in List and Return Matched Pairs - No description provided, Search Link Names and Send Instance Ids to Clipboard - No description provided, Search One List Based on Second and Get from Third v2 - no null replacement, faster, Search One List Based on Second List and Get Values - get values from a 3rd list or the 1st list, Search One List with Sublists and Return from Another - No description provided, Search Tags and Get Values from XML Lists - No description provided, Select All Not Keynoted in Active View - from the Dynamo Player samples, Select based on a single builtin name - use with List.Map for input of Built In Name list, Select Elements including Nested by Category - and report as list and number of items, Select Elements Using BuiltIn Category Names - works on a list of BuiltIn Names, Select Taggable Elements Not Tagged in Active View - from the Dynamo Player samples, Select Workset by Name - No description provided, Send Element ID to Clipboard - for single element, Send Element IDs to Clipboard - Can be pasted into Select by ID, Send Family Location Points to Excel - No description provided, Send List to Clipboard as Single Line Breaked String - No description provided, Set Design Option by View Parameter - uses a view parameter and sets the design option using that value, Set Design Option For List of Views by Parameter Value - matches the DesignOption to the parameter value, Set Discipline Property for Views - No description provided, Set Element Id to Mark Parameter - No description provided, Set Instance Parameter by Type Parameter - takes list of Elements. Works nicely with Select Model Elements input., Set Link Instance and Type Worksets by Revit Link Filename - No description provided, Set List of Values to List of Elements for One Parameter - as described, Set One Parameter to Many Elements - elements as a list, single value and single parameter name, Set OriginalNesting Level Parameter for all FamilyInstances - Sets OriginalNestingLevel from 0 (not nested) to 3 (triple nested). Needs an instance Integer parameter called OriginalNestingLevel to be set for all Categories *prior* to running this node., Set OriginalNestingLevel Parameter to Element - works with other node -- Set OriginalNesting Level Parameter for all FamilyInstances, Set Parameter of View based on a Character in Sheet Number - No description provided, Set View Discipline for All Views by Name - No description provided, Set Visible RVT Links to Parameter for Current View - No description provided, Set Workset By Name For Elements - No description provided, Set Workset for a Single Element - use with list.map, Set Worksharing Display Mode for View - No description provided, Set Worksharing Display Mode for Views on Sheets - No description provided, Shape Edit Floor With Points - No description provided, Sheet Reporting and Validation - tests schedules not on sheets, lists sheets, Show Categories containing Family Instances - list, Show Element Workset as Internal db name - No description provided, Show List of Revit Links that are never visible on Sheets - No description provided, Single Curve to Room Separation Line in Active View - view should be a Plan View, Single String Containing Annotation Type Names - No description provided, Solid Loft using First and Last Cross section - No description provided, Speak Single String via Speech Synthesizer - No description provided, Split Comma Separated Sublist Item to Multiple Items - No description provided, Split XML and Return Lists - No description provided, Start View Validation and Info - 1) is there start view set? 2) type 3) name, String Replace using RegEx - for lists, String Search All Element.Parameters for a Single Element - No description provided, Structural Column By Curve In Transaction - No description provided, Sublists of Coordinates to Points - No description provided, Sublists of Point Values to Sublists of Points - No description provided, Subnode for creating list hierarchy by nest level - No description provided, subnode for Filtering Lists by List - No description provided, subnode for Nurbs surface creation with diameter list - No description provided, subnode to Copy One File to New Directory - No description provided, subnode to Create Filter for All Categories - No description provided, Subnode to create point from one XYZ sublist - No description provided, subnode to Filter Sublists - No description provided, Subnode to get index from sublist - No description provided, subnode to Iterate unzipped BCF structure for information - No description provided, subnode to Make Forms from Flex Duct via NURBS - No description provided, subnode to Make One Linked Part - No description provided, subnode to Search List for One String Match - No description provided, subnode to Set Link Worksets by Name Match - No description provided, Summary of Empty Parameter by Category - No description provided, Summary of Revit Link File Information - No description provided, Summary of Selected Parameter Values for Duct and Pipe Elements - gives a two column output, Summary of System Related Elements - provides some statistics, Summary of Unique Values present in List - No description provided, Super Collect Elements from Document - tries to collect elements from all builtin categories, Super Collect Sheets from Document - No description provided, Super Collect Views from Document - No description provided, Super Get All Elevations View Name and Sheet for Multiple Documents - No description provided, Switch - No description provided, To Float - converts input object to a float with python, To Int - No description provided, Translate Geometry from Centroid to Origin - good for moving point cloud points back closer to Revit origin, Translate Points on Curve by Average Vector - No description provided, Transpose Data within Excel Sheet - uses same excel sheet, Triple Get - No description provided, Two Lists into One Replacing Nulls with Backup Values - No description provided, Two Parallel Point Lists to Joined PolyCurve - No description provided, Two Point Lists to Joined Curve - No description provided, Unique Item Selector - No description provided, Unpack Dimension Values from String - part of penetration family workflow, Unpack Three Sublists - No description provided, Unused Families - No description provided, Use Floors to Make Named 3D Section Box View and Apply Template - No description provided, Useful Text Note Properties - No description provided, UUID GUID Generator for Lists - just makes a new GUID for every item in a list, has no relationship to item or element itself, View Statistics - some key view details, View Templates for View List - No description provided, Wildcard String Search One List in Another List (Faster) - uses straight Python not String.Contains, Wildcard String Search One List in Another List - this is slow List.Map way, Write Empty Linked Tag Information to Excel - No description provided, Write gbXML Data to File - from Ezra at https://forum.dynamobim.com/t/how-do-you-create-an-xml-file-using-a-python-script/3859/6?u=luke_johnson, Write Parameters from One Element List to Another - 1 to 1 list, Write Room Numbers and Location Points to Excel - No description provided, Write RVT Link and Workset Details to Active View - uses 5 instance parameters..., Write Shared Parameter Check to Excel - No description provided, Write to Excel using only Data and File Path Inputs - will overwrite and use Sheet1, XPATH Expression Find for Element Tree - No description provided, Zero to One Range with Divisor - No description provided, ZYX sublist strings to XYZ sublist numbers - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-01-15T23:45:42.758Z",
          "full_dependency_versions": [ "2017.1.213", "1.2.3", "1.0.2", "2014.11.30", "110.0.2", "2017.1.8", "2016.12.7", "2016.11.11" ],
          "full_dependency_ids": [
            {
              "name": "Bakery",
              "_id": "555e8bfea8367b98610000b8"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "Slingshot! for Dynamo",
              "_id": "52bdf30a9de41c8235000081"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            }
          ],
          "direct_dependency_versions": [ "2016.12.7", "1.0.2", "2017.1.8", "110.0.2", "1.2.3", "2016.11.11", "2014.11.30" ],
          "direct_dependency_ids": [
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "Slingshot! for Dynamo",
              "_id": "52bdf30a9de41c8235000081"
            }
          ],
          "change_log": "",
          "version": "2017.1.213",
          "contains_binaries": true,
          "node_libraries": [ "Package.customization, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-01-15T23:45:42.758Z",
      "num_versions": 66,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -11,
      "downloads": 5930,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "Bakery",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "Jumper",
          "_id": "57e8dfbbb135d4597400000f"
        },
        {
          "name": "LRCZ",
          "_id": "5832c9d65af9f3713d0000d3"
        },
        {
          "name": "RollingPin",
          "_id": "587c08aaca6a5edb65000032"
        },
        {
          "name": "KC Star",
          "_id": "57ebcea9b135d45974000031"
        }
      ],
      "num_dependents": 4,
      "description": "Bakery is over 635 nodes created, adapted, or collected by author of What Revit Wants. Also see Dynamo Nodes website.\r\nhttps://dynamonodes.com/2016/01/27/bakery-node-index/\r\n(first version after RollingPin)",
      "maintainers": [
        {
          "username": "luke.johnson",
          "_id": "54e3d829dcee4dfd260000f4"
        }
      ],
      "keywords": [ "bakery" ],
      "white_list": false
    },
    {
      "_id": "57fbe39dd3d589541a000057",
      "name": "AlvaroMEP",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/cab0d071-b43d-4318-94e9-8207f66d1c5agregPkg625.zip",
          "contents": "ContainsAnyItemOfList - Result true if list contains any item of another list, GetValueAsString - Get a parameter value as a string including its units, SetValueAsString - Set a parameter value as a string including its unit, SpatialElementBoundary - It retrieves the boundary of any Revit spatial element (room or space) as polycurves.",
          "engine_metadata": "",
          "engine_version": "1.2.0.2690",
          "created": "2017-01-14T10:37:16.002Z",
          "full_dependency_versions": [ "0.0.2" ],
          "full_dependency_ids": [
            {
              "name": "AlvaroMEP",
              "_id": "57fbe39dd3d589541a000057"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-01-14T10:37:16.002Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -2,
      "downloads": 114,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": true,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Test Package",
      "maintainers": [
        {
          "username": "aortegapickmans@gmail.com",
          "_id": "565364fb0370b0a907000004"
        }
      ],
      "keywords": [ "alvaro", "mep", "package" ],
      "white_list": false
    },
    {
      "_id": "56077cf3662bf0e9080001ea",
      "name": "spring nodes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/f8e0a3cf-96cd-4a7f-a375-890cd041b566gregPkg299.zip",
          "contents": "Springs.AdaptiveFamily.ByFacetedGeometry - Genearate a new eight point adaptive component family type from any solid or polysurface consisting of planar faces. Faces with openigs are not supported., Springs.AreaPlan.ByLevelName - Creates an area plan at the designated levels. Each new view needs a name. An area scheme must first be activated before it can be used. To activate a scheme, place one view of that type in the project(you can then delete it).  If a view with the same scheme and name exists, you'll get a null instead., Springs.Beams.FixExtents - Detects all beams from the input list with broken extents(actual length - cut length <  margin) and attemts to correct them., Springs.BoundingBox.MidPoint - Fetches the mid point of the bounding box., Springs.BoundingBox.Scale - Scales the bounding box in three dimensions according to it's center., Springs.BrepShape.ByGeometry - Convert the input geometry to DirectShape element inside the Revit document.  Works only in Revit 2017 and later. Usies the more advanced BrepBuilder. It supports solids or surfaces, however periodic faces like spheres, cylinders and cones are not supported. Each created DS will have a unique type. Make sure that each input geometry has a unique name. You can either feed a single category and material for all geometries or a unique one for each geometry - the node's lacing is set to longest by default. The default category is Generic Model., Springs.ClosedCurve.Offset+ - Offsets a curve both ways and correctly differenciates the external and internal offset. If an offset goes beyond the curve's bounds, the result will fail and a null value will be appended instead. Also works for convex curves like arcs., Springs.Collector.CurrentSelection - Gets the currently selected elements. Connect a boolean switch to refresh the selection., Springs.Collector.ElementsInView - Selects all elements visible in the input view., Springs.Collector.ElementSketch - Get the actual sketch lines of a sketch based element (floor, ceiling, modified wall, etc.) . You can optionally fetch the matching model curves, however this might prove comptationally heavy on larger data sets., Springs.Collector.FamilyInstances - Collects placed family instance elements from the document that match the name. Partially mathing elements are collected as well. If no matches are found, a list of all isntance names will be output., Springs.Collector.FamilyTypes - Collects non-system family types that fully match or partially match the provided names. If no matches are found, a list of all type names will be output., Springs.Collector.FloorTypes - Collects Floor types by name., Springs.Collector.LinkedInstanceElements - Extract elements by category from the selected linked instances. The transform vector can be used to get the exact location of the elements in the local file, Springs.Collector.Revisions - Collects all revision clouds from a specific date., Springs.Collector.Sheets - Search for sheets by either their name or their number. Use a false boolean switch to search by number., Springs.Collector.Views - Search for views based on naming. You can choose to either include or exclude schedules. Use the sheet collector for sheets., Springs.Collector.WallTypes - Collects wall types by name., Springs.Color2Decimal - Converts a Dynamo colour its Revit equivalent  decimal value., Springs.Curve.Offset+ - Offsets a curve towards the specified point, Springs.CurveLoop.Simplify - Attempts to simplify an open or a closed curve loop by connecting straight separate line segments into a single line., Springs.Decimal2Color - Converts a revit colour decimal value to its Dynamo equivalent., Springs.Delaunay2D.ByPoints - Create a delaunay triangulation of a set of planar points. You can get the result as points or as lines., Springs.Dictionary.ByKeysValues - Dictionaries are an incredibly powerful tool for making associative sets between two equal length lists. The first list must be of unique strings (or numbers) and will be the key and the second list will be the matching values (it can be made up of geometry, elements, even other lists)\r\nThe search keys list will provide the corresponding value to the input key., Springs.DirectShape.ByGeometry - Convert the input geometry to DirectShape element inside the Revit document.  It supports solids or surfaces.It is based on an alternative process that uses a SAT import and can produce smooth surfaces. Each created DS will have a unique type. Make sure that each input geometry has a unique name. You can either feed a single category for all geometries or a unique category for each geometry - the node's lacing is set to longest by default., Springs.DirectShape.Transform - Transforms the typed DirectShape element from the identity coordinate system to the input coordinate system(s), in a manner similar to Dynamo's Geometry.Transform node., Springs.DirectShape.Translate - Copy the input DirectShape element with the help of a translation vector, similarly to the Geometry.Translate node. This method should prove more efficient than Element.Copy, Springs.Doc.ActiveView - Selects the current document's active view. Supports more view types than the built-in option.\r\nWill be depreciated once the bult in node works with all plan types., Springs.Doc.DeleteElements - Attempts to delete the input list of elements from the active Revit document.The node returns the number of successfully deleted elements and their Ids as a string. Carefully observe the deleted elements count. It may be greater than the input list because hosted elements or tags will be deleted as well. If an element in the list can not be deleted (for example last revision or last view), the whole list will fail to be deleted., Springs.Element.IsCut - Tests if the element is being cut by any void instances. If any cuts exist all cutting elements will be provided., Springs.Element.IsCutting - Tests if the input element (or elements) is a void cut and if it is cutting any elements. In such cases, the cut elements will be provided., Springs.Element.RemoveVoidCut - Removes the void cut between the input elements, if such exists., Springs.Element.SetLocation - Attempts to modify the location of the input element. This can effectively add as a move comand in Revit. Works for both line based and point based elements., Springs.Elements.GroupByDistance - You'll need two equal length lists of geometry objects and elements. Splits the list of elements into groups if the distance between the coresponding geometry is less than the provided margin., Springs.ElementsOfCategory - Same as the built in \"All Elements of Category\" but can act as a function object and does not get refreshed automatically., Springs.ElementType.Duplicate - Create duplicate element types. If the type exists, it will be appended instead., Springs.ErrorReport.Parse - Process a Revit error report (HTML file) and extract the error types, all affected elements and the total number of errors. If you are executing from a document different than the one the error report belongs to, be sure to set \"fetch_elements\" to false., Springs.FamilyInstance.ByFacePoints - Places instances on the input face oriented to the face's U tangent and the global Z axis., Springs.FamilyInstance.ByGeometry - You must provide a valid family template path that will be used for all input geometry objects. The project units(and not the templates) will be used to determine the size of the output geometry.\r\nThe provided category will be used only if the family template supports it. If not, the default template category will be used instead.\r\nLikewise, the family material(provided as a string) will be set only if a material with that name exists in the template. If not, the default material will be used instead (\"By Category\").\r\nFor void cuts, the material settings will be ignored.\r\nThe Subcategory name is an optional input. If you'd like to skip assigning a Subcategory to any new instance, simply use null.\r\nThe node expects a unique family name for each geometry object. The rest of the input lists will be processed as if the node lacing is set to longest., Springs.Feet2Fraction - Converts a decimal foot value to a fractional foot/inch string., Springs.File.Size - Checks the file size. Provide a file path as a string., Springs.Filter.ByCategoryName - Filters the input elements by their category name. You can input multiple category names., Springs.Filter.ByClassName - Filters a list of objects by the object's class name. Note that Dynamo elements belong to different classes than their Revit counterparts. Use the Object.Class node to check an object's class., Springs.Filter.BySelection - Check the items that you'd like to filter in.  Unchecked items will be sent to the out list. The optional names input will override the object representation., Springs.FloorOpening.ByCurves - Create hosted floor opeinngs through the input floors. The second input is a list of sub-lists of the boundary curves., Springs.Form.ByGeometry - Convert the input geometry to a Revit Form object. Forms can exist only in the family environment. You can convert complicated solids or surfaces directly into forms. A form can act as a void. Provide either one true boolean value to convert a form into a void. The node's lacing is set to longest by default., Springs.Fraction2Feet - Converts a fractioned feet /inch string value into a decimal foot value., Springs.Geometry.Extents - Gets the dimensions of the geometry's bounding box., Springs.Geometry.GroupByDistance - Splits the list of geometry elements into groups if the distance between them is less than the provided margin., Springs.Geometry.SplitRecursively - Splits a surface or a solid recursively, using the resulting reduced geometry for every consecutive split. Select a point or another geometry to control the direction of the split., Springs.HostedInstance.ByPoints - Creates hosted family instances(doors/windows) at the specified points. You can feed either a single family type or a unique type for each instance., Springs.InterferenceCheck.Parse - Process a Revit interference check (HTML file) and extract the interference categories, all affected elements and the total number of clashes. If you are executing from a document different than the one the error report belongs to, be sure to set \"fetch_elements\" to false., Springs.Line.StraightenXY - Checks a line's end points for irregularities and corrects them if they are at or below the specified margin. The default margin is 1/5000 of the curve length, which is conservative., Springs.Line.StraightenZ - Checks a line's end points for irregularities in  the Z axis and corrects them if they are at or below the specified margin. The default margin is 1/2000 of the curve length, which is conservative., Springs.LineLoop.Merge - Attempts to join lines into a single chain of joined curves. The node returns the new lines as a chain and with the original order. The success outputs returns the success of the execution as a true/false boolean., Springs.List.DragDropReorder - Press and hold on an item to move it up or down the list. To confirm and close the window, select \"Save Order\". The optional names input will override the object representation., Springs.List.DropDown - Selects one list item by a drop-down combo box. The optional names input will override the object representation., Springs.List.DropFirstLast - Removes the first and last items from the list, Springs.List.EveryOther - Useful for when you want to combine an item on the list with every other item on the list. For example in list {1,2,3} , \"2\" will be paired up only with \"1\" and \"3\" and will not be paired up with itself., Springs.List.GetEvenOdd - Gets the even and odd indices from the list., Springs.List.MergeByBoolMask - Merge two lists by a boolean mask list. The true count in the mask should be the same as the length of the true list and vice versa for the false list., Springs.List.Randomise&Divide - Shiffles the input list and divides it into sub-lists based on ratios(1/4 + 1/2 + 1/4 will give you three lists split accordingly) The smalest ratio will always be 1 / the list length and the largest ratio will be 1. A seed input can shuffle the list further., Springs.List.Split - Splits a list at the desired length, Springs.List.Subpairs - Pair up each list item with the next one and drop the list item., Springs.Ln2Str - Serilize a geometry line to a string for use in Revit parameters, Springs.Math.AlmostEqual - Checks if a number is almost equal to a value with a specified tollerance., Springs.Mesh.ToPolySurface - Converts a Dynamo mesh to a polysurface. Uses multithreading - optimized for 4 cores., Springs.Mesh.ToToolkitMesh - Converts a Dynamo mesh to a toolkit mesh. You obviously need to have the appropriate version of the mesh toolkit package downloaded first., Springs.N-hedron.ByOriginVector - Creates a multi-sided poyhedron with defined side length and total height., Springs.NullAllIndicesOf - list all of the indices of a list that match the specified value. Capable of handling null values, part of the SmartCopyMonitor workflow., Springs.NullGetParameter - Similar to the built in node.Capable of handling null values, part of the SmartCopyMonitor workflow., Springs.NullIndexOf - Similar to the bult-in node but provides a null value instead of -1 of failure. Part of the SmartCopyMonitor workflow., Springs.NullReorder - Simiar to the built-in function with the difference that it can handle null indices. Part of the SmartCopyMonitor workflow., Springs.NullSetDifference - Similar to the built in node, with a built-in safety for null values. Part of the SmartCopyMonitor workflow., Springs.NullSetParameter - Similar to the built-in function but with the ability to handle null values. Part of the SmartCopyMon workflow., Springs.Number.ToString - Converts the input number(s) to string. Can process lists., Springs.PlanarFace.FixDomain - Corrects the surface domain of a 3 or 4 point planar face extracted from Revit., Springs.Point.PullOntoPlane - Pulls (projects) the point onto the input plane, following the plane normal., Springs.Points.ConvexHull2D - Computes the XY convex hull of a given set of points based on the monotone chain algorithm., Springs.Points.PruneDuplicates+ - An alternative to the built in node, that performs faster at the price of loosing the order of the points. All floating point valies are rounded to the nearest 4 decimal points. You can optionally remove duplicate Z values by setting \"keepDuplicateZ\" to false., Springs.PolyCurve.Chamfer - Symmetrically chamfers the corners of the polycurve by the designated distance, Springs.Polygon.2DArea - Returns the planar area of the input polygon(s)., Springs.Polygon.ContainmentTest+ - A less accurate method that should perform faster than the built-in node for large data sets., Springs.Pt2Str - Serilize a geometry point to a string for use in Revit parameters, Springs.SelectEdges - Select multiple edges from inside the Revit UI. Be sure to press \"Finish\" once done. You can use a Boolean toggle to refresh your selection., Springs.SelectElements(ordered) - Select multiple elements from the Revit document in the desired order. Hit ESC to stop picking. To refresh the node, connect a boolean switch node., Springs.SelectFaces+ - Select multiple faces from inside the Revit UI. Be sure to press \"Finish\" once done. Unlike the built-in node, face references of instances will be added sucessfully and you'l get the pick points. You can use a Boolean toggle to refresh your selection., Springs.SelectInRevit - Selects the input elements inside the Revit UI., Springs.SelectLinkedElement - Select the linked instance first, followed by the element. If your selection fails, just press escape.\r\nTo refresh the node, connect a boolean switch node., Springs.SelectLinkedElements(ordered) - Select the linked instance first. Then select multiple elements from the Revit document in the desired order. Hit ESC to stop picking. To refresh the node, connect a boolean switch node., Springs.SelectLinkedElements - Select the linked instance first, followed by the elements. To finish the selection, press Finish. If your selection fails, just press escape or Cancel.\r\nTo refresh the node, connect a boolean switch node., Springs.SelectLinkedFace - Select the linked instance first, followed by the face. If your selection fails, just press escape.\r\nTo refresh the node, connect a boolean switch node., Springs.Shaft.ByCurves - Creates a shaft opening. The top level MUST be higher than the base level for a successful execution. You can either provide one base and top level for all shafts or have unique levels for each shaft instance., Springs.Sheet.Views+ - Extracts all views and schedules (minus the revision schedule) placed on the input sheet (or sheets).\r\nWill be depreciated once the bult in node works with all plan types., Springs.Star.ByCenterRadiusRays - Fun little node to create star shapes., Springs.Str2Ln - De-serilize a Revit parameter string into a geometric line., Springs.Str2Pt - De-serilize a Revit parameter string into a geometric point., Springs.ToolkitMeshToMesh - Attempts to convert a toolkit mesh to a Dynamo mesh. You obviously need to have the appropriate version of the mesh toolkit package downloaded first., Springs.ViewSet.ByViewsName - Creates a set of views(or sheets) for printing. If the set exists, set Overwrite to true to replace it., Springs.Watch+ - This node that serializes the input information and presents it in a resizable text window.",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-02-19T09:22:04.218Z",
          "full_dependency_versions": [ "110.2.0" ],
          "full_dependency_ids": [
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "110.2.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-02-19T09:22:04.218Z",
      "num_versions": 33,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 8,
      "downloads": 22495,
      "repository_url": "https://github.com/dimven/SpringNodes",
      "site_url": "http://dynamonodes.com/2016/01/28/spring-nodes-node-index/",
      "banned": false,
      "deprecated": false,
      "group": "Springs",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "MEPWORKS",
          "_id": "56446665662bf0e908000324"
        },
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "Atmos.ElementIsolateByHostLevel",
          "_id": "56c39085c3e9ee4a08000107"
        },
        {
          "name": "Atmos",
          "_id": "55916d4bf2ae5a9a070000f2"
        },
        {
          "name": "Revision Clouds on Sheets in Excel",
          "_id": "570e32c5287283f905000021"
        },
        {
          "name": "Roof Type Duplicate",
          "_id": "5745289ac1a604fb36000034"
        },
        {
          "name": "OpenStrc",
          "_id": "57d9f90df615e7725800004f"
        },
        {
          "name": "SYKES",
          "_id": "57dbd203882d868b4200000d"
        },
        {
          "name": "Landform",
          "_id": "564dc5a3662bf0e90800035b"
        },
        {
          "name": "FrTe",
          "_id": "5828c0155af9f3713d000057"
        },
        {
          "name": "BIMSYK",
          "_id": "582ed4885af9f3713d0000b6"
        },
        {
          "name": "BVN",
          "_id": "5507ae3e0c7eac9b57000053"
        },
        {
          "name": "kodbim",
          "_id": "5911a3b6ababfb4f1700008e"
        }
      ],
      "num_dependents": 13,
      "description": "Spring Nodes focuses on enhancing Dynamo's interaction with Revit and exploring any means that can help accelerate BIM work-flows. Your recommendations and ideas on how to improve things are always welcome. For more information and sample files, be sure to check out the repository:\r\nhttps://github.com/dimven/SpringNodes\r\ntwitter: @5devene\r\n\r\nPlease report any issues directly to the GitHub repository.\r\n",
      "maintainers": [
        {
          "username": "dimitar.ven",
          "_id": "5606ce80662bf0e9080001e5"
        }
      ],
      "keywords": [ "springs", "spring", "api", "revit", "design", "script", "bad", "monkey", "opening" ],
      "white_list": false
    },
    {
      "_id": "57ecad51b135d45974000039",
      "name": "Parametric",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/c9e98a66-2144-49eb-8442-00185ca99ad5gregPkg286.zip",
          "contents": "CeilingPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , CeilingPlan.ByRoomNumberAsString - Create a floor plan of a room from the room number, Element.FilterByParameterValue - This node gets a list of elements [list], a parameter name[string] and a parameter value []., FloorPlan.ByRoomNumberAsString - Create a floor plan of a room from the room number, GetElementInfo.FromElementNameMatch - Gets the element ID from a list by matching a string to the name of the element. (Good to use with Archi-lab_Grimshaw.GetAllViews as an input), PlaceElevationOnExistingSheet - Place elevations on an existing sheet",
          "engine_metadata": "",
          "engine_version": "1.0.1.1733",
          "created": "2017-02-17T03:28:00.791Z",
          "full_dependency_versions": [ "0.0.6" ],
          "full_dependency_ids": [
            {
              "name": "Parametric",
              "_id": "57ecad51b135d45974000039"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "0.0.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-02-17T03:28:00.791Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 278,
      "repository_url": "",
      "site_url": "www.parametric.com.au",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "A collection of useful nodes for typical architectural documentation tasks.",
      "maintainers": [
        {
          "username": "andy.leong@parametric.com.au",
          "_id": "57ec7a2eb135d45974000037"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "5835897f7332da0d25000003",
      "name": "Summerisle",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/7ff6ae21-df64-4491-9899-35ad36d78aeagregPkg371.zip",
          "contents": "3D and 2D Floor Plan from Room - Create floor plans cropped to room size (not Rotated), Element.3DCropViewTopBaseOffset - create 3d view for each element and crop view, FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. \r\nForked from Archi-Lab, ReplaceNumberToString2DP - Int Number To String. Forked from HotGear, Room Parameter To Excel - Export Room Parameters To Excel, SetParamater.ByExcel.AsStrings - Set Parameters from Excel file with numbers converted to strings. Forked from HotGear, View.ApplyViewTemplate - Applies a view template to any given view(s). Supply a string with a view template name.",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-03-02T15:49:43.873Z",
          "full_dependency_versions": [ "1.3.2", "1.0.2", "1.2.3" ],
          "full_dependency_ids": [
            {
              "name": "Summerisle",
              "_id": "5835897f7332da0d25000003"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            }
          ],
          "direct_dependency_versions": [ "1.0.2", "1.2.3" ],
          "direct_dependency_ids": [
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            }
          ],
          "change_log": "",
          "version": "1.3.2",
          "contains_binaries": true,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-03-02T15:49:43.873Z",
      "num_versions": 7,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 1,
      "downloads": 53,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Inital collection of minor work flows aid architectural workflow",
      "maintainers": [
        {
          "username": "lordsummerisle",
          "_id": "5814e5a5f50b17c72000009b"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "54e7add1dcee4dfd26000101",
      "name": "Rhythm",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/fe668f59-c1e9-4f79-a49a-f41df69d4ab0gregPkg477.zip",
          "contents": "AdaptiveComponent.PlacementPoints - This node retrieves the adaptive components points., All Elements of Type in Document - All elements of given type in specified document. This works for unopened files and for linked documents., All Framing at Reference Level - Collects all of the structural framing at a specific reference level, All Pipes at Reference Level - This will collect all pipes by their reference level., All Upper - This converts the ase of selected items to UPPER. Inputs require booleans to enable for category., Arrowhead Assigner - This node assings the arrowhead type for all text and keynote tags. There is an input for ones you want to exclude., Ayuda.IsArchi-LabInstalled - This node determines if Archi-Lab is installed. Useful with a toggle., Ayuda.IsClockworkInstalled - This node determines if clockwork is installed. Useful with a toggle., Ayuda.IsSteamNodesInstalled - This node determines if steamnodes is installed. Useful with a toggle.;, Ayuda.ThisOrThat - This node is a toggle between two inputs., BasicFileInfo.SavedInVersion - This will supply the version that the revit model is saved in., CableTray.Space - This node will determine the space a cable tray's center falls within., Collector.Areas - This is an area collector element that utilizes mostly OOTB nodes., Collector.DuctsBySystem - This collects all ducts in the project and organizes them by System Classification, Collector.KeynoteTags - This collects all of the keynote tags in the model. Similar to other nodes, but this doesn't use python., Collector.LabelTypes - This node collects all of the label types for the active family document., Collector.ModelGroupByName - This will collect all instances of a model group by given name., Collector.PipesBySystem - This collects all pipes in the project and organizes them by System Classification, Collector.PlacedRooms - This will collect placed rooms in current file., Collector.TagTypes - This node collects the tag types in the model., Collector.Viewports - This collects all of the viewports in the model and outputs the name, title on sheet, scale and viewport type., CurtainGrid.AllSegmentCurves - This will return the vertical and horizontal curtain grid segments regardless if hidden or not. Groups by U and V., CurtainGrid.ByElement - Gets the curtain grids by the host element. Seperates into U and V, CurtainGrid.ExistingSegmentCurves - Retrieve all the existing segment curves of the grid line.  Groups by U and V., CurtainGrid.FullCurve - Returns the curves of the input curtain grids. Groups by U and V., CurtainGrid.RemoveSegment - Removes segments from curtain grids. Can't take lists yet. Use with List.Combine., CurtainGrid.RemoveSegmentsFunction - Function to apply to remove segments node, CurtainGrid.SkippedSegmentCurves - Retrieve all the removed segment curves of the grid line. , Curve.FromLine - This will translate a line element to a curve., Dash Remover - This node removes the dash at index 2 if it exists. The reason being, NCS states that no dash shall be used., Dimension.IsOverridden - This will report if a dimension has been overridden. , Dimension.LeaderEndPosition - This will return the leader end postion as a point., Dimension.MultiSegmentMembers - This will output all of the members of a multi-segment dimension., Dimension.NumberOfSegments - This will return the number of segments a dimension has. If it is a single dimension, this will return zero., Dimension.Origin - This will return the dimension origin as a point., DImension.Properties - This will reports some of the available properties of a dimension., Dimension.SetAboveValue - This will set the above value of a dimension., Dimension.SetBelowValue - This will set the below value of a dimension., Dimension.TextPosition - This will return the postition of the text as a point., Dimension.UsesProjectSettings - This will determine if a dimension uses project settings., Dimension.ValueString - The displayed value shown for the dimension segment. , Document.BackgroundOpen - This will open the input Revit files in the background., Document.Close - This will close the input Revit document. Offers a boolean toggle to save., Document.SetStartingView - This will set the starting view for a given document. ONLY WORKS IN ONE DOCUMENT AT A TIME, DraftingView.CreateInDocument - This will create a new drafting view in the given document. ONLY WORKS FOR ONE DOCUMENT AT A TIME, Element.AreaLocation - This node will determine what area (area plans) an element is located within. Made possible thanks to clockwork. :), Element.AreaWithTotal - This will get the area of an element if the parameter exists. Will total as well if needed., Element.Category - This node will get the input element(s)' categories, Element.CopyFromDocument - This node allows you to copy elements from a specific document to your current document., Element.CopyFromViewToView - This will copy elements from view to view., Element.GetJoinedElements - This will obtain the elements joined to the input element., Element.GetLevelNameAsString - This retrieves the level name of the input elements as a string. This is in response to a known issue with the get value node., Element.GetMultipleParameterValuesByName - Get the value of multiple parameters from elements. (Seperate parameters with comma), Element.GetParameterValueByName(CaSe iNSeNSiTive) - Get the value of one of the element's parameters. (CaSe iNSeNSiTiVe), Element.IsPhaseCreatedValid - This will determine if the input phase is the correct one for the input elements, Element.OverrideCutColorInView - Overrides the elements cut color in the view., Element.OverrideCutLineweight - Overrides the cut lines of the elements, Element.OverrideProjectionFillColor - This node overrides the fill color of the element in view., Element.OverrideProjectionLineColor - This node overrides the projection line color with the input color value. Useful for annotation., Element.OverrideProjectionLineweight - Overrides the line thickness of projection lines, Element.OverrideProjectionLineweightInView - This will override a projection lineweight of an element in a given view., Element.ParentFamily - This node retrieces the parent family name for each input element., Element.Room - This node takes the input of all elements of category and reports back the associated room per element. Currently tested with casework, furniture and plumbing fixtures., Element.SetMultipleParametersByName - Set multiple (comma seperated) parameters by name., Element.SetParameterByName(CaSe iNSeNSiTiVe) - Set one of the element's parameters. (CaSe iNSeNSiTiVe), Element.SetPinnedStatus - Will set the element to either pinned or not pinned. True is pinned, false is unpinned. For multiple elements use List.Map, Element.Space - This will retrieve the space in which an element is contained. (if available), Element.Type - This retrieves the element type of the given elements. (if available) Similar to others available but no python here., Geometry.SpaceEvenlyWithBuffer - This will take input geometry and space it out in the Y direction with a buffer between, Geometry.ToRevitType - This will convert designscript geometyr into Revit.DB types. Currently tested with curves, nurbs curves and solids., GetParameterValueByName(TypeOrInstance) - Gets a parameter value by name regardless of type or instance., GetParameterValueByNameAsString - Returns paramter value as string. Same effect as lunchbox node, without python., Gmail.ComposeEmail - This node will compose a new email. Useful for notifications regarding a graph concluding. Uses pythons built-in SMTP Library., Gmail.ComposeEmailDetailed - This will compose a detailed email with subject and message., Group.UngroupElements - This will ungroup the input groups and output their elements. Use with care!, Inspiration.BuffettNode - This is a result of \"what if?\" thinking. The output is a random Warren Buffett quote from brainyquotes.com, Inspiration.CarreyNode - This is a result of \"what if?\" thinking. The output is a random Jim Carrey quote from brainyquotes.com, Inspiration.CashNode - This is a result of \"what if?\" thinking. The output is a random Johnny Cash quote from brainyquotes.com, Inspiration.MarleyNode - This is a result of \"what if?\" thinking. The output is a random Bob Marley quote from brainyquotes.com, Inspiration.SearchQuoteNode - This is a result of \"what if?\" thinking. The output is a random quote based on the search criteria from brainyquotes.com. (As long as it is on the site), Inspiration.TeresaNode - This is a result of \"what if?\" thinking. The output is a random Mother Teresa quote from brainyquotes.com, InteriorElevation.GetCropRegion - This will obtain the crop region from an Interior Elevation View Type., Isolated Pick Model Elements(ordered) - Pick model elements in desired order of a desired category., Isolated Pick Model Elements - This allows a multiple selection of elements of specified category., Level Element Collector - This collects data for all of the Level elements in the model. Similar to the node on Lunchbox, but this one uses all O.O.B. nodes., List.AllIndicesOf - Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned. , List.ArchitecturalAlphabeticalSequence - This creates a list of characters. What's different is we typically exclude I's and O's from our characters so there is a toggle for this., List.Contains - Determines if the given list contains the item or items., List.GetItemIndices - This node searches the input list for the given string or number., List.MergeSublists - This will merge all sublists with or without a character between the strings., List.RestoreList - This will restore the list to it's original indentation., List.ReturnItemsPreviousToIndex - This will take an index (or indices) and return the items previous to it. Useful for sums of all items previous., Mullion.SortByDirection - This will sort mullions of a host curtain wall by direction they are facing., OS.CurrentUser - This node retrieves the current user logged in., OS.CurrentUserAppData - This retrieves the current user's appdata location, Output.Clean - This will return a single value or list from one input., Parametric Graphic Scale - This node automates the graphic scale assigned per viewport. The input required is all instances of viewport category. It also requires shared parameters. Visit sixtysecondrevit.blogspot.com for details., Pick Model Element - This offers a single selection of a model element. Created for Dynamo Player usage., Pick Model Elements - This node offers a pick method for selecting elements in Revit., PipeInsulation.Create - This will add insulation to the input pipes. Can only handle one type of insulation and size for now., PostableCommand.CloseHiddenWindows - This will close the hidden windows in your current Revit document., PostableCommand.Default3DView - This will set the active view as the default (little house) 3D view., PostableCommand.ReplicateWindow - Does what is says. Creates another instance of the same window you have open., Railing.BalusterCount - This node will count the amout of balusters in a rail element. Only works for single element for now., ReferencePlane.ByStartPointEndPointActiveViewVector - This will create a reference plane by the given start point, end point and active view vector. If you want to use multiple points as input you need to use List@Level with level 1 for both inputs., ReferencePlane.GetCurvesInView - This will obtain the geometric curves of the reference plane in a given view., RemoveListFromList - This node essentially \"subtracts\" the contents of List B from List A to produce a new list with the unique items., Rhythm.3DRoomTags - This node will generate 3D room tags for all rooms in the model. (RFA in extra folder in Dynamo download), Rhythm.3DSpaceTags - This will generate 3D space tags for all spaces in the project., Rhythm.BackupRFADeleter - This node will scan the contents of a driectory and delete backup RFA files that appear with a four digit backup number before the file extension. (eg. Family1.0001.rfa) This is deleting files so please use with caution!, Rhythm.DatePicker - This provides a popup date selector for the user., Rhythm.Detail Number by View Name  - Automatically numbers your detail number based on the first two characters of your view name. i.e. A4/... (Requires slash to be present), Rhythm.IntegerSlider - Provides an integer slider for the dynamo player. Has min, max and description., Rhythm.MassOSMData - This node will mass the OSM data based upon the know heights. If the building doesn't have a height, it will just output the polygon., Rhythm.OverrideInteriorCrop - This node will override the lineweight of the crop region on interior elevations. This node would not be possible without the power of the Dynamo community. Specifically Danny Jones with Clark Patterson Lee., Rhythm.PercentGlazingByOrientation - This node was show at RTCNA2015 to optimize your workflows. It reports the window to wall % by direction the wall faces., Rhythm.RenumberGridsByCurve - This node will renumber grids in order of curve drawn through them. Select either letters or numbers. (Alphanumeric coming soon), Rhythm.RenumberRoomsByCurve - This node will renumber rooms along a curve path. This was developed through the guidance of WIlliam Wong at case. Considering WeWork bought Case I wanted this node to live somewhere., Rhythm.TextBoxInput - Provides a text box input for users. Allows for multiple strings if needed., Rhythm.Toggle - Toggle that offers two outputs. Created for Dynamo 0.8.1 because of changes to the \"IF\" node, Rhythm.WhatTheNode - This node will let you search dynamonodes.com for the most likely package a node is from. Helps fix \"red\" nodes when users do not have package installed., Rhythm.YesNoToggle - This provides a toggle to use for graphs with dynamo player. The user chooses if they would like to run the graph., Room Element Collector - THis will collect data regarding rooms in the active model. Similar to Lunchbox node, but this one does not use python., RoomTag.Host - Retrieves the assoicated room with a room tag., Select Elements By Curve - This will select model elements in order that a curve is drawn through them., Select Grids By Curve - This will select Revit grids by the input Revit curve,, SetParameterByName(TypeOrInstance) - Set one of the element's parameters regardless of parameter type or instance., Space.IsPointInside - This will test if a point falls within a space., Space.SetSpaceType - This node will set the space type for the input space., Space.GetSpaceType - This will retrieve the space type of the space as a string., SpaceTag.Host - This obtains the MEP space associated with a given MEP space tag., SpaceType.All - This node will output ALL space types., SpaceType.ByName - This will output a MEP space type based on name search., SquareFeetDropper - This node drops square feet from the pulled area, String.CharacterAtIndex - Get's the character at a given index, String.ElementsModified - THis custom node reports the amount of elements in a list as a phrase., String.FlipReverse - This node flips the string and reverses it. (April Fools '15) Works for 0.8.0 only, added unicode support, String.IndicesOfCharacter - This node gets all the indices of a given character, String.IsUnicode - Determines if input string is a unicode character., String.RemoveAfterGivenCharacter - This will move all characters at and after the given character., String.RemovePriorToCharacter - This will remove all characters prior to the input character. Accepts strings., String.SpecifyDecimalPlaces - This node will take your inout string and number of decimal places to create a new simplified output., String.ToSentenceCase - This node will convert a single string of text to have capitalized sentences. If you need to use this over a list, use List.Map., String.ToTitle - Converts the given string to Title Case., StructuralBeamSystem.Members - Thist will collect the members of the ebeam system., TextElement.ToLower - This node converts a Revit text elemnt to upper directly., TextElement.ToTitle - This node converts a Revit text elemnt to upper directly., TextElement.ToUpper - This node converts a Revit text elemnt to upper directly., UI.ColorPicker - This node allows the user to choose a color via the Revit API color selection dialog., UI.FilePath - Provides a file path option for use with Dynamo Player., UI.UserMessage - This will display a user message once. Until it is either toggled or changed., Unicode.LRE - Start of left-to-right embedding Unicode Character, Unicode.LRM - Left-to-right mark unicode character, Unicode.RLE - Start of right-to-left embedding Unicode Character, Unicode.RLM - Right-to-left mark Unicode character, Unicode.ZWJ - Zero width joiner Unicode Character, Unicode.ZWNJ - Zero width non-joiner Unicode Character, View.ConvertToIndependent - This will convert input dependent views to independent. Thanks to TheRevitKid for the idea!, View3D.SetSectionBox - This will set a views section box giving a bounding box., ViewFamilyType.ByName - Select a view family type given it's name., Viewport.GetBoxOutline - This will retrieve the bounding box of  the viewport on a sheet. Not including the view title., Viewport.ViewName - This node gets the view name of viewports. There is an issue when \"title on sheet\" is used, so this fixes that., Wall.NorthSouthEastWest - This node determines which direction a wall is facing and groups them by the direction or direction they are closest to., Workset.Create - Creates a workset or worksets from input names.",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-06-02T21:41:11.633Z",
          "full_dependency_versions": [ "2017.6.2" ],
          "full_dependency_ids": [
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.6.2",
          "contains_binaries": true,
          "node_libraries": [ "Rhythm, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "RhythmUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-06-02T21:41:11.633Z",
      "num_versions": 123,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 5,
      "downloads": 19322,
      "repository_url": "",
      "site_url": "sixtysecondrevit.blogspot.com",
      "banned": false,
      "deprecated": false,
      "group": "Breaking CAD",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "MTHV Package",
          "_id": "55c30c7f662bf0e908000080"
        },
        {
          "name": "Ayuda",
          "_id": "55f84b9e662bf0e908000188"
        },
        {
          "name": "BNIM Tools",
          "_id": "56099113662bf0e9080001f8"
        },
        {
          "name": "Zebra",
          "_id": "55842cbaf2ae5a9a070000c2"
        },
        {
          "name": "Convert Arch to Stru Columns",
          "_id": "57a073e2e8d2032d77000015"
        },
        {
          "name": "Update all Levels and Grids to New Workset",
          "_id": "57b123c44172a48a3500005a"
        },
        {
          "name": "KC Star",
          "_id": "57ebcea9b135d45974000031"
        },
        {
          "name": "BIMSYK",
          "_id": "582ed4885af9f3713d0000b6"
        },
        {
          "name": "SYKES",
          "_id": "57dbd203882d868b4200000d"
        },
        {
          "name": "Summerisle",
          "_id": "5835897f7332da0d25000003"
        },
        {
          "name": "J-Nodes",
          "_id": "582ef5635af9f3713d0000ba"
        },
        {
          "name": "InfraBIM",
          "_id": "5792c16e53514606480000a5"
        },
        {
          "name": "kodbim",
          "_id": "5911a3b6ababfb4f1700008e"
        }
      ],
      "num_dependents": 14,
      "description": "Built against Dynamo 1.3.0 and Revit 2017. Rhythm is a set of useful nodes to help your Revit project maintain Rhythm with Dynamo. Rhythm is authored by John Pierson of EvolveLAB, (evolvebim.com) and author of sixtysecondrevit.com. This project was generated initially at DPS Design, (dpsdesign.org). \r\n\r\n*Although these nodes are tested thoroughly we are not responsible for any adverse affects they may have on your file. Make sure you save before running anyone's nodes or graphs. ",
      "maintainers": [
        {
          "username": "j0hnp",
          "_id": "54943e329508c43706000013"
        }
      ],
      "keywords": [ "text", "override", "list", "remove", "documentation", "workset", "select", "dimension", "curtainwall", "open", "document", "copy", "unopened", "background" ],
      "white_list": false
    },
    {
      "_id": "57ebcea9b135d45974000031",
      "name": "KC Star",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/05cf7a30-129f-4ad5-89b0-67a7bb4805a5gregPkg430.zip",
          "contents": "DRM View Base level - No description provided, DRM_Keynote Regen - Regenerates Key notes on selected levels, DRM_SPACETYPE.BY.SPACENAME - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-04-05T14:21:14.017Z",
          "full_dependency_versions": [ "1.1.2", "1.0.2", "2017.4.53", "1.2.3", "2017.1.213", "2017.3.31", "2017.2.2", "2017.1.8", "2016.11.11", "110.0.2", "2014.11.30", "2016.12.7" ],
          "full_dependency_ids": [
            {
              "name": "KC Star",
              "_id": "57ebcea9b135d45974000031"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "Data-Shapes",
              "_id": "581b703028c433b358000012"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Bakery",
              "_id": "555e8bfea8367b98610000b8"
            },
            {
              "name": "Beaker",
              "_id": "58d4167bf4db78ec01000167"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "LunchBox for Dynamo",
              "_id": "528038ad3f7315936f000058"
            },
            {
              "name": "spring nodes",
              "_id": "56077cf3662bf0e9080001ea"
            },
            {
              "name": "Slingshot! for Dynamo",
              "_id": "52bdf30a9de41c8235000081"
            },
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ "2017.1.213", "1.0.2", "2017.4.53", "1.2.3", "2017.2.2", "2017.3.31" ],
          "direct_dependency_ids": [
            {
              "name": "Bakery",
              "_id": "555e8bfea8367b98610000b8"
            },
            {
              "name": "Clockwork for Dynamo 1.x",
              "_id": "57ddac02882d868b42000012"
            },
            {
              "name": "Data-Shapes",
              "_id": "581b703028c433b358000012"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            },
            {
              "name": "Beaker",
              "_id": "58d4167bf4db78ec01000167"
            }
          ],
          "change_log": "",
          "version": "1.1.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-05T14:21:14.017Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 2,
      "downloads": 34,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Includes three nodes that help with the following:\r\n\r\nUseful for fixing the Key notes issue in Revit 2017. Uses Beaker and Data Shapes nodes.\r\n\r\nUseful for managing Spaces and Space Types. Relies on the Rhythm Package published by John P\r\n",
      "maintainers": [
        {
          "username": "Dan_Mapes",
          "_id": "57ebcc9cb135d45974000030"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58e4ee8fb529d0bb24000084",
      "name": "BimSolutions.rebar",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/058078fa-78c9-4f1f-a814-1837e288dc35gregPkg617.zip",
          "contents": "Rebar_LabSplice - No description provided",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-04-05T14:25:00.207Z",
          "full_dependency_versions": [ "0.0.2", "1.2.4", "1.2.1", "1.2.0" ],
          "full_dependency_ids": [
            {
              "name": "BimSolutions.rebar",
              "_id": "58e4ee8fb529d0bb24000084"
            },
            {
              "name": "BIM4Struc.Rebar",
              "_id": "5763be8ce70394822f0000c1"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Dynamo for Rebar",
              "_id": "55f2f4ad662bf0e908000171"
            }
          ],
          "direct_dependency_versions": [ "1.2.4", "1.2.1", "1.2.0" ],
          "direct_dependency_ids": [
            {
              "name": "BIM4Struc.Rebar",
              "_id": "5763be8ce70394822f0000c1"
            },
            {
              "name": "SteamNodes",
              "_id": "545a51aa893c653357000008"
            },
            {
              "name": "Dynamo for Rebar",
              "_id": "55f2f4ad662bf0e908000171"
            }
          ],
          "change_log": "",
          "version": "0.0.2",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-05T14:25:00.207Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 50,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "BimSolutions",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "set of nodes to create rebar and modify rebar elements",
      "maintainers": [
        {
          "username": "mahmoudsamir1@gmail.com",
          "_id": "58e4e16eb529d0bb2400007c"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "56e8619f5bee3e2138000063",
      "name": "ReAnimation",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/5feb991b-c05c-4ca8-90d1-8c28fa6c2145gregPkg477.zip",
          "contents": "CeilingPlanView.ByLevel - Create Ceiling Plans, Create Curtain Grids - Generates curtain grid lines on selected curtainwalls - starts horizontally from bottom and vertically from beginning of panel(s), Create Levels from Rhino Registration Points - Create Levels if they currently do not exist in location of registration points in Rhino, ElementID From String - Converts String reference of Element ID to a usable element ID (Element must exist), ElementsOfCategory(InclLinks) - Collects all elements of a Category including elements in all links, Export Families - Copy families contained in model to a specified directory. Creates subfolders for each category, Import Rhino PolySurfaces - Import Rhino BReps and PolySurfaces into Revit Conceptual Mass, Incremental Addition - Steps through a list of numbers and adds the previous sum to the current number, Inner Tangent to 2 Circles - Create an inner tangent line between 2 circles, Live Sheet Filter - Removes placeholder sheets from a sheet list, Make View Independent - Remove dependancy from views, Model In Place Families - Collector of Model In Place Families in the Current Model, Move Curtain Grids - Moves curtain grid lines on selected curtainwalls - horizontally from bottom and vertically from beginning of panel(s), Organize Sheets - Outputs sheets in order by \"Sheet Organization\" parameter. Parameter must exist in project, Outer Tangent to 2 Circles - Create an outer tangent line between 2 circles, String.RemoveFromBegin - Remove characters from the beginning of a string by a given amount, String.RemoveFromEnd - Remove characters from the end of a string by a given amount, Triangle Solver - Solves angles and sides of a triangle given the smallest required parameters - AAS, ASA, SAS, SSA, or SSS inputs, Views.DuplicateByScopeBox - Creates duplicate views (dependent or independent) and crops by scope box. Number of views determined by number of scope boxes contained by filtered amount. If no scope boxes meet filter criteria, one view is created.",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-04-05T19:42:56.174Z",
          "full_dependency_versions": [ "2017.4.5" ],
          "full_dependency_ids": [
            {
              "name": "ReAnimation",
              "_id": "56e8619f5bee3e2138000063"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.4.5",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-05T19:42:56.174Z",
      "num_versions": 16,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 300,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Set of custom nodes to provide additional functionality in Dynamo",
      "maintainers": [
        {
          "username": "Travis.Williams@ae-7.com",
          "_id": "54a30d83dcee4dfd26000009"
        }
      ],
      "keywords": null,
      "white_list": false
    },
    {
      "_id": "58ab4f3461de6801080000b0",
      "name": "RPT_DynamoZTNs",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/ebf5f83b-0f02-4dec-98c1-7e7bb3f7b6ffgregPkg700.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-04-09T16:37:22.063Z",
          "full_dependency_versions": [ "17.13.0" ],
          "full_dependency_ids": [
            {
              "name": "RPT_DynamoZTNs",
              "_id": "58ab4f3461de6801080000b0"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "17.13.0",
          "contains_binaries": true,
          "node_libraries": [ "RPT_DynamoZTNs, Version=17.13.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-04-09T16:37:22.063Z",
      "num_versions": 2,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 98,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "RPT_DynamoZTNs",
      "engine": "dynamo",
      "license": "All rights reserved",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "The following functionality is included:\r\nGetting and setting of shared and built-in parameter values.\r\nBasic Regular Expressions processing\r\nPrompt window for Dynamo Player: user interface can be displayed for getting inputs during Dynamo Player run. Controls specified by user are presented in a single window that appears for data entry. Control support includes: category filtered element picking, category selecting and colour selecting. Additional elements can be picked after window is closed.\r\nDisplay of static windows created with Xaml strings: Accepts a Xaml string representing the grid contents of a static WPF window, results of entry can be retrieved from named controls in the Xaml. Can also be used for presenting results in the form of flow documents etc.\r\nGrid referencing: return the grid reference and offset from input points.\r\nFor usage examples of the above features refer to the .dny files included in the ‘extra’ subfolder of this package. Example files include full details of how to prompt for user input and convert the results to usable Dynamo objects. \r\nThis package is targeted for Revit 2017 and Dynamo 1.3. Built and tested on Windows 10, functionality may vary on other platforms.\r\n",
      "maintainers": [
        {
          "username": "RPTHOMAS108",
          "_id": "58ab355b61de6801080000af"
        }
      ],
      "keywords": [ "bip", "built-in", "parameter", "shared", "parameter", "regex", "regular", "expressions", "wpf", "dynamo", "player", "ui", "user", "prompt", "grid", "reference" ],
      "white_list": false
    },
    {
      "_id": "53e99ce50e5572016a00018a",
      "name": "archi-lab.net",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/5858a3db-e872-481b-ad77-92eb0af68376gregPkg345.zip",
          "contents": "Add Revisions to Sheet - This node will add specified revisions to a sheet. , Add Shared Parameter to Project - This node will add a parameter to shared parameter file and then add it to the project. , Cell Style Settings - This node will generate a Cell Style Settings that can be used to override cell properties. , Change Family Type - Changes family type of a family by passing in an Element and type id of the type we want to change it to. , Clear List - This node will remove all Null and Empty Lists from any list. , Color Settings - This node creates color settings for the Analysis Visualization Framework. , Colored Surface Display Style - This node will generate a Colored Surface Display Style from inputs of points, values, and instance surface for analysis to be aplied to. Also, use color and legend settings (part of archi-lab package) to create style colors and visibility., Colored Surface Settings - This node creates settings for the colored surface display style of the Analysis Visualization Framework., Combine by Pattern - Combines two list based on a input pattern of true and false., Create Annotation Tag - This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. , Current Document - Retrieves Current Document, Curve.Level - This node will return a level that a given curve is located on. , Delete Linked Model Keynote Tags - Deletes all Keynote Tags that are tagging elements in the linked model. if element in the linked model has a keynote assigned thus a keynote tag reads a proper value it will not be deleted. , Delete Unnamed Reference Planes - Does just what the name says. , Dispatch - Works exactly like the Dispatch component in Grasshopper. Input a list and a matching pattern of True/False to split list into two lists one containing all True arguments while other all False arguments. , Door Set Handing - Determines door set handing (whether its a left or right handed door). Input takes doors, and output will split them into two lists (right and left)., Duplicate Item Indices - Searches an input list for duplicate entries and lists their index numbers. Couple with Get From List to delete duplicates from a list., Element Ids - This node will query an element id that can be used with Revit nodes. Dynamo Element Id node returns integer value. , Element.IsOfType - This nodes yields true or false, checking if input elements are of given Element Type., Elements Fom Linked File in Room - This node will check what elements from a linked model are inside of any of the rooms in the current model. , Elements in Room - This node will check if any of the elements are inside any of the supplied rooms. , Elements in Space - This node will take an input of Spaces and Elements and attempt to group all elements by Room that it is located in. For elements that are placed by Line and not a Point, a mid point of line will be used to determine location. , Elements on Sheet - This node will return elements on sheet., Export Image by View - This node will export a list of Views and save them as images (JPG, BMP etc)., FamilyInstance.FamilyType - This node will return a  Family Type of a given Family Instance. If no Family Type can be assigned to a Family then it will return Null. , FamilyInstance.TotalTransform - This node returns a Total Transform of a family instance., Fill Pattern - Get Fill Pattern by Name, Filled Region Area - This node will query an area from the filled region, Filled Region Boundary Curves - This node will get the boundary curves for a filled region., Floor.Area - This node return floor area. , FloorPlan.ByRoom - This node takes input of a Room and creates a Floor Plan View with Crop Box set around that room. , Get All Detail Groups - This node will retrieve all instances of Detail Groups in the model., Get All Dimension Styles - This node will query all of the available dimension styles (this includes linear as well as arc, circle etc). , Get All Elements From Linked Model - This node is based on code posted by Julien Benoit. Big thanks to Julien for sharing his work. This node will retrieve all elements of a given category from a given linked model. , Get All Keynote Tags - Selects all Keynote Tags instances in the model. , Get All Line Styles - This node will return all available line styles., Get All Revisions - This node will return all Revisions currently defined in the mode., Get All Viewport Types - This node will retrieve all Viewport Types currently in the model. , Get Built In Parameter - This node will take an input of a built in parameter name and element to return that parameters value. , Get Design Options - Queries all of the design options currently in the project., Get Documents - Queries all linked Revit files and retrieves their Name, LinkInstance and Document properties., Get Filled Regions - This node will query up all Filled Regions in the project as well as those in the active view only. , Get Host Element - This node will retrieve a host element from hosted element. Ex. feed in door, get wall., Get Level by Name - This node will retrieve a Revit Level Element by its name. , Get Line Style by Name - This node will return a line style object by its name. Line styles can be either Drafting or Model Line Property. , Get Rooms by Level - Filters Rooms by level., Get Tagged Element Id - Retrives an Element Id from input of element tags. For example if wall tags are inputted it will return tagged wall Ids., Get Text Note Type by Name - This node will select a text note type by name. , Get Type Parameter - This node will retrieve a type parameter by its name., Get Unplaced Groups - This node will retrieve all unplaced groups in the model., Get Views from View Set - This node will take a name of a view set and return views/sheet elements contained in it. , Group Curves - This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves, Isolate in View - This node will take input of elements and a view to isolate selected elements in a view., Key Schedule - This node will take a key schedule, data and a list of parameters and populate it with infomation from data parameter. Visit www.archi-lab.net for more information on how to prep this node for take off. , Legend Settings - This node sets all settings for the Legend display with Analysis Visualization Framework of Revit. , Level.LevelAbove - This node takes an input of level and returns level above it. , Local Printers Names - This node will query all locally installed printers and return their names., Marker Settings - This node will generate AnalysisDisplayMarkerAndTextSettings to be used with a Marker Analysis Display Style. Inputs are: Marker Shape(Circle, Triangle, Rectangle), Marker Size, Show Text (Boolean), Rounding, TextDisplayMethod (Show All, Show None, Show Predefined). , Marker&Text Display Style - This node will take an input of Points and a matching input of values to create Analysis Display Style in Revit. Use Legend, Marker and Color Settings nodes to fully customize your display style. , Mass Addition - This node will attempt to sum all elements contained within it. , Material.ImportAllFromProject - This node will import (copy) all materials from specified project into current model. By default it will not override existing materials. , Material.MaterialAssetElement - This node retrieves a Material Asset Element from Material. If such is not defined it will return an Invalid Element Id (-1), Material.SetMaterialAssetByAssetId - This node will set the material asset by asset id. Please make sure that the two input lists match in length. , Material.SetMaterialAssetByMaterial - This node will copy a material asset element from source Material to a list of target materials. It esentially makes all materials inherit its Rendering Appearance. Useful for \"clay\" renderings. , New Section Box View By Elements - This node will create new section box around specified elements and apply it to a new 3D View with a specified name. Section box will be offset from the elements by a supplied offset values. , Override Fill Pattern in View - Overrides fill pattern of any element in an active view to specified fill pattern and color, PolyCurve by Profile Family Type - It takes an input of a profile family type and extract curves from it converting them to polycurves and curve segments for use in Dynamo (sweeps)., Print PDF - This node will allow you to initiate a printing routine in revit from a set of views/sheets, printer name, print settings and print range. , Remap UV Domain - This node takes an input of a reference face and a list of UVs that get remapped into that face's UV Domain. The output is a list of UV Coordinates in that surface's domain. , Remove Revision from Sheet - This node will remove specified Revisions from a sheet., Rename Files - This node will use an \"identifier\" to pick out files from a supplied directory to rename files to a new name supplied. Please make sure to match list lengths of identifier and new name inputs., Revision Properties - This node will return some most common Revision properties like Description or Issue Date., Room.AtPoint - This node will attempt to retrieve a room at a given point in model. , Room.Boundaries - This node returns all Room bounding curves and elements that generated them (walls, separation lines etc)., RoomBoundaries.CleanNulls - This node will take a set of room boundary curves and elements and remove nulls from element list while joining curves to mainatain matching list structure. , Rotate Family - This node will rotate a family in Revit around a given axis by supplied angle (in radians). Please remember that every time you run your definition it will rotate family by given angle every time. , Schedule Appearance - This node allows you to control the appearance of the schedule. For now it supports only title, header and body text type. , Schedule Formatting - This node will allow you to control schedule formatiing options like column width, whether a column is hidden, column heading etc. , Schedule Sorting Grouping - This node will allow you to specify sorting/grouping parameters in schedule as well parameters like sorting order, whether its a footer or header. Visit archi-lab.net for more information. , Schedule Title Appearance - This node will override the appearance of the title. , Schedules on Sheets - Queries all schedules and produces two lists: one with all schedules that are placed on sheets and one with schedules that are not placed on sheets., Select Model Lines by Style - This node will select all model lines in the revit project by a line style name. , Set BuiltIn Parameter - This node will take an input of a built in parameter name and set that parameter to given value for given elements. , Set Type Parameter - This node will set a type parameter for an element., Slice String - Slices X number of leading or trailing characters from string (boolean true will slice from left while boolean set to false from right), String From List - This node will take an input of a list or nested list and then join each element in a list with a given seperator while adding a suffix., String.Contains - This node takes a list of strings and checks if any string contains a matching string from filter input. , StructuralFraming.BeamByCurve - This node will take an input of curves and attempt to make a structural framing member by type and level. , Survey Point - This node will retrieve a Survey Point from a Revit model. , Tag Host Element - This node will retrieve an element that is hosting a given tag. , Tag Text - This node will retireve a text content of a tag. , TextNote.ByViewPointAndType - This node creates a unwrapped (single line) text note in a given view, at a given location with a given text note type style assigned. , ToDouble - This node converts strings to doubles. When strings look like this: \"0\", \"1\" etc. and don't have decimal places the ToNumber node fails on occasion. This addresses that issue., Transform Origin - This node will query an element for its Transform (Coordinate System) and then return its Origin point. , Transform.ToPoint - This node takes a Transform and an input point that will be translated by the Transform. , View.HideElements - This node will hide elements in specified view., View.UnhideElements - This node will unhide specified elemeints in given views., Viewport Properties - This node will return certain properties from a Viewport input. , Wall.ExteriorDirection - This node returns exterior direction of the wall as a vector.",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-29T15:43:11.949Z",
          "full_dependency_versions": [ "2016.13.4" ],
          "full_dependency_ids": [
            {
              "name": "archi-lab.net",
              "_id": "53e99ce50e5572016a00018a"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2016.13.4",
          "contains_binaries": true,
          "node_libraries": [ "Archi-lab_Grimshaw, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null", "archilabUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-05-29T15:43:11.949Z",
      "num_versions": 82,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -7,
      "downloads": 43566,
      "repository_url": "",
      "site_url": "www.archi-lab.net",
      "banned": false,
      "deprecated": false,
      "group": "archi-lab",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "SteamNodes",
          "_id": "545a51aa893c653357000008"
        },
        {
          "name": "Rotate Family Instances Around Origin Axis by Angle",
          "_id": "551cc39f5899bb370500003a"
        },
        {
          "name": "Bakery",
          "_id": "555e8bfea8367b98610000b8"
        },
        {
          "name": "MTHV Package",
          "_id": "55c30c7f662bf0e908000080"
        },
        {
          "name": "Hot Gear",
          "_id": "55e90085662bf0e908000142"
        },
        {
          "name": "Hollandaise",
          "_id": "54affe45dcee4dfd26000035"
        },
        {
          "name": "Ayuda",
          "_id": "55f84b9e662bf0e908000188"
        },
        {
          "name": "MEPWORKS",
          "_id": "56446665662bf0e908000324"
        },
        {
          "name": "Monamo",
          "_id": "566f8a9c5c568ad00c000027"
        },
        {
          "name": "MOST-BCF2014",
          "_id": "56dadd8e5bee3e2138000025"
        },
        {
          "name": "LionsDen",
          "_id": "56fa23aa5bee3e21380000a8"
        },
        {
          "name": "Get View Worksets",
          "_id": "570e31b5287283f90500001f"
        },
        {
          "name": "Revision Clouds on Sheets in Excel",
          "_id": "570e32c5287283f905000021"
        },
        {
          "name": "DynaFabrication2017",
          "_id": "5775c9ab535146064800000d"
        },
        {
          "name": "ANDYnamo",
          "_id": "57ea33aeb135d45974000021"
        },
        {
          "name": "PW_Lon_Revit",
          "_id": "57fd20a3d3d589541a00006f"
        },
        {
          "name": "BIMSYK",
          "_id": "582ed4885af9f3713d0000b6"
        },
        {
          "name": "SYKES",
          "_id": "57dbd203882d868b4200000d"
        },
        {
          "name": "J-Nodes",
          "_id": "582ef5635af9f3713d0000ba"
        },
        {
          "name": "Summerisle",
          "_id": "5835897f7332da0d25000003"
        },
        {
          "name": "BVN",
          "_id": "5507ae3e0c7eac9b57000053"
        },
        {
          "name": "BesideTheCursor",
          "_id": "559c28d4f2ae5a9a0700011e"
        },
        {
          "name": "LRCZ_Elements.Bake",
          "_id": "58ef59b719da52d31a00001c"
        },
        {
          "name": "kodbim",
          "_id": "5911a3b6ababfb4f1700008e"
        },
        {
          "name": "Moe's Nodes",
          "_id": "59120bfaababfb4f1700009c"
        }
      ],
      "num_dependents": 25,
      "description": "Revit 2016, Dynamo 1.3 - Set of practical nodes by Konrad K Sobon | www.archi-lab.net | @arch_laboratory\r\n2016.13.4 Changes:\r\nAdd Workset.Guid and View.CreateCallout nodes. \r\n2016.13.3 Changes:\r\nSet Built In Parameter Node now handles ElementId ParameterValues.\r\n2016.13.2 Changes:\r\nRemoved View Filter related nodes. Removed Dimension Type nodes. Removed Schedule Nodes. All of these are now shipped with Dynamo 1.3 out of the box. \r\nRemoved Warning Types dropdown. That workflow is no longer supported. Please use Warning nodes available under Element.Warning category. ",
      "maintainers": [
        {
          "username": "Konrad.Sobon@grimshaw-architects.com",
          "_id": "531e8347bfe42595360000d0"
        }
      ],
      "keywords": [ "archi-lab", "bad", "monkeys" ],
      "white_list": false
    },
    {
      "_id": "522930128faf243666000003",
      "name": "Quads from Rectangular Grid",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/95ec6ef9-8be5-44e4-a03f-96fd0cd8aeb6gregPkg570.zip",
          "contents": "Quads from Rectangular Grid - Given a grid of points (xyz or uv) in lists of rows/columns, create a list of quadrilaterals",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-04-23T21:45:20.870Z",
          "full_dependency_versions": [ "1.3.0" ],
          "full_dependency_ids": [
            {
              "name": "Quads from Rectangular Grid",
              "_id": "522930128faf243666000003"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "1.3.0",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-04-23T21:45:20.87Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 3484,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "MIT",
      "used_by": [
        {
          "name": "Quad Points on Face",
          "_id": "52f996f8bfe425953600006e"
        },
        {
          "name": "Get Sun Directness for Face",
          "_id": "53841f410e5572016a00009b"
        },
        {
          "name": "Evaluate Sun Directness Face 4",
          "_id": "53869d270e5572016a0000af"
        },
        {
          "name": "Evaluate Sun Directness Face 3",
          "_id": "53869d490e5572016a0000b1"
        },
        {
          "name": "Evaluate Sun Directness Face 2",
          "_id": "53869d770e5572016a0000b3"
        },
        {
          "name": "Evaluate Sun Directness Face 1",
          "_id": "53869da40e5572016a0000b5"
        },
        {
          "name": "Evaluate Attractiveness Face 1",
          "_id": "53869e670e5572016a0000b7"
        },
        {
          "name": "Evaluate Attractiveness Face 2",
          "_id": "53869f640e5572016a0000ba"
        },
        {
          "name": "Evaluate Attractiveness Face 3",
          "_id": "53869fa00e5572016a0000bc"
        },
        {
          "name": "Evaluate Attractivness Face 4",
          "_id": "53869fd20e5572016a0000be"
        },
        {
          "name": "Get Sun Directness Face 2",
          "_id": "5386a0a00e5572016a0000c0"
        },
        {
          "name": "Get Sun Directness Face 3",
          "_id": "5386a0ea0e5572016a0000c2"
        },
        {
          "name": "Get Sun Directness Face 1",
          "_id": "5386a1380e5572016a0000c4"
        },
        {
          "name": "Get Sun Directness Face 4",
          "_id": "5386a1740e5572016a0000c6"
        },
        {
          "name": "Get Sun Directness for Face 1",
          "_id": "538786bf0e5572016a0000d8"
        },
        {
          "name": "Get Sun Directness for Face 2",
          "_id": "538786e80e5572016a0000da"
        },
        {
          "name": "Get Sun Directness for Face 3",
          "_id": "538787100e5572016a0000dc"
        },
        {
          "name": "Get Sun Directness for Face 4",
          "_id": "538787520e5572016a0000de"
        }
      ],
      "num_dependents": 18,
      "description": "Given a grid of points (xyz or uv) in lists of rows/columns, create a list of quadrilaterals",
      "maintainers": [
        {
          "username": "kronz",
          "_id": "5224cf86e2f476ca05000053"
        }
      ],
      "keywords": [ "quad", "quadrilateral", "panel", "grid", "square" ],
      "white_list": false
    },
    {
      "_id": "58ef3efa19da52d31a000019",
      "name": "DynaTools",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/6197acc4-e00a-4c22-8192-f6349d696a85gregPkg947.zip",
          "contents": "",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-16T20:00:09.857Z",
          "full_dependency_versions": [ "2017.5.16" ],
          "full_dependency_ids": [
            {
              "name": "DynaTools",
              "_id": "58ef3efa19da52d31a000019"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.5.16",
          "contains_binaries": true,
          "node_libraries": [ "DynaTools, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" ]
        }
      ],
      "latest_version_update": "2017-05-16T20:00:09.857Z",
      "num_versions": 8,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": -1,
      "downloads": 325,
      "repository_url": "",
      "site_url": "bimandothers.blogspot.com",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Compiled for Dynamo 1.3 and added some new functionalities.\r\n- New rebars functionalities added",
      "maintainers": [
        {
          "username": "cesare.caoduro@gmail.com",
          "_id": "57692598e70394822f0000ea"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "57a073e2e8d2032d77000015",
      "name": "Convert Arch to Stru Columns",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/732a0cbe-d891-4210-9e84-012474278873gregPkg238.zip",
          "contents": "Convert ARCH to STRU Columns - As you have probably all run into the problem before, you cannot simply change from an architectural column to a structural column. Instead, you must create the structural column in the same place as the architectural one, and then delete the architectural column. \r\n\r\nThis is a script I created for the purpose of \"converting\" Architectural columns to Structural columns. What this script actually does is generate new columns with the same: Origin, Base Level, Base Level Offset, Top Level, Top Level Offset, Phase, Structural Material, and Workset. It does not, however, delete the source columns.\r\n\r\n** KNOWN ISSUES **\r\n1) The rotation of the columns are not perfect. For columns that are orthogonal, they will be correct, but for those that are rotated, you should check them before deleting the Source Architectural Column.\r\n2) You may have to unplug the \"Source Column for Phase and Material\", run the script, and the reconnect and run again to have the script process repeatedly in a single session.",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-05-18T06:15:40.311Z",
          "full_dependency_versions": [ "1.2.1", "2016.12.9" ],
          "full_dependency_ids": [
            {
              "name": "Convert Arch to Stru Columns",
              "_id": "57a073e2e8d2032d77000015"
            },
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            }
          ],
          "direct_dependency_versions": [ "2016.12.9" ],
          "direct_dependency_ids": [
            {
              "name": "Rhythm",
              "_id": "54e7add1dcee4dfd26000101"
            }
          ],
          "change_log": "",
          "version": "1.2.1",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-18T06:15:40.311Z",
      "num_versions": 3,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 72,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "As you have probably all run into the problem before, you cannot simply change from an architectural column to a structural column. Instead, you must create the structural column in the same place as the architectural one, and then delete the architectural column. \r\n\r\nThis is a script I created for the purpose of \"converting\" Architectural columns to Structural columns. What this script actually does is generate new columns with the same: Origin, Base Level, Base Level Offset, Top Level, Top Level Offset, Phase, Structural Material, and Workset. It does not, however, delete the source columns.\r\n\r\n** KNOWN ISSUES **\r\n1) The rotation of the columns are not perfect. For columns that are orthogonal, they will be correct, but for those that are rotated, you should check them before deleting the Source Architectural Column.\r\n2) You may have to unplug the \"Source Column for Phase and Material\", run the script, and the reconnect and run again to have the script process repeatedly in a single session.\r\n\r\n2017/05/18 - The rotation angle has been fixed so that all columns are properly rotated, especially when the angles are not a clean integer.",
      "maintainers": [
        {
          "username": "j.darling",
          "_id": "557587d8f2ae5a9a07000033"
        }
      ],
      "keywords": [ ],
      "white_list": false
    },
    {
      "_id": "581b703028c433b358000012",
      "name": "Data-Shapes",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/657c9e9f-1ec7-48ca-8bc3-4cbab10a5441gregPkg961.zip",
          "contents": "Add Shared Parameter(s) from txt - Add shared parameters to project from SharedParameter .txt file, All Lines of LineStyle - Gets all lines in a project with a giver LineStyle, Categories list - Gives list of all Revit categories and a matching list of their names, Duplicate Element - Duplicates all types of elements including view templates, Element(s) cut - Cutting element(s) with element, Export to FBX - Exports 3D views to FBX format, Export Views to NavisWorks - exports 3d views to NavisWorks, Get All Linked Docs infos - Get all linked documents names and paths, GetLinkedElement.InHostView - Gets linked elements in host view(s)., GetLinkedElement.InHostViewAndCategory - Gets linked elements in host view, filtered by category., Grid.SetVerticalExtents - Set the vertical extents of all project grids, Line LineStyle - Gives LineStyle name and element of Lines, ModificationTracker.AllChanges - Takes ExistingElements Data as input and outputs lists with all geometry/parameter values change combinations . Check out www.Data-Shapes.net for more informations ., ModificationTracker.GeometryChanges - Takes ExistingElements Data as input and outputs elements with same geometry and elements with changed geometry . Check out www.Data-Shapes.net for more infos, ModificationTracker.ModelComparison - Compares elements from documents A and B (A is the current document by default) and returns existing elements data, new elements, deleted elements and a report. Check out www.Data-Shapes.net for more infos. , ModificationTracker.ParameterChanges - takes ExistingElements Data as input and outputs elements with same parameter values and elements with changed parameter values. Check out www.Data-Shapes.net for more infos., ParameterGroup list - List of all parameter groups, RayBounce On Link Category - Same functionality as raybounce but takes linked model elements into account, RayBounce On Linked Model - Same functionality as raybounce but takes linked model elements into account, Replace viewports by center - Replaces vieports on sheets according to list of points. (0,0) is bottom left of sheets, Select Face (s) (PickObject) - Same as OOTB Select Faces, but can be used through Dynamo Player, Select Model Elements of Category - Allows to perform a manual selection with a category filter., Set Active Family Parameter By Name - Set a parameter inside an active family document, SharedParameters from txt file - Gets parameters from SharedParameter .txt file, SlabShape.AddPoints - Add points to slab shape, UI.Boolean input - Creates a boolean input for UI.MultipleInputForm ++ . Check out www.data-shapes.net for more infos!, UI.ColorInput Data - Create a color selection input for UI.MultiInputForm++ . Check out www.data-shapes.net for more infos! Warning : Only works with Revit 2017, UI.DirectoryPath Data - Creates a DirectoryPath input for UI.MultipleInputForm ++ . Check out www.data-shapes.net for more infos!, UI.DropDown Data - Create data for DropDown input in UI.MultiInputForm ++ . Check out www.data-shapes.net for more infos., UI.FilePath Data - Create filepath input for UI.MultipleInputForm ++ . Check out www.data-shapes.net for more infos !, UI.Image Data - Places an image on UI.MultipleInutForm ++ ., UI.Listview Data - Create data for ListView input in UI.MultiInputForm ++ . Check out www.data-shapes.net for more infos., UI.MultipleInputForm ++ - Create a form with multiple inputs. \r\nsee www.data-shapes.net for tutorials and infos!, UI.MultipleInputForm - Create a form with multiple inputs. InputType codification:\r\n-strings : \"s\"\r\n-booleans : \"bool\"\r\n-filepaths : \"fp\" \r\n-directorypath : \"dp\"\r\n-revit element section : \"se\"\r\n-revit face selection : \"sf\"\r\n-revit edge selection : \"sed\"\r\n-dropdown lists : UI.DropDown Data node\r\n-listview : UI.ListView Data node\r\nsee www.data-shapes.net for more infos, UI.RadioButtons Data - Create radio buttons input for UI.MultipleInputForm ++ . , UI.SelectEdges Data - Creates a Revit edge selection input for UI.MultipleInputForm++ . Check out www.data-shapes.net for more infos! , UI.SelectFaces Data - Creates a Revit face selection input for UI.MultipleInputForm++. Check out www.data-shapes.net for more infos!, UI.SelectLinkedElement(s) Data - Create a button input for UI.MultipleInputForm++ that allows to select elements in à linked document. See www.data-shapes.net for more infos!, UI.SelectModelElements Data - Creates a Revit element selection input for UI.MultipleInputForm++ . Check out www.data-shapes.net for more infos!, UI.Slider - Creates slider input for UI.MultipleInputForm ++ . Set the step to decimal value if you want a double slider, or to a integer value if you want an integer slider. , UI.TextBox Data - Create Data for TextBox input in UI.MultipleInputForm ++ . Check out www.data-shapes.net for more informations, UI.TextNote Data - Create Data for TextBox input in UI.MultipleInputForm ++ . Check out www.data-shapes.net for more informations, WallSweepOnWall - Creates a wallsweep or reveal on a wall",
          "engine_metadata": "",
          "engine_version": "1.2.1.3083",
          "created": "2017-05-22T10:32:20.470Z",
          "full_dependency_versions": [ "2017.5.15" ],
          "full_dependency_ids": [
            {
              "name": "Data-Shapes",
              "_id": "581b703028c433b358000012"
            }
          ],
          "direct_dependency_versions": [ ],
          "direct_dependency_ids": [ ],
          "change_log": "",
          "version": "2017.5.15",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-22T10:32:20.47Z",
      "num_versions": 103,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 20,
      "downloads": 2850,
      "repository_url": "https://github.com/MostafaElAyoubi/Data-shapes",
      "site_url": "www.data-shapes.net",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [
        {
          "name": "KC Star",
          "_id": "57ebcea9b135d45974000031"
        }
      ],
      "num_dependents": 1,
      "description": "Developped for Revit 2017 and Dynamo 1.3 -- Collection of nodes that aims to enhance the interaction with revit and  UI creation for dynamo scripts . Check out www.data-shapes.net for more informations about the nodes, tutorials and workflows! ",
      "maintainers": [
        {
          "username": "elayoubi.mostafa",
          "_id": "5710e255287283f905000035"
        }
      ],
      "keywords": [ "ui", "shared", "parameters", "bim", "management", "revit", "api", "architecture" ],
      "white_list": false
    },
    {
      "_id": "5926f237583778af0f000031",
      "name": "DynaFabrication2018",
      "versions": [
        {
          "url_with_deps": "",
          "url": "https://s3.amazonaws.com/greg-pkgs-prod/5e2329bf-820a-4549-b7d5-9cd76d30d494gregPkg590.zip",
          "contents": "Get All Fabrication Configuration(s) - Gets all the fabrication configurations in the current document., Get All Fabrication Connector(s) - Gets all the Connector(s) in the configuration, Get All Fabrication Dampers - No description provided, Get All Fabrication Service(s) - Get all fabrication services in loaded configuration, Get All Loaded Fabrication Service(s) - Get all loaded services in document, Get All Part Statuses - Gets Fabrication part statuses from database, Get Custom Data - No description provided, Get Fabrication Configuration Info - Get loaded fabriation configuration information (Name, Path and Profile), Part(s) CID Number - Gets the CID number, Part(s) Rod Length - Gets Fabrication part rod length(s), Part(s) ServiceType - Get Fabrication Part(s) service type, Connector(s) Information - Gets the connector(s) information.  , Get Fabrication Insulation Specification(s) - Sets fabrication part bases of connector, Get Fabrication Material(s) Information - Get fabrication material information, Get Fabrication Specification(s) - Get all fabrication specification(s)",
          "engine_metadata": "",
          "engine_version": "1.3.0.875",
          "created": "2017-05-28T17:10:14.498Z",
          "full_dependency_versions": [ "0.0.6", "0.1.13" ],
          "full_dependency_ids": [
            {
              "name": "DynaFabrication2018",
              "_id": "5926f237583778af0f000031"
            },
            {
              "name": "DynaFabrication2017",
              "_id": "5775c9ab535146064800000d"
            }
          ],
          "direct_dependency_versions": [ "0.1.13" ],
          "direct_dependency_ids": [
            {
              "name": "DynaFabrication2017",
              "_id": "5775c9ab535146064800000d"
            }
          ],
          "change_log": "",
          "version": "0.0.6",
          "contains_binaries": false,
          "node_libraries": [ ]
        }
      ],
      "latest_version_update": "2017-05-28T17:10:14.498Z",
      "num_versions": 6,
      "comments": [ ],
      "num_comments": 0,
      "latest_comment": "1970-01-01T00:00:00.000Z",
      "votes": 0,
      "downloads": 45,
      "repository_url": "",
      "site_url": "",
      "banned": false,
      "deprecated": false,
      "group": "",
      "engine": "dynamo",
      "license": "",
      "used_by": [ ],
      "num_dependents": 0,
      "description": "Fabrication nodes for Revit 2018",
      "maintainers": [
        {
          "username": "nathan.chapman",
          "_id": "57741ab4a8864af46c000009"
        }
      ],
      "keywords": [ "fabrication" ],
      "white_list": false
    }
  ]
}